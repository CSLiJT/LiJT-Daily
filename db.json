{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon.png","path":"images/favicon.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon16.ico","path":"images/favicon16.ico","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon32.ico","path":"images/favicon32.ico","modified":1,"renderable":1},{"_id":"themes/next/source/js/algolia-search.js","path":"js/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/bookmark.js","path":"js/bookmark.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/local-search.js","path":"js/local-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/motion.js","path":"js/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/next-boot.js","path":"js/next-boot.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/utils.js","path":"js/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/anime.min.js","path":"lib/anime.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/schemes/pisces.js","path":"js/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/all.min.css","path":"lib/font-awesome/css/all.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-regular-400.woff2","path":"lib/font-awesome/webfonts/fa-regular-400.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-brands-400.woff2","path":"lib/font-awesome/webfonts/fa-brands-400.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-solid-900.woff2","path":"lib/font-awesome/webfonts/fa-solid-900.woff2","modified":1,"renderable":1},{"_id":"source/images/2021112601.png","path":"images/2021112601.png","modified":1,"renderable":0},{"_id":"source/images/2021112603.png","path":"images/2021112603.png","modified":1,"renderable":0},{"_id":"source/images/2021112602.png","path":"images/2021112602.png","modified":1,"renderable":0},{"_id":"source/images/2021112604.png","path":"images/2021112604.png","modified":1,"renderable":0},{"_id":"source/images/2021121301.png","path":"images/2021121301.png","modified":1,"renderable":0},{"_id":"source/images/IMG_20210321_171950.jpg","path":"images/IMG_20210321_171950.jpg","modified":1,"renderable":0},{"_id":"source/images/IMG_20210323_120734.jpg","path":"images/IMG_20210323_120734.jpg","modified":1,"renderable":0},{"_id":"source/images/IMG_20210325_104740.jpg","path":"images/IMG_20210325_104740.jpg","modified":1,"renderable":0},{"_id":"source/images/IMG_20210405_134224.jpg","path":"images/IMG_20210405_134224.jpg","modified":1,"renderable":0},{"_id":"source/images/IMG_20210405_134319.jpg","path":"images/IMG_20210405_134319.jpg","modified":1,"renderable":0},{"_id":"source/images/IMG_20210809_091606_edit_932701128736847.jpg","path":"images/IMG_20210809_091606_edit_932701128736847.jpg","modified":1,"renderable":0},{"_id":"source/images/IMG_20210925_120441.jpg","path":"images/IMG_20210925_120441.jpg","modified":1,"renderable":0},{"_id":"source/images/IMG_20210925_120635_edit_759134094171144.jpg","path":"images/IMG_20210925_120635_edit_759134094171144.jpg","modified":1,"renderable":0},{"_id":"source/images/IMG_20210925_203119.jpg","path":"images/IMG_20210925_203119.jpg","modified":1,"renderable":0},{"_id":"source/images/IMG_20210925_210835.jpg","path":"images/IMG_20210925_210835.jpg","modified":1,"renderable":0},{"_id":"source/images/Linkedin.svg","path":"images/Linkedin.svg","modified":1,"renderable":0},{"_id":"source/images/IMG_20210925_210855.jpg","path":"images/IMG_20210925_210855.jpg","modified":1,"renderable":0},{"_id":"source/images/avatar.jpg","path":"images/avatar.jpg","modified":1,"renderable":0},{"_id":"source/images/background.jpg","path":"images/background.jpg","modified":1,"renderable":0},{"_id":"source/images/c995d143ad4bd113d3b5cb035eafa40f4bfb0582.jpg","path":"images/c995d143ad4bd113d3b5cb035eafa40f4bfb0582.jpg","modified":1,"renderable":0},{"_id":"source/images/github.svg","path":"images/github.svg","modified":1,"renderable":0},{"_id":"source/images/email.svg","path":"images/email.svg","modified":1,"renderable":0},{"_id":"source/images/qrcode_cslijt.github.io.png","path":"images/qrcode_cslijt.github.io.png","modified":1,"renderable":0},{"_id":"source/images/pytorch.png","path":"images/pytorch.png","modified":1,"renderable":0},{"_id":"source/images/屏幕截图_2022-03-26_175646.jpg","path":"images/屏幕截图_2022-03-26_175646.jpg","modified":1,"renderable":0},{"_id":"source/images/屏幕截图_2022-03-26_175317.jpg","path":"images/屏幕截图_2022-03-26_175317.jpg","modified":1,"renderable":0},{"_id":"source/images/微信图片_20211001161414.jpg","path":"images/微信图片_20211001161414.jpg","modified":1,"renderable":0},{"_id":"source/images/微信图片_20211001171428.jpg","path":"images/微信图片_20211001171428.jpg","modified":1,"renderable":0},{"_id":"source/images/知乎.svg","path":"images/知乎.svg","modified":1,"renderable":0},{"_id":"source/news/2022-05-20/1.jpg","path":"news/2022-05-20/1.jpg","modified":1,"renderable":0},{"_id":"source/news/2023-02-18/1.jpg","path":"news/2023-02-18/1.jpg","modified":1,"renderable":0},{"_id":"source/news/2023-02-18/2.jpg","path":"news/2023-02-18/2.jpg","modified":1,"renderable":0}],"Cache":[{"_id":"source/index.md","hash":"ea82c5182d66d922bbfde95951911fd4e67deb40","modified":1649296993854},{"_id":"source/about/index.md","hash":"a38375bb6bd331b64b14c8eafdd498c360a4d40c","modified":1676651807139},{"_id":"source/_posts/2021-09-27-pytorch.md","hash":"270b6a4fa11b01f25d52fb275c2c81643c36409e","modified":1649238091960},{"_id":"source/_posts/2021-09-29-food.md","hash":"a0f3cbafb199bbd0de41494d3865314d29ac660f","modified":1649238222817},{"_id":"source/_posts/2021-10-01-stewlamb.md","hash":"ecfd7f193fc1d45df0a06dcecaf050cd396b0ccb","modified":1649238231884},{"_id":"source/_posts/2021-10-01-whale01.md","hash":"b3b2927c08635fa913e20d05b228bb1ef0d7c1f8","modified":1649238241519},{"_id":"source/_posts/2021-10-07-pytorch.md","hash":"59c582c80b3e13c38f5c25d68ef62efa674b2899","modified":1649238255444},{"_id":"source/_posts/2021-10-18-ablation.md","hash":"82f08e5684920f4264964013850b6672f1a2eeb3","modified":1649238280657},{"_id":"source/_posts/2021-10-25-python.md","hash":"ee963d97742cf4defe61b31f1efba7b0efc35762","modified":1649491447277},{"_id":"source/_posts/2021-10-26-regex.md","hash":"3fc820311de2c1a710e16aa75a698be921262ea5","modified":1649238401582},{"_id":"source/_posts/2021-11-23-delicacy.md","hash":"cb3d103adf224fed9a1cf22e5964c7fcd164e18a","modified":1649238431857},{"_id":"source/_posts/2021-11-26-vscode.md","hash":"b9d8bd10ae2d04c46455ee4eead83fbd59af8a0b","modified":1649238470569},{"_id":"source/_posts/2021-12-13-hadoop.md","hash":"71e85a28008a919b64641334db3f28075b25ef80","modified":1649238591656},{"_id":"source/_posts/2021-12-13-java.md","hash":"2688a43c1ce7ef411c2d4902262515c83191cc8d","modified":1649238632027},{"_id":"source/_posts/2021-12-29-fuzzy.md","hash":"61955f5e2523c17cd80f11ca122b24f7a59e60e5","modified":1649260980550},{"_id":"source/_posts/2022-02-22-paper.md","hash":"2299162d82f3b3cfa386122b689d5ee8345ccb92","modified":1649238658025},{"_id":"source/_posts/2022-04-01-plan.md","hash":"2638df47097e8a3bbdb03721c1611efaf5b7bb46","modified":1649238678870},{"_id":"source/_posts/2022-03-26-remind.md","hash":"2382fd397fd35d1a1a576ea783ee216f2a72a7f6","modified":1649238669106},{"_id":"source/_posts/2022-04-06-hexo.md","hash":"104f9aaea744126a74ab24069d627f97ecbc0970","modified":1649249410827},{"_id":"source/_posts/2022-04-07-casual-inference-1.md","hash":"6cd2fd35d4cf7d6a6eb9aa026cad26dc8bed91b6","modified":1679218972654},{"_id":"source/_posts/2022-04-09-python.md","hash":"e8cfd4de6ff077f72d6a229fb2d6ff1afdbe3065","modified":1650526073383},{"_id":"source/_posts/2022-04-17-legend.md","hash":"233840474920ab6a1d9f6538192f9af70f7afc74","modified":1650526064833},{"_id":"source/_posts/2022-04-17-github.md","hash":"9407f927759010302dbf6296c30bebb7ee9fd34f","modified":1650526033322},{"_id":"source/_posts/2022-04-21-casual-inference-2.md","hash":"34a7773c3d0826f70b31bb93e72a9343a14e573b","modified":1679218961566},{"_id":"source/_posts/2022-04-27-casual-inference-4.md","hash":"0bd6c968818fdc3234aba8f560626e32d4642c7f","modified":1679219032335},{"_id":"source/_posts/2022-04-22-casual-inference-3.md","hash":"76b02d1c657037609ae31a977491a4a704edcae3","modified":1679218967575},{"_id":"source/_posts/2022-05-06-causal-inference-6.md","hash":"04962235fea251305f1c52d48c51371a319890a8","modified":1679219141455},{"_id":"source/_posts/2022-05-18-causal-inference-7.md","hash":"cbd72324bb8429c0ed1c1aa5d9928d7d58ccd2ae","modified":1679219772427},{"_id":"source/_posts/2022-05-05-causal-inference-5.md","hash":"a734e8bee46f6c4c0cb91aeda73a2e1da8c9353e","modified":1651819472462},{"_id":"source/_posts/2022-07-11-recent.md","hash":"2d617861c254e81186d67860b59fb0f7adeca829","modified":1660899383025},{"_id":"source/_posts/2022-08-19-vi.md","hash":"0ad14edde116cd4b53b348f92bd64b05bb4b3f1e","modified":1664264780343},{"_id":"source/_posts/2023-02-16-adbs01.md","hash":"10f7e07910954dc5642bc080c8e988fc6c88c5d6","modified":1679220501520},{"_id":"source/_posts/2023-02-16-adbs02.md","hash":"b5e0a0537eb2d0ec08deb80b7717d09b7dbcef6e","modified":1679221021571},{"_id":"source/_posts/2023-02-17-adbs03.md","hash":"982344b7b33d43e1f64c8ebdf26fef9b47c2dff9","modified":1676649374175},{"_id":"source/_posts/2023-02-18-adbs04.md","hash":"3459897596e4147e2712814c4ded20bc693e5066","modified":1676883678824},{"_id":"source/_posts/2023-02-25-bios.md","hash":"3a1d43cda90d8129b95a6abfd687b008d2222f1e","modified":1677291810357},{"_id":"source/_posts/2023-02-21-guitar.md","hash":"a045f48772cb6a6cc6353cc15fd3e4149c78c62d","modified":1676950383336},{"_id":"source/_posts/2023-03-12-menu.md","hash":"a22bc4f82b43abbf63c39464df6a948e74b428cd","modified":1679216671710},{"_id":"source/_posts/2023-03-19-rs.md","hash":"83bcc8683ae8b56a2182dda79cc8b4b9b70a78f9","modified":1679387556628},{"_id":"source/_posts/2023-04-04-diffusion.md","hash":"125722e1880eaf40a42c48de31273200de55ae1d","modified":1680586360043},{"_id":"source/_posts/2023-03-20-vae.md","hash":"96a98a222c62dd706b20cfb19cc3cdfc6b5a88bb","modified":1679281544209},{"_id":"source/_posts/2023-04-07-mcmc.md","hash":"fc89c7d1fc28878a7174887f0523e68c88656afc","modified":1682845722065},{"_id":"source/_posts/2023-04-30-causal-data.md","hash":"7b1b704c69db5f44944a5bbb6997cb98163aa01f","modified":1686362279811},{"_id":"source/_posts/2023-07-09-visa.md","hash":"f7ac60db394e8509012ce7a83b2db6fda5af254d","modified":1688874166536},{"_id":"source/_posts/2023-06-10-game.md","hash":"6c22febef7cc4995d29b92f33cbfbc1b596e61a3","modified":1686363747065},{"_id":"source/_posts/2023-12-01-ubm.md","hash":"0efffcf42442cebca38e450d10f48b271f364d4d","modified":1706756946785},{"_id":"source/_posts/2023-1-21-new-year-warrior.md","hash":"e724fd9b6c611285f7c4f5d6a68eccbae118a43d","modified":1674315333397},{"_id":"source/_posts/2024-01-16-emo.md","hash":"030e098b190fb818a47fb58177f63ad8d62b9913","modified":1705411950960},{"_id":"source/_posts/2024-01-16-reimburse.md","hash":"9c070613a842ed988ea862cd03a4bfb9c2d267e1","modified":1705414744536},{"_id":"source/_posts/2024-02-01-idcd.md","hash":"beaec9a6f31745182a4951af5cdb9d73bfad702f","modified":1709886363055},{"_id":"source/categories/index.md","hash":"687b51d86d7f9d8226a65ba33ca8e71df5310914","modified":1653656347627},{"_id":"source/images/2021112604.png","hash":"86b40fadbfd75b7afae3266f54e772a67ec6c6a2","modified":1637912471329},{"_id":"source/images/Linkedin.svg","hash":"c9fef67479d6a9e36dcd93e7bcf396b8dd41be7c","modified":1636976186012},{"_id":"source/images/github.svg","hash":"328b059eb62ccdbf789100eb7fa93e0ad88baacd","modified":1636975753931},{"_id":"source/images/email.svg","hash":"d347f708ecac0aad59241631a8e20999a098cf1b","modified":1636976210834},{"_id":"source/images/qrcode_cslijt.github.io.png","hash":"7242fae717ed02bd23fffcb6044c8a9dbb43aa1c","modified":1637029191368},{"_id":"source/images/pytorch.png","hash":"c2e801b87de4351c4e0ee23aca1f1768b61e2ba4","modified":1633580527891},{"_id":"source/images/屏幕截图_2022-03-26_175646.jpg","hash":"26e1a1351e575419cd154e827f9cf99569e2ff29","modified":1648288609876},{"_id":"source/images/知乎.svg","hash":"13af7dd0fecfa2111e1ad926934e3effdc8b693d","modified":1636976252400},{"_id":"source/links/index.md","hash":"aa13bbc0d6adb0c7bd9bb2cc6f7da820ffc284e7","modified":1676619526847},{"_id":"source/news/index.md","hash":"644599a7f75b3ecc51e4d110efa9c4781d883823","modified":1676652702623},{"_id":"source/tags/index.md","hash":"dfe07e31ea6656910ca36050bbbbb266c8995029","modified":1653656355871},{"_id":"source/_posts/2023-02-16-adbs01/rec-fix.jpg","hash":"ffe841e9456675cb1abc6fefaab2a044b73ef0b3","modified":1676556439774},{"_id":"source/_posts/2023-02-16-adbs02/b+int.jpg","hash":"e7f86f54808fb96d96cdd1a3c2914bf3935ac377","modified":1676620406226},{"_id":"source/_posts/2023-02-16-adbs02/b+leaf.jpg","hash":"a46afda52759f3745ddca2af781cd178094d5196","modified":1676620325064},{"_id":"source/_posts/2023-02-17-adbs03/index-alg.jpg","hash":"eeb955d6008ec20f0de5e5d07f628a0ad5895b45","modified":1676646872860},{"_id":"source/_posts/2023-02-17-adbs03/join-eg.jpg","hash":"5a324ee2eff19d0651e53f6d4ad97031f66b6253","modified":1676645210490},{"_id":"source/_posts/2023-02-17-adbs03/loop-alg.jpg","hash":"bac1e7837bb66f2ab985d3b3522b0a74f70ba35e","modified":1676649341030},{"_id":"source/_posts/2023-02-17-adbs03/merge-alg.jpg","hash":"4025b3dafcf48873d7b3a0669651660541be44ab","modified":1676645849747},{"_id":"source/_posts/2023-03-19-rs/1.jpg","hash":"e3f1df1b64915b8c9c06b3dd12a5d5a4d1ba10da","modified":1679238627490},{"_id":"source/_posts/2023-03-20-vae/v2-97e09bd511a1fb0c3240fa717ce235d2_1440w.png","hash":"5439901a55d56736c2ad4f1ca92074b2397f4ae6","modified":1679272102293},{"_id":"source/_posts/2023-03-20-vae/vae-diagram-1-1536x845.jpg","hash":"51e7f30c39b2cdcf42a086ece7dddc07463504c0","modified":1679272171243},{"_id":"source/_posts/2024-02-01-idcd/11.png","hash":"47c4f29fb9a2916c67558a8cdddaa9d45fc305b8","modified":1709883027725},{"_id":"source/_posts/2024-02-01-idcd/10.png","hash":"fcd75c16f0358b1c2bdc47c4b7e2012f3fcb692a","modified":1709883013329},{"_id":"source/_posts/2024-02-01-idcd/4.png","hash":"542de6b2ffe3e59d7e959d15419207c336c9cdee","modified":1709880268283},{"_id":"source/_posts/2024-02-01-idcd/5.png","hash":"3ead365a3e26f16a2c5b85791830f1b4262673eb","modified":1709880440060},{"_id":"source/_posts/2024-02-01-idcd/6.png","hash":"c534f1577b01fa1c30a40b66284266af5bee0965","modified":1709881803146},{"_id":"source/_posts/2024-02-01-idcd/7.png","hash":"01c823ad6a37c7fe174499dcb4bc9ff5537b657c","modified":1709882656313},{"_id":"source/_posts/2024-02-01-idcd/9.png","hash":"8b2d9ff26660733016de65da22f470292c99b565","modified":1709882993380},{"_id":"source/_posts/2024-02-01-idcd/8.png","hash":"d375fa783703c8017e62d0c666aee969c24b4949","modified":1709882975233},{"_id":"source/images/2021112601.png","hash":"e097693047fe4101014ae79b1ae1efc76062b16d","modified":1637901977945},{"_id":"source/images/2021112603.png","hash":"c1052463cdc4375b1472169b592bd64f698152d9","modified":1637911359123},{"_id":"source/images/c995d143ad4bd113d3b5cb035eafa40f4bfb0582.jpg","hash":"cb074d590659e292ce0d605882a3b4b3a1f04dcd","modified":1633080352111},{"_id":"source/images/屏幕截图_2022-03-26_175317.jpg","hash":"c4a37962b06c44cf51afe57bc581c74496d5ba33","modified":1648288451693},{"_id":"source/_posts/2022-04-17-github/github20220401701.png","hash":"0c4ff2071acc36220cb757ce53a39fb341a8d9a7","modified":1650161384578},{"_id":"source/_posts/2023-02-16-adbs02/b+eg.jpg","hash":"86c4911af7adee1a718cf75f671c0b0ec5acff63","modified":1676621270039},{"_id":"source/_posts/2023-02-17-adbs03/hash-alg.jpg","hash":"7fc5de219cd08b64e57006d12e23744d1414d9ee","modified":1676647653829},{"_id":"source/_posts/2023-02-17-adbs03/index-probe.jpg","hash":"0b3f9be79d60298ff3114cf2a028fd0aa002f0b5","modified":1676647316572},{"_id":"source/_posts/2023-02-21-guitar/Long-long-ago,-20th-century.pdf","hash":"ef4062d35959230949e2f08c8764ec62534cba59","modified":1676876492247},{"_id":"source/_posts/2023-06-10-game/notations.jpg","hash":"79ee619821aef5063acac472b65ef162c5ed6865","modified":1686363312558},{"_id":"source/_posts/2023-07-09-visa/approve.jpg","hash":"5308595eca03ae37437d76dde0b0c202e8bbd884","modified":1688872918081},{"_id":"source/_posts/2023-07-09-visa/issued.png","hash":"8e552b43a32833cff3cd3dcf1a31a23d3ba940a5","modified":1688873103313},{"_id":"source/_posts/2024-02-01-idcd/13.png","hash":"717e553452891eae81dac2979b0b34c66bdf73c4","modified":1709883081982},{"_id":"source/_posts/2024-02-01-idcd/14.png","hash":"5d9b8db010d8b6719403d42853a6e79d43e3e612","modified":1709883100983},{"_id":"source/_posts/2024-02-01-idcd/2.png","hash":"f2483563240284aeec2fa2b98045785655425131","modified":1706760261197},{"_id":"source/news/2022-05-20/1.jpg","hash":"071cfcce147760282dbebdbed68baeb27ce50304","modified":1676652076126},{"_id":"source/images/2021112602.png","hash":"638027646cd217ce436c31957c7158b7ea914638","modified":1637902079233},{"_id":"source/_posts/2023-02-16-adbs01/disk_struct.jpg","hash":"3dbcea2373eca6720d6af45f98a991e4511199e9","modified":1676552784994},{"_id":"source/_posts/2023-02-16-adbs01/pcm.jpg","hash":"08710f7fefa079cbf43010b7675ac92b0453702b","modified":1676555249420},{"_id":"source/_posts/2023-02-16-adbs02/multi-eg.jpg","hash":"b6761eccd498ea4e5c0256a898d26a87c881a35e","modified":1676619957274},{"_id":"source/_posts/2023-02-25-bios/cmd.jpg","hash":"8891ccd1f59c3b6bf418291767f690c7d9f8faf8","modified":1677290992764},{"_id":"source/images/2021121301.png","hash":"15d5d40d42c834bebeacc41495cd204ba3f3234f","modified":1639378671587},{"_id":"source/images/微信图片_20211001171428.jpg","hash":"45a8630d8a32f35c386de921d084d4cc5bf7774b","modified":1633079681820},{"_id":"source/_posts/2023-02-16-adbs01/item-rep.jpg","hash":"f32a7e821634a1ac0c2b682e666765d68047e437","modified":1676555948259},{"_id":"source/_posts/2024-02-01-idcd/12.png","hash":"fdddd63c02ccf2e634c8442a0285a87dbd8c83aa","modified":1709883050639},{"_id":"source/_posts/2024-02-01-idcd/3.png","hash":"8fc6065db390b84d37a11e3b13c3389eef30988f","modified":1706760286859},{"_id":"source/_posts/2024-02-01-idcd/0.png","hash":"0d134d154fe92d93ee029e0ebdd2a5c772585989","modified":1709883470963},{"_id":"source/_posts/2024-02-01-idcd/1.png","hash":"f09b26489753e8f055abbc7e6c8ab1331d18e8e3","modified":1706757684740},{"_id":"source/_posts/2024-02-01-idcd/15.png","hash":"b81bab166007fd0885e9a60c1239b33ff1a29288","modified":1709883121291},{"_id":"source/news/2023-02-18/2.jpg","hash":"6623de13f45c0f99765ce0a08d9bb2a6859a9fa0","modified":1676652459523},{"_id":"themes/next/.editorconfig","hash":"8570735a8d8d034a3a175afd1dd40b39140b3e6a","modified":1627608806000},{"_id":"themes/next/.eslintrc.json","hash":"cc5f297f0322672fe3f684f823bc4659e4a54c41","modified":1627608806000},{"_id":"themes/next/.gitignore","hash":"56f3470755c20311ddd30d421b377697a6e5e68b","modified":1627608806000},{"_id":"themes/next/.gitattributes","hash":"a54f902957d49356376b59287b894b1a3d7a003f","modified":1627608806000},{"_id":"themes/next/.stylintrc","hash":"2cf4d637b56d8eb423f59656a11f6403aa90f550","modified":1627608806000},{"_id":"themes/next/.travis.yml","hash":"ecca3b919a5b15886e3eca58aa84aafc395590da","modified":1627608806000},{"_id":"themes/next/LICENSE.md","hash":"18144d8ed58c75af66cb419d54f3f63374cd5c5b","modified":1627608806000},{"_id":"themes/next/README.md","hash":"9b4b7d66aca47f9c65d6321b14eef48d95c4dff1","modified":1627608806000},{"_id":"themes/next/crowdin.yml","hash":"e026078448c77dcdd9ef50256bb6635a8f83dca6","modified":1627608806000},{"_id":"themes/next/_config.yml","hash":"7589e0287fc02a365499df37e5fe54196cf3c1b3","modified":1679219715082},{"_id":"themes/next/gulpfile.js","hash":"1b4fc262b89948937b9e3794de812a7c1f2f3592","modified":1627608806000},{"_id":"themes/next/package.json","hash":"62fad6de02adbbba9fb096cbe2dcc15fe25f2435","modified":1627608806000},{"_id":"themes/next/.github/CODE_OF_CONDUCT.md","hash":"aa4cb7aff595ca628cb58160ee1eee117989ec4e","modified":1627608806000},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"e554931b98f251fd49ff1d2443006d9ea2c20461","modified":1627608806000},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"1a435c20ae8fa183d49bbf96ac956f7c6c25c8af","modified":1627608806000},{"_id":"themes/next/.github/config.yml","hash":"1d3f4e8794986817c0fead095c74f756d45f91ed","modified":1627608806000},{"_id":"themes/next/.github/issue-close-app.yml","hash":"7cba457eec47dbfcfd4086acd1c69eaafca2f0cd","modified":1627608806000},{"_id":"themes/next/.github/lock.yml","hash":"61173b9522ebac13db2c544e138808295624f7fd","modified":1627608806000},{"_id":"themes/next/.github/issue_label_bot.yaml","hash":"fca600ddef6f80c5e61aeed21722d191e5606e5b","modified":1627608806000},{"_id":"themes/next/.github/mergeable.yml","hash":"0ee56e23bbc71e1e76427d2bd255a9879bd36e22","modified":1627608806000},{"_id":"themes/next/.github/release-drafter.yml","hash":"3cc10ce75ecc03a5ce86b00363e2a17eb65d15ea","modified":1627608806000},{"_id":"themes/next/.github/stale.yml","hash":"fdf82de9284f8bc8e0b0712b4cc1cb081a94de59","modified":1627608806000},{"_id":"themes/next/.github/support.yml","hash":"d75db6ffa7b4ca3b865a925f9de9aef3fc51925c","modified":1627608806000},{"_id":"themes/next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1627608806000},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"c7a994b9542040317d8f99affa1405c143a94a38","modified":1627608806000},{"_id":"themes/next/docs/AUTHORS.md","hash":"10135a2f78ac40e9f46b3add3e360c025400752f","modified":1627608806000},{"_id":"themes/next/docs/DATA-FILES.md","hash":"cddbdc91ee9e65c37a50bec12194f93d36161616","modified":1627608806000},{"_id":"themes/next/docs/INSTALLATION.md","hash":"af88bcce035780aaa061261ed9d0d6c697678618","modified":1627608806000},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"94dc3404ccb0e5f663af2aa883c1af1d6eae553d","modified":1627608806000},{"_id":"themes/next/docs/LICENSE.txt","hash":"368bf2c29d70f27d8726dd914f1b3211cae4bbab","modified":1627608806000},{"_id":"themes/next/docs/MATH.md","hash":"d645b025ec7fb9fbf799b9bb76af33b9f5b9ed93","modified":1627608806000},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"8b6e4b2c9cfcb969833092bdeaed78534082e3e6","modified":1627608806000},{"_id":"themes/next/languages/ar.yml","hash":"9815e84e53d750c8bcbd9193c2d44d8d910e3444","modified":1627608806000},{"_id":"themes/next/languages/de.yml","hash":"74c59f2744217003b717b59d96e275b54635abf5","modified":1627608806000},{"_id":"themes/next/languages/default.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1627608806000},{"_id":"themes/next/languages/es.yml","hash":"c64cf05f356096f1464b4b1439da3c6c9b941062","modified":1627608806000},{"_id":"themes/next/languages/en.yml","hash":"45bc5118828bdc72dcaa25282cd367c8622758cb","modified":1627608806000},{"_id":"themes/next/languages/fa.yml","hash":"3676b32fda37e122f3c1a655085a1868fb6ad66b","modified":1627608806000},{"_id":"themes/next/languages/fr.yml","hash":"752bf309f46a2cd43890b82300b342d7218d625f","modified":1627608806000},{"_id":"themes/next/languages/it.yml","hash":"44759f779ce9c260b895532de1d209ad4bd144bf","modified":1627608806000},{"_id":"themes/next/languages/id.yml","hash":"572ed855d47aafe26f58c73b1394530754881ec2","modified":1627608806000},{"_id":"themes/next/languages/hu.yml","hash":"b1ebb77a5fd101195b79f94de293bcf9001d996f","modified":1627608806000},{"_id":"themes/next/languages/ja.yml","hash":"0cf0baa663d530f22ff380a051881216d6adcdd8","modified":1627608806000},{"_id":"themes/next/languages/ko.yml","hash":"0feea9e43cd399f3610b94d755a39fff1d371e97","modified":1627608806000},{"_id":"themes/next/languages/pt-BR.yml","hash":"67555b1ba31a0242b12fc6ce3add28531160e35b","modified":1627608806000},{"_id":"themes/next/languages/pt.yml","hash":"718d131f42f214842337776e1eaddd1e9a584054","modified":1627608806000},{"_id":"themes/next/languages/tr.yml","hash":"2b041eeb8bd096f549464f191cfc1ea0181daca4","modified":1627608806000},{"_id":"themes/next/languages/ru.yml","hash":"e993d5ca072f7f6887e30fc0c19b4da791ca7a88","modified":1627608806000},{"_id":"themes/next/languages/uk.yml","hash":"3a6d635b1035423b22fc86d9455dba9003724de9","modified":1627608806000},{"_id":"themes/next/languages/vi.yml","hash":"93393b01df148dcbf0863f6eee8e404e2d94ef9e","modified":1627608806000},{"_id":"themes/next/languages/zh-CN.yml","hash":"9e680b4ffc97256118d6c8d89e2a2c63fd6dba64","modified":1676652320573},{"_id":"themes/next/languages/nl.yml","hash":"5af3473d9f22897204afabc08bb984b247493330","modified":1627608806000},{"_id":"themes/next/languages/zh-HK.yml","hash":"3789f94010f948e9f23e21235ef422a191753c65","modified":1627608806000},{"_id":"themes/next/languages/zh-TW.yml","hash":"8c09da7c4ec3fca2c6ee897b2eea260596a2baa1","modified":1627608806000},{"_id":"themes/next/layout/_layout.swig","hash":"cf68af4a334c866fad464c76c575cb53e38bb3fe","modified":1649235560334},{"_id":"themes/next/layout/category.swig","hash":"1bde61cf4d2d171647311a0ac2c5c7933f6a53b0","modified":1627608806000},{"_id":"themes/next/layout/archive.swig","hash":"e4e31317a8df68f23156cfc49e9b1aa9a12ad2ed","modified":1627608806000},{"_id":"themes/next/layout/index.swig","hash":"7f403a18a68e6d662ae3e154b2c1d3bbe0801a23","modified":1627608806000},{"_id":"themes/next/layout/links.swig","hash":"374dba82196b2880636fc7e27c9cddfb1cbe34ba","modified":1663681517059},{"_id":"themes/next/layout/page.swig","hash":"509be2920f7cef2980006ef296b20c130a655d31","modified":1663681684611},{"_id":"themes/next/layout/post.swig","hash":"2f6d992ced7e067521fdce05ffe4fd75481f41c5","modified":1627608806000},{"_id":"themes/next/layout/tag.swig","hash":"0dfb653bd5de980426d55a0606d1ab122bd8c017","modified":1627608806000},{"_id":"themes/next/scripts/renderer.js","hash":"49a65df2028a1bc24814dc72fa50d52231ca4f05","modified":1627608806000},{"_id":"themes/next/.github/ISSUE_TEMPLATE/bug-report.md","hash":"c3e6b8196c983c40fd140bdeca012d03e6e86967","modified":1627608806000},{"_id":"themes/next/.github/ISSUE_TEMPLATE/feature-request.md","hash":"12d99fb8b62bd9e34d9672f306c9ae4ace7e053e","modified":1627608806000},{"_id":"themes/next/.github/ISSUE_TEMPLATE/other.md","hash":"d3efc0df0275c98440e69476f733097916a2d579","modified":1627608806000},{"_id":"themes/next/.github/ISSUE_TEMPLATE/question.md","hash":"53df7d537e26aaf062d70d86835c5fd8f81412f3","modified":1627608806000},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"0bd2d696f62a997a11a7d84fec0130122234174e","modified":1627608806000},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"9c4fe2873123bf9ceacab5c50d17d8a0f1baef27","modified":1627608806000},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"5237a368ab99123749d724b6c379415f2c142a96","modified":1627608806000},{"_id":"themes/next/docs/ru/README.md","hash":"85dd68ed1250897a8e4a444a53a68c1d49eb7e11","modified":1627608806000},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"34b88784ec120dfdc20fa82aadeb5f64ef614d14","modified":1627608806000},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"fb23b85db6f7d8279d73ae1f41631f92f64fc864","modified":1627608806000},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"ca1030efdfca5e20f9db2e7a428998e66a24c0d0","modified":1627608806000},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"d3f03be036b75dc71cf3c366cd75aee7c127c874","modified":1627608806000},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"579c7bd8341873fb8be4732476d412814f1a3df7","modified":1627608806000},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"8b18f84503a361fc712b0fe4d4568e2f086ca97d","modified":1627608806000},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"b92585d251f1f9ebe401abb5d932cb920f9b8b10","modified":1627608806000},{"_id":"themes/next/docs/zh-CN/README.md","hash":"c038629ff8f3f24e8593c4c8ecf0bef3a35c750d","modified":1627608806000},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"d9ce7331c1236bbe0a551d56cef2405e47e65325","modified":1627608806000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"9c8dc0b8170679cdc1ee9ee8dbcbaebf3f42897b","modified":1627608806000},{"_id":"themes/next/layout/_macro/post.swig","hash":"090b5a9b6fca8e968178004cbd6cff205b7eba57","modified":1627608806000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"71655ca21907e9061b6e8ac52d0d8fbf54d0062b","modified":1627608806000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"b87b622637c82d296163577b834855b0bd98ba0c","modified":1649319587374},{"_id":"themes/next/layout/_partials/comments.swig","hash":"db6ab5421b5f4b7cb32ac73ad0e053fdf065f83e","modified":1627608806000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9876dbfc15713c7a47d4bcaa301f4757bd978269","modified":1627608806000},{"_id":"themes/next/layout/_partials/languages.swig","hash":"ba9e272f1065b8f0e8848648caa7dea3f02c6be1","modified":1627608806000},{"_id":"themes/next/layout/_partials/widgets.swig","hash":"83a40ce83dfd5cada417444fb2d6f5470aae6bb0","modified":1627608806000},{"_id":"themes/next/layout/_scripts/index.swig","hash":"cea942b450bcb0f352da78d76dc6d6f1d23d5029","modified":1627608806000},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"d1f2bfde6f1da51a2b35a7ab9e7e8eb6eefd1c6b","modified":1627608806000},{"_id":"themes/next/layout/_scripts/pjax.swig","hash":"4d2c93c66e069852bb0e3ea2e268d213d07bfa3f","modified":1627608806000},{"_id":"themes/next/layout/_scripts/three.swig","hash":"a4f42f2301866bd25a784a2281069d8b66836d0b","modified":1627608806000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"ef38c213679e7b6d2a4116f56c9e55d678446069","modified":1649256051416},{"_id":"themes/next/layout/_third-party/baidu-push.swig","hash":"b782eb2e34c0c15440837040b5d65b093ab6ec04","modified":1627608806000},{"_id":"themes/next/layout/_third-party/index.swig","hash":"b0936803430f735819d8d01996c21ed827de3d8e","modified":1649258049418},{"_id":"themes/next/layout/_third-party/quicklink.swig","hash":"311e5eceec9e949f1ea8d623b083cec0b8700ff2","modified":1627608806000},{"_id":"themes/next/scripts/events/index.js","hash":"5743cde07f3d2aa11532a168a652e52ec28514fd","modified":1627608806000},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"2731e262a6b88eaee2a3ca61e6a3583a7f594702","modified":1627608806000},{"_id":"themes/next/scripts/filters/default-injects.js","hash":"aec50ed57b9d5d3faf2db3c88374f107203617e0","modified":1627608806000},{"_id":"themes/next/scripts/filters/front-matter.js","hash":"703bdd142a671b4b67d3d9dfb4a19d1dd7e7e8f7","modified":1627608806000},{"_id":"themes/next/scripts/filters/locals.js","hash":"b193a936ee63451f09f8886343dcfdca577c0141","modified":1627608806000},{"_id":"themes/next/scripts/filters/minify.js","hash":"19985723b9f677ff775f3b17dcebf314819a76ac","modified":1627608806000},{"_id":"themes/next/scripts/filters/post.js","hash":"44ba9b1c0bdda57590b53141306bb90adf0678db","modified":1627608806000},{"_id":"themes/next/scripts/helpers/engine.js","hash":"bdb424c3cc0d145bd0c6015bb1d2443c8a9c6cda","modified":1627608806000},{"_id":"themes/next/scripts/helpers/font.js","hash":"40cf00e9f2b7aa6e5f33d412e03ed10304b15fd7","modified":1627608806000},{"_id":"themes/next/scripts/helpers/next-url.js","hash":"958e86b2bd24e4fdfcbf9ce73e998efe3491a71f","modified":1627608806000},{"_id":"themes/next/scripts/helpers/next-config.js","hash":"5e11f30ddb5093a88a687446617a46b048fa02e5","modified":1627608806000},{"_id":"themes/next/scripts/tags/button.js","hash":"8c6b45f36e324820c919a822674703769e6da32c","modified":1627608806000},{"_id":"themes/next/scripts/tags/caniuse.js","hash":"94e0bbc7999b359baa42fa3731bdcf89c79ae2b3","modified":1627608806000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"f1826ade2d135e2f60e2d95cb035383685b3370c","modified":1627608806000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"d902fd313e8d35c3cc36f237607c2a0536c9edf1","modified":1627608806000},{"_id":"themes/next/scripts/tags/label.js","hash":"fc5b267d903facb7a35001792db28b801cccb1f8","modified":1627608806000},{"_id":"themes/next/scripts/tags/mermaid.js","hash":"983c6c4adea86160ecc0ba2204bc312aa338121d","modified":1627608806000},{"_id":"themes/next/scripts/tags/pdf.js","hash":"8c613b39e7bff735473e35244b5629d02ee20618","modified":1627608806000},{"_id":"themes/next/scripts/tags/note.js","hash":"0a02bb4c15aec41f6d5f1271cdb5c65889e265d9","modified":1627608806000},{"_id":"themes/next/scripts/tags/tabs.js","hash":"93d8a734a3035c1d3f04933167b500517557ba3e","modified":1627608806000},{"_id":"themes/next/scripts/tags/video.js","hash":"e5ff4c44faee604dd3ea9db6b222828c4750c227","modified":1627608806000},{"_id":"themes/next/source/css/_colors.styl","hash":"a8442520f719d3d7a19811cb3b85bcfd4a596e1f","modified":1627608806000},{"_id":"themes/next/source/css/_mixins.styl","hash":"e31a557f8879c2f4d8d5567ee1800b3e03f91f6e","modified":1627608806000},{"_id":"themes/next/source/css/main.styl","hash":"a3a3bbb5a973052f0186b3523911cb2539ff7b88","modified":1627608806000},{"_id":"themes/next/source/images/favicon.png","hash":"59b12317f2bc5c92c5803bcceb66c1b1441ea913","modified":1677377873094},{"_id":"themes/next/source/images/favicon16.ico","hash":"12dfb60ef8915b0b1bd88f2764fd293733f55e1f","modified":1677463366527},{"_id":"themes/next/source/images/favicon32.ico","hash":"d4681eeb845ec617415f005cfc68c9437b16b182","modified":1677463324567},{"_id":"themes/next/source/js/algolia-search.js","hash":"498d233eb5c7af6940baf94c1a1c36fdf1dd2636","modified":1627608806000},{"_id":"themes/next/source/js/bookmark.js","hash":"9734ebcb9b83489686f5c2da67dc9e6157e988ad","modified":1627608806000},{"_id":"themes/next/source/js/local-search.js","hash":"35ccf100d8f9c0fd6bfbb7fa88c2a76c42a69110","modified":1627608806000},{"_id":"themes/next/source/js/motion.js","hash":"72df86f6dfa29cce22abeff9d814c9dddfcf13a9","modified":1627608806000},{"_id":"themes/next/source/js/next-boot.js","hash":"a1b0636423009d4a4e4cea97bcbf1842bfab582c","modified":1627608806000},{"_id":"themes/next/source/js/utils.js","hash":"730cca7f164eaf258661a61ff3f769851ff1e5da","modified":1627608806000},{"_id":"themes/next/source/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1627608806000},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"000bad572d76ee95d9c0a78f9ccdc8d97cc7d4b4","modified":1627608806000},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"810d544019e4a8651b756dd23e5592ee851eda71","modified":1627608806000},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"c70f8e71e026e878a4e9d5ab3bbbf9b0b23c240c","modified":1627608806000},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"7dbe93b8297b746afb89700b4d29289556e85267","modified":1627608806000},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"ae2261bea836581918a1c2b0d1028a78718434e0","modified":1627608806000},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"d31f896680a6c2f2c3f5128b4d4dd46c87ce2130","modified":1627608806000},{"_id":"themes/next/layout/_partials/header/menu-item.swig","hash":"9440d8a3a181698b80e1fa47f5104f4565d8cdf3","modified":1627608806000},{"_id":"themes/next/layout/_partials/page/page-header.swig","hash":"9b7a66791d7822c52117fe167612265356512477","modified":1627608806000},{"_id":"themes/next/layout/_partials/post/post-copyright.swig","hash":"954ad71536b6eb08bd1f30ac6e2f5493b69d1c04","modified":1627608806000},{"_id":"themes/next/layout/_partials/page/breadcrumb.swig","hash":"c851717497ca64789f2176c9ecd1dedab237b752","modified":1627608806000},{"_id":"themes/next/layout/_partials/post/post-followme.swig","hash":"ceba16b9bd3a0c5c8811af7e7e49d0f9dcb2f41e","modified":1627608806000},{"_id":"themes/next/layout/_partials/post/post-footer.swig","hash":"8f14f3f8a1b2998d5114cc56b680fb5c419a6b07","modified":1627608806000},{"_id":"themes/next/layout/_partials/post/post-related.swig","hash":"f79c44692451db26efce704813f7a8872b7e63a0","modified":1627608806000},{"_id":"themes/next/layout/_partials/post/post-reward.swig","hash":"2b1a73556595c37951e39574df5a3f20b2edeaef","modified":1627608806000},{"_id":"themes/next/layout/_partials/search/algolia-search.swig","hash":"48430bd03b8f19c9b8cdb2642005ed67d56c6e0b","modified":1627608806000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"f48a6a8eba04eb962470ce76dd731e13074d4c45","modified":1627608806000},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"2be50f9bfb1c56b85b3b6910a7df27f51143632c","modified":1627608806000},{"_id":"themes/next/layout/_partials/sidebar/site-overview.swig","hash":"c46849e0af8f8fb78baccd40d2af14df04a074af","modified":1627608806000},{"_id":"themes/next/layout/_scripts/pages/schedule.swig","hash":"077b5d66f6309f2e7dcf08645058ff2e03143e6c","modified":1627608806000},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1627608806000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1627608806000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1627608806000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1627608806000},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"4790058691b7d36cf6d2d6b4e93795a7b8d608ad","modified":1627608806000},{"_id":"themes/next/layout/_third-party/analytics/growingio.swig","hash":"5adea065641e8c55994dd2328ddae53215604928","modified":1627608806000},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"2fa2b51d56bfac6a1ea76d651c93b9c20b01c09b","modified":1627608806000},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"1472cabb0181f60a6a0b7fec8899a4d03dfb2040","modified":1627608806000},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"f39a5bf3ce9ee9adad282501235e0c588e4356ec","modified":1627608806000},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"b14908644225d78c864cd0a9b60c52407de56183","modified":1627608806000},{"_id":"themes/next/layout/_third-party/comments/disqusjs.swig","hash":"82f5b6822aa5ec958aa987b101ef860494c6cf1f","modified":1627608806000},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"be0a8eccf1f6dc21154af297fc79555343031277","modified":1627608806000},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"f7a9eca599a682479e8ca863db59be7c9c7508c8","modified":1627608806000},{"_id":"themes/next/layout/_third-party/chat/chatra.swig","hash":"f910618292c63871ca2e6c6e66c491f344fa7b1f","modified":1627608806000},{"_id":"themes/next/layout/_third-party/chat/tidio.swig","hash":"cba0e6e0fad08568a9e74ba9a5bee5341cfc04c1","modified":1627608806000},{"_id":"themes/next/layout/_third-party/comments/gitalk.swig","hash":"ddf2e9cc97960284550fcdfbef1e2da0bf966439","modified":1649259458396},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"6c5976621efd5db5f7c4c6b4f11bc79d6554885f","modified":1627608806000},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"4791c977a730f29c846efcf6c9c15131b9400ead","modified":1627608806000},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"ecf751321e799f0fb3bf94d049e535130e2547aa","modified":1627608806000},{"_id":"themes/next/layout/_third-party/search/algolia-search.swig","hash":"d35a999d67f4c302f76fdf13744ceef3c6506481","modified":1627608806000},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"767b6c714c22588bcd26ba70b0fc19b6810cbacd","modified":1627608806000},{"_id":"themes/next/layout/_third-party/search/swiftype.swig","hash":"ba0dbc06b9d244073a1c681ff7a722dcbf920b51","modified":1627608806000},{"_id":"themes/next/layout/_third-party/tags/mermaid.swig","hash":"f3c43664a071ff3c0b28bd7e59b5523446829576","modified":1627608806000},{"_id":"themes/next/layout/_third-party/tags/pdf.swig","hash":"d30b0e255a8092043bac46441243f943ed6fb09b","modified":1627608806000},{"_id":"themes/next/layout/_third-party/statistics/busuanzi-counter.swig","hash":"4b1986e43d6abce13450d2b41a736dd6a5620a10","modified":1627608806000},{"_id":"themes/next/layout/_third-party/statistics/cnzz-analytics.swig","hash":"a17ace37876822327a2f9306a472974442c9005d","modified":1627608806000},{"_id":"themes/next/layout/_third-party/statistics/firestore.swig","hash":"b26ac2bfbe91dd88267f8b96aee6bb222b265b7a","modified":1627608806000},{"_id":"themes/next/layout/_third-party/statistics/lean-analytics.swig","hash":"d56d5af427cdfecc33a0f62ee62c056b4e33d095","modified":1627608806000},{"_id":"themes/next/layout/_third-party/statistics/index.swig","hash":"5f6a966c509680dbfa70433f9d658cee59c304d7","modified":1627608806000},{"_id":"themes/next/scripts/events/lib/config.js","hash":"d34c6040b13649714939f59be5175e137de65ede","modified":1627608806000},{"_id":"themes/next/scripts/events/lib/injects.js","hash":"f233d8d0103ae7f9b861344aa65c1a3c1de8a845","modified":1627608806000},{"_id":"themes/next/scripts/events/lib/injects-point.js","hash":"6661c1c91c7cbdefc6a5e6a034b443b8811235a1","modified":1627608806000},{"_id":"themes/next/scripts/filters/comment/common.js","hash":"2486f3e0150c753e5f3af1a3665d074704b8ee2c","modified":1627608806000},{"_id":"themes/next/scripts/filters/comment/changyan.js","hash":"a54708fd9309b4357c423a3730eb67f395344a5e","modified":1627608806000},{"_id":"themes/next/scripts/filters/comment/default-config.js","hash":"7f2d93af012c1e14b8596fecbfc7febb43d9b7f5","modified":1627608806000},{"_id":"themes/next/scripts/filters/comment/disqus.js","hash":"4c0c99c7e0f00849003dfce02a131104fb671137","modified":1627608806000},{"_id":"themes/next/scripts/filters/comment/disqusjs.js","hash":"7f8b92913d21070b489457fa5ed996d2a55f2c32","modified":1627608806000},{"_id":"themes/next/scripts/filters/comment/gitalk.js","hash":"e51dc3072c1ba0ea3008f09ecae8b46242ec6021","modified":1627608806000},{"_id":"themes/next/scripts/filters/comment/livere.js","hash":"d5fefc31fba4ab0188305b1af1feb61da49fdeb0","modified":1627608806000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"62df49459d552bbf73841753da8011a1f5e875c8","modified":1627608806000},{"_id":"themes/next/scripts/filters/comment/valine.js","hash":"6cbd85f9433c06bae22225ccf75ac55e04f2d106","modified":1627608806000},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"f4e694e5db81e57442c7e34505a416d818b3044a","modified":1627608806000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"f70be8e229da7e1715c11dd0e975a2e71e453ac8","modified":1627608806000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"612ec843372dae709acb17112c1145a53450cc59","modified":1627608806000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"818508748b7a62e02035e87fe58e75b603ed56dc","modified":1627608806000},{"_id":"themes/next/source/js/schemes/muse.js","hash":"1eb9b88103ddcf8827b1a7cbc56471a9c5592d53","modified":1627608806000},{"_id":"themes/next/source/js/schemes/pisces.js","hash":"0ac5ce155bc58c972fe21c4c447f85e6f8755c62","modified":1627608806000},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1627608806000},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"ca5e70662dcfb261c25191cc5db5084dcf661c76","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"8e7b57a72e757cf95278239641726bb2d5b869d1","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"a47725574e1bee3bc3b63b0ff2039cc982b17eff","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/reading-progress.styl","hash":"2e3bf7baf383c9073ec5e67f157d3cb3823c0957","modified":1627608806000},{"_id":"themes/next/source/css/_common/outline/mobile.styl","hash":"681d33e3bc85bdca407d93b134c089264837378c","modified":1627608806000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"a1690e035b505d28bdef2b4424c13fc6312ab049","modified":1627608806000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"0b2c4b78eead410020d7c4ded59c75592a648df8","modified":1627608806000},{"_id":"themes/next/source/css/_common/scaffolding/buttons.styl","hash":"a2e9e00962e43e98ec2614d6d248ef1773bb9b78","modified":1627608806000},{"_id":"themes/next/source/css/_common/scaffolding/comments.styl","hash":"b1f0fab7344a20ed6748b04065b141ad423cf4d9","modified":1627608806000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"b56367ea676ea8e8783ea89cd4ab150c7da7a060","modified":1627608806000},{"_id":"themes/next/source/css/_common/scaffolding/pagination.styl","hash":"8f58570a1bbc34c4989a47a1b7d42a8030f38b06","modified":1627608806000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"523fb7b653b87ae37fc91fc8813e4ffad87b0d7e","modified":1627608806000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"18ce72d90459c9aa66910ac64eae115f2dde3767","modified":1627608806000},{"_id":"themes/next/source/css/_common/scaffolding/toggles.styl","hash":"179e33b8ac7f4d8a8e76736a7e4f965fe9ab8b42","modified":1627608806000},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"7785bd756e0c4acede3a47fec1ed7b55988385a5","modified":1627608806000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"f6516d0f7d89dc7b6c6e143a5af54b926f585d82","modified":1649237514467},{"_id":"themes/next/source/css/_schemes/Mist/_layout.styl","hash":"bb7ace23345364eb14983e860a7172e1683a4c94","modified":1627608806000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"7104b9cef90ca3b140d7a7afcf15540a250218fc","modified":1627608806000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"a717969829fa6ef88225095737df3f8ee86c286b","modified":1627608806000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expand.styl","hash":"6136da4bbb7e70cec99f5c7ae8c7e74f5e7c261a","modified":1627608806000},{"_id":"themes/next/source/css/_schemes/Pisces/_header.styl","hash":"e282df938bd029f391c466168d0e68389978f120","modified":1649237575757},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"70a4324b70501132855b5e59029acfc5d3da1ebd","modified":1627608806000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"85da2f3006f4bef9a2199416ecfab4d288f848c4","modified":1627608806000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"44f47c88c06d89d06f220f102649057118715828","modified":1627608806000},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"e740deadcfc4f29c5cb01e40f9df6277262ba4e3","modified":1627608806000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1627608806000},{"_id":"themes/next/source/css/_schemes/Muse/_header.styl","hash":"f0131db6275ceaecae7e1a6a3798b8f89f6c850d","modified":1627608806000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"4d1c17345d2d39ef7698f7acf82dfc0f59308c34","modified":1627608806000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"93db5dafe9294542a6b5f647643cb9deaced8e06","modified":1627608806000},{"_id":"themes/next/source/css/_schemes/Muse/_sidebar.styl","hash":"2b2e7b5cea7783c9c8bb92655e26a67c266886f0","modified":1627608806000},{"_id":"themes/next/source/css/_schemes/Muse/_sub-menu.styl","hash":"c48ccd8d6651fe1a01faff8f01179456d39ba9b1","modified":1627608806000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1627608806000},{"_id":"themes/next/source/lib/font-awesome/css/all.min.css","hash":"0038dc97c79451578b7bd48af60ba62282b4082b","modified":1627608806000},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"260bb01acd44d88dcb7f501a238ab968f86bef9e","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"2bd0eb1512415325653b26d62a4463e6de83c5ac","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"fafc96c86926b22afba8bb9418c05e6afbc05a57","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"7504dbc5c70262b048143b2c37d2b5aa2809afa2","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/pages/tag-cloud.styl","hash":"d21d4ac1982c13d02f125a67c065412085a92ff2","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"e75693f33dbc92afc55489438267869ae2f3db54","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"e771dcb0b4673e063c0f3e2d73e7336ac05bcd57","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f49ca072b5a800f735e8f01fc3518f885951dd8e","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"902569a9dea90548bec21a823dd3efd94ff7c133","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"ded41fd9d20a5e8db66aaff7cc50f105f5ef2952","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/post/post-followme.styl","hash":"1e4190c10c9e0c9ce92653b0dbcec21754b0b69d","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"72d495a88f7d6515af425c12cbc67308a57d88ea","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/post/post-header.styl","hash":"65cb6edb69e94e70e3291e9132408361148d41d5","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"d114b2a531129e739a27ba6271cfe6857aa9a865","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"f5c2788a78790aca1a2f37f7149d6058afb539e0","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"6a97bcfa635d637dc59005be3b931109e0d1ead5","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"99e12c9ce3d14d4837e3d3f12fc867ba9c565317","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"5b5649b9749e3fd8b63aef22ceeece0a6e1df605","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"a760ee83ba6216871a9f14c5e56dc9bd0d9e2103","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/third-party/gitalk.styl","hash":"8a7fc03a568b95be8d3337195e38bc7ec5ba2b23","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/third-party/math.styl","hash":"b49e9fbd3c182b8fc066b8c2caf248e3eb748619","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/third-party/search.styl","hash":"9f0b93d109c9aec79450c8a0cf4a4eab717d674d","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"9a878d0119785a2316f42aebcceaa05a120b9a7a","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"e2992846b39bf3857b5104675af02ba73e72eed5","modified":1627608806000},{"_id":"themes/next/source/css/_common/outline/footer/footer.styl","hash":"454a4aebfabb4469b92a8cbb49f46c49ac9bf165","modified":1627608806000},{"_id":"themes/next/source/css/_common/outline/header/bookmark.styl","hash":"e2d606f1ac343e9be4f15dbbaf3464bc4df8bf81","modified":1627608806000},{"_id":"themes/next/source/css/_common/outline/header/github-banner.styl","hash":"e7a9fdb6478b8674b1cdf94de4f8052843fb71d9","modified":1627608806000},{"_id":"themes/next/source/css/_common/outline/header/header.styl","hash":"a793cfff86ad4af818faef04c18013077873f8f0","modified":1627608806000},{"_id":"themes/next/source/css/_common/outline/header/headerband.styl","hash":"0caf32492692ba8e854da43697a2ec8a41612194","modified":1627608806000},{"_id":"themes/next/source/css/_common/outline/header/menu.styl","hash":"5f432a6ed9ca80a413c68b00e93d4a411abf280a","modified":1627608806000},{"_id":"themes/next/source/css/_common/outline/header/site-nav.styl","hash":"b2fc519828fe89a1f8f03ff7b809ad68cd46f3d7","modified":1627608806000},{"_id":"themes/next/source/css/_common/outline/header/site-meta.styl","hash":"45a239edca44acecf971d99b04f30a1aafbf6906","modified":1627608806000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"2cb1876e9e0c9ac32160888af27b1178dbcb0616","modified":1627608806000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"44487d9ab290dc97871fa8dd4487016deb56e123","modified":1627608806000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"fa0222197b5eee47e18ac864cdc6eac75678b8fe","modified":1627608806000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"1f0e7fbe80956f47087c2458ea880acf7a83078b","modified":1627608806000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-dimmer.styl","hash":"9b479c2f9a9bfed77885e5093b8245cc5d768ec7","modified":1627608806000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"a960a2dd587b15d3b3fe1b59525d6fa971c6a6ec","modified":1627608806000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"a05a4031e799bc864a4536f9ef61fe643cd421af","modified":1627608806000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"b3220db827e1adbca7880c2bb23e78fa7cbe95cb","modified":1627608806000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar.styl","hash":"a9cd93c36bae5af9223e7804963096274e8a4f03","modified":1627608806000},{"_id":"themes/next/source/css/_common/outline/sidebar/site-state.styl","hash":"2a47f8a6bb589c2fb635e6c1e4a2563c7f63c407","modified":1627608806000},{"_id":"themes/next/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"f71a3e86c05ea668b008cf05a81f67d92b6d65e4","modified":1627608806000},{"_id":"themes/next/source/css/_common/scaffolding/highlight/diff.styl","hash":"d3f73688bb7423e3ab0de1efdf6db46db5e34f80","modified":1627608806000},{"_id":"themes/next/source/css/_common/scaffolding/highlight/theme.styl","hash":"3b3acc5caa0b95a2598bef4eeacb21bab21bea56","modified":1627608806000},{"_id":"themes/next/source/css/_common/scaffolding/highlight/highlight.styl","hash":"35c871a809afa8306c8cde13651010e282548bc6","modified":1627608806000},{"_id":"themes/next/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"1d2778ca5aeeeafaa690dc2766b01b352ab76a02","modified":1627608806000},{"_id":"themes/next/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"709d10f763e357e1472d6471f8be384ec9e2d983","modified":1627608806000},{"_id":"themes/next/source/css/_common/scaffolding/tags/label.styl","hash":"d7fce4b51b5f4b7c31d93a9edb6c6ce740aa0d6b","modified":1627608806000},{"_id":"themes/next/source/css/_common/scaffolding/tags/note.styl","hash":"e4d9a77ffe98e851c1202676940097ba28253313","modified":1627608806000},{"_id":"themes/next/source/css/_common/scaffolding/tags/pdf.styl","hash":"b49c64f8e9a6ca1c45c0ba98febf1974fdd03616","modified":1627608806000},{"_id":"themes/next/source/css/_common/scaffolding/tags/tabs.styl","hash":"f23670f1d8e749f3e83766d446790d8fd9620278","modified":1627608806000},{"_id":"themes/next/source/css/_common/scaffolding/tags/tags.styl","hash":"9e4c0653cfd3cc6908fa0d97581bcf80861fb1e7","modified":1627608806000},{"_id":"source/news/2023-02-18/1.jpg","hash":"1fe6d42cf29e71308b14057e809d63d2859bb49c","modified":1676652453935},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"509988477da79c146cb93fb728405f18e923c2de","modified":1627608806000},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"75a88815c47a249eadb5f0edc1675957f860cca7","modified":1627608806000},{"_id":"source/_posts/2024-02-01-idcd/16.png","hash":"6f52da55edecda01a2dd69458833d21a29d33d96","modified":1709883169821},{"_id":"source/_posts/2024-02-01-idcd/17.png","hash":"e0c46ad5bcde8607d3e03044d0fbc476b6ffacd0","modified":1709883197283},{"_id":"source/images/IMG_20210925_203119.jpg","hash":"2e9abe7309e6e97c2123978bfab497e46e858902","modified":1632917523931},{"_id":"source/images/avatar.jpg","hash":"15683b2f7f56946cc4639cbd21441ec3e87add35","modified":1632917523974},{"_id":"source/images/IMG_20210925_120635_edit_759134094171144.jpg","hash":"7224ffbd056b66d4a804fcacd514b850b314efa0","modified":1632917523920},{"_id":"source/images/IMG_20210925_210855.jpg","hash":"fa759ff825b95129080a0c904880240177afb55f","modified":1632917523957},{"_id":"source/images/IMG_20210809_091606_edit_932701128736847.jpg","hash":"598dbcf1c15c494679c130432aa0f814c9d5e7b7","modified":1632917523895},{"_id":"source/images/IMG_20210925_210835.jpg","hash":"b31a89e566d3addbb9d74dac9893894984c9fa17","modified":1632917523942},{"_id":"source/images/IMG_20210925_120441.jpg","hash":"a267aeacf92ab8d504ad7b3b315c380e8056456d","modified":1632917523912},{"_id":"source/images/微信图片_20211001161414.jpg","hash":"1878e9bac84ead0d7444adeb7b4c3f36b63e4c1a","modified":1633076080727},{"_id":"source/images/IMG_20210323_120734.jpg","hash":"ba5f11fde2b69fa608712e6b9939df96174cecc1","modified":1632917523649},{"_id":"source/images/IMG_20210321_171950.jpg","hash":"af85f769e58663ec27832b75c01724c16a963172","modified":1632917523629},{"_id":"source/images/IMG_20210405_134224.jpg","hash":"3eeaa0239bfff2a50721fa503ac1c607bf0a4471","modified":1632917523732},{"_id":"source/images/IMG_20210325_104740.jpg","hash":"55ab15bbe191dce47fa98b7064740b4d86aa8d7a","modified":1632917523699},{"_id":"source/_posts/2023-02-25-bios/bios1.jpg","hash":"a8175e8e87d0a696c7979355baf2de3ec0aaad05","modified":1677291527565},{"_id":"source/_posts/2023-02-25-bios/bios2.jpg","hash":"404d6efd2b2254cf430dd5de5a4df0a4116c644d","modified":1677291532497},{"_id":"source/images/IMG_20210405_134319.jpg","hash":"9b3c658843fa18464120a82be9431e0c881b8e06","modified":1632917523877},{"_id":"source/images/background.jpg","hash":"9b3c658843fa18464120a82be9431e0c881b8e06","modified":1632917523877},{"_id":"public/search.xml","hash":"d486628c42bc2f6ec7e81405b4772fcdd6aa1f9b","modified":1711791173030},{"_id":"public/leancloud_counter_security_urls.json","hash":"8dc5a652f8ebc6e57232756f3c186bcfe900c667","modified":1711791173030},{"_id":"public/index.html","hash":"46d72b858176f332bbe5791d0e3ad223b42a064e","modified":1711791173030},{"_id":"public/about/index.html","hash":"1a4f0b93f34f26f499b690925ac1c433e4a56221","modified":1711791173030},{"_id":"public/categories/index.html","hash":"94cc53a11ff17bb64ec8673f276c865a8c9acd59","modified":1711791173030},{"_id":"public/links/index.html","hash":"82e0bd5d24e92d639e04fe90ef04c55f9e1c14df","modified":1711791173030},{"_id":"public/tags/index.html","hash":"5ca7274cab1e4ba924fd24f29fec7e25c9b5da5c","modified":1711791173030},{"_id":"public/news/index.html","hash":"bd1cb56e6f66db200e561fd06362b5230d4679d3","modified":1711791173030},{"_id":"public/2024/02/01/2024-02-01-idcd/index.html","hash":"7ad6cf2586ab94ed6ccba3137974c42bde2af738","modified":1711791173030},{"_id":"public/2024/01/16/2024-01-16-reimburse/index.html","hash":"545b1ce62801f715b073fc5f5c275074402bdd35","modified":1711791173030},{"_id":"public/2024/01/16/2024-01-16-emo/index.html","hash":"80d3e7386e13ca99cb289baf36d06e250c24b45f","modified":1711791173030},{"_id":"public/2023/12/01/2023-12-01-ubm/index.html","hash":"0b91dcc11a921ea66b36af285c022707855799d9","modified":1711791173030},{"_id":"public/2023/07/09/2023-07-09-visa/index.html","hash":"8364e266ebcb804108552d41dcae19296fa65608","modified":1711791173030},{"_id":"public/2023/06/10/2023-06-10-game/index.html","hash":"eb1f23d81dc074589cdc766e2642445f6284ec19","modified":1711791173030},{"_id":"public/2023/04/30/2023-04-30-causal-data/index.html","hash":"0cf89eed8d1d5ac4abf7d4d2289c7a4f9654a82f","modified":1711791173030},{"_id":"public/2023/04/07/2023-04-07-mcmc/index.html","hash":"d8ad5666f948af8f9269a00fa47de706bfdebd37","modified":1711791173030},{"_id":"public/2023/04/04/2023-04-04-diffusion/index.html","hash":"b894434efa3178987ebf7d1194f7046a8afe6984","modified":1711791173030},{"_id":"public/2023/03/20/2023-03-20-vae/index.html","hash":"eb6ce98aadbd22015c48c68d7dcf4f9474815e2d","modified":1711791173030},{"_id":"public/2023/03/18/2023-03-19-rs/index.html","hash":"9d3c3dcc6b55a9911ca423b3353a99f02ee56087","modified":1711791173030},{"_id":"public/2023/03/12/2023-03-12-menu/index.html","hash":"48dcb1bba02a976f8f51cc732d6cb527a986009d","modified":1711791173030},{"_id":"public/2023/02/25/2023-02-25-bios/index.html","hash":"ddba783fda0dc861d43820c55aeffc0ca2a05213","modified":1711791173030},{"_id":"public/2023/02/21/2023-02-21-guitar/index.html","hash":"d2156ad995aa35c7c32178bef70b00d40aac9da4","modified":1711791173030},{"_id":"public/2023/02/18/2023-02-18-adbs04/index.html","hash":"f15a41cbafe0eb916fa3034e1a692e68acdd3da3","modified":1711791173030},{"_id":"public/2023/02/17/2023-02-17-adbs03/index.html","hash":"61500f6c48c7460982929184313b99d3761fa6a7","modified":1711791173030},{"_id":"public/2023/02/16/2023-02-16-adbs02/index.html","hash":"bc7cfad4a79818d9cd22e2185286bb4a8d82b210","modified":1711791173030},{"_id":"public/2023/02/16/2023-02-16-adbs01/index.html","hash":"f3afb693ad6a8fdfa7475eabcaa3f60a8856a3d8","modified":1711791173030},{"_id":"public/2023/01/21/2023-1-21-new-year-warrior/index.html","hash":"c01856f06ca6f0eef8be1ef99556bbd6568b84f6","modified":1711791173030},{"_id":"public/2022/08/19/2022-08-19-vi/index.html","hash":"93eec71eac29b2feb1989a4060364c6176c56c30","modified":1711791173030},{"_id":"public/2022/07/11/2022-07-11-recent/index.html","hash":"0fafd0d256877969301f60201d0af0fffe24fd1a","modified":1711791173030},{"_id":"public/2022/05/18/2022-05-18-causal-inference-7/index.html","hash":"0a4f0dce56e792f2519ae8edc8f04aa4f61d2594","modified":1711791173030},{"_id":"public/2022/05/06/2022-05-06-causal-inference-6/index.html","hash":"a091356ead0b59ef95ce152d6598fe7faa91de72","modified":1711791173030},{"_id":"public/2022/05/05/2022-05-05-causal-inference-5/index.html","hash":"e6a544a6ae2ada9a57236e640eee7a5d00c3daac","modified":1711791173030},{"_id":"public/2022/04/27/2022-04-27-casual-inference-4/index.html","hash":"c4e438b3cfac9172094463cc26139b6c66378360","modified":1711791173030},{"_id":"public/2022/04/22/2022-04-22-casual-inference-3/index.html","hash":"c1b812ab6d95d3c6ed6f6ad018b8258c079fde1d","modified":1711791173030},{"_id":"public/2022/04/21/2022-04-21-casual-inference-2/index.html","hash":"710ab0764ce3f4504ec2b183b876fad05cb1551e","modified":1711791173030},{"_id":"public/2022/04/17/2022-04-17-legend/index.html","hash":"e07085ff9a98c83a5838d7f2d524ec1483d56e81","modified":1711791173030},{"_id":"public/2022/04/17/2022-04-17-github/index.html","hash":"a4ae5a6de2c1efa38bb014cee36c42485c505a28","modified":1711791173030},{"_id":"public/2022/04/09/2022-04-09-python/index.html","hash":"69ca806d402f6a9e6de7303adeba6a78ff76cf9f","modified":1711791173030},{"_id":"public/2022/04/07/2022-04-07-casual-inference-1/index.html","hash":"327754963ddf7fb4a625a8da8350400bae5ac2d3","modified":1711791173030},{"_id":"public/2022/04/06/2022-04-06-hexo/index.html","hash":"edacb3858b3a15eb1be97715860e99e36ceba4b8","modified":1711791173030},{"_id":"public/2022/04/01/2022-04-01-plan/index.html","hash":"3e8bc7d3b0102fd63d423c02e50d49fd27acb265","modified":1711791173030},{"_id":"public/2022/03/26/2022-03-26-remind/index.html","hash":"c10ff7a2fe0c3307cce6954e39b9425b6a661517","modified":1711791173030},{"_id":"public/2022/02/22/2022-02-22-paper/index.html","hash":"5fee8449867991566653de9bfc5814cd60dcf00b","modified":1711791173030},{"_id":"public/2021/12/29/2021-12-29-fuzzy/index.html","hash":"202e45e325cfdddd46491a8b5bc5246c78d939f3","modified":1711791173030},{"_id":"public/2021/12/13/2021-12-13-hadoop/index.html","hash":"7b31fae5de7fd5a824cf131cb70ab5db5ccbf649","modified":1711791173030},{"_id":"public/2021/12/13/2021-12-13-java/index.html","hash":"1f5f77af9e56e068222d83086b5044af79bd886b","modified":1711791173030},{"_id":"public/2021/11/26/2021-11-26-vscode/index.html","hash":"7e22c745003b5e49ef7c211e5ff13f43395e2d0f","modified":1711791173030},{"_id":"public/2021/11/23/2021-11-23-delicacy/index.html","hash":"7328aaff27ced48559df498520bbff1a386e6ad5","modified":1711791173030},{"_id":"public/2021/10/26/2021-10-26-regex/index.html","hash":"5eb9880a11005772f99a0408b044f40d06b08312","modified":1711791173030},{"_id":"public/2021/10/25/2021-10-25-python/index.html","hash":"b3394aec92bce426646cee709c54ae16b97ccb1a","modified":1711791173030},{"_id":"public/2021/10/18/2021-10-18-ablation/index.html","hash":"638ad11ae3f6505b534d8bf95c9e211bb8d0ef03","modified":1711791173030},{"_id":"public/2021/10/07/2021-10-07-pytorch/index.html","hash":"5840ddf8f22f7be5154b3a94e07262012a727035","modified":1711791173030},{"_id":"public/2021/10/01/2021-10-01-stewlamb/index.html","hash":"4cf97678c445f732dad927893a194fd8e34b134c","modified":1711791173030},{"_id":"public/2021/10/01/2021-10-01-whale01/index.html","hash":"ad32d4370fe44074e3b86c360e1b8a8b9ecd247d","modified":1711791173030},{"_id":"public/2021/09/29/2021-09-29-food/index.html","hash":"e79319294d0fe69512b61c691ea539425a2f7744","modified":1711791173030},{"_id":"public/2021/09/27/2021-09-27-pytorch/index.html","hash":"be995b82235ce923a27bb8fd00a6ee952ded4474","modified":1711791173030},{"_id":"public/archives/index.html","hash":"dabe778cd57b52a38c130b9ebab86b0f0b8fc755","modified":1711791173030},{"_id":"public/archives/page/2/index.html","hash":"6e2bb2c193a6343f0b94361efa4d0ccf6c185788","modified":1711791173030},{"_id":"public/archives/page/3/index.html","hash":"f2982162728d04cc82f9ea8df0b9eec2c10bbd64","modified":1711791173030},{"_id":"public/archives/page/4/index.html","hash":"29c93dbac0f81d511450421d25f1b535f63076ff","modified":1711791173030},{"_id":"public/archives/page/5/index.html","hash":"73b6a8194088c1ec6c8f2580512fb5a04cbb78cc","modified":1711791173030},{"_id":"public/archives/2021/index.html","hash":"a66155cb01093baf67d0e7da76b9969a2da1f81e","modified":1711791173030},{"_id":"public/archives/2021/page/2/index.html","hash":"42b9174a7510a18416333dc472567a7d68b5c528","modified":1711791173030},{"_id":"public/archives/2021/09/index.html","hash":"cfff5371b40820026e63e1673dc01bb2cabf4251","modified":1711791173030},{"_id":"public/archives/2021/10/index.html","hash":"130f38018c8edcd47fdb047808dff10ce75ced79","modified":1711791173030},{"_id":"public/archives/2021/11/index.html","hash":"948f873e7d591927654b084699de5ea23a3017d8","modified":1711791173030},{"_id":"public/archives/2021/12/index.html","hash":"a987f4405766edb07a801444ad56d5b55f5835cb","modified":1711791173030},{"_id":"public/archives/2022/index.html","hash":"58f4f4768a9d31beba196a6652387b59045af9dc","modified":1711791173030},{"_id":"public/archives/2022/page/2/index.html","hash":"11af2afe92e7de1a31ef9fd248a8ea9a2e650752","modified":1711791173030},{"_id":"public/archives/2022/02/index.html","hash":"0651d63c482998bf315a29e91e6cdb2cb5f1023a","modified":1711791173030},{"_id":"public/archives/2022/03/index.html","hash":"8b2207122ec75e251c90f14d758a2807d9d4a2d2","modified":1711791173030},{"_id":"public/archives/2022/04/index.html","hash":"d2ce8ea2acf8874ded820059ebb5f469d0dd771c","modified":1711791173030},{"_id":"public/archives/2022/05/index.html","hash":"4b085662b2290b90d99bbea39921f97ab2567911","modified":1711791173030},{"_id":"public/archives/2022/07/index.html","hash":"4bc03b12af7eccecfcb29114684da9f728f3eac6","modified":1711791173030},{"_id":"public/archives/2022/08/index.html","hash":"0c21ce92951e8e055f7cdf7391c0c71202ef17b3","modified":1711791173030},{"_id":"public/archives/2023/index.html","hash":"887970ae45d5eebf452bc8aea60580834f0d93eb","modified":1711791173030},{"_id":"public/archives/2023/page/2/index.html","hash":"ecc1d09ce62eb06a4a09077d8547bbaf4ec73084","modified":1711791173030},{"_id":"public/archives/2023/01/index.html","hash":"2d994491ed7e5fe1440c0c0b191ee5d3604478a8","modified":1711791173030},{"_id":"public/archives/2023/02/index.html","hash":"01743e9af2cd6aa74916665811380060ed1da367","modified":1711791173030},{"_id":"public/archives/2023/03/index.html","hash":"0095e83d509bf0194cee5bf1579cd7ecd9c4af22","modified":1711791173030},{"_id":"public/archives/2023/04/index.html","hash":"b779bab1bf4275598f2d930cdb89fa37be3ec138","modified":1711791173030},{"_id":"public/archives/2023/06/index.html","hash":"5478085a0849da441effc04d30da48eb77a51161","modified":1711791173030},{"_id":"public/archives/2023/07/index.html","hash":"13f232f00c5a95ddab9f5652b5e1145b6ccbf4be","modified":1711791173030},{"_id":"public/archives/2023/12/index.html","hash":"63f0ac75d724fe5b7cff91d65dcb42348fffe4f9","modified":1711791173030},{"_id":"public/archives/2024/index.html","hash":"d84b8bbc9b69674c6b209d285ffb4b88e955d620","modified":1711791173030},{"_id":"public/archives/2024/01/index.html","hash":"5d5cea739db8083b9575b9379b20a401c69eebb6","modified":1711791173030},{"_id":"public/archives/2024/02/index.html","hash":"f15d4b72a62a6a75829547bc483ab8a106ef725a","modified":1711791173030},{"_id":"public/page/2/index.html","hash":"dc4c8ca833f3ceaef87cc0409e8258683261a5ad","modified":1711791173030},{"_id":"public/page/3/index.html","hash":"96b581d6823f1a3166166a14a451552c71ddb82e","modified":1711791173030},{"_id":"public/page/4/index.html","hash":"49bace81960252723c9febf311e76ef6bed75d27","modified":1711791173030},{"_id":"public/page/5/index.html","hash":"475b43fae60508ea325b2027d868d7fa62f09f55","modified":1711791173030},{"_id":"public/categories/学习笔记/index.html","hash":"842d817e58fe19c850d0d26144c3ac85eee94d88","modified":1711791173030},{"_id":"public/categories/技术文档/index.html","hash":"51b0ede8ca884e2a305b402ac8a8c8bf8fff5c8c","modified":1711791173030},{"_id":"public/categories/学习笔记/page/2/index.html","hash":"e8fc5fb82721461406c4e55653dd22d5727d5861","modified":1711791173030},{"_id":"public/categories/音乐/index.html","hash":"3806fcce5ba3787abf1f9b62453eef4abc800343","modified":1711791173030},{"_id":"public/categories/菜谱/index.html","hash":"705321fd5118d42aa4b0594994f62dcf8f1fb522","modified":1711791173030},{"_id":"public/categories/深度学习/index.html","hash":"4c70bcd1484a948af937193fc0858689c5140723","modified":1711791173030},{"_id":"public/categories/学术会议/index.html","hash":"f9c3c2ef3ec5f533b8af1fcb6d2750828b8cb4bf","modified":1711791173030},{"_id":"public/categories/随笔/index.html","hash":"581750356b15293cea04646ff9fdaf22d301a2b1","modified":1711791173030},{"_id":"public/tags/pytorch/index.html","hash":"03ee5063cf467e0a30d3f6dad2bfb45326b96bcd","modified":1711791173030},{"_id":"public/tags/深度学习/index.html","hash":"deaa4ae96492d5092f02cb4173c65a611396612f","modified":1711791173030},{"_id":"public/tags/coding/index.html","hash":"cdbef0928fa0b6f6f1b3618e49a28cb54b1475f5","modified":1711791173030},{"_id":"public/tags/持续更新/index.html","hash":"5ed677739fa20fd3bfb222a2b6409c0895cdaaed","modified":1711791173030},{"_id":"public/tags/美食/index.html","hash":"7207f893b6b3d47526db8336d4e7f29b4830a469","modified":1711791173030},{"_id":"public/tags/小说/index.html","hash":"6c9e5fa1bc0027cd0dff90d0fc60c9d1b15373a0","modified":1711791173030},{"_id":"public/tags/python/index.html","hash":"edd6de436d73acbe7b70b61a99c6ff9542c71bb4","modified":1711791173030},{"_id":"public/tags/实验/index.html","hash":"2d359276f56e25a1ff697cf5d457813f5476f106","modified":1711791173030},{"_id":"public/tags/杂谈/index.html","hash":"cadf89b86875f1395747f7162fc44253ab642d81","modified":1711791173030},{"_id":"public/tags/ssh/index.html","hash":"26c3fb2d6d192cdbfca757dca9fd91c931424401","modified":1711791173030},{"_id":"public/tags/vscode/index.html","hash":"5e88eada151843996b43ce1a6891d98cf0644e52","modified":1711791173030},{"_id":"public/tags/大数据/index.html","hash":"e74a53bbe274718d23f6696b26e40d359aaab64b","modified":1711791173030},{"_id":"public/tags/Java/index.html","hash":"c994e2567050688ad3b97cf8e46c5c4ec04ae75c","modified":1711791173030},{"_id":"public/tags/Hadoop/index.html","hash":"472d518a4d25ff538f41850bb947d320be4513c3","modified":1711791173030},{"_id":"public/tags/Mapreduce/index.html","hash":"ad5e064c07a63b365e24a050289eb220c89cacc9","modified":1711791173030},{"_id":"public/tags/数学/index.html","hash":"442775156d1500c5c2eaa316bac0880bb931719a","modified":1711791173030},{"_id":"public/tags/大数据-Java-Hadoop/index.html","hash":"ea6263a14f57ae3a9b9d07c733c636298a288b3c","modified":1711791173030},{"_id":"public/tags/科研/index.html","hash":"74b3fc1ee9467f591ade1364973d09e40f10ddec","modified":1711791173030},{"_id":"public/tags/学习/index.html","hash":"3b6a3db9f83f109ecb0de722c51b076c0d7c3cc7","modified":1711791173030},{"_id":"public/tags/因果推断/index.html","hash":"4f3cb9394bec67b0b1b9dfb10a96345ef55eef92","modified":1711791173030},{"_id":"public/tags/git/index.html","hash":"d9503186d5c6a3abb0da1a9959306a2761fd9bf7","modified":1711791173030},{"_id":"public/tags/github/index.html","hash":"3bc8f569fe053ff91eda3012ec5d2b8597353592","modified":1711791173030},{"_id":"public/tags/数据库/index.html","hash":"37558bf3d29c8a99787d63ca04e4e0b1d360d61a","modified":1711791173030},{"_id":"public/tags/吉他-编曲/index.html","hash":"4ec3ba792119045eaaca1405ccc81623ff46f7ef","modified":1711791173030},{"_id":"public/tags/电脑/index.html","hash":"51409a5480814fc62762a0ff0d03a6f94218f527","modified":1711791173030},{"_id":"public/tags/硬件/index.html","hash":"8659b04a9435472d71d54e2c3bf47101bdb7cd0d","modified":1711791173030},{"_id":"public/tags/美食-菜谱/index.html","hash":"4d56d2a5d19efe3f68795508e87ec9d3c158a66d","modified":1711791173030},{"_id":"public/tags/深度学习-人工智能/index.html","hash":"a83ec4fa9790582455bd0e2cee8366b2e1111837","modified":1711791173030},{"_id":"public/tags/学习笔记-贝叶斯推断/index.html","hash":"e81bd7c15b13608489bc36c39829288dc1b01fcf","modified":1711791173030},{"_id":"public/tags/学习笔记-因果推断/index.html","hash":"9b093ef6870ee43b685f102bcf752c83d36f60a6","modified":1711791173030},{"_id":"public/tags/学术会议/index.html","hash":"d5d6a24cc8ae94b4c2efa57b4dff6d243a5b2fb9","modified":1711791173030},{"_id":"public/tags/博弈论/index.html","hash":"5c4f06440f4b8e7b789979097f757edebbc18ae3","modified":1711791173030},{"_id":"public/tags/推荐系统/index.html","hash":"f7709fe9ee174adeebed9c3fa0b65ab9b05d5461","modified":1711791173030},{"_id":"public/tags/随笔-日常-骑行/index.html","hash":"ed378e4a21a919a83a069308c7707050a3f0fe42","modified":1711791173030},{"_id":"public/images/favicon32.ico","hash":"d4681eeb845ec617415f005cfc68c9437b16b182","modified":1711791173030},{"_id":"public/images/favicon.png","hash":"59b12317f2bc5c92c5803bcceb66c1b1441ea913","modified":1711791173030},{"_id":"public/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"260bb01acd44d88dcb7f501a238ab968f86bef9e","modified":1711791173030},{"_id":"public/images/favicon16.ico","hash":"12dfb60ef8915b0b1bd88f2764fd293733f55e1f","modified":1711791173030},{"_id":"public/images/2021112604.png","hash":"86b40fadbfd75b7afae3266f54e772a67ec6c6a2","modified":1711791173030},{"_id":"public/images/Linkedin.svg","hash":"c9fef67479d6a9e36dcd93e7bcf396b8dd41be7c","modified":1711791173030},{"_id":"public/images/email.svg","hash":"d347f708ecac0aad59241631a8e20999a098cf1b","modified":1711791173030},{"_id":"public/images/github.svg","hash":"328b059eb62ccdbf789100eb7fa93e0ad88baacd","modified":1711791173030},{"_id":"public/images/pytorch.png","hash":"c2e801b87de4351c4e0ee23aca1f1768b61e2ba4","modified":1711791173030},{"_id":"public/images/qrcode_cslijt.github.io.png","hash":"7242fae717ed02bd23fffcb6044c8a9dbb43aa1c","modified":1711791173030},{"_id":"public/images/屏幕截图_2022-03-26_175646.jpg","hash":"26e1a1351e575419cd154e827f9cf99569e2ff29","modified":1711791173030},{"_id":"public/images/知乎.svg","hash":"13af7dd0fecfa2111e1ad926934e3effdc8b693d","modified":1711791173030},{"_id":"public/2023/02/16/2023-02-16-adbs02/b+int.jpg","hash":"e7f86f54808fb96d96cdd1a3c2914bf3935ac377","modified":1711791173030},{"_id":"public/2023/02/17/2023-02-17-adbs03/index-alg.jpg","hash":"eeb955d6008ec20f0de5e5d07f628a0ad5895b45","modified":1711791173030},{"_id":"public/2023/02/16/2023-02-16-adbs02/b+leaf.jpg","hash":"a46afda52759f3745ddca2af781cd178094d5196","modified":1711791173030},{"_id":"public/2023/02/17/2023-02-17-adbs03/loop-alg.jpg","hash":"bac1e7837bb66f2ab985d3b3522b0a74f70ba35e","modified":1711791173030},{"_id":"public/2023/02/16/2023-02-16-adbs01/rec-fix.jpg","hash":"ffe841e9456675cb1abc6fefaab2a044b73ef0b3","modified":1711791173030},{"_id":"public/2023/02/17/2023-02-17-adbs03/merge-alg.jpg","hash":"4025b3dafcf48873d7b3a0669651660541be44ab","modified":1711791173030},{"_id":"public/2023/02/17/2023-02-17-adbs03/join-eg.jpg","hash":"5a324ee2eff19d0651e53f6d4ad97031f66b6253","modified":1711791173030},{"_id":"public/2023/03/20/2023-03-20-vae/v2-97e09bd511a1fb0c3240fa717ce235d2_1440w.png","hash":"5439901a55d56736c2ad4f1ca92074b2397f4ae6","modified":1711791173030},{"_id":"public/2023/03/20/2023-03-20-vae/vae-diagram-1-1536x845.jpg","hash":"51e7f30c39b2cdcf42a086ece7dddc07463504c0","modified":1711791173030},{"_id":"public/2023/03/18/2023-03-19-rs/1.jpg","hash":"e3f1df1b64915b8c9c06b3dd12a5d5a4d1ba10da","modified":1711791173030},{"_id":"public/2024/02/01/2024-02-01-idcd/10.png","hash":"fcd75c16f0358b1c2bdc47c4b7e2012f3fcb692a","modified":1711791173030},{"_id":"public/2024/02/01/2024-02-01-idcd/11.png","hash":"47c4f29fb9a2916c67558a8cdddaa9d45fc305b8","modified":1711791173030},{"_id":"public/2024/02/01/2024-02-01-idcd/4.png","hash":"542de6b2ffe3e59d7e959d15419207c336c9cdee","modified":1711791173030},{"_id":"public/2024/02/01/2024-02-01-idcd/6.png","hash":"c534f1577b01fa1c30a40b66284266af5bee0965","modified":1711791173030},{"_id":"public/2024/02/01/2024-02-01-idcd/7.png","hash":"01c823ad6a37c7fe174499dcb4bc9ff5537b657c","modified":1711791173030},{"_id":"public/2024/02/01/2024-02-01-idcd/5.png","hash":"3ead365a3e26f16a2c5b85791830f1b4262673eb","modified":1711791173030},{"_id":"public/2024/02/01/2024-02-01-idcd/8.png","hash":"d375fa783703c8017e62d0c666aee969c24b4949","modified":1711791173030},{"_id":"public/2024/02/01/2024-02-01-idcd/9.png","hash":"8b2d9ff26660733016de65da22f470292c99b565","modified":1711791173030},{"_id":"public/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"509988477da79c146cb93fb728405f18e923c2de","modified":1711791173030},{"_id":"public/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"75a88815c47a249eadb5f0edc1675957f860cca7","modified":1711791173030},{"_id":"public/images/2021112603.png","hash":"c1052463cdc4375b1472169b592bd64f698152d9","modified":1711791173030},{"_id":"public/images/2021112601.png","hash":"e097693047fe4101014ae79b1ae1efc76062b16d","modified":1711791173030},{"_id":"public/images/c995d143ad4bd113d3b5cb035eafa40f4bfb0582.jpg","hash":"cb074d590659e292ce0d605882a3b4b3a1f04dcd","modified":1711791173030},{"_id":"public/news/2022-05-20/1.jpg","hash":"071cfcce147760282dbebdbed68baeb27ce50304","modified":1711791173030},{"_id":"public/2022/04/17/2022-04-17-github/github20220401701.png","hash":"0c4ff2071acc36220cb757ce53a39fb341a8d9a7","modified":1711791173030},{"_id":"public/images/屏幕截图_2022-03-26_175317.jpg","hash":"c4a37962b06c44cf51afe57bc581c74496d5ba33","modified":1711791173030},{"_id":"public/2023/02/16/2023-02-16-adbs02/b+eg.jpg","hash":"86c4911af7adee1a718cf75f671c0b0ec5acff63","modified":1711791173030},{"_id":"public/2023/02/17/2023-02-17-adbs03/hash-alg.jpg","hash":"7fc5de219cd08b64e57006d12e23744d1414d9ee","modified":1711791173030},{"_id":"public/2023/02/17/2023-02-17-adbs03/index-probe.jpg","hash":"0b3f9be79d60298ff3114cf2a028fd0aa002f0b5","modified":1711791173030},{"_id":"public/2023/02/21/2023-02-21-guitar/Long-long-ago,-20th-century.pdf","hash":"ef4062d35959230949e2f08c8764ec62534cba59","modified":1711791173030},{"_id":"public/2023/07/09/2023-07-09-visa/issued.png","hash":"8e552b43a32833cff3cd3dcf1a31a23d3ba940a5","modified":1711791173030},{"_id":"public/2023/07/09/2023-07-09-visa/approve.jpg","hash":"5308595eca03ae37437d76dde0b0c202e8bbd884","modified":1711791173030},{"_id":"public/2023/06/10/2023-06-10-game/notations.jpg","hash":"79ee619821aef5063acac472b65ef162c5ed6865","modified":1711791173030},{"_id":"public/2024/02/01/2024-02-01-idcd/13.png","hash":"717e553452891eae81dac2979b0b34c66bdf73c4","modified":1711791173030},{"_id":"public/2024/02/01/2024-02-01-idcd/14.png","hash":"5d9b8db010d8b6719403d42853a6e79d43e3e612","modified":1711791173030},{"_id":"public/2024/02/01/2024-02-01-idcd/2.png","hash":"f2483563240284aeec2fa2b98045785655425131","modified":1711791173030},{"_id":"public/js/bookmark.js","hash":"9734ebcb9b83489686f5c2da67dc9e6157e988ad","modified":1711791173030},{"_id":"public/js/algolia-search.js","hash":"498d233eb5c7af6940baf94c1a1c36fdf1dd2636","modified":1711791173030},{"_id":"public/js/local-search.js","hash":"35ccf100d8f9c0fd6bfbb7fa88c2a76c42a69110","modified":1711791173030},{"_id":"public/js/motion.js","hash":"72df86f6dfa29cce22abeff9d814c9dddfcf13a9","modified":1711791173030},{"_id":"public/js/next-boot.js","hash":"a1b0636423009d4a4e4cea97bcbf1842bfab582c","modified":1711791173030},{"_id":"public/js/utils.js","hash":"730cca7f164eaf258661a61ff3f769851ff1e5da","modified":1711791173030},{"_id":"public/js/schemes/muse.js","hash":"1eb9b88103ddcf8827b1a7cbc56471a9c5592d53","modified":1711791173030},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1711791173030},{"_id":"public/js/schemes/pisces.js","hash":"0ac5ce155bc58c972fe21c4c447f85e6f8755c62","modified":1711791173030},{"_id":"public/css/main.css","hash":"7d03310913736b23c2ad085b63d22fb9b9912a68","modified":1711791173030},{"_id":"public/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1711791173030},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1711791173030},{"_id":"public/lib/font-awesome/css/all.min.css","hash":"0038dc97c79451578b7bd48af60ba62282b4082b","modified":1711791173030},{"_id":"public/images/2021112602.png","hash":"638027646cd217ce436c31957c7158b7ea914638","modified":1711791173030},{"_id":"public/2023/02/16/2023-02-16-adbs02/multi-eg.jpg","hash":"b6761eccd498ea4e5c0256a898d26a87c881a35e","modified":1711791173030},{"_id":"public/2023/02/16/2023-02-16-adbs01/disk_struct.jpg","hash":"3dbcea2373eca6720d6af45f98a991e4511199e9","modified":1711791173030},{"_id":"public/2023/02/16/2023-02-16-adbs01/pcm.jpg","hash":"08710f7fefa079cbf43010b7675ac92b0453702b","modified":1711791173030},{"_id":"public/2023/02/25/2023-02-25-bios/cmd.jpg","hash":"8891ccd1f59c3b6bf418291767f690c7d9f8faf8","modified":1711791173030},{"_id":"public/images/2021121301.png","hash":"15d5d40d42c834bebeacc41495cd204ba3f3234f","modified":1711791173030},{"_id":"public/images/微信图片_20211001171428.jpg","hash":"45a8630d8a32f35c386de921d084d4cc5bf7774b","modified":1711791173030},{"_id":"public/2023/02/16/2023-02-16-adbs01/item-rep.jpg","hash":"f32a7e821634a1ac0c2b682e666765d68047e437","modified":1711791173030},{"_id":"public/2024/02/01/2024-02-01-idcd/12.png","hash":"fdddd63c02ccf2e634c8442a0285a87dbd8c83aa","modified":1711791173030},{"_id":"public/2024/02/01/2024-02-01-idcd/3.png","hash":"8fc6065db390b84d37a11e3b13c3389eef30988f","modified":1711791173030},{"_id":"public/2024/02/01/2024-02-01-idcd/0.png","hash":"0d134d154fe92d93ee029e0ebdd2a5c772585989","modified":1711791173030},{"_id":"public/2024/02/01/2024-02-01-idcd/1.png","hash":"f09b26489753e8f055abbc7e6c8ab1331d18e8e3","modified":1711791173030},{"_id":"public/2024/02/01/2024-02-01-idcd/15.png","hash":"b81bab166007fd0885e9a60c1239b33ff1a29288","modified":1711791173030},{"_id":"public/news/2023-02-18/2.jpg","hash":"6623de13f45c0f99765ce0a08d9bb2a6859a9fa0","modified":1711791173030},{"_id":"public/news/2023-02-18/1.jpg","hash":"1fe6d42cf29e71308b14057e809d63d2859bb49c","modified":1711791173030},{"_id":"public/2024/02/01/2024-02-01-idcd/16.png","hash":"6f52da55edecda01a2dd69458833d21a29d33d96","modified":1711791173030},{"_id":"public/2024/02/01/2024-02-01-idcd/17.png","hash":"e0c46ad5bcde8607d3e03044d0fbc476b6ffacd0","modified":1711791173030},{"_id":"public/images/IMG_20210925_203119.jpg","hash":"2e9abe7309e6e97c2123978bfab497e46e858902","modified":1711791173030},{"_id":"public/images/avatar.jpg","hash":"15683b2f7f56946cc4639cbd21441ec3e87add35","modified":1711791173030},{"_id":"public/images/IMG_20210925_120635_edit_759134094171144.jpg","hash":"7224ffbd056b66d4a804fcacd514b850b314efa0","modified":1711791173030},{"_id":"public/images/IMG_20210925_210855.jpg","hash":"fa759ff825b95129080a0c904880240177afb55f","modified":1711791173030},{"_id":"public/images/IMG_20210809_091606_edit_932701128736847.jpg","hash":"598dbcf1c15c494679c130432aa0f814c9d5e7b7","modified":1711791173030},{"_id":"public/images/IMG_20210925_210835.jpg","hash":"b31a89e566d3addbb9d74dac9893894984c9fa17","modified":1711791173030},{"_id":"public/images/IMG_20210925_120441.jpg","hash":"a267aeacf92ab8d504ad7b3b315c380e8056456d","modified":1711791173030},{"_id":"public/images/微信图片_20211001161414.jpg","hash":"1878e9bac84ead0d7444adeb7b4c3f36b63e4c1a","modified":1711791173030},{"_id":"public/images/IMG_20210323_120734.jpg","hash":"ba5f11fde2b69fa608712e6b9939df96174cecc1","modified":1711791173030},{"_id":"public/images/IMG_20210321_171950.jpg","hash":"af85f769e58663ec27832b75c01724c16a963172","modified":1711791173030},{"_id":"public/images/IMG_20210405_134224.jpg","hash":"3eeaa0239bfff2a50721fa503ac1c607bf0a4471","modified":1711791173030},{"_id":"public/images/IMG_20210325_104740.jpg","hash":"55ab15bbe191dce47fa98b7064740b4d86aa8d7a","modified":1711791173030},{"_id":"public/2023/02/25/2023-02-25-bios/bios2.jpg","hash":"404d6efd2b2254cf430dd5de5a4df0a4116c644d","modified":1711791173030},{"_id":"public/2023/02/25/2023-02-25-bios/bios1.jpg","hash":"a8175e8e87d0a696c7979355baf2de3ec0aaad05","modified":1711791173030},{"_id":"public/images/IMG_20210405_134319.jpg","hash":"9b3c658843fa18464120a82be9431e0c881b8e06","modified":1711791173030},{"_id":"public/images/background.jpg","hash":"9b3c658843fa18464120a82be9431e0c881b8e06","modified":1711791173030}],"Category":[{"name":"学习笔记","_id":"cludw9n9r00149wv9eam79iit"},{"name":"技术文档","_id":"cludw9n9t00199wv98q3bc5xi"},{"name":"音乐","_id":"cludw9na1002h9wv9h8bc97jf"},{"name":"菜谱","_id":"cludw9na2002p9wv9ahdl5dty"},{"name":"深度学习","_id":"cludw9na4002v9wv99268dc8x"},{"name":"学术会议","_id":"cludw9na600349wv91bt2577x"},{"name":"随笔","_id":"cludw9naj005d9wv9cegx8mmf"}],"Data":[],"Page":[{"title":"LiJT的灵质空间","_content":"","source":"index.md","raw":"---\ntitle: LiJT的灵质空间\n---","date":"2022-04-07T02:03:13.854Z","updated":"2022-04-07T02:03:13.854Z","path":"index.html","comments":1,"layout":"page","_id":"cludw9n9500009wv9ccakbg7v","content":"","site":{"data":{}},"length":0,"excerpt":"","more":""},{"title":"分类","date":"2022-04-06T09:15:20.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2022-04-06 17:15:20\ntype: \"categories\"\n---\n","updated":"2022-05-27T12:59:07.627Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cludw9n9a00029wv92wb6bops","content":"","site":{"data":{}},"length":0,"excerpt":"","more":""},{"title":"关于我","mathjax":true,"date":"2022-04-06T09:14:43.000Z","type":"about","_content":"\n* 一名来自[中国科学技术大学](https://ustc.edu.cn)的学生\n* 喜欢吃饭，做饭，散步，喝咖啡，健身，手工，折纸，乐高...\n* 最近比较想学锻刀和腌制火腿\n* <i class=\"far fa-envelope\"></i> <satosasara@mail.ustc.edu.cn>\n\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'f73c0bc3c19755d1c0d886c0d8791cad24509c9a',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: 'aaa',\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>\n","source":"about/index.md","raw":"---\ntitle: 关于我\nmathjax: true\ndate: 2022-04-06 17:14:43\ntype: \"about\"\n---\n\n* 一名来自[中国科学技术大学](https://ustc.edu.cn)的学生\n* 喜欢吃饭，做饭，散步，喝咖啡，健身，手工，折纸，乐高...\n* 最近比较想学锻刀和腌制火腿\n* <i class=\"far fa-envelope\"></i> <satosasara@mail.ustc.edu.cn>\n\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'f73c0bc3c19755d1c0d886c0d8791cad24509c9a',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: 'aaa',\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>\n","updated":"2023-02-17T16:36:47.139Z","path":"about/index.html","comments":1,"layout":"page","_id":"cludw9n9d00059wv900089t6o","content":"<ul>\n<li>一名来自<a href=\"https://ustc.edu.cn\">中国科学技术大学</a>的学生</li>\n<li>喜欢吃饭，做饭，散步，喝咖啡，健身，手工，折纸，乐高…</li>\n<li>最近比较想学锻刀和腌制火腿</li>\n<li><i class=\"far fa-envelope\"></i> <a href=\"&#109;&#x61;&#105;&#x6c;&#x74;&#111;&#x3a;&#115;&#x61;&#116;&#x6f;&#115;&#x61;&#x73;&#x61;&#114;&#97;&#x40;&#x6d;&#x61;&#105;&#x6c;&#x2e;&#x75;&#x73;&#x74;&#x63;&#46;&#101;&#100;&#x75;&#46;&#99;&#x6e;\">satosasara@mail.ustc.edu.cn</a></li>\n</ul>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'f73c0bc3c19755d1c0d886c0d8791cad24509c9a',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: 'aaa',\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>\n","site":{"data":{}},"length":518,"excerpt":"","more":"<ul>\n<li>一名来自<a href=\"https://ustc.edu.cn\">中国科学技术大学</a>的学生</li>\n<li>喜欢吃饭，做饭，散步，喝咖啡，健身，手工，折纸，乐高…</li>\n<li>最近比较想学锻刀和腌制火腿</li>\n<li><i class=\"far fa-envelope\"></i> <a href=\"&#109;&#x61;&#105;&#x6c;&#x74;&#111;&#x3a;&#115;&#x61;&#116;&#x6f;&#115;&#x61;&#x73;&#x61;&#114;&#97;&#x40;&#x6d;&#x61;&#105;&#x6c;&#x2e;&#x75;&#x73;&#x74;&#x63;&#46;&#101;&#100;&#x75;&#46;&#99;&#x6e;\">satosasara@mail.ustc.edu.cn</a></li>\n</ul>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'f73c0bc3c19755d1c0d886c0d8791cad24509c9a',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: 'aaa',\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>\n"},{"title":"友链","date":"2022-09-20T13:41:36.000Z","type":"links","comments":0,"_content":"\n- [Dirkie Dye's Blog](https://dirkiedai.github.io/)\n- [Kartz's Blog](https://waltersumbon.github.io/)\n","source":"links/index.md","raw":"---\ntitle: 友链\ndate: 2022-09-20 21:41:36\ntype: \"links\"\ncomments: false\n---\n\n- [Dirkie Dye's Blog](https://dirkiedai.github.io/)\n- [Kartz's Blog](https://waltersumbon.github.io/)\n","updated":"2023-02-17T07:38:46.847Z","path":"links/index.html","layout":"page","_id":"cludw9n9e00079wv9ctrp7bvb","content":"<ul>\n<li><a href=\"https://dirkiedai.github.io/\">Dirkie Dye’s Blog</a></li>\n<li><a href=\"https://waltersumbon.github.io/\">Kartz’s Blog</a></li>\n</ul>\n","site":{"data":{}},"length":26,"excerpt":"","more":"<ul>\n<li><a href=\"https://dirkiedai.github.io/\">Dirkie Dye’s Blog</a></li>\n<li><a href=\"https://waltersumbon.github.io/\">Kartz’s Blog</a></li>\n</ul>\n"},{"title":"","date":"2023-02-17T16:35:51.000Z","mathjax":true,"type":"news","comments":0,"_content":"\n$\\bigstar$ **2023.2.18.** 前几天第一次去听了livehouse，体验很不错。希望每个月都能听一次\n![](2023-02-18/1.jpg)\n![](2023-02-18/2.jpg)\n\n$\\bigstar$ **2022.5.20.** 以我为第一作者的论文\"HierCDF: A Bayesian Network-based Hierarchical Cognitive Diagnosis Framework (HierCDF)\" 被数据挖掘领域顶会SIGKDD2022录用！[详见这里](https://dl.acm.org/doi/10.1145/3534678.3539486)\n\n![](2022-05-20/1.jpg)","source":"news/index.md","raw":"---\ntitle: \ndate: 2023-02-18 00:35:51\nmathjax: true\ntype: \"news\"\ncomments: false\n---\n\n$\\bigstar$ **2023.2.18.** 前几天第一次去听了livehouse，体验很不错。希望每个月都能听一次\n![](2023-02-18/1.jpg)\n![](2023-02-18/2.jpg)\n\n$\\bigstar$ **2022.5.20.** 以我为第一作者的论文\"HierCDF: A Bayesian Network-based Hierarchical Cognitive Diagnosis Framework (HierCDF)\" 被数据挖掘领域顶会SIGKDD2022录用！[详见这里](https://dl.acm.org/doi/10.1145/3534678.3539486)\n\n![](2022-05-20/1.jpg)","updated":"2023-02-17T16:51:42.623Z","path":"news/index.html","layout":"page","_id":"cludw9n9f00099wv96ftzfsua","content":"<p><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.251ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.136ex\" height=\"1.821ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -694 944 805\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"2605\" d=\"M367 395Q374 416 398 492T442 627T463 688Q463 692 467 692Q471 694 472 694Q478 694 484 680T523 562Q553 469 576 400L577 395H731H819Q872 395 883 394T895 384Q895 380 891 376T832 333Q794 305 767 285Q643 195 643 194L690 47Q737 -96 737 -103Q737 -111 727 -111Q721 -111 594 -18L472 71L350 -18Q223 -111 217 -111Q207 -111 207 -103Q207 -96 254 47L301 194Q301 195 241 239T118 328T51 378Q49 382 49 384Q49 392 58 393T110 395H213H367Z\"></path></g></g></g></svg></mjx-container> <strong>2023.2.18.</strong> 前几天第一次去听了livehouse，体验很不错。希望每个月都能听一次<br><img src=\"2023-02-18/1.jpg\" alt=\"\"><br><img src=\"2023-02-18/2.jpg\" alt=\"\"></p>\n<p><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.251ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.136ex\" height=\"1.821ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -694 944 805\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"2605\" d=\"M367 395Q374 416 398 492T442 627T463 688Q463 692 467 692Q471 694 472 694Q478 694 484 680T523 562Q553 469 576 400L577 395H731H819Q872 395 883 394T895 384Q895 380 891 376T832 333Q794 305 767 285Q643 195 643 194L690 47Q737 -96 737 -103Q737 -111 727 -111Q721 -111 594 -18L472 71L350 -18Q223 -111 217 -111Q207 -111 207 -103Q207 -96 254 47L301 194Q301 195 241 239T118 328T51 378Q49 382 49 384Q49 392 58 393T110 395H213H367Z\"></path></g></g></g></svg></mjx-container> <strong>2022.5.20.</strong> 以我为第一作者的论文”HierCDF: A Bayesian Network-based Hierarchical Cognitive Diagnosis Framework (HierCDF)” 被数据挖掘领域顶会SIGKDD2022录用！<a href=\"https://dl.acm.org/doi/10.1145/3534678.3539486\">详见这里</a></p>\n<p><img src=\"2022-05-20/1.jpg\" alt=\"\"></p>\n","site":{"data":{}},"length":191,"excerpt":"","more":"<p><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.251ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.136ex\" height=\"1.821ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -694 944 805\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"2605\" d=\"M367 395Q374 416 398 492T442 627T463 688Q463 692 467 692Q471 694 472 694Q478 694 484 680T523 562Q553 469 576 400L577 395H731H819Q872 395 883 394T895 384Q895 380 891 376T832 333Q794 305 767 285Q643 195 643 194L690 47Q737 -96 737 -103Q737 -111 727 -111Q721 -111 594 -18L472 71L350 -18Q223 -111 217 -111Q207 -111 207 -103Q207 -96 254 47L301 194Q301 195 241 239T118 328T51 378Q49 382 49 384Q49 392 58 393T110 395H213H367Z\"></path></g></g></g></svg></mjx-container> <strong>2023.2.18.</strong> 前几天第一次去听了livehouse，体验很不错。希望每个月都能听一次<br><img src=\"2023-02-18/1.jpg\" alt=\"\"><br><img src=\"2023-02-18/2.jpg\" alt=\"\"></p>\n<p><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.251ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.136ex\" height=\"1.821ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -694 944 805\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"2605\" d=\"M367 395Q374 416 398 492T442 627T463 688Q463 692 467 692Q471 694 472 694Q478 694 484 680T523 562Q553 469 576 400L577 395H731H819Q872 395 883 394T895 384Q895 380 891 376T832 333Q794 305 767 285Q643 195 643 194L690 47Q737 -96 737 -103Q737 -111 727 -111Q721 -111 594 -18L472 71L350 -18Q223 -111 217 -111Q207 -111 207 -103Q207 -96 254 47L301 194Q301 195 241 239T118 328T51 378Q49 382 49 384Q49 392 58 393T110 395H213H367Z\"></path></g></g></g></svg></mjx-container> <strong>2022.5.20.</strong> 以我为第一作者的论文”HierCDF: A Bayesian Network-based Hierarchical Cognitive Diagnosis Framework (HierCDF)” 被数据挖掘领域顶会SIGKDD2022录用！<a href=\"https://dl.acm.org/doi/10.1145/3534678.3539486\">详见这里</a></p>\n<p><img src=\"2022-05-20/1.jpg\" alt=\"\"></p>\n"},{"title":"标签","date":"2022-04-06T09:15:01.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2022-04-06 17:15:01\ntype: \"tags\"\n---\n","updated":"2022-05-27T12:59:15.871Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cludw9n9g000c9wv97thh3gkt","content":"","site":{"data":{}},"length":0,"excerpt":"","more":""}],"Post":[{"title":"PyTorch踩坑记录（持续更新）","author":"LiJT","date":"2021-09-26T16:00:00.000Z","key":"pytorch20210927","_content":"\n本篇记录使用pytorch过程中踩到的各种坑！\n<!--more-->\n\n## 声明损失函数时忘记加括号\n```python\nloss_fn = nn.BCELoss # 应该是 nn.BCELoss()\n\n>> RuntimeError: bool value of Tensor with more than one value is ambiguous\n```\n\n## 通过索引赋值后，梯度还能正常反向传播吗？\n- 答案：__能__.\n\n### 验证代码\n\n```python\nimport torch \n\ndef main():\n    # x 是输入张量，可求梯度\n    x = torch.rand(4)\n    x.requires_grad_(True)\n    # cache 是中间张量，将x赋给cache\n    cache = torch.zeros(3,4)\n    optim = torch.optim.Adam([x],lr=1e-2)\n    for i in range(10):\n        # 按索引赋值\n        cache[1,:] = x \n        result = cache * 2\n        result = result.view(-1)\n        # 求损失函数\n        sum = torch.sum(result, dim = 0)\n        print(x.data)\n        optim.zero_grad()\n        sum.backward(retain_graph = True)\n        optim.step()\n    \n    return \n\nif __name__ == '__main__':\n    main()\n```\n\n### 验证输出\n```\ntensor([0.3073, 0.0680, 0.3627, 0.0659])\ntensor([0.2973, 0.0580, 0.3527, 0.0559])\ntensor([0.2873, 0.0480, 0.3427, 0.0459])\ntensor([0.2773, 0.0380, 0.3327, 0.0359])\ntensor([0.2673, 0.0280, 0.3227, 0.0259])\ntensor([0.2573, 0.0180, 0.3127, 0.0159])\ntensor([0.2473, 0.0080, 0.3027, 0.0059])\ntensor([ 0.2373, -0.0020,  0.2927, -0.0041])\ntensor([ 0.2273, -0.0120,  0.2827, -0.0141])\ntensor([ 0.2173, -0.0220,  0.2727, -0.0241])\n```\n经过 x -> cache -> sum 的计算并反向传播后，可见x的值如上所示有所变化，因此索引将前向传播中间结果赋给Tensor，再在Tensor上做后续运算，能够实现到达输入张量的反向传播！\n\n\n","source":"_posts/2021-09-27-pytorch.md","raw":"---\ntitle: PyTorch踩坑记录（持续更新）\nauthor: LiJT\ndate: 2021-09-27\ntags: \n  - pytorch \n  - 深度学习 \n  - coding \n  - 持续更新\nkey: pytorch20210927\n---\n\n本篇记录使用pytorch过程中踩到的各种坑！\n<!--more-->\n\n## 声明损失函数时忘记加括号\n```python\nloss_fn = nn.BCELoss # 应该是 nn.BCELoss()\n\n>> RuntimeError: bool value of Tensor with more than one value is ambiguous\n```\n\n## 通过索引赋值后，梯度还能正常反向传播吗？\n- 答案：__能__.\n\n### 验证代码\n\n```python\nimport torch \n\ndef main():\n    # x 是输入张量，可求梯度\n    x = torch.rand(4)\n    x.requires_grad_(True)\n    # cache 是中间张量，将x赋给cache\n    cache = torch.zeros(3,4)\n    optim = torch.optim.Adam([x],lr=1e-2)\n    for i in range(10):\n        # 按索引赋值\n        cache[1,:] = x \n        result = cache * 2\n        result = result.view(-1)\n        # 求损失函数\n        sum = torch.sum(result, dim = 0)\n        print(x.data)\n        optim.zero_grad()\n        sum.backward(retain_graph = True)\n        optim.step()\n    \n    return \n\nif __name__ == '__main__':\n    main()\n```\n\n### 验证输出\n```\ntensor([0.3073, 0.0680, 0.3627, 0.0659])\ntensor([0.2973, 0.0580, 0.3527, 0.0559])\ntensor([0.2873, 0.0480, 0.3427, 0.0459])\ntensor([0.2773, 0.0380, 0.3327, 0.0359])\ntensor([0.2673, 0.0280, 0.3227, 0.0259])\ntensor([0.2573, 0.0180, 0.3127, 0.0159])\ntensor([0.2473, 0.0080, 0.3027, 0.0059])\ntensor([ 0.2373, -0.0020,  0.2927, -0.0041])\ntensor([ 0.2273, -0.0120,  0.2827, -0.0141])\ntensor([ 0.2173, -0.0220,  0.2727, -0.0241])\n```\n经过 x -> cache -> sum 的计算并反向传播后，可见x的值如上所示有所变化，因此索引将前向传播中间结果赋给Tensor，再在Tensor上做后续运算，能够实现到达输入张量的反向传播！\n\n\n","slug":"2021-09-27-pytorch","published":1,"updated":"2022-04-06T09:41:31.960Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cludw9n9800019wv90bcgcf64","content":"<p>本篇记录使用pytorch过程中踩到的各种坑！<br><span id=\"more\"></span></p>\n<h2 id=\"声明损失函数时忘记加括号\"><a href=\"#声明损失函数时忘记加括号\" class=\"headerlink\" title=\"声明损失函数时忘记加括号\"></a>声明损失函数时忘记加括号</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">loss_fn = nn.BCELoss <span class=\"comment\"># 应该是 nn.BCELoss()</span></span><br><span class=\"line\"></span><br><span class=\"line\">&gt;&gt; RuntimeError: <span class=\"built_in\">bool</span> value of Tensor <span class=\"keyword\">with</span> more than one value <span class=\"keyword\">is</span> ambiguous</span><br></pre></td></tr></table></figure>\n<h2 id=\"通过索引赋值后，梯度还能正常反向传播吗？\"><a href=\"#通过索引赋值后，梯度还能正常反向传播吗？\" class=\"headerlink\" title=\"通过索引赋值后，梯度还能正常反向传播吗？\"></a>通过索引赋值后，梯度还能正常反向传播吗？</h2><ul>\n<li>答案：<strong>能</strong>.</li>\n</ul>\n<h3 id=\"验证代码\"><a href=\"#验证代码\" class=\"headerlink\" title=\"验证代码\"></a>验证代码</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> torch </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">main</span>():</span><br><span class=\"line\">    <span class=\"comment\"># x 是输入张量，可求梯度</span></span><br><span class=\"line\">    x = torch.rand(<span class=\"number\">4</span>)</span><br><span class=\"line\">    x.requires_grad_(<span class=\"literal\">True</span>)</span><br><span class=\"line\">    <span class=\"comment\"># cache 是中间张量，将x赋给cache</span></span><br><span class=\"line\">    cache = torch.zeros(<span class=\"number\">3</span>,<span class=\"number\">4</span>)</span><br><span class=\"line\">    optim = torch.optim.Adam([x],lr=<span class=\"number\">1e-2</span>)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">10</span>):</span><br><span class=\"line\">        <span class=\"comment\"># 按索引赋值</span></span><br><span class=\"line\">        cache[<span class=\"number\">1</span>,:] = x </span><br><span class=\"line\">        result = cache * <span class=\"number\">2</span></span><br><span class=\"line\">        result = result.view(-<span class=\"number\">1</span>)</span><br><span class=\"line\">        <span class=\"comment\"># 求损失函数</span></span><br><span class=\"line\">        <span class=\"built_in\">sum</span> = torch.<span class=\"built_in\">sum</span>(result, dim = <span class=\"number\">0</span>)</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(x.data)</span><br><span class=\"line\">        optim.zero_grad()</span><br><span class=\"line\">        <span class=\"built_in\">sum</span>.backward(retain_graph = <span class=\"literal\">True</span>)</span><br><span class=\"line\">        optim.step()</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    main()</span><br></pre></td></tr></table></figure>\n<h3 id=\"验证输出\"><a href=\"#验证输出\" class=\"headerlink\" title=\"验证输出\"></a>验证输出</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tensor([0.3073, 0.0680, 0.3627, 0.0659])</span><br><span class=\"line\">tensor([0.2973, 0.0580, 0.3527, 0.0559])</span><br><span class=\"line\">tensor([0.2873, 0.0480, 0.3427, 0.0459])</span><br><span class=\"line\">tensor([0.2773, 0.0380, 0.3327, 0.0359])</span><br><span class=\"line\">tensor([0.2673, 0.0280, 0.3227, 0.0259])</span><br><span class=\"line\">tensor([0.2573, 0.0180, 0.3127, 0.0159])</span><br><span class=\"line\">tensor([0.2473, 0.0080, 0.3027, 0.0059])</span><br><span class=\"line\">tensor([ 0.2373, -0.0020,  0.2927, -0.0041])</span><br><span class=\"line\">tensor([ 0.2273, -0.0120,  0.2827, -0.0141])</span><br><span class=\"line\">tensor([ 0.2173, -0.0220,  0.2727, -0.0241])</span><br></pre></td></tr></table></figure>\n<p>经过 x -&gt; cache -&gt; sum 的计算并反向传播后，可见x的值如上所示有所变化，因此索引将前向传播中间结果赋给Tensor，再在Tensor上做后续运算，能够实现到达输入张量的反向传播！</p>\n","site":{"data":{}},"length":1069,"excerpt":"<p>本篇记录使用pytorch过程中踩到的各种坑！<br>","more":"</p>\n<h2 id=\"声明损失函数时忘记加括号\"><a href=\"#声明损失函数时忘记加括号\" class=\"headerlink\" title=\"声明损失函数时忘记加括号\"></a>声明损失函数时忘记加括号</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">loss_fn = nn.BCELoss <span class=\"comment\"># 应该是 nn.BCELoss()</span></span><br><span class=\"line\"></span><br><span class=\"line\">&gt;&gt; RuntimeError: <span class=\"built_in\">bool</span> value of Tensor <span class=\"keyword\">with</span> more than one value <span class=\"keyword\">is</span> ambiguous</span><br></pre></td></tr></table></figure>\n<h2 id=\"通过索引赋值后，梯度还能正常反向传播吗？\"><a href=\"#通过索引赋值后，梯度还能正常反向传播吗？\" class=\"headerlink\" title=\"通过索引赋值后，梯度还能正常反向传播吗？\"></a>通过索引赋值后，梯度还能正常反向传播吗？</h2><ul>\n<li>答案：<strong>能</strong>.</li>\n</ul>\n<h3 id=\"验证代码\"><a href=\"#验证代码\" class=\"headerlink\" title=\"验证代码\"></a>验证代码</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> torch </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">main</span>():</span><br><span class=\"line\">    <span class=\"comment\"># x 是输入张量，可求梯度</span></span><br><span class=\"line\">    x = torch.rand(<span class=\"number\">4</span>)</span><br><span class=\"line\">    x.requires_grad_(<span class=\"literal\">True</span>)</span><br><span class=\"line\">    <span class=\"comment\"># cache 是中间张量，将x赋给cache</span></span><br><span class=\"line\">    cache = torch.zeros(<span class=\"number\">3</span>,<span class=\"number\">4</span>)</span><br><span class=\"line\">    optim = torch.optim.Adam([x],lr=<span class=\"number\">1e-2</span>)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">10</span>):</span><br><span class=\"line\">        <span class=\"comment\"># 按索引赋值</span></span><br><span class=\"line\">        cache[<span class=\"number\">1</span>,:] = x </span><br><span class=\"line\">        result = cache * <span class=\"number\">2</span></span><br><span class=\"line\">        result = result.view(-<span class=\"number\">1</span>)</span><br><span class=\"line\">        <span class=\"comment\"># 求损失函数</span></span><br><span class=\"line\">        <span class=\"built_in\">sum</span> = torch.<span class=\"built_in\">sum</span>(result, dim = <span class=\"number\">0</span>)</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(x.data)</span><br><span class=\"line\">        optim.zero_grad()</span><br><span class=\"line\">        <span class=\"built_in\">sum</span>.backward(retain_graph = <span class=\"literal\">True</span>)</span><br><span class=\"line\">        optim.step()</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    main()</span><br></pre></td></tr></table></figure>\n<h3 id=\"验证输出\"><a href=\"#验证输出\" class=\"headerlink\" title=\"验证输出\"></a>验证输出</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tensor([0.3073, 0.0680, 0.3627, 0.0659])</span><br><span class=\"line\">tensor([0.2973, 0.0580, 0.3527, 0.0559])</span><br><span class=\"line\">tensor([0.2873, 0.0480, 0.3427, 0.0459])</span><br><span class=\"line\">tensor([0.2773, 0.0380, 0.3327, 0.0359])</span><br><span class=\"line\">tensor([0.2673, 0.0280, 0.3227, 0.0259])</span><br><span class=\"line\">tensor([0.2573, 0.0180, 0.3127, 0.0159])</span><br><span class=\"line\">tensor([0.2473, 0.0080, 0.3027, 0.0059])</span><br><span class=\"line\">tensor([ 0.2373, -0.0020,  0.2927, -0.0041])</span><br><span class=\"line\">tensor([ 0.2273, -0.0120,  0.2827, -0.0141])</span><br><span class=\"line\">tensor([ 0.2173, -0.0220,  0.2727, -0.0241])</span><br></pre></td></tr></table></figure>\n<p>经过 x -&gt; cache -&gt; sum 的计算并反向传播后，可见x的值如上所示有所变化，因此索引将前向传播中间结果赋给Tensor，再在Tensor上做后续运算，能够实现到达输入张量的反向传播！</p>"},{"title":"美食的记录","author":"LiJT","date":"2021-09-28T16:00:00.000Z","key":"food20210929","_content":"\n## 煲王\n- 猪脚煲的味道很棒，想起了以前吃过的发财猪手。骨髓浓香四溢，但考虑到健康，未敢多吃。\n- 咖喱牛腩的味道很正，有澳门风味。猪肚鸡的汤底调味很好，可惜猪肚太少，仅三两片，怎能够吃？\n- 煲仔饭和卤水拼盘味道不错。卤水拼盘改良过，热吃，色浓，摆盘也更加粗犷。更喜欢吃潮汕的蘸白醋的卤水狮头鹅！\n- 茄子煲调味很好，但火候不够，茄子不入味。叉烧包实属鸡肋！过量的面和少量的肉馅... 但是可以把面撕下来，包猪手吃，极美。\n\n<!--more-->\n\n\n## 卜一帆\n- 京葱鸡肉串极鲜美。咸鲜、多汁、皮微焦的鸡肉，焦黄、冲香的葱，实在是相得益彰。\n- 烤五花味道浓香，脆骨爽口，但肉略微有些干，或许是没有刷油。\n- 青花鱼，熟悉的味道。不加任何调料烤制，挤上几滴柠檬汁，鲜美而浓郁。配上一碗米饭和沙拉就是完美的午餐。\n- 寿喜锅，久闻大名却第一次吃。日料虽然只有甜酱油、味增、味淋、昆布高汤等几种调味料，但甜酱油和高汤真的很适合火锅。牛肉多汁入味嫩而不烂，吸满汤汁的白菜、金针菇、魔芋丝和豆腐是米饭的绝配。看着咕嘟嘟的小锅和冒出的白雾，如果这是在冬天，想必一定是非常幸福的时刻吧。\n\n","source":"_posts/2021-09-29-food.md","raw":"---\ntitle: 美食的记录\nauthor: LiJT\ndate: 2021-09-29\ntags: 美食\nkey: food20210929 \n---\n\n## 煲王\n- 猪脚煲的味道很棒，想起了以前吃过的发财猪手。骨髓浓香四溢，但考虑到健康，未敢多吃。\n- 咖喱牛腩的味道很正，有澳门风味。猪肚鸡的汤底调味很好，可惜猪肚太少，仅三两片，怎能够吃？\n- 煲仔饭和卤水拼盘味道不错。卤水拼盘改良过，热吃，色浓，摆盘也更加粗犷。更喜欢吃潮汕的蘸白醋的卤水狮头鹅！\n- 茄子煲调味很好，但火候不够，茄子不入味。叉烧包实属鸡肋！过量的面和少量的肉馅... 但是可以把面撕下来，包猪手吃，极美。\n\n<!--more-->\n\n\n## 卜一帆\n- 京葱鸡肉串极鲜美。咸鲜、多汁、皮微焦的鸡肉，焦黄、冲香的葱，实在是相得益彰。\n- 烤五花味道浓香，脆骨爽口，但肉略微有些干，或许是没有刷油。\n- 青花鱼，熟悉的味道。不加任何调料烤制，挤上几滴柠檬汁，鲜美而浓郁。配上一碗米饭和沙拉就是完美的午餐。\n- 寿喜锅，久闻大名却第一次吃。日料虽然只有甜酱油、味增、味淋、昆布高汤等几种调味料，但甜酱油和高汤真的很适合火锅。牛肉多汁入味嫩而不烂，吸满汤汁的白菜、金针菇、魔芋丝和豆腐是米饭的绝配。看着咕嘟嘟的小锅和冒出的白雾，如果这是在冬天，想必一定是非常幸福的时刻吧。\n\n","slug":"2021-09-29-food","published":1,"updated":"2022-04-06T09:43:42.817Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cludw9n9b00039wv93j8n7m4t","content":"<h2 id=\"煲王\"><a href=\"#煲王\" class=\"headerlink\" title=\"煲王\"></a>煲王</h2><ul>\n<li>猪脚煲的味道很棒，想起了以前吃过的发财猪手。骨髓浓香四溢，但考虑到健康，未敢多吃。</li>\n<li>咖喱牛腩的味道很正，有澳门风味。猪肚鸡的汤底调味很好，可惜猪肚太少，仅三两片，怎能够吃？</li>\n<li>煲仔饭和卤水拼盘味道不错。卤水拼盘改良过，热吃，色浓，摆盘也更加粗犷。更喜欢吃潮汕的蘸白醋的卤水狮头鹅！</li>\n<li>茄子煲调味很好，但火候不够，茄子不入味。叉烧包实属鸡肋！过量的面和少量的肉馅… 但是可以把面撕下来，包猪手吃，极美。</li>\n</ul>\n<span id=\"more\"></span>\n<h2 id=\"卜一帆\"><a href=\"#卜一帆\" class=\"headerlink\" title=\"卜一帆\"></a>卜一帆</h2><ul>\n<li>京葱鸡肉串极鲜美。咸鲜、多汁、皮微焦的鸡肉，焦黄、冲香的葱，实在是相得益彰。</li>\n<li>烤五花味道浓香，脆骨爽口，但肉略微有些干，或许是没有刷油。</li>\n<li>青花鱼，熟悉的味道。不加任何调料烤制，挤上几滴柠檬汁，鲜美而浓郁。配上一碗米饭和沙拉就是完美的午餐。</li>\n<li>寿喜锅，久闻大名却第一次吃。日料虽然只有甜酱油、味增、味淋、昆布高汤等几种调味料，但甜酱油和高汤真的很适合火锅。牛肉多汁入味嫩而不烂，吸满汤汁的白菜、金针菇、魔芋丝和豆腐是米饭的绝配。看着咕嘟嘟的小锅和冒出的白雾，如果这是在冬天，想必一定是非常幸福的时刻吧。</li>\n</ul>\n","site":{"data":{}},"length":445,"excerpt":"<h2 id=\"煲王\"><a href=\"#煲王\" class=\"headerlink\" title=\"煲王\"></a>煲王</h2><ul>\n<li>猪脚煲的味道很棒，想起了以前吃过的发财猪手。骨髓浓香四溢，但考虑到健康，未敢多吃。</li>\n<li>咖喱牛腩的味道很正，有澳门风味。猪肚鸡的汤底调味很好，可惜猪肚太少，仅三两片，怎能够吃？</li>\n<li>煲仔饭和卤水拼盘味道不错。卤水拼盘改良过，热吃，色浓，摆盘也更加粗犷。更喜欢吃潮汕的蘸白醋的卤水狮头鹅！</li>\n<li>茄子煲调味很好，但火候不够，茄子不入味。叉烧包实属鸡肋！过量的面和少量的肉馅… 但是可以把面撕下来，包猪手吃，极美。</li>\n</ul>","more":"<h2 id=\"卜一帆\"><a href=\"#卜一帆\" class=\"headerlink\" title=\"卜一帆\"></a>卜一帆</h2><ul>\n<li>京葱鸡肉串极鲜美。咸鲜、多汁、皮微焦的鸡肉，焦黄、冲香的葱，实在是相得益彰。</li>\n<li>烤五花味道浓香，脆骨爽口，但肉略微有些干，或许是没有刷油。</li>\n<li>青花鱼，熟悉的味道。不加任何调料烤制，挤上几滴柠檬汁，鲜美而浓郁。配上一碗米饭和沙拉就是完美的午餐。</li>\n<li>寿喜锅，久闻大名却第一次吃。日料虽然只有甜酱油、味增、味淋、昆布高汤等几种调味料，但甜酱油和高汤真的很适合火锅。牛肉多汁入味嫩而不烂，吸满汤汁的白菜、金针菇、魔芋丝和豆腐是米饭的绝配。看着咕嘟嘟的小锅和冒出的白雾，如果这是在冬天，想必一定是非常幸福的时刻吧。</li>\n</ul>"},{"title":"红烩羊肉","author":"LiJT","date":"2021-09-30T16:00:00.000Z","key":"stewlamb20211001","_content":"\n祝祖国母亲生日快乐！祝大家节日安康！\n\n今天在思考番茄酱和番茄沙司的用法，忽然灵光一闪——红烩羊肉，let's do this!\n<!--more-->\n\n## 原料\n- 羊肋排（手动去骨，切二指粗）一小盆\n- 番茄沙司\n- 番茄2枚\n- 红烧酱油/冰糖\n- 大葱、葱、姜、蒜、料酒\n- 盐、胡椒粉\n\n## 做法\n### 焯水\n- 羊肋排去骨切块洗净，冷水下锅，一并放入葱、姜、一勺料酒。大火煮开，转小火滚五分钟。期间打去血沫。捞起，温水洗净羊肉，去葱姜。\n\n### 煎制、熬酱\n- 番茄洗净切块备用，葱姜蒜洗净切片备用\n- 热锅凉油，下葱姜蒜小火慢炸直至蒜微黄，下羊排煎制，至表面金黄色，下番茄全部、番茄酱若干。继续小火翻炒，至番茄大量出水，加入开水，没过食材\n\n### 红烩\n- 加入少许红烧酱油调色，或炒糖色。转大火烧开五分钟给羊肉上色\n- 转小火慢炖10分钟\n- 调味，加入盐、胡椒粉。继续炖20分钟，让羊肉入味\n- 至临出锅前15分钟，下入洋葱或粉丝等辅料，继续小火\n- 大火收汁至汤汁挂线\n- 出锅，礼成\n\n## 体验\n- 羊味十足而不腥膻，大抵是由于羊油去的干净、焯水焯得彻底\n- 番茄的使用十分得当。慢炖40分钟后，番茄已完全化入汤中，汤汁变浓，无需勾芡\n- 可以加入洋葱，必能提味\n- 味酸甜又有咸香。注意番茄和番茄酱的用量\n- 盐可以分几次放，让羊肉充分入味\n- 好吃！\n","source":"_posts/2021-10-01-stewlamb.md","raw":"---\ntitle: 红烩羊肉\nauthor: LiJT\ndate: 2021-10-01\ntags: 美食\nkey: stewlamb20211001\n---\n\n祝祖国母亲生日快乐！祝大家节日安康！\n\n今天在思考番茄酱和番茄沙司的用法，忽然灵光一闪——红烩羊肉，let's do this!\n<!--more-->\n\n## 原料\n- 羊肋排（手动去骨，切二指粗）一小盆\n- 番茄沙司\n- 番茄2枚\n- 红烧酱油/冰糖\n- 大葱、葱、姜、蒜、料酒\n- 盐、胡椒粉\n\n## 做法\n### 焯水\n- 羊肋排去骨切块洗净，冷水下锅，一并放入葱、姜、一勺料酒。大火煮开，转小火滚五分钟。期间打去血沫。捞起，温水洗净羊肉，去葱姜。\n\n### 煎制、熬酱\n- 番茄洗净切块备用，葱姜蒜洗净切片备用\n- 热锅凉油，下葱姜蒜小火慢炸直至蒜微黄，下羊排煎制，至表面金黄色，下番茄全部、番茄酱若干。继续小火翻炒，至番茄大量出水，加入开水，没过食材\n\n### 红烩\n- 加入少许红烧酱油调色，或炒糖色。转大火烧开五分钟给羊肉上色\n- 转小火慢炖10分钟\n- 调味，加入盐、胡椒粉。继续炖20分钟，让羊肉入味\n- 至临出锅前15分钟，下入洋葱或粉丝等辅料，继续小火\n- 大火收汁至汤汁挂线\n- 出锅，礼成\n\n## 体验\n- 羊味十足而不腥膻，大抵是由于羊油去的干净、焯水焯得彻底\n- 番茄的使用十分得当。慢炖40分钟后，番茄已完全化入汤中，汤汁变浓，无需勾芡\n- 可以加入洋葱，必能提味\n- 味酸甜又有咸香。注意番茄和番茄酱的用量\n- 盐可以分几次放，让羊肉充分入味\n- 好吃！\n","slug":"2021-10-01-stewlamb","published":1,"updated":"2022-04-06T09:43:51.884Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cludw9n9d00069wv9ec9i48k5","content":"<p>祝祖国母亲生日快乐！祝大家节日安康！</p>\n<p>今天在思考番茄酱和番茄沙司的用法，忽然灵光一闪——红烩羊肉，let’s do this!<br><span id=\"more\"></span></p>\n<h2 id=\"原料\"><a href=\"#原料\" class=\"headerlink\" title=\"原料\"></a>原料</h2><ul>\n<li>羊肋排（手动去骨，切二指粗）一小盆</li>\n<li>番茄沙司</li>\n<li>番茄2枚</li>\n<li>红烧酱油/冰糖</li>\n<li>大葱、葱、姜、蒜、料酒</li>\n<li>盐、胡椒粉</li>\n</ul>\n<h2 id=\"做法\"><a href=\"#做法\" class=\"headerlink\" title=\"做法\"></a>做法</h2><h3 id=\"焯水\"><a href=\"#焯水\" class=\"headerlink\" title=\"焯水\"></a>焯水</h3><ul>\n<li>羊肋排去骨切块洗净，冷水下锅，一并放入葱、姜、一勺料酒。大火煮开，转小火滚五分钟。期间打去血沫。捞起，温水洗净羊肉，去葱姜。</li>\n</ul>\n<h3 id=\"煎制、熬酱\"><a href=\"#煎制、熬酱\" class=\"headerlink\" title=\"煎制、熬酱\"></a>煎制、熬酱</h3><ul>\n<li>番茄洗净切块备用，葱姜蒜洗净切片备用</li>\n<li>热锅凉油，下葱姜蒜小火慢炸直至蒜微黄，下羊排煎制，至表面金黄色，下番茄全部、番茄酱若干。继续小火翻炒，至番茄大量出水，加入开水，没过食材</li>\n</ul>\n<h3 id=\"红烩\"><a href=\"#红烩\" class=\"headerlink\" title=\"红烩\"></a>红烩</h3><ul>\n<li>加入少许红烧酱油调色，或炒糖色。转大火烧开五分钟给羊肉上色</li>\n<li>转小火慢炖10分钟</li>\n<li>调味，加入盐、胡椒粉。继续炖20分钟，让羊肉入味</li>\n<li>至临出锅前15分钟，下入洋葱或粉丝等辅料，继续小火</li>\n<li>大火收汁至汤汁挂线</li>\n<li>出锅，礼成</li>\n</ul>\n<h2 id=\"体验\"><a href=\"#体验\" class=\"headerlink\" title=\"体验\"></a>体验</h2><ul>\n<li>羊味十足而不腥膻，大抵是由于羊油去的干净、焯水焯得彻底</li>\n<li>番茄的使用十分得当。慢炖40分钟后，番茄已完全化入汤中，汤汁变浓，无需勾芡</li>\n<li>可以加入洋葱，必能提味</li>\n<li>味酸甜又有咸香。注意番茄和番茄酱的用量</li>\n<li>盐可以分几次放，让羊肉充分入味</li>\n<li>好吃！</li>\n</ul>\n","site":{"data":{}},"length":484,"excerpt":"<p>祝祖国母亲生日快乐！祝大家节日安康！</p>\n<p>今天在思考番茄酱和番茄沙司的用法，忽然灵光一闪——红烩羊肉，let’s do this!<br>","more":"</p>\n<h2 id=\"原料\"><a href=\"#原料\" class=\"headerlink\" title=\"原料\"></a>原料</h2><ul>\n<li>羊肋排（手动去骨，切二指粗）一小盆</li>\n<li>番茄沙司</li>\n<li>番茄2枚</li>\n<li>红烧酱油/冰糖</li>\n<li>大葱、葱、姜、蒜、料酒</li>\n<li>盐、胡椒粉</li>\n</ul>\n<h2 id=\"做法\"><a href=\"#做法\" class=\"headerlink\" title=\"做法\"></a>做法</h2><h3 id=\"焯水\"><a href=\"#焯水\" class=\"headerlink\" title=\"焯水\"></a>焯水</h3><ul>\n<li>羊肋排去骨切块洗净，冷水下锅，一并放入葱、姜、一勺料酒。大火煮开，转小火滚五分钟。期间打去血沫。捞起，温水洗净羊肉，去葱姜。</li>\n</ul>\n<h3 id=\"煎制、熬酱\"><a href=\"#煎制、熬酱\" class=\"headerlink\" title=\"煎制、熬酱\"></a>煎制、熬酱</h3><ul>\n<li>番茄洗净切块备用，葱姜蒜洗净切片备用</li>\n<li>热锅凉油，下葱姜蒜小火慢炸直至蒜微黄，下羊排煎制，至表面金黄色，下番茄全部、番茄酱若干。继续小火翻炒，至番茄大量出水，加入开水，没过食材</li>\n</ul>\n<h3 id=\"红烩\"><a href=\"#红烩\" class=\"headerlink\" title=\"红烩\"></a>红烩</h3><ul>\n<li>加入少许红烧酱油调色，或炒糖色。转大火烧开五分钟给羊肉上色</li>\n<li>转小火慢炖10分钟</li>\n<li>调味，加入盐、胡椒粉。继续炖20分钟，让羊肉入味</li>\n<li>至临出锅前15分钟，下入洋葱或粉丝等辅料，继续小火</li>\n<li>大火收汁至汤汁挂线</li>\n<li>出锅，礼成</li>\n</ul>\n<h2 id=\"体验\"><a href=\"#体验\" class=\"headerlink\" title=\"体验\"></a>体验</h2><ul>\n<li>羊味十足而不腥膻，大抵是由于羊油去的干净、焯水焯得彻底</li>\n<li>番茄的使用十分得当。慢炖40分钟后，番茄已完全化入汤中，汤汁变浓，无需勾芡</li>\n<li>可以加入洋葱，必能提味</li>\n<li>味酸甜又有咸香。注意番茄和番茄酱的用量</li>\n<li>盐可以分几次放，让羊肉充分入味</li>\n<li>好吃！</li>\n</ul>"},{"title":"【连载】鲸的语言？（一）","author":"orange","date":"2021-09-30T16:00:00.000Z","key":"whale0120211001","_content":"\n一块雷雨云逼近了波多黎各的库莱布拉岛（Culebra）南部，威胁着要把小保罗·纳普（Paul Knapp Jr.）和他那艘18英尺充气小艇“小罗盘”号（Little Compass）上的三名乘客淋个透心凉。他船舵上的贴纸上写着： “我会说鲸鱼的语言。”\n\n<!--more-->\n\n鲸的语言？\n\n保罗纳普开始吟唱起不知名的咏叹调，在即将掀起的狂风暴雨中，咏叹调连1米外的乘客都听不见。\n\n狂风将他刚写好的纸张带入海里，很快不见踪影。\n\n他拿起挂在脖子上的喇叭，屹立在充气小艇的前端，继续开始他的人类音频咏叹调。\n\n这是鲸的语言吗？\n\n乘客A用他深蓝色的眼眸死死的盯着保罗纳普，有关海洋生物交流频率的研究在他脑海中不停穿插。\n\n海水一层层一层的荡漾过来，随时可以将气垫船掀翻。\n\n","source":"_posts/2021-10-01-whale01.md","raw":"---\ntitle: 【连载】鲸的语言？（一）\nauthor: orange\ndate: 2021-10-01\ntags: 小说\nkey: whale0120211001\n---\n\n一块雷雨云逼近了波多黎各的库莱布拉岛（Culebra）南部，威胁着要把小保罗·纳普（Paul Knapp Jr.）和他那艘18英尺充气小艇“小罗盘”号（Little Compass）上的三名乘客淋个透心凉。他船舵上的贴纸上写着： “我会说鲸鱼的语言。”\n\n<!--more-->\n\n鲸的语言？\n\n保罗纳普开始吟唱起不知名的咏叹调，在即将掀起的狂风暴雨中，咏叹调连1米外的乘客都听不见。\n\n狂风将他刚写好的纸张带入海里，很快不见踪影。\n\n他拿起挂在脖子上的喇叭，屹立在充气小艇的前端，继续开始他的人类音频咏叹调。\n\n这是鲸的语言吗？\n\n乘客A用他深蓝色的眼眸死死的盯着保罗纳普，有关海洋生物交流频率的研究在他脑海中不停穿插。\n\n海水一层层一层的荡漾过来，随时可以将气垫船掀翻。\n\n","slug":"2021-10-01-whale01","published":1,"updated":"2022-04-06T09:44:01.519Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cludw9n9e00089wv93jx04lf4","content":"<p>一块雷雨云逼近了波多黎各的库莱布拉岛（Culebra）南部，威胁着要把小保罗·纳普（Paul Knapp Jr.）和他那艘18英尺充气小艇“小罗盘”号（Little Compass）上的三名乘客淋个透心凉。他船舵上的贴纸上写着： “我会说鲸鱼的语言。”</p>\n<span id=\"more\"></span>\n<p>鲸的语言？</p>\n<p>保罗纳普开始吟唱起不知名的咏叹调，在即将掀起的狂风暴雨中，咏叹调连1米外的乘客都听不见。</p>\n<p>狂风将他刚写好的纸张带入海里，很快不见踪影。</p>\n<p>他拿起挂在脖子上的喇叭，屹立在充气小艇的前端，继续开始他的人类音频咏叹调。</p>\n<p>这是鲸的语言吗？</p>\n<p>乘客A用他深蓝色的眼眸死死的盯着保罗纳普，有关海洋生物交流频率的研究在他脑海中不停穿插。</p>\n<p>海水一层层一层的荡漾过来，随时可以将气垫船掀翻。</p>\n","site":{"data":{}},"length":306,"excerpt":"<p>一块雷雨云逼近了波多黎各的库莱布拉岛（Culebra）南部，威胁着要把小保罗·纳普（Paul Knapp Jr.）和他那艘18英尺充气小艇“小罗盘”号（Little Compass）上的三名乘客淋个透心凉。他船舵上的贴纸上写着： “我会说鲸鱼的语言。”</p>","more":"<p>鲸的语言？</p>\n<p>保罗纳普开始吟唱起不知名的咏叹调，在即将掀起的狂风暴雨中，咏叹调连1米外的乘客都听不见。</p>\n<p>狂风将他刚写好的纸张带入海里，很快不见踪影。</p>\n<p>他拿起挂在脖子上的喇叭，屹立在充气小艇的前端，继续开始他的人类音频咏叹调。</p>\n<p>这是鲸的语言吗？</p>\n<p>乘客A用他深蓝色的眼眸死死的盯着保罗纳普，有关海洋生物交流频率的研究在他脑海中不停穿插。</p>\n<p>海水一层层一层的荡漾过来，随时可以将气垫船掀翻。</p>"},{"title":"PyTorch: CrossEntropyLoss vs. NLLLoss vs. BCELoss","author":"LiJT","date":"2021-10-06T16:00:00.000Z","key":"pytorch20211007","_content":"\nCrossEntropyLoss, NLLLoss 和 BCELoss 本质上都是基于交叉熵(cross entropy)的分类器的损失函数。但是三个函数的输入格式、计算方法和性能（收敛速度）有很大差别。本文记录笔者对此三者的学习笔记和理解。\n{:.info}\n\n<!--more-->\n\n## 交叉熵(Cross Entropy)\n\n交叉熵(Cross Entropy)是Shannon信息论中一个重要概念，主要用于度量两个概率分布间的差异性信息。或曰，概率分布 $p$ 和概率分布 $q$ 的相似程度。如果 $p$ 和 $q$ 越相似，那么越能用 $p$ 近似表示 $q$ 或用 $q$ 近似表示 $p$ 。定义交叉熵为：\n\n$$\nH(p,q) = \\sum_x p(x)\\log \\left(\\frac{1}{q(x)}\\right)\n$$\n\n注意交叉熵不满足对称性。\n\n## nn.CrossEntropyLoss\n\n```python\ntorch.nn.CrossEntropyLoss(weight=None, size_average=None, ignore_index=-100, reduce=None, reduction='mean')\n```\n\n### 计算方法\n\n根据[pytorch官方文档](https://pytorch.org/docs/stable/generated/torch.nn.CrossEntropyLoss.html)，CrossEntropyLoss的输入值为\"unnormalized scores for each class\"，即未限制在(0,1)上的各个类别的得分。其表达式为\n\n$$\nloss(x,class) = -\\log\\left(\\frac{\\exp(x[class])}{\\sum_j \\exp(x[j])} \\right)\n$$\n\n其中 $x$ 为一个样本，$class$ 为一个类别, $x[j]\\in(-\\infty,\\infty)$ 为分类器给样本 $x$ 在类别 $j$ 上赋予的得分，或当weight不为空时，\n\n$$\nloss(x,class) = -weight[class]\\log\\left(\\frac{\\exp(x[class])}{\\sum_j \\exp(x[j])} \\right)\n$$\n\n其中 $weight[class]$ 为类别 $class$ 的权重。其值越大，总损失中 $class$ 类所占有的损失项的比重越大。\n\n最终，总损失为每个样本$x$上的损失的加权平均，即\n\n$$\n\\mathcal{L}(X,class) = \\frac{\\sum_{x\\in X}loss(x,class[x])}{\\sum_{x\\in X}weight[class[x]]}\n$$\n\n### 总结\n- 是否支持多类别分类：支持\n- 输入得分值域：$(-\\infty,\\infty)$\n- 神经网络输出层是否需要激活/归一化: 不用\n\n## nn.NLLLoss\n\n```python\ntorch.nn.NLLLoss(weight=None, size_average=None, ignore_index=-100, reduce=None, reduction='mean')\n```\n\n### 计算方法\n\n`NLLLoss`的用法，实际在`CrossEntropyLoss`的文档中给出：\n\nThis criterion combines **LogSoftmax** and **NLLLoss** in one single class.\n{:.success}\n\n也就是说，`CrossEntropyLoss`是`NLLLoss`和`LogSoftmax`的结合体。为看清这一点，我们回到式(2)。其中 $\\log\\frac{\\exp(\\cdot)}{\\sum_j \\exp(\\cdot)}$ 就是LogSoftmax.\n\n因此，如果`CrossEntropyLoss`的输入值是 $(x,class)$， 那么 `NLLLoss` 的输入值就是 $LogSoftmax(x), class$。其中 $LogSoftmax(\\cdot)$ 需要对 $x$ 的每个分量计算一次，最终 $dim(LogSoftmax(x)) = dim(x)$。除此之外，`NLLLoss` 在其他部分的计算过程与 `CrossEntropyLoss` 完全一致。\n\n### 总结\n- 是否支持多类别分类：支持\n- 输入得分值域：$(-\\infty,\\infty)$\n- 神经网络输出层是否需要激活/归一化: 需要，最后一层使用LogSoftmax.也可在神经网络中使用softmax或sigmoid，在计算损失函数时显式加入torch.log计算对数\n\n## nn.BCELoss\n\n```python\ntorch.nn.BCELoss(weight=None, size_average=None, reduce=None, reduction='mean')\n```\n\n### 计算方法\n`BCELoss`是专门针对二分类问题的交叉熵损失函数。其计算形式更加接近式(1): \n\n$$\n\\mathcal{L}(x_n,y_n) = -w_n\\left[y_n\\cdot\\log x_n + (1-y_n)\\cdot\\log(1-x_n)\\right] \n$$\n\n### 总结\n- 是否支持多类别分类：不支持。只支持二分类\n- 输入得分值域：$(0,1)$。常搭配$sigmoid$一起使用\n- 神经网络输出层是否需要激活/归一化: sigmoid进行归一化处理。\n\nTips: 在实际使用时，出现过使用BCELoss时算法不收敛、AUC奇低，但换成NLLLoss后一切都很好用的情况。\n\n## 对比表格\n\n|项目\\方法|CrossEntropyLoss|NLLLoss|BCELoss|\n|:---|:---|:---|:---|\n|支持多分类|是|是|否|\n|`y_pred`值域|$(-\\infty,\\infty)$|$(-\\infty,\\infty)$|$(0,1)$|\n|`type(y_target)`|`torch.LongTensor`|`torch.LongTensor`|`torch.DoubleTensor`|\n|输出层是否需要归一化|否|`LogSoftmax`|`sigmoid`|\n\n","source":"_posts/2021-10-07-pytorch.md","raw":"---\ntitle: 'PyTorch: CrossEntropyLoss vs. NLLLoss vs. BCELoss'\nauthor: LiJT\ndate: 2021-10-07\ntags: \n  - pytorch \n  - 深度学习 \n  - coding\nkey: pytorch20211007\n---\n\nCrossEntropyLoss, NLLLoss 和 BCELoss 本质上都是基于交叉熵(cross entropy)的分类器的损失函数。但是三个函数的输入格式、计算方法和性能（收敛速度）有很大差别。本文记录笔者对此三者的学习笔记和理解。\n{:.info}\n\n<!--more-->\n\n## 交叉熵(Cross Entropy)\n\n交叉熵(Cross Entropy)是Shannon信息论中一个重要概念，主要用于度量两个概率分布间的差异性信息。或曰，概率分布 $p$ 和概率分布 $q$ 的相似程度。如果 $p$ 和 $q$ 越相似，那么越能用 $p$ 近似表示 $q$ 或用 $q$ 近似表示 $p$ 。定义交叉熵为：\n\n$$\nH(p,q) = \\sum_x p(x)\\log \\left(\\frac{1}{q(x)}\\right)\n$$\n\n注意交叉熵不满足对称性。\n\n## nn.CrossEntropyLoss\n\n```python\ntorch.nn.CrossEntropyLoss(weight=None, size_average=None, ignore_index=-100, reduce=None, reduction='mean')\n```\n\n### 计算方法\n\n根据[pytorch官方文档](https://pytorch.org/docs/stable/generated/torch.nn.CrossEntropyLoss.html)，CrossEntropyLoss的输入值为\"unnormalized scores for each class\"，即未限制在(0,1)上的各个类别的得分。其表达式为\n\n$$\nloss(x,class) = -\\log\\left(\\frac{\\exp(x[class])}{\\sum_j \\exp(x[j])} \\right)\n$$\n\n其中 $x$ 为一个样本，$class$ 为一个类别, $x[j]\\in(-\\infty,\\infty)$ 为分类器给样本 $x$ 在类别 $j$ 上赋予的得分，或当weight不为空时，\n\n$$\nloss(x,class) = -weight[class]\\log\\left(\\frac{\\exp(x[class])}{\\sum_j \\exp(x[j])} \\right)\n$$\n\n其中 $weight[class]$ 为类别 $class$ 的权重。其值越大，总损失中 $class$ 类所占有的损失项的比重越大。\n\n最终，总损失为每个样本$x$上的损失的加权平均，即\n\n$$\n\\mathcal{L}(X,class) = \\frac{\\sum_{x\\in X}loss(x,class[x])}{\\sum_{x\\in X}weight[class[x]]}\n$$\n\n### 总结\n- 是否支持多类别分类：支持\n- 输入得分值域：$(-\\infty,\\infty)$\n- 神经网络输出层是否需要激活/归一化: 不用\n\n## nn.NLLLoss\n\n```python\ntorch.nn.NLLLoss(weight=None, size_average=None, ignore_index=-100, reduce=None, reduction='mean')\n```\n\n### 计算方法\n\n`NLLLoss`的用法，实际在`CrossEntropyLoss`的文档中给出：\n\nThis criterion combines **LogSoftmax** and **NLLLoss** in one single class.\n{:.success}\n\n也就是说，`CrossEntropyLoss`是`NLLLoss`和`LogSoftmax`的结合体。为看清这一点，我们回到式(2)。其中 $\\log\\frac{\\exp(\\cdot)}{\\sum_j \\exp(\\cdot)}$ 就是LogSoftmax.\n\n因此，如果`CrossEntropyLoss`的输入值是 $(x,class)$， 那么 `NLLLoss` 的输入值就是 $LogSoftmax(x), class$。其中 $LogSoftmax(\\cdot)$ 需要对 $x$ 的每个分量计算一次，最终 $dim(LogSoftmax(x)) = dim(x)$。除此之外，`NLLLoss` 在其他部分的计算过程与 `CrossEntropyLoss` 完全一致。\n\n### 总结\n- 是否支持多类别分类：支持\n- 输入得分值域：$(-\\infty,\\infty)$\n- 神经网络输出层是否需要激活/归一化: 需要，最后一层使用LogSoftmax.也可在神经网络中使用softmax或sigmoid，在计算损失函数时显式加入torch.log计算对数\n\n## nn.BCELoss\n\n```python\ntorch.nn.BCELoss(weight=None, size_average=None, reduce=None, reduction='mean')\n```\n\n### 计算方法\n`BCELoss`是专门针对二分类问题的交叉熵损失函数。其计算形式更加接近式(1): \n\n$$\n\\mathcal{L}(x_n,y_n) = -w_n\\left[y_n\\cdot\\log x_n + (1-y_n)\\cdot\\log(1-x_n)\\right] \n$$\n\n### 总结\n- 是否支持多类别分类：不支持。只支持二分类\n- 输入得分值域：$(0,1)$。常搭配$sigmoid$一起使用\n- 神经网络输出层是否需要激活/归一化: sigmoid进行归一化处理。\n\nTips: 在实际使用时，出现过使用BCELoss时算法不收敛、AUC奇低，但换成NLLLoss后一切都很好用的情况。\n\n## 对比表格\n\n|项目\\方法|CrossEntropyLoss|NLLLoss|BCELoss|\n|:---|:---|:---|:---|\n|支持多分类|是|是|否|\n|`y_pred`值域|$(-\\infty,\\infty)$|$(-\\infty,\\infty)$|$(0,1)$|\n|`type(y_target)`|`torch.LongTensor`|`torch.LongTensor`|`torch.DoubleTensor`|\n|输出层是否需要归一化|否|`LogSoftmax`|`sigmoid`|\n\n","slug":"2021-10-07-pytorch","published":1,"updated":"2022-04-06T09:44:15.444Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cludw9n9f000a9wv98ev10j7r","content":"<p>CrossEntropyLoss, NLLLoss 和 BCELoss 本质上都是基于交叉熵(cross entropy)的分类器的损失函数。但是三个函数的输入格式、计算方法和性能（收敛速度）有很大差别。本文记录笔者对此三者的学习笔记和理解。<br>{:.info}</p>\n<span id=\"more\"></span>\n<h2 id=\"交叉熵-Cross-Entropy\"><a href=\"#交叉熵-Cross-Entropy\" class=\"headerlink\" title=\"交叉熵(Cross Entropy)\"></a>交叉熵(Cross Entropy)</h2><p>交叉熵(Cross Entropy)是Shannon信息论中一个重要概念，主要用于度量两个概率分布间的差异性信息。或曰，概率分布 $p$ 和概率分布 $q$ 的相似程度。如果 $p$ 和 $q$ 越相似，那么越能用 $p$ 近似表示 $q$ 或用 $q$ 近似表示 $p$ 。定义交叉熵为：</p>\n<script type=\"math/tex; mode=display\">\nH(p,q) = \\sum_x p(x)\\log \\left(\\frac{1}{q(x)}\\right)</script><p>注意交叉熵不满足对称性。</p>\n<h2 id=\"nn-CrossEntropyLoss\"><a href=\"#nn-CrossEntropyLoss\" class=\"headerlink\" title=\"nn.CrossEntropyLoss\"></a>nn.CrossEntropyLoss</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">torch.nn.CrossEntropyLoss(weight=<span class=\"literal\">None</span>, size_average=<span class=\"literal\">None</span>, ignore_index=-<span class=\"number\">100</span>, reduce=<span class=\"literal\">None</span>, reduction=<span class=\"string\">&#x27;mean&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"计算方法\"><a href=\"#计算方法\" class=\"headerlink\" title=\"计算方法\"></a>计算方法</h3><p>根据<a href=\"https://pytorch.org/docs/stable/generated/torch.nn.CrossEntropyLoss.html\">pytorch官方文档</a>，CrossEntropyLoss的输入值为”unnormalized scores for each class”，即未限制在(0,1)上的各个类别的得分。其表达式为</p>\n<script type=\"math/tex; mode=display\">\nloss(x,class) = -\\log\\left(\\frac{\\exp(x[class])}{\\sum_j \\exp(x[j])} \\right)</script><p>其中 $x$ 为一个样本，$class$ 为一个类别, $x[j]\\in(-\\infty,\\infty)$ 为分类器给样本 $x$ 在类别 $j$ 上赋予的得分，或当weight不为空时，</p>\n<script type=\"math/tex; mode=display\">\nloss(x,class) = -weight[class]\\log\\left(\\frac{\\exp(x[class])}{\\sum_j \\exp(x[j])} \\right)</script><p>其中 $weight[class]$ 为类别 $class$ 的权重。其值越大，总损失中 $class$ 类所占有的损失项的比重越大。</p>\n<p>最终，总损失为每个样本$x$上的损失的加权平均，即</p>\n<script type=\"math/tex; mode=display\">\n\\mathcal{L}(X,class) = \\frac{\\sum_{x\\in X}loss(x,class[x])}{\\sum_{x\\in X}weight[class[x]]}</script><h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><ul>\n<li>是否支持多类别分类：支持</li>\n<li>输入得分值域：$(-\\infty,\\infty)$</li>\n<li>神经网络输出层是否需要激活/归一化: 不用</li>\n</ul>\n<h2 id=\"nn-NLLLoss\"><a href=\"#nn-NLLLoss\" class=\"headerlink\" title=\"nn.NLLLoss\"></a>nn.NLLLoss</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">torch.nn.NLLLoss(weight=<span class=\"literal\">None</span>, size_average=<span class=\"literal\">None</span>, ignore_index=-<span class=\"number\">100</span>, reduce=<span class=\"literal\">None</span>, reduction=<span class=\"string\">&#x27;mean&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"计算方法-1\"><a href=\"#计算方法-1\" class=\"headerlink\" title=\"计算方法\"></a>计算方法</h3><p><code>NLLLoss</code>的用法，实际在<code>CrossEntropyLoss</code>的文档中给出：</p>\n<p>This criterion combines <strong>LogSoftmax</strong> and <strong>NLLLoss</strong> in one single class.<br>{:.success}</p>\n<p>也就是说，<code>CrossEntropyLoss</code>是<code>NLLLoss</code>和<code>LogSoftmax</code>的结合体。为看清这一点，我们回到式(2)。其中 $\\log\\frac{\\exp(\\cdot)}{\\sum_j \\exp(\\cdot)}$ 就是LogSoftmax.</p>\n<p>因此，如果<code>CrossEntropyLoss</code>的输入值是 $(x,class)$， 那么 <code>NLLLoss</code> 的输入值就是 $LogSoftmax(x), class$。其中 $LogSoftmax(\\cdot)$ 需要对 $x$ 的每个分量计算一次，最终 $dim(LogSoftmax(x)) = dim(x)$。除此之外，<code>NLLLoss</code> 在其他部分的计算过程与 <code>CrossEntropyLoss</code> 完全一致。</p>\n<h3 id=\"总结-1\"><a href=\"#总结-1\" class=\"headerlink\" title=\"总结\"></a>总结</h3><ul>\n<li>是否支持多类别分类：支持</li>\n<li>输入得分值域：$(-\\infty,\\infty)$</li>\n<li>神经网络输出层是否需要激活/归一化: 需要，最后一层使用LogSoftmax.也可在神经网络中使用softmax或sigmoid，在计算损失函数时显式加入torch.log计算对数</li>\n</ul>\n<h2 id=\"nn-BCELoss\"><a href=\"#nn-BCELoss\" class=\"headerlink\" title=\"nn.BCELoss\"></a>nn.BCELoss</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">torch.nn.BCELoss(weight=<span class=\"literal\">None</span>, size_average=<span class=\"literal\">None</span>, reduce=<span class=\"literal\">None</span>, reduction=<span class=\"string\">&#x27;mean&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"计算方法-2\"><a href=\"#计算方法-2\" class=\"headerlink\" title=\"计算方法\"></a>计算方法</h3><p><code>BCELoss</code>是专门针对二分类问题的交叉熵损失函数。其计算形式更加接近式(1): </p>\n<script type=\"math/tex; mode=display\">\n\\mathcal{L}(x_n,y_n) = -w_n\\left[y_n\\cdot\\log x_n + (1-y_n)\\cdot\\log(1-x_n)\\right]</script><h3 id=\"总结-2\"><a href=\"#总结-2\" class=\"headerlink\" title=\"总结\"></a>总结</h3><ul>\n<li>是否支持多类别分类：不支持。只支持二分类</li>\n<li>输入得分值域：$(0,1)$。常搭配$sigmoid$一起使用</li>\n<li>神经网络输出层是否需要激活/归一化: sigmoid进行归一化处理。</li>\n</ul>\n<p>Tips: 在实际使用时，出现过使用BCELoss时算法不收敛、AUC奇低，但换成NLLLoss后一切都很好用的情况。</p>\n<h2 id=\"对比表格\"><a href=\"#对比表格\" class=\"headerlink\" title=\"对比表格\"></a>对比表格</h2><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">项目\\方法</th>\n<th style=\"text-align:left\">CrossEntropyLoss</th>\n<th style=\"text-align:left\">NLLLoss</th>\n<th style=\"text-align:left\">BCELoss</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">支持多分类</td>\n<td style=\"text-align:left\">是</td>\n<td style=\"text-align:left\">是</td>\n<td style=\"text-align:left\">否</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>y_pred</code>值域</td>\n<td style=\"text-align:left\">$(-\\infty,\\infty)$</td>\n<td style=\"text-align:left\">$(-\\infty,\\infty)$</td>\n<td style=\"text-align:left\">$(0,1)$</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>type(y_target)</code></td>\n<td style=\"text-align:left\"><code>torch.LongTensor</code></td>\n<td style=\"text-align:left\"><code>torch.LongTensor</code></td>\n<td style=\"text-align:left\"><code>torch.DoubleTensor</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">输出层是否需要归一化</td>\n<td style=\"text-align:left\">否</td>\n<td style=\"text-align:left\"><code>LogSoftmax</code></td>\n<td style=\"text-align:left\"><code>sigmoid</code></td>\n</tr>\n</tbody>\n</table>\n</div>\n","site":{"data":{}},"length":2240,"excerpt":"<p>CrossEntropyLoss, NLLLoss 和 BCELoss 本质上都是基于交叉熵(cross entropy)的分类器的损失函数。但是三个函数的输入格式、计算方法和性能（收敛速度）有很大差别。本文记录笔者对此三者的学习笔记和理解。<br>{:.info}</p>","more":"<h2 id=\"交叉熵-Cross-Entropy\"><a href=\"#交叉熵-Cross-Entropy\" class=\"headerlink\" title=\"交叉熵(Cross Entropy)\"></a>交叉熵(Cross Entropy)</h2><p>交叉熵(Cross Entropy)是Shannon信息论中一个重要概念，主要用于度量两个概率分布间的差异性信息。或曰，概率分布 $p$ 和概率分布 $q$ 的相似程度。如果 $p$ 和 $q$ 越相似，那么越能用 $p$ 近似表示 $q$ 或用 $q$ 近似表示 $p$ 。定义交叉熵为：</p>\n<script type=\"math/tex; mode=display\">\nH(p,q) = \\sum_x p(x)\\log \\left(\\frac{1}{q(x)}\\right)</script><p>注意交叉熵不满足对称性。</p>\n<h2 id=\"nn-CrossEntropyLoss\"><a href=\"#nn-CrossEntropyLoss\" class=\"headerlink\" title=\"nn.CrossEntropyLoss\"></a>nn.CrossEntropyLoss</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">torch.nn.CrossEntropyLoss(weight=<span class=\"literal\">None</span>, size_average=<span class=\"literal\">None</span>, ignore_index=-<span class=\"number\">100</span>, reduce=<span class=\"literal\">None</span>, reduction=<span class=\"string\">&#x27;mean&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"计算方法\"><a href=\"#计算方法\" class=\"headerlink\" title=\"计算方法\"></a>计算方法</h3><p>根据<a href=\"https://pytorch.org/docs/stable/generated/torch.nn.CrossEntropyLoss.html\">pytorch官方文档</a>，CrossEntropyLoss的输入值为”unnormalized scores for each class”，即未限制在(0,1)上的各个类别的得分。其表达式为</p>\n<script type=\"math/tex; mode=display\">\nloss(x,class) = -\\log\\left(\\frac{\\exp(x[class])}{\\sum_j \\exp(x[j])} \\right)</script><p>其中 $x$ 为一个样本，$class$ 为一个类别, $x[j]\\in(-\\infty,\\infty)$ 为分类器给样本 $x$ 在类别 $j$ 上赋予的得分，或当weight不为空时，</p>\n<script type=\"math/tex; mode=display\">\nloss(x,class) = -weight[class]\\log\\left(\\frac{\\exp(x[class])}{\\sum_j \\exp(x[j])} \\right)</script><p>其中 $weight[class]$ 为类别 $class$ 的权重。其值越大，总损失中 $class$ 类所占有的损失项的比重越大。</p>\n<p>最终，总损失为每个样本$x$上的损失的加权平均，即</p>\n<script type=\"math/tex; mode=display\">\n\\mathcal{L}(X,class) = \\frac{\\sum_{x\\in X}loss(x,class[x])}{\\sum_{x\\in X}weight[class[x]]}</script><h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><ul>\n<li>是否支持多类别分类：支持</li>\n<li>输入得分值域：$(-\\infty,\\infty)$</li>\n<li>神经网络输出层是否需要激活/归一化: 不用</li>\n</ul>\n<h2 id=\"nn-NLLLoss\"><a href=\"#nn-NLLLoss\" class=\"headerlink\" title=\"nn.NLLLoss\"></a>nn.NLLLoss</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">torch.nn.NLLLoss(weight=<span class=\"literal\">None</span>, size_average=<span class=\"literal\">None</span>, ignore_index=-<span class=\"number\">100</span>, reduce=<span class=\"literal\">None</span>, reduction=<span class=\"string\">&#x27;mean&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"计算方法-1\"><a href=\"#计算方法-1\" class=\"headerlink\" title=\"计算方法\"></a>计算方法</h3><p><code>NLLLoss</code>的用法，实际在<code>CrossEntropyLoss</code>的文档中给出：</p>\n<p>This criterion combines <strong>LogSoftmax</strong> and <strong>NLLLoss</strong> in one single class.<br>{:.success}</p>\n<p>也就是说，<code>CrossEntropyLoss</code>是<code>NLLLoss</code>和<code>LogSoftmax</code>的结合体。为看清这一点，我们回到式(2)。其中 $\\log\\frac{\\exp(\\cdot)}{\\sum_j \\exp(\\cdot)}$ 就是LogSoftmax.</p>\n<p>因此，如果<code>CrossEntropyLoss</code>的输入值是 $(x,class)$， 那么 <code>NLLLoss</code> 的输入值就是 $LogSoftmax(x), class$。其中 $LogSoftmax(\\cdot)$ 需要对 $x$ 的每个分量计算一次，最终 $dim(LogSoftmax(x)) = dim(x)$。除此之外，<code>NLLLoss</code> 在其他部分的计算过程与 <code>CrossEntropyLoss</code> 完全一致。</p>\n<h3 id=\"总结-1\"><a href=\"#总结-1\" class=\"headerlink\" title=\"总结\"></a>总结</h3><ul>\n<li>是否支持多类别分类：支持</li>\n<li>输入得分值域：$(-\\infty,\\infty)$</li>\n<li>神经网络输出层是否需要激活/归一化: 需要，最后一层使用LogSoftmax.也可在神经网络中使用softmax或sigmoid，在计算损失函数时显式加入torch.log计算对数</li>\n</ul>\n<h2 id=\"nn-BCELoss\"><a href=\"#nn-BCELoss\" class=\"headerlink\" title=\"nn.BCELoss\"></a>nn.BCELoss</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">torch.nn.BCELoss(weight=<span class=\"literal\">None</span>, size_average=<span class=\"literal\">None</span>, reduce=<span class=\"literal\">None</span>, reduction=<span class=\"string\">&#x27;mean&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"计算方法-2\"><a href=\"#计算方法-2\" class=\"headerlink\" title=\"计算方法\"></a>计算方法</h3><p><code>BCELoss</code>是专门针对二分类问题的交叉熵损失函数。其计算形式更加接近式(1): </p>\n<script type=\"math/tex; mode=display\">\n\\mathcal{L}(x_n,y_n) = -w_n\\left[y_n\\cdot\\log x_n + (1-y_n)\\cdot\\log(1-x_n)\\right]</script><h3 id=\"总结-2\"><a href=\"#总结-2\" class=\"headerlink\" title=\"总结\"></a>总结</h3><ul>\n<li>是否支持多类别分类：不支持。只支持二分类</li>\n<li>输入得分值域：$(0,1)$。常搭配$sigmoid$一起使用</li>\n<li>神经网络输出层是否需要激活/归一化: sigmoid进行归一化处理。</li>\n</ul>\n<p>Tips: 在实际使用时，出现过使用BCELoss时算法不收敛、AUC奇低，但换成NLLLoss后一切都很好用的情况。</p>\n<h2 id=\"对比表格\"><a href=\"#对比表格\" class=\"headerlink\" title=\"对比表格\"></a>对比表格</h2><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">项目\\方法</th>\n<th style=\"text-align:left\">CrossEntropyLoss</th>\n<th style=\"text-align:left\">NLLLoss</th>\n<th style=\"text-align:left\">BCELoss</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">支持多分类</td>\n<td style=\"text-align:left\">是</td>\n<td style=\"text-align:left\">是</td>\n<td style=\"text-align:left\">否</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>y_pred</code>值域</td>\n<td style=\"text-align:left\">$(-\\infty,\\infty)$</td>\n<td style=\"text-align:left\">$(-\\infty,\\infty)$</td>\n<td style=\"text-align:left\">$(0,1)$</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>type(y_target)</code></td>\n<td style=\"text-align:left\"><code>torch.LongTensor</code></td>\n<td style=\"text-align:left\"><code>torch.LongTensor</code></td>\n<td style=\"text-align:left\"><code>torch.DoubleTensor</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">输出层是否需要归一化</td>\n<td style=\"text-align:left\">否</td>\n<td style=\"text-align:left\"><code>LogSoftmax</code></td>\n<td style=\"text-align:left\"><code>sigmoid</code></td>\n</tr>\n</tbody>\n</table>\n</div>"},{"title":"消融实验(ablation study)","author":"LiJT","date":"2021-10-17T16:00:00.000Z","key":"ablation20211018","_content":"\n## 前言\n\n在深度学习领域论文的实验设计中，经常看到作者提出的模型与“弱化版”模型（少了某些模块、少了参数的限制...等等）的对比，用于说明idea或者某模块的有效性，这便是直观意义上的消融实验。\n\n<!--more-->\n\n## 定义与解释\n\nRobert Long对消融研究（或消融实验）定义：通常用于神经网络，尤其是相对复杂的神经网络，如R-CNN。我们的想法是通过删除部分网络并研究网络的性能来了解网络\n{:.success}\n\n### 例子\n参考[知乎](https://www.zhihu.com/question/291655038/answer/2000381383):\n\n论文提了3个贡献点，A,B,C\n\n- 你去掉A，其它保持不变，发现效果降低了，那说明A确实有用。\n\n- 你去掉B，其它保持不变，发现效果降的比A还多，说明B更重要。\n\n- 你去掉C，其它保持不变，发现效果没变，那C就是凑字数的\n\n### 个人想法\n消融实验是一种简单直观但符合逻辑的实验方法。相比于选取经典算法作为baseline实验，消融实验排除了trick、其他结构上的不同导致的性能影响，而只专注于检验idea的有效性，相当于论文工作的“自己和自己比”，一边是加入了idea的自己，一边是没有加入idea的自己。\n\n可以把消融实验用“控制变量法”和“正交回归”类比。\n\n\n","source":"_posts/2021-10-18-ablation.md","raw":"---\ntitle: 消融实验(ablation study)\nauthor: LiJT\ndate: 2021-10-18\ntags: \n  - 深度学习 \n  - 实验\nkey: ablation20211018\n---\n\n## 前言\n\n在深度学习领域论文的实验设计中，经常看到作者提出的模型与“弱化版”模型（少了某些模块、少了参数的限制...等等）的对比，用于说明idea或者某模块的有效性，这便是直观意义上的消融实验。\n\n<!--more-->\n\n## 定义与解释\n\nRobert Long对消融研究（或消融实验）定义：通常用于神经网络，尤其是相对复杂的神经网络，如R-CNN。我们的想法是通过删除部分网络并研究网络的性能来了解网络\n{:.success}\n\n### 例子\n参考[知乎](https://www.zhihu.com/question/291655038/answer/2000381383):\n\n论文提了3个贡献点，A,B,C\n\n- 你去掉A，其它保持不变，发现效果降低了，那说明A确实有用。\n\n- 你去掉B，其它保持不变，发现效果降的比A还多，说明B更重要。\n\n- 你去掉C，其它保持不变，发现效果没变，那C就是凑字数的\n\n### 个人想法\n消融实验是一种简单直观但符合逻辑的实验方法。相比于选取经典算法作为baseline实验，消融实验排除了trick、其他结构上的不同导致的性能影响，而只专注于检验idea的有效性，相当于论文工作的“自己和自己比”，一边是加入了idea的自己，一边是没有加入idea的自己。\n\n可以把消融实验用“控制变量法”和“正交回归”类比。\n\n\n","slug":"2021-10-18-ablation","published":1,"updated":"2022-04-06T09:44:40.657Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cludw9n9g000d9wv92p3gflq5","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>在深度学习领域论文的实验设计中，经常看到作者提出的模型与“弱化版”模型（少了某些模块、少了参数的限制…等等）的对比，用于说明idea或者某模块的有效性，这便是直观意义上的消融实验。</p>\n<span id=\"more\"></span>\n<h2 id=\"定义与解释\"><a href=\"#定义与解释\" class=\"headerlink\" title=\"定义与解释\"></a>定义与解释</h2><p>Robert Long对消融研究（或消融实验）定义：通常用于神经网络，尤其是相对复杂的神经网络，如R-CNN。我们的想法是通过删除部分网络并研究网络的性能来了解网络<br>{:.success}</p>\n<h3 id=\"例子\"><a href=\"#例子\" class=\"headerlink\" title=\"例子\"></a>例子</h3><p>参考<a href=\"https://www.zhihu.com/question/291655038/answer/2000381383\">知乎</a>:</p>\n<p>论文提了3个贡献点，A,B,C</p>\n<ul>\n<li><p>你去掉A，其它保持不变，发现效果降低了，那说明A确实有用。</p>\n</li>\n<li><p>你去掉B，其它保持不变，发现效果降的比A还多，说明B更重要。</p>\n</li>\n<li><p>你去掉C，其它保持不变，发现效果没变，那C就是凑字数的</p>\n</li>\n</ul>\n<h3 id=\"个人想法\"><a href=\"#个人想法\" class=\"headerlink\" title=\"个人想法\"></a>个人想法</h3><p>消融实验是一种简单直观但符合逻辑的实验方法。相比于选取经典算法作为baseline实验，消融实验排除了trick、其他结构上的不同导致的性能影响，而只专注于检验idea的有效性，相当于论文工作的“自己和自己比”，一边是加入了idea的自己，一边是没有加入idea的自己。</p>\n<p>可以把消融实验用“控制变量法”和“正交回归”类比。</p>\n","site":{"data":{}},"length":461,"excerpt":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>在深度学习领域论文的实验设计中，经常看到作者提出的模型与“弱化版”模型（少了某些模块、少了参数的限制…等等）的对比，用于说明idea或者某模块的有效性，这便是直观意义上的消融实验。</p>","more":"<h2 id=\"定义与解释\"><a href=\"#定义与解释\" class=\"headerlink\" title=\"定义与解释\"></a>定义与解释</h2><p>Robert Long对消融研究（或消融实验）定义：通常用于神经网络，尤其是相对复杂的神经网络，如R-CNN。我们的想法是通过删除部分网络并研究网络的性能来了解网络<br>{:.success}</p>\n<h3 id=\"例子\"><a href=\"#例子\" class=\"headerlink\" title=\"例子\"></a>例子</h3><p>参考<a href=\"https://www.zhihu.com/question/291655038/answer/2000381383\">知乎</a>:</p>\n<p>论文提了3个贡献点，A,B,C</p>\n<ul>\n<li><p>你去掉A，其它保持不变，发现效果降低了，那说明A确实有用。</p>\n</li>\n<li><p>你去掉B，其它保持不变，发现效果降的比A还多，说明B更重要。</p>\n</li>\n<li><p>你去掉C，其它保持不变，发现效果没变，那C就是凑字数的</p>\n</li>\n</ul>\n<h3 id=\"个人想法\"><a href=\"#个人想法\" class=\"headerlink\" title=\"个人想法\"></a>个人想法</h3><p>消融实验是一种简单直观但符合逻辑的实验方法。相比于选取经典算法作为baseline实验，消融实验排除了trick、其他结构上的不同导致的性能影响，而只专注于检验idea的有效性，相当于论文工作的“自己和自己比”，一边是加入了idea的自己，一边是没有加入idea的自己。</p>\n<p>可以把消融实验用“控制变量法”和“正交回归”类比。</p>"},{"title":"Python踩坑记录&小技巧(持续更新)","author":"LiJT","date":"2021-10-24T16:00:00.000Z","key":"python20211025","_content":"\n本篇主要介绍一些使用的python技巧和第三方库，包括某些方法(method)的骚操作\n\n<!--more-->\n\n## Matplotlib-绘图库\n### 保存图片内容溢出的问题\n- 有些图片，如果label太长，可能会出现保存区域小于原图片大小，导致部分内容在保存文件中缺失的问题。在此情况下，使用 `bbox_inches = 'tight'` 选项：\n  \n```py\nimport matplotlib.pyplot as plt\n\n# 原保存方法\nplt.savefig('pic.png', dpi = 1000)\n\n# 修正后保存方法\nplt.savefig('pic.png', dpi = 1000, bbox_inches = 'tight')\n```\n\n\n## Numpy-矩阵运算库\n### np.unique 可以同时获取unique key和频数\n```python\noutcome_s, frequency_s=np.unique(samples,return_counts=True)\n```\n### np.intersect1d 可以获取两个一维数组的交集\n```python\nA=np.array([1,2,3,4,5])\nB=np.array([3,4,6,0,7])\nC=np.intersect1d(A,B) # C=[3,4]\n```\n\n<!--more-->\n\n## PyTorch-深度学习库\n- 重要的事情说三遍：\n  - 不要将维数设为0！\n  - 不要将维数设为0！\n  - 不要将维度设为0！\n  \n在深度学习的消融实验中，常常需要去掉某个模块来验证其有效性。不要简单地将位数设为0！维度最少要为1.这是因为在某些版本的torch中，如果模型参数是 (N,0) 维的，那么使用torch.save()时会保存N个相应的参数值；但在torch.load()阶段，模型期望接收参数数量为0，所以模型load不进去！\n{:.error}\n\n\n- 指定load模型的目标设备\n\n```py\nimport torch\n\ntorch.load(map_location=device)\n```\n\n## tqdm-进度条\n- tqdm 可以枚举迭代操作，同时显示进度条——再也不用每隔多少步输出一次结果了！\n- 以下为ipython演示结果\n\n```python\nIn [22]: import tqdm\n    ...: li = [i for i in range(999999)]\n    ...: mn = 99999999\n    ...: for elem in tqdm.tqdm(li,'progress:'):\n    ...:   mn = min(mn,elem)\n    ...:\nprogress:: 100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 999999/999999 [00:00<00:00, 2086298.02it/s]\n\n```","source":"_posts/2021-10-25-python.md","raw":"---\ntitle: Python踩坑记录&小技巧(持续更新)\nauthor: LiJT\ndate: 2021-10-25\ntags: \n  - python \n  - coding \n  - 持续更新\nkey: python20211025\n---\n\n本篇主要介绍一些使用的python技巧和第三方库，包括某些方法(method)的骚操作\n\n<!--more-->\n\n## Matplotlib-绘图库\n### 保存图片内容溢出的问题\n- 有些图片，如果label太长，可能会出现保存区域小于原图片大小，导致部分内容在保存文件中缺失的问题。在此情况下，使用 `bbox_inches = 'tight'` 选项：\n  \n```py\nimport matplotlib.pyplot as plt\n\n# 原保存方法\nplt.savefig('pic.png', dpi = 1000)\n\n# 修正后保存方法\nplt.savefig('pic.png', dpi = 1000, bbox_inches = 'tight')\n```\n\n\n## Numpy-矩阵运算库\n### np.unique 可以同时获取unique key和频数\n```python\noutcome_s, frequency_s=np.unique(samples,return_counts=True)\n```\n### np.intersect1d 可以获取两个一维数组的交集\n```python\nA=np.array([1,2,3,4,5])\nB=np.array([3,4,6,0,7])\nC=np.intersect1d(A,B) # C=[3,4]\n```\n\n<!--more-->\n\n## PyTorch-深度学习库\n- 重要的事情说三遍：\n  - 不要将维数设为0！\n  - 不要将维数设为0！\n  - 不要将维度设为0！\n  \n在深度学习的消融实验中，常常需要去掉某个模块来验证其有效性。不要简单地将位数设为0！维度最少要为1.这是因为在某些版本的torch中，如果模型参数是 (N,0) 维的，那么使用torch.save()时会保存N个相应的参数值；但在torch.load()阶段，模型期望接收参数数量为0，所以模型load不进去！\n{:.error}\n\n\n- 指定load模型的目标设备\n\n```py\nimport torch\n\ntorch.load(map_location=device)\n```\n\n## tqdm-进度条\n- tqdm 可以枚举迭代操作，同时显示进度条——再也不用每隔多少步输出一次结果了！\n- 以下为ipython演示结果\n\n```python\nIn [22]: import tqdm\n    ...: li = [i for i in range(999999)]\n    ...: mn = 99999999\n    ...: for elem in tqdm.tqdm(li,'progress:'):\n    ...:   mn = min(mn,elem)\n    ...:\nprogress:: 100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 999999/999999 [00:00<00:00, 2086298.02it/s]\n\n```","slug":"2021-10-25-python","published":1,"updated":"2022-04-09T08:04:07.277Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cludw9n9h000e9wv963jn7390","content":"<p>本篇主要介绍一些使用的python技巧和第三方库，包括某些方法(method)的骚操作</p>\n<span id=\"more\"></span>\n<h2 id=\"Matplotlib-绘图库\"><a href=\"#Matplotlib-绘图库\" class=\"headerlink\" title=\"Matplotlib-绘图库\"></a>Matplotlib-绘图库</h2><h3 id=\"保存图片内容溢出的问题\"><a href=\"#保存图片内容溢出的问题\" class=\"headerlink\" title=\"保存图片内容溢出的问题\"></a>保存图片内容溢出的问题</h3><ul>\n<li>有些图片，如果label太长，可能会出现保存区域小于原图片大小，导致部分内容在保存文件中缺失的问题。在此情况下，使用 <code>bbox_inches = &#39;tight&#39;</code> 选项：</li>\n</ul>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 原保存方法</span></span><br><span class=\"line\">plt.savefig(<span class=\"string\">&#x27;pic.png&#x27;</span>, dpi = <span class=\"number\">1000</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 修正后保存方法</span></span><br><span class=\"line\">plt.savefig(<span class=\"string\">&#x27;pic.png&#x27;</span>, dpi = <span class=\"number\">1000</span>, bbox_inches = <span class=\"string\">&#x27;tight&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<h2 id=\"Numpy-矩阵运算库\"><a href=\"#Numpy-矩阵运算库\" class=\"headerlink\" title=\"Numpy-矩阵运算库\"></a>Numpy-矩阵运算库</h2><h3 id=\"np-unique-可以同时获取unique-key和频数\"><a href=\"#np-unique-可以同时获取unique-key和频数\" class=\"headerlink\" title=\"np.unique 可以同时获取unique key和频数\"></a>np.unique 可以同时获取unique key和频数</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">outcome_s, frequency_s=np.unique(samples,return_counts=<span class=\"literal\">True</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"np-intersect1d-可以获取两个一维数组的交集\"><a href=\"#np-intersect1d-可以获取两个一维数组的交集\" class=\"headerlink\" title=\"np.intersect1d 可以获取两个一维数组的交集\"></a>np.intersect1d 可以获取两个一维数组的交集</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">A=np.array([<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>])</span><br><span class=\"line\">B=np.array([<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">6</span>,<span class=\"number\">0</span>,<span class=\"number\">7</span>])</span><br><span class=\"line\">C=np.intersect1d(A,B) <span class=\"comment\"># C=[3,4]</span></span><br></pre></td></tr></table></figure>\n<!--more-->\n<h2 id=\"PyTorch-深度学习库\"><a href=\"#PyTorch-深度学习库\" class=\"headerlink\" title=\"PyTorch-深度学习库\"></a>PyTorch-深度学习库</h2><ul>\n<li>重要的事情说三遍：<ul>\n<li>不要将维数设为0！</li>\n<li>不要将维数设为0！</li>\n<li>不要将维度设为0！</li>\n</ul>\n</li>\n</ul>\n<p>在深度学习的消融实验中，常常需要去掉某个模块来验证其有效性。不要简单地将位数设为0！维度最少要为1.这是因为在某些版本的torch中，如果模型参数是 (N,0) 维的，那么使用torch.save()时会保存N个相应的参数值；但在torch.load()阶段，模型期望接收参数数量为0，所以模型load不进去！<br>{:.error}</p>\n<ul>\n<li>指定load模型的目标设备</li>\n</ul>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> torch</span><br><span class=\"line\"></span><br><span class=\"line\">torch.load(map_location=device)</span><br></pre></td></tr></table></figure>\n<h2 id=\"tqdm-进度条\"><a href=\"#tqdm-进度条\" class=\"headerlink\" title=\"tqdm-进度条\"></a>tqdm-进度条</h2><ul>\n<li>tqdm 可以枚举迭代操作，同时显示进度条——再也不用每隔多少步输出一次结果了！</li>\n<li>以下为ipython演示结果</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">In [<span class=\"number\">22</span>]: <span class=\"keyword\">import</span> tqdm</span><br><span class=\"line\">    ...: li = [i <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">999999</span>)]</span><br><span class=\"line\">    ...: mn = <span class=\"number\">99999999</span></span><br><span class=\"line\">    ...: <span class=\"keyword\">for</span> elem <span class=\"keyword\">in</span> tqdm.tqdm(li,<span class=\"string\">&#x27;progress:&#x27;</span>):</span><br><span class=\"line\">    ...:   mn = <span class=\"built_in\">min</span>(mn,elem)</span><br><span class=\"line\">    ...:</span><br><span class=\"line\">progress:: <span class=\"number\">100</span>%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| <span class=\"number\">999999</span>/<span class=\"number\">999999</span> [<span class=\"number\">00</span>:<span class=\"number\">00</span>&lt;<span class=\"number\">00</span>:<span class=\"number\">00</span>, <span class=\"number\">2086298.02</span>it/s]</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","site":{"data":{}},"length":1199,"excerpt":"<p>本篇主要介绍一些使用的python技巧和第三方库，包括某些方法(method)的骚操作</p>","more":"<h2 id=\"Matplotlib-绘图库\"><a href=\"#Matplotlib-绘图库\" class=\"headerlink\" title=\"Matplotlib-绘图库\"></a>Matplotlib-绘图库</h2><h3 id=\"保存图片内容溢出的问题\"><a href=\"#保存图片内容溢出的问题\" class=\"headerlink\" title=\"保存图片内容溢出的问题\"></a>保存图片内容溢出的问题</h3><ul>\n<li>有些图片，如果label太长，可能会出现保存区域小于原图片大小，导致部分内容在保存文件中缺失的问题。在此情况下，使用 <code>bbox_inches = &#39;tight&#39;</code> 选项：</li>\n</ul>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 原保存方法</span></span><br><span class=\"line\">plt.savefig(<span class=\"string\">&#x27;pic.png&#x27;</span>, dpi = <span class=\"number\">1000</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 修正后保存方法</span></span><br><span class=\"line\">plt.savefig(<span class=\"string\">&#x27;pic.png&#x27;</span>, dpi = <span class=\"number\">1000</span>, bbox_inches = <span class=\"string\">&#x27;tight&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<h2 id=\"Numpy-矩阵运算库\"><a href=\"#Numpy-矩阵运算库\" class=\"headerlink\" title=\"Numpy-矩阵运算库\"></a>Numpy-矩阵运算库</h2><h3 id=\"np-unique-可以同时获取unique-key和频数\"><a href=\"#np-unique-可以同时获取unique-key和频数\" class=\"headerlink\" title=\"np.unique 可以同时获取unique key和频数\"></a>np.unique 可以同时获取unique key和频数</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">outcome_s, frequency_s=np.unique(samples,return_counts=<span class=\"literal\">True</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"np-intersect1d-可以获取两个一维数组的交集\"><a href=\"#np-intersect1d-可以获取两个一维数组的交集\" class=\"headerlink\" title=\"np.intersect1d 可以获取两个一维数组的交集\"></a>np.intersect1d 可以获取两个一维数组的交集</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">A=np.array([<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>])</span><br><span class=\"line\">B=np.array([<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">6</span>,<span class=\"number\">0</span>,<span class=\"number\">7</span>])</span><br><span class=\"line\">C=np.intersect1d(A,B) <span class=\"comment\"># C=[3,4]</span></span><br></pre></td></tr></table></figure>\n<!--more-->\n<h2 id=\"PyTorch-深度学习库\"><a href=\"#PyTorch-深度学习库\" class=\"headerlink\" title=\"PyTorch-深度学习库\"></a>PyTorch-深度学习库</h2><ul>\n<li>重要的事情说三遍：<ul>\n<li>不要将维数设为0！</li>\n<li>不要将维数设为0！</li>\n<li>不要将维度设为0！</li>\n</ul>\n</li>\n</ul>\n<p>在深度学习的消融实验中，常常需要去掉某个模块来验证其有效性。不要简单地将位数设为0！维度最少要为1.这是因为在某些版本的torch中，如果模型参数是 (N,0) 维的，那么使用torch.save()时会保存N个相应的参数值；但在torch.load()阶段，模型期望接收参数数量为0，所以模型load不进去！<br>{:.error}</p>\n<ul>\n<li>指定load模型的目标设备</li>\n</ul>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> torch</span><br><span class=\"line\"></span><br><span class=\"line\">torch.load(map_location=device)</span><br></pre></td></tr></table></figure>\n<h2 id=\"tqdm-进度条\"><a href=\"#tqdm-进度条\" class=\"headerlink\" title=\"tqdm-进度条\"></a>tqdm-进度条</h2><ul>\n<li>tqdm 可以枚举迭代操作，同时显示进度条——再也不用每隔多少步输出一次结果了！</li>\n<li>以下为ipython演示结果</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">In [<span class=\"number\">22</span>]: <span class=\"keyword\">import</span> tqdm</span><br><span class=\"line\">    ...: li = [i <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">999999</span>)]</span><br><span class=\"line\">    ...: mn = <span class=\"number\">99999999</span></span><br><span class=\"line\">    ...: <span class=\"keyword\">for</span> elem <span class=\"keyword\">in</span> tqdm.tqdm(li,<span class=\"string\">&#x27;progress:&#x27;</span>):</span><br><span class=\"line\">    ...:   mn = <span class=\"built_in\">min</span>(mn,elem)</span><br><span class=\"line\">    ...:</span><br><span class=\"line\">progress:: <span class=\"number\">100</span>%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| <span class=\"number\">999999</span>/<span class=\"number\">999999</span> [<span class=\"number\">00</span>:<span class=\"number\">00</span>&lt;<span class=\"number\">00</span>:<span class=\"number\">00</span>, <span class=\"number\">2086298.02</span>it/s]</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>"},{"title":"正则表达式学习笔记(持续更新)","author":"LiJT","date":"2021-10-25T16:00:00.000Z","key":"regex20211026","_content":"\n## 基础部分\n- 工具：egrep. `egrep '[regular expression]' filename`\n\n### 行首行尾\n```python\n^ : 标记一行的开始位置\n$ : 标记一行的结束位置\n\n# 例子\n^cat : 匹配以cat为行首的行，例如 catter\ncat$ : 匹配以cat为结尾的行，例如 scat\n```\n\n<!--more-->\n\n### 字符类\n#### 匹配任意字符\n\n```python\n[...] : 匹配中括号中的任意一个字符，中括号称为字符类\n\n# 例子\ngr[ea]y : 匹配 grey 或 gray, r 和 y 之间可以是e或者a\nsep[ea]r[ea]te : 匹配 seperate 或 separete 或 separate 或 seperete\n<H[123456]> : 匹配 <H1> 到 <H6>， 在html匹配中常见\n```\n\n```python\n- : 划定字符范围\n\n# 例子\n[1-6]=[123456]\n[0-9a-fA-F]=[0123456789abcdefABCDEF]\n```\n\n#### 否定字符类\n```python\n[^...] : 匹配任意不在中括号中的字符，与 [...] 相反\n\n# 例子：\n[^1-6] : 匹配不在 1-6 中的字符\nq[^u] : 匹配包含 q~， 其中 ~ 为不是字母u的其他字符的所有行\n```\n- 当 ^ 在中括号外面时表示行首标识符；当 ^ 在中括号里面时表示否定运算符\n\n### 使用 '.' 匹配 *任意* 字符\n```python\n. : 匹配任意字符\n[.] : 无转义，匹配dot\n\n# 例子：\n03.19.76 : 匹配 03~19~76，其中~可以是任意字符\n03[-./]19[-./]76 : 以分隔符 . - 或 / 匹配 031976\n```\n\n### 多个正则表达式\n- 考虑如何将多个正则表达式结合到一起\n  \n```python\n| : 或运算， a | b 表示匹配正则表达式或正则表达式b。为了限定或运算范围，必要时用小括号括起来，例如 (a|b)\n\n# 例子\ngr(a|e)y = gr[ae]y\n^(From|Subject|Date): 匹配以From:或Subject:或Date:开头的行\n```\n\n### 使用'?'匹配可选字符\n- 考虑匹配 colour 或 color，这里的 u 可选出现或不出现\n\n```python\n? : 可选运算，u? 表示匹配出现u或不出现u，作用对象为?的前一个字符\n\n# 例子\ncolou?r = (color|colour)\n```\n\n### 匹配重复字符\n- 考虑一个字符重复多次： goooooooooooooooooood!，但是次数不定\n\n```python\n+ : 匹配一个字符1次或多次（至少1次）\n* : 匹配一个字符0次或多次（至少0次）\n\n# 例子：\ngoo+d: 匹配good,goood,goo...od\ngoo*d: 匹配god, good, ...\n<HR +SIZE *= *[0-9]+ *>: 空格可以出现任意多次\n\n```\n\n|运算符|字符最小出现次数|字符最大出现次数|\n|:---|:---|:---|\n|?|0|1|\n|+|1|无限|\n|*|0|无限|\n\n#### 自定义字符重复次数\n```python\nu{min, max} : 匹配字符u最小重复min次，最大重复max次。尽可能多地统计\n\n# 例子：\n[a-zA-Z]{3,8}: 匹配3至8个连续出现的英文字母（尽可能多）\n```\n\n## Python re 模块要点\n### 转义字符\n- 上述正则表达式规则基于Linux的egrep。针对Python的re模块，另有一些重要的转义字符可以用\n\n|字符|功能\n|:---|:---\n|\\d\t|匹配数字，即[0-9]\t可以写在字符集[...]中\n|\\D\t|匹配⾮数字，即不是数字\t可以写在字符集[...]中\n|\\s\t|匹配空⽩，即空格，tab键\t可以写在字符集[...]中\n|\\S\t|匹配⾮空⽩字符\t可以写在字符集[...]中\n|\\w\t|匹配单词字符，即[a-zA-Z0-9_]\t可以写在字符集[...]中\n|\\W\t|匹配⾮单词字符\t可以写在字符集[...]中\n\n### re 模块常用函数及注意事项\n\n待补充\n{:.warning}\n\n## 练习：常用正则表达式(Python re格式)\n- 电子邮箱 `\\w{1,10}\\.?\\w{1,10}@(163|gmail|qq).com`\n- 日期 `\\d{4}[.-/]\\d{2}[.-/]\\d{2}`\n- HTTP/HTML URL `\\<http://[^ ]+\\.html?\\>`\n\n## 参考资料\n- Jeffrey E.F.Friedl, Mastering Regular Expressions\n- [python——正则表达式(re模块)详解. 版权声明：本文为CSDN博主「nee~」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。](https://blog.csdn.net/guo_qingxia/article/details/113979135)\n\n\n","source":"_posts/2021-10-26-regex.md","raw":"---\ntitle: 正则表达式学习笔记(持续更新)\nauthor: LiJT\ndate: 2021-10-26\ntags: \n  - coding \n  - 持续更新\nkey: regex20211026\n---\n\n## 基础部分\n- 工具：egrep. `egrep '[regular expression]' filename`\n\n### 行首行尾\n```python\n^ : 标记一行的开始位置\n$ : 标记一行的结束位置\n\n# 例子\n^cat : 匹配以cat为行首的行，例如 catter\ncat$ : 匹配以cat为结尾的行，例如 scat\n```\n\n<!--more-->\n\n### 字符类\n#### 匹配任意字符\n\n```python\n[...] : 匹配中括号中的任意一个字符，中括号称为字符类\n\n# 例子\ngr[ea]y : 匹配 grey 或 gray, r 和 y 之间可以是e或者a\nsep[ea]r[ea]te : 匹配 seperate 或 separete 或 separate 或 seperete\n<H[123456]> : 匹配 <H1> 到 <H6>， 在html匹配中常见\n```\n\n```python\n- : 划定字符范围\n\n# 例子\n[1-6]=[123456]\n[0-9a-fA-F]=[0123456789abcdefABCDEF]\n```\n\n#### 否定字符类\n```python\n[^...] : 匹配任意不在中括号中的字符，与 [...] 相反\n\n# 例子：\n[^1-6] : 匹配不在 1-6 中的字符\nq[^u] : 匹配包含 q~， 其中 ~ 为不是字母u的其他字符的所有行\n```\n- 当 ^ 在中括号外面时表示行首标识符；当 ^ 在中括号里面时表示否定运算符\n\n### 使用 '.' 匹配 *任意* 字符\n```python\n. : 匹配任意字符\n[.] : 无转义，匹配dot\n\n# 例子：\n03.19.76 : 匹配 03~19~76，其中~可以是任意字符\n03[-./]19[-./]76 : 以分隔符 . - 或 / 匹配 031976\n```\n\n### 多个正则表达式\n- 考虑如何将多个正则表达式结合到一起\n  \n```python\n| : 或运算， a | b 表示匹配正则表达式或正则表达式b。为了限定或运算范围，必要时用小括号括起来，例如 (a|b)\n\n# 例子\ngr(a|e)y = gr[ae]y\n^(From|Subject|Date): 匹配以From:或Subject:或Date:开头的行\n```\n\n### 使用'?'匹配可选字符\n- 考虑匹配 colour 或 color，这里的 u 可选出现或不出现\n\n```python\n? : 可选运算，u? 表示匹配出现u或不出现u，作用对象为?的前一个字符\n\n# 例子\ncolou?r = (color|colour)\n```\n\n### 匹配重复字符\n- 考虑一个字符重复多次： goooooooooooooooooood!，但是次数不定\n\n```python\n+ : 匹配一个字符1次或多次（至少1次）\n* : 匹配一个字符0次或多次（至少0次）\n\n# 例子：\ngoo+d: 匹配good,goood,goo...od\ngoo*d: 匹配god, good, ...\n<HR +SIZE *= *[0-9]+ *>: 空格可以出现任意多次\n\n```\n\n|运算符|字符最小出现次数|字符最大出现次数|\n|:---|:---|:---|\n|?|0|1|\n|+|1|无限|\n|*|0|无限|\n\n#### 自定义字符重复次数\n```python\nu{min, max} : 匹配字符u最小重复min次，最大重复max次。尽可能多地统计\n\n# 例子：\n[a-zA-Z]{3,8}: 匹配3至8个连续出现的英文字母（尽可能多）\n```\n\n## Python re 模块要点\n### 转义字符\n- 上述正则表达式规则基于Linux的egrep。针对Python的re模块，另有一些重要的转义字符可以用\n\n|字符|功能\n|:---|:---\n|\\d\t|匹配数字，即[0-9]\t可以写在字符集[...]中\n|\\D\t|匹配⾮数字，即不是数字\t可以写在字符集[...]中\n|\\s\t|匹配空⽩，即空格，tab键\t可以写在字符集[...]中\n|\\S\t|匹配⾮空⽩字符\t可以写在字符集[...]中\n|\\w\t|匹配单词字符，即[a-zA-Z0-9_]\t可以写在字符集[...]中\n|\\W\t|匹配⾮单词字符\t可以写在字符集[...]中\n\n### re 模块常用函数及注意事项\n\n待补充\n{:.warning}\n\n## 练习：常用正则表达式(Python re格式)\n- 电子邮箱 `\\w{1,10}\\.?\\w{1,10}@(163|gmail|qq).com`\n- 日期 `\\d{4}[.-/]\\d{2}[.-/]\\d{2}`\n- HTTP/HTML URL `\\<http://[^ ]+\\.html?\\>`\n\n## 参考资料\n- Jeffrey E.F.Friedl, Mastering Regular Expressions\n- [python——正则表达式(re模块)详解. 版权声明：本文为CSDN博主「nee~」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。](https://blog.csdn.net/guo_qingxia/article/details/113979135)\n\n\n","slug":"2021-10-26-regex","published":1,"updated":"2022-04-06T09:46:41.582Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cludw9n9i000g9wv9ckz2eezn","content":"<h2 id=\"基础部分\"><a href=\"#基础部分\" class=\"headerlink\" title=\"基础部分\"></a>基础部分</h2><ul>\n<li>工具：egrep. <code>egrep &#39;[regular expression]&#39; filename</code></li>\n</ul>\n<h3 id=\"行首行尾\"><a href=\"#行首行尾\" class=\"headerlink\" title=\"行首行尾\"></a>行首行尾</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">^ : 标记一行的开始位置</span><br><span class=\"line\">$ : 标记一行的结束位置</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 例子</span></span><br><span class=\"line\">^cat : 匹配以cat为行首的行，例如 catter</span><br><span class=\"line\">cat$ : 匹配以cat为结尾的行，例如 scat</span><br></pre></td></tr></table></figure>\n<span id=\"more\"></span>\n<h3 id=\"字符类\"><a href=\"#字符类\" class=\"headerlink\" title=\"字符类\"></a>字符类</h3><h4 id=\"匹配任意字符\"><a href=\"#匹配任意字符\" class=\"headerlink\" title=\"匹配任意字符\"></a>匹配任意字符</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[...] : 匹配中括号中的任意一个字符，中括号称为字符类</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 例子</span></span><br><span class=\"line\">gr[ea]y : 匹配 grey 或 gray, r 和 y 之间可以是e或者a</span><br><span class=\"line\">sep[ea]r[ea]te : 匹配 seperate 或 separete 或 separate 或 seperete</span><br><span class=\"line\">&lt;H[<span class=\"number\">123456</span>]&gt; : 匹配 &lt;H1&gt; 到 &lt;H6&gt;， 在html匹配中常见</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- : 划定字符范围</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 例子</span></span><br><span class=\"line\">[<span class=\"number\">1</span>-<span class=\"number\">6</span>]=[<span class=\"number\">123456</span>]</span><br><span class=\"line\">[<span class=\"number\">0</span>-9a-fA-F]=[0123456789abcdefABCDEF]</span><br></pre></td></tr></table></figure>\n<h4 id=\"否定字符类\"><a href=\"#否定字符类\" class=\"headerlink\" title=\"否定字符类\"></a>否定字符类</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[^...] : 匹配任意不在中括号中的字符，与 [...] 相反</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 例子：</span></span><br><span class=\"line\">[^<span class=\"number\">1</span>-<span class=\"number\">6</span>] : 匹配不在 <span class=\"number\">1</span>-<span class=\"number\">6</span> 中的字符</span><br><span class=\"line\">q[^u] : 匹配包含 q~， 其中 ~ 为不是字母u的其他字符的所有行</span><br></pre></td></tr></table></figure>\n<ul>\n<li>当 ^ 在中括号外面时表示行首标识符；当 ^ 在中括号里面时表示否定运算符</li>\n</ul>\n<h3 id=\"使用-‘-’-匹配-任意-字符\"><a href=\"#使用-‘-’-匹配-任意-字符\" class=\"headerlink\" title=\"使用 ‘.’ 匹配 任意 字符\"></a>使用 ‘.’ 匹配 <em>任意</em> 字符</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">. : 匹配任意字符</span><br><span class=\"line\">[.] : 无转义，匹配dot</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 例子：</span></span><br><span class=\"line\"><span class=\"number\">03.19</span><span class=\"number\">.76</span> : 匹配 03~<span class=\"number\">19</span>~<span class=\"number\">76</span>，其中~可以是任意字符</span><br><span class=\"line\">03[-./]<span class=\"number\">19</span>[-./]<span class=\"number\">76</span> : 以分隔符 . - 或 / 匹配 031976</span><br></pre></td></tr></table></figure>\n<h3 id=\"多个正则表达式\"><a href=\"#多个正则表达式\" class=\"headerlink\" title=\"多个正则表达式\"></a>多个正则表达式</h3><ul>\n<li>考虑如何将多个正则表达式结合到一起</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">| : 或运算， a | b 表示匹配正则表达式或正则表达式b。为了限定或运算范围，必要时用小括号括起来，例如 (a|b)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 例子</span></span><br><span class=\"line\">gr(a|e)y = gr[ae]y</span><br><span class=\"line\">^(From|Subject|Date): 匹配以From:或Subject:或Date:开头的行</span><br></pre></td></tr></table></figure>\n<h3 id=\"使用’-’匹配可选字符\"><a href=\"#使用’-’匹配可选字符\" class=\"headerlink\" title=\"使用’?’匹配可选字符\"></a>使用’?’匹配可选字符</h3><ul>\n<li>考虑匹配 colour 或 color，这里的 u 可选出现或不出现</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">? : 可选运算，u? 表示匹配出现u或不出现u，作用对象为?的前一个字符</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 例子</span></span><br><span class=\"line\">colou?r = (color|colour)</span><br></pre></td></tr></table></figure>\n<h3 id=\"匹配重复字符\"><a href=\"#匹配重复字符\" class=\"headerlink\" title=\"匹配重复字符\"></a>匹配重复字符</h3><ul>\n<li>考虑一个字符重复多次： goooooooooooooooooood!，但是次数不定</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+ : 匹配一个字符<span class=\"number\">1</span>次或多次（至少<span class=\"number\">1</span>次）</span><br><span class=\"line\">* : 匹配一个字符<span class=\"number\">0</span>次或多次（至少<span class=\"number\">0</span>次）</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 例子：</span></span><br><span class=\"line\">goo+d: 匹配good,goood,goo...od</span><br><span class=\"line\">goo*d: 匹配god, good, ...</span><br><span class=\"line\">&lt;HR +SIZE *= *[<span class=\"number\">0</span>-<span class=\"number\">9</span>]+ *&gt;: 空格可以出现任意多次</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">运算符</th>\n<th style=\"text-align:left\">字符最小出现次数</th>\n<th style=\"text-align:left\">字符最大出现次数</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">?</td>\n<td style=\"text-align:left\">0</td>\n<td style=\"text-align:left\">1</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">+</td>\n<td style=\"text-align:left\">1</td>\n<td style=\"text-align:left\">无限</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">*</td>\n<td style=\"text-align:left\">0</td>\n<td style=\"text-align:left\">无限</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h4 id=\"自定义字符重复次数\"><a href=\"#自定义字符重复次数\" class=\"headerlink\" title=\"自定义字符重复次数\"></a>自定义字符重复次数</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">u&#123;<span class=\"built_in\">min</span>, <span class=\"built_in\">max</span>&#125; : 匹配字符u最小重复<span class=\"built_in\">min</span>次，最大重复<span class=\"built_in\">max</span>次。尽可能多地统计</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 例子：</span></span><br><span class=\"line\">[a-zA-Z]&#123;<span class=\"number\">3</span>,<span class=\"number\">8</span>&#125;: 匹配<span class=\"number\">3</span>至<span class=\"number\">8</span>个连续出现的英文字母（尽可能多）</span><br></pre></td></tr></table></figure>\n<h2 id=\"Python-re-模块要点\"><a href=\"#Python-re-模块要点\" class=\"headerlink\" title=\"Python re 模块要点\"></a>Python re 模块要点</h2><h3 id=\"转义字符\"><a href=\"#转义字符\" class=\"headerlink\" title=\"转义字符\"></a>转义字符</h3><ul>\n<li>上述正则表达式规则基于Linux的egrep。针对Python的re模块，另有一些重要的转义字符可以用</li>\n</ul>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">字符</th>\n<th style=\"text-align:left\">功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">\\d</td>\n<td style=\"text-align:left\">匹配数字，即[0-9]    可以写在字符集[…]中</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">\\D</td>\n<td style=\"text-align:left\">匹配⾮数字，即不是数字    可以写在字符集[…]中</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">\\s</td>\n<td style=\"text-align:left\">匹配空⽩，即空格，tab键    可以写在字符集[…]中</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">\\S</td>\n<td style=\"text-align:left\">匹配⾮空⽩字符    可以写在字符集[…]中</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">\\w</td>\n<td style=\"text-align:left\">匹配单词字符，即[a-zA-Z0-9_]    可以写在字符集[…]中</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">\\W</td>\n<td style=\"text-align:left\">匹配⾮单词字符    可以写在字符集[…]中</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h3 id=\"re-模块常用函数及注意事项\"><a href=\"#re-模块常用函数及注意事项\" class=\"headerlink\" title=\"re 模块常用函数及注意事项\"></a>re 模块常用函数及注意事项</h3><p>待补充<br>{:.warning}</p>\n<h2 id=\"练习：常用正则表达式-Python-re格式\"><a href=\"#练习：常用正则表达式-Python-re格式\" class=\"headerlink\" title=\"练习：常用正则表达式(Python re格式)\"></a>练习：常用正则表达式(Python re格式)</h2><ul>\n<li>电子邮箱 <code>\\w&#123;1,10&#125;\\.?\\w&#123;1,10&#125;@(163|gmail|qq).com</code></li>\n<li>日期 <code>\\d&#123;4&#125;[.-/]\\d&#123;2&#125;[.-/]\\d&#123;2&#125;</code></li>\n<li>HTTP/HTML URL <code>\\&lt;http://[^ ]+\\.html?\\&gt;</code></li>\n</ul>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li>Jeffrey E.F.Friedl, Mastering Regular Expressions</li>\n<li><a href=\"https://blog.csdn.net/guo_qingxia/article/details/113979135\">python——正则表达式(re模块)详解. 版权声明：本文为CSDN博主「nee~」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。</a></li>\n</ul>\n","site":{"data":{}},"length":1747,"excerpt":"<h2 id=\"基础部分\"><a href=\"#基础部分\" class=\"headerlink\" title=\"基础部分\"></a>基础部分</h2><ul>\n<li>工具：egrep. <code>egrep &#39;[regular expression]&#39; filename</code></li>\n</ul>\n<h3 id=\"行首行尾\"><a href=\"#行首行尾\" class=\"headerlink\" title=\"行首行尾\"></a>行首行尾</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">^ : 标记一行的开始位置</span><br><span class=\"line\">$ : 标记一行的结束位置</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 例子</span></span><br><span class=\"line\">^cat : 匹配以cat为行首的行，例如 catter</span><br><span class=\"line\">cat$ : 匹配以cat为结尾的行，例如 scat</span><br></pre></td></tr></table></figure>","more":"<h3 id=\"字符类\"><a href=\"#字符类\" class=\"headerlink\" title=\"字符类\"></a>字符类</h3><h4 id=\"匹配任意字符\"><a href=\"#匹配任意字符\" class=\"headerlink\" title=\"匹配任意字符\"></a>匹配任意字符</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[...] : 匹配中括号中的任意一个字符，中括号称为字符类</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 例子</span></span><br><span class=\"line\">gr[ea]y : 匹配 grey 或 gray, r 和 y 之间可以是e或者a</span><br><span class=\"line\">sep[ea]r[ea]te : 匹配 seperate 或 separete 或 separate 或 seperete</span><br><span class=\"line\">&lt;H[<span class=\"number\">123456</span>]&gt; : 匹配 &lt;H1&gt; 到 &lt;H6&gt;， 在html匹配中常见</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- : 划定字符范围</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 例子</span></span><br><span class=\"line\">[<span class=\"number\">1</span>-<span class=\"number\">6</span>]=[<span class=\"number\">123456</span>]</span><br><span class=\"line\">[<span class=\"number\">0</span>-9a-fA-F]=[0123456789abcdefABCDEF]</span><br></pre></td></tr></table></figure>\n<h4 id=\"否定字符类\"><a href=\"#否定字符类\" class=\"headerlink\" title=\"否定字符类\"></a>否定字符类</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[^...] : 匹配任意不在中括号中的字符，与 [...] 相反</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 例子：</span></span><br><span class=\"line\">[^<span class=\"number\">1</span>-<span class=\"number\">6</span>] : 匹配不在 <span class=\"number\">1</span>-<span class=\"number\">6</span> 中的字符</span><br><span class=\"line\">q[^u] : 匹配包含 q~， 其中 ~ 为不是字母u的其他字符的所有行</span><br></pre></td></tr></table></figure>\n<ul>\n<li>当 ^ 在中括号外面时表示行首标识符；当 ^ 在中括号里面时表示否定运算符</li>\n</ul>\n<h3 id=\"使用-‘-’-匹配-任意-字符\"><a href=\"#使用-‘-’-匹配-任意-字符\" class=\"headerlink\" title=\"使用 ‘.’ 匹配 任意 字符\"></a>使用 ‘.’ 匹配 <em>任意</em> 字符</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">. : 匹配任意字符</span><br><span class=\"line\">[.] : 无转义，匹配dot</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 例子：</span></span><br><span class=\"line\"><span class=\"number\">03.19</span><span class=\"number\">.76</span> : 匹配 03~<span class=\"number\">19</span>~<span class=\"number\">76</span>，其中~可以是任意字符</span><br><span class=\"line\">03[-./]<span class=\"number\">19</span>[-./]<span class=\"number\">76</span> : 以分隔符 . - 或 / 匹配 031976</span><br></pre></td></tr></table></figure>\n<h3 id=\"多个正则表达式\"><a href=\"#多个正则表达式\" class=\"headerlink\" title=\"多个正则表达式\"></a>多个正则表达式</h3><ul>\n<li>考虑如何将多个正则表达式结合到一起</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">| : 或运算， a | b 表示匹配正则表达式或正则表达式b。为了限定或运算范围，必要时用小括号括起来，例如 (a|b)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 例子</span></span><br><span class=\"line\">gr(a|e)y = gr[ae]y</span><br><span class=\"line\">^(From|Subject|Date): 匹配以From:或Subject:或Date:开头的行</span><br></pre></td></tr></table></figure>\n<h3 id=\"使用’-’匹配可选字符\"><a href=\"#使用’-’匹配可选字符\" class=\"headerlink\" title=\"使用’?’匹配可选字符\"></a>使用’?’匹配可选字符</h3><ul>\n<li>考虑匹配 colour 或 color，这里的 u 可选出现或不出现</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">? : 可选运算，u? 表示匹配出现u或不出现u，作用对象为?的前一个字符</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 例子</span></span><br><span class=\"line\">colou?r = (color|colour)</span><br></pre></td></tr></table></figure>\n<h3 id=\"匹配重复字符\"><a href=\"#匹配重复字符\" class=\"headerlink\" title=\"匹配重复字符\"></a>匹配重复字符</h3><ul>\n<li>考虑一个字符重复多次： goooooooooooooooooood!，但是次数不定</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+ : 匹配一个字符<span class=\"number\">1</span>次或多次（至少<span class=\"number\">1</span>次）</span><br><span class=\"line\">* : 匹配一个字符<span class=\"number\">0</span>次或多次（至少<span class=\"number\">0</span>次）</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 例子：</span></span><br><span class=\"line\">goo+d: 匹配good,goood,goo...od</span><br><span class=\"line\">goo*d: 匹配god, good, ...</span><br><span class=\"line\">&lt;HR +SIZE *= *[<span class=\"number\">0</span>-<span class=\"number\">9</span>]+ *&gt;: 空格可以出现任意多次</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">运算符</th>\n<th style=\"text-align:left\">字符最小出现次数</th>\n<th style=\"text-align:left\">字符最大出现次数</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">?</td>\n<td style=\"text-align:left\">0</td>\n<td style=\"text-align:left\">1</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">+</td>\n<td style=\"text-align:left\">1</td>\n<td style=\"text-align:left\">无限</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">*</td>\n<td style=\"text-align:left\">0</td>\n<td style=\"text-align:left\">无限</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h4 id=\"自定义字符重复次数\"><a href=\"#自定义字符重复次数\" class=\"headerlink\" title=\"自定义字符重复次数\"></a>自定义字符重复次数</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">u&#123;<span class=\"built_in\">min</span>, <span class=\"built_in\">max</span>&#125; : 匹配字符u最小重复<span class=\"built_in\">min</span>次，最大重复<span class=\"built_in\">max</span>次。尽可能多地统计</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 例子：</span></span><br><span class=\"line\">[a-zA-Z]&#123;<span class=\"number\">3</span>,<span class=\"number\">8</span>&#125;: 匹配<span class=\"number\">3</span>至<span class=\"number\">8</span>个连续出现的英文字母（尽可能多）</span><br></pre></td></tr></table></figure>\n<h2 id=\"Python-re-模块要点\"><a href=\"#Python-re-模块要点\" class=\"headerlink\" title=\"Python re 模块要点\"></a>Python re 模块要点</h2><h3 id=\"转义字符\"><a href=\"#转义字符\" class=\"headerlink\" title=\"转义字符\"></a>转义字符</h3><ul>\n<li>上述正则表达式规则基于Linux的egrep。针对Python的re模块，另有一些重要的转义字符可以用</li>\n</ul>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">字符</th>\n<th style=\"text-align:left\">功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">\\d</td>\n<td style=\"text-align:left\">匹配数字，即[0-9]    可以写在字符集[…]中</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">\\D</td>\n<td style=\"text-align:left\">匹配⾮数字，即不是数字    可以写在字符集[…]中</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">\\s</td>\n<td style=\"text-align:left\">匹配空⽩，即空格，tab键    可以写在字符集[…]中</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">\\S</td>\n<td style=\"text-align:left\">匹配⾮空⽩字符    可以写在字符集[…]中</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">\\w</td>\n<td style=\"text-align:left\">匹配单词字符，即[a-zA-Z0-9_]    可以写在字符集[…]中</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">\\W</td>\n<td style=\"text-align:left\">匹配⾮单词字符    可以写在字符集[…]中</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h3 id=\"re-模块常用函数及注意事项\"><a href=\"#re-模块常用函数及注意事项\" class=\"headerlink\" title=\"re 模块常用函数及注意事项\"></a>re 模块常用函数及注意事项</h3><p>待补充<br>{:.warning}</p>\n<h2 id=\"练习：常用正则表达式-Python-re格式\"><a href=\"#练习：常用正则表达式-Python-re格式\" class=\"headerlink\" title=\"练习：常用正则表达式(Python re格式)\"></a>练习：常用正则表达式(Python re格式)</h2><ul>\n<li>电子邮箱 <code>\\w&#123;1,10&#125;\\.?\\w&#123;1,10&#125;@(163|gmail|qq).com</code></li>\n<li>日期 <code>\\d&#123;4&#125;[.-/]\\d&#123;2&#125;[.-/]\\d&#123;2&#125;</code></li>\n<li>HTTP/HTML URL <code>\\&lt;http://[^ ]+\\.html?\\&gt;</code></li>\n</ul>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li>Jeffrey E.F.Friedl, Mastering Regular Expressions</li>\n<li><a href=\"https://blog.csdn.net/guo_qingxia/article/details/113979135\">python——正则表达式(re模块)详解. 版权声明：本文为CSDN博主「nee~」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。</a></li>\n</ul>"},{"title":"一些杂谈.1","author":"LiJT","date":"2021-11-22T16:00:00.000Z","key":"delicacy20211123","_content":"\n```\n不被时间和社会所束缚\n幸福地填饱肚子的时候\n那一瞬间 他已变得唯我独尊\n自由自在\n无需介怀地大快朵颐 这种孤高的行为\n正可谓是现代人被平等赋予的\n最高治愈\n——孤独的美食家\n```\n<!--more-->\n\n最近在看《孤独的美食家》，计划从第一季一口气追到第九季。每天总是夜深人静的时间点亮屏幕，看着酥脆的可乐饼、麻辣鲜香的担担面、热气腾腾的关东煮在眼前呈现。虽然折磨，但实在是欲罢不能。\n\n真正的美食，不一定要登大雅之堂，不一定要呈现在五星级酒店，不一定非要松茸加身，鱼子酱包裹。美食可以是路边小馆的羊汤，可以是家庭餐厅的石锅拌饭。美食之美，只有自己的舌、胃、心能够体会。\n\n\n\n","source":"_posts/2021-11-23-delicacy.md","raw":"---\ntitle: 一些杂谈.1\nauthor: LiJT\ndate: 2021-11-23\ntags: \n  - 美食 \n  - 杂谈\nkey: delicacy20211123\n---\n\n```\n不被时间和社会所束缚\n幸福地填饱肚子的时候\n那一瞬间 他已变得唯我独尊\n自由自在\n无需介怀地大快朵颐 这种孤高的行为\n正可谓是现代人被平等赋予的\n最高治愈\n——孤独的美食家\n```\n<!--more-->\n\n最近在看《孤独的美食家》，计划从第一季一口气追到第九季。每天总是夜深人静的时间点亮屏幕，看着酥脆的可乐饼、麻辣鲜香的担担面、热气腾腾的关东煮在眼前呈现。虽然折磨，但实在是欲罢不能。\n\n真正的美食，不一定要登大雅之堂，不一定要呈现在五星级酒店，不一定非要松茸加身，鱼子酱包裹。美食可以是路边小馆的羊汤，可以是家庭餐厅的石锅拌饭。美食之美，只有自己的舌、胃、心能够体会。\n\n\n\n","slug":"2021-11-23-delicacy","published":1,"updated":"2022-04-06T09:47:11.857Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cludw9n9i000h9wv9fhs61f9h","content":"<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">不被时间和社会所束缚</span><br><span class=\"line\">幸福地填饱肚子的时候</span><br><span class=\"line\">那一瞬间 他已变得唯我独尊</span><br><span class=\"line\">自由自在</span><br><span class=\"line\">无需介怀地大快朵颐 这种孤高的行为</span><br><span class=\"line\">正可谓是现代人被平等赋予的</span><br><span class=\"line\">最高治愈</span><br><span class=\"line\">——孤独的美食家</span><br></pre></td></tr></table></figure>\n<span id=\"more\"></span>\n<p>最近在看《孤独的美食家》，计划从第一季一口气追到第九季。每天总是夜深人静的时间点亮屏幕，看着酥脆的可乐饼、麻辣鲜香的担担面、热气腾腾的关东煮在眼前呈现。虽然折磨，但实在是欲罢不能。</p>\n<p>真正的美食，不一定要登大雅之堂，不一定要呈现在五星级酒店，不一定非要松茸加身，鱼子酱包裹。美食可以是路边小馆的羊汤，可以是家庭餐厅的石锅拌饭。美食之美，只有自己的舌、胃、心能够体会。</p>\n","site":{"data":{}},"length":266,"excerpt":"<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">不被时间和社会所束缚</span><br><span class=\"line\">幸福地填饱肚子的时候</span><br><span class=\"line\">那一瞬间 他已变得唯我独尊</span><br><span class=\"line\">自由自在</span><br><span class=\"line\">无需介怀地大快朵颐 这种孤高的行为</span><br><span class=\"line\">正可谓是现代人被平等赋予的</span><br><span class=\"line\">最高治愈</span><br><span class=\"line\">——孤独的美食家</span><br></pre></td></tr></table></figure>","more":"<p>最近在看《孤独的美食家》，计划从第一季一口气追到第九季。每天总是夜深人静的时间点亮屏幕，看着酥脆的可乐饼、麻辣鲜香的担担面、热气腾腾的关东煮在眼前呈现。虽然折磨，但实在是欲罢不能。</p>\n<p>真正的美食，不一定要登大雅之堂，不一定要呈现在五星级酒店，不一定非要松茸加身，鱼子酱包裹。美食可以是路边小馆的羊汤，可以是家庭餐厅的石锅拌饭。美食之美，只有自己的舌、胃、心能够体会。</p>"},{"title":"记一次vscode remote-ssh登录失败的解决方案","author":"LiJT","date":"2021-11-25T16:00:00.000Z","key":"vscode20211126","_content":"\n我的vscode remote-ssh设置了[免密登录](https://www.jianshu.com/p/32aa2fa936bb)，本来昨天上午还能正常登录，但昨晚开始登录失败，怀疑是vscode版本更新后动了某些配置。参考一些资料后，总结了如下的解决方案.\n<!--more-->\n\n- 环境：本地 win11，服务器 linux\n\n## 步骤1.更改Remote-SSH设置\n- 一种可能导致登录失败的理由是，更新后的remote-ssh缺失了`\"remote.SSH.useLocalServer: true\"`的配置。为此，我们进入remote-ssh的settings.json中查看配置情况：\n1. 点击vscode左边栏“扩展”或按`Ctrl+Shift+X`，找到remote-ssh插件，点击右下角的小齿轮，进入设置页面 \n   \n   ![1](/LiJT-Daily/images/2021112601.png)\n2. 在设置页面，找到\"在settings.json编辑\"按钮，点击进入\n   \n   ![2](/LiJT-Daily/images/2021112602.png)\n3. 在settings.json中，检查是否有`\"remote.SSH.useLocalServer\"`选项。如果没有，则在最外层大括号内添加`\"remote.SSH.useLocalServer\": true`；如果有且值为`false`，则将值修改为`true`。修改后结果如下所示\n   \n   ![3](/LiJT-Daily/images/2021112603.png)\n4. 保存settings.json，重新启动vscode，尝试远程登录。\n\n## 步骤2.清空远程~/.vscode-server文件夹\n- 如果步骤1不能解决问题，则可以尝试步骤2.步骤2相比于步骤1，是强制初始化远程vscode环境。\n\n1. __关闭vscode server__。在本地vscode中按`Ctrl+Shift+P`进入命令面板，输入`Kill VS Code Server on Host`，选中Remote-SSH中的对应命令，强制关闭对应的vscode server。这一步一定不能省略，否则下一步将无法删除 ~/.vscode-server 文件\n   \n   ![4](/LiJT-Daily/images/2021112604.png)\n2. 强制删除~/.vscode-server。vscode 服务器环境统一存储在~/.vscode-server中，其中~表示自己服务器账号的根目录。使用如下命令删除该文件夹：\n```\nrm -rf ~/.vscode-server\n```\n3. 重新启动vscode，尝试远程登录。此时服务器会自动下载新的~/.vscode-server文件，待下载完成、配置完成后，即可使用。\n\n## 更新 (2021.11.27)\n- 当vscode remote-ssh 未关闭而电脑休眠后再唤醒时，会出现相同的登陆失败的问题。直接采用步骤2，问题解决\n\n## 参考资料\n- [非root用户配置VS Code Remote-SSH - - windows系统](https://www.jianshu.com/p/32aa2fa936bb)\n- [Resolver error: Error: The VS Code Server failed to start 的一种解决方案](https://www.cnblogs.com/springwind2006/p/14311454.html)\n- [vs code远程开发 SSH连接失败](https://blog.csdn.net/weilin731/article/details/119778478)\n- [vscode ssh连接失败](https://blog.csdn.net/myWorld001/article/details/119443079?spm=1001.2101.3001.6650.1&utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-1.no_search_link&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-1.no_search_link)\n","source":"_posts/2021-11-26-vscode.md","raw":"---\ntitle: 记一次vscode remote-ssh登录失败的解决方案\nauthor: LiJT\ndate: 2021-11-26\ntags: \n   - coding \n   - vscode \n   - ssh\nkey: vscode20211126\n---\n\n我的vscode remote-ssh设置了[免密登录](https://www.jianshu.com/p/32aa2fa936bb)，本来昨天上午还能正常登录，但昨晚开始登录失败，怀疑是vscode版本更新后动了某些配置。参考一些资料后，总结了如下的解决方案.\n<!--more-->\n\n- 环境：本地 win11，服务器 linux\n\n## 步骤1.更改Remote-SSH设置\n- 一种可能导致登录失败的理由是，更新后的remote-ssh缺失了`\"remote.SSH.useLocalServer: true\"`的配置。为此，我们进入remote-ssh的settings.json中查看配置情况：\n1. 点击vscode左边栏“扩展”或按`Ctrl+Shift+X`，找到remote-ssh插件，点击右下角的小齿轮，进入设置页面 \n   \n   ![1](/LiJT-Daily/images/2021112601.png)\n2. 在设置页面，找到\"在settings.json编辑\"按钮，点击进入\n   \n   ![2](/LiJT-Daily/images/2021112602.png)\n3. 在settings.json中，检查是否有`\"remote.SSH.useLocalServer\"`选项。如果没有，则在最外层大括号内添加`\"remote.SSH.useLocalServer\": true`；如果有且值为`false`，则将值修改为`true`。修改后结果如下所示\n   \n   ![3](/LiJT-Daily/images/2021112603.png)\n4. 保存settings.json，重新启动vscode，尝试远程登录。\n\n## 步骤2.清空远程~/.vscode-server文件夹\n- 如果步骤1不能解决问题，则可以尝试步骤2.步骤2相比于步骤1，是强制初始化远程vscode环境。\n\n1. __关闭vscode server__。在本地vscode中按`Ctrl+Shift+P`进入命令面板，输入`Kill VS Code Server on Host`，选中Remote-SSH中的对应命令，强制关闭对应的vscode server。这一步一定不能省略，否则下一步将无法删除 ~/.vscode-server 文件\n   \n   ![4](/LiJT-Daily/images/2021112604.png)\n2. 强制删除~/.vscode-server。vscode 服务器环境统一存储在~/.vscode-server中，其中~表示自己服务器账号的根目录。使用如下命令删除该文件夹：\n```\nrm -rf ~/.vscode-server\n```\n3. 重新启动vscode，尝试远程登录。此时服务器会自动下载新的~/.vscode-server文件，待下载完成、配置完成后，即可使用。\n\n## 更新 (2021.11.27)\n- 当vscode remote-ssh 未关闭而电脑休眠后再唤醒时，会出现相同的登陆失败的问题。直接采用步骤2，问题解决\n\n## 参考资料\n- [非root用户配置VS Code Remote-SSH - - windows系统](https://www.jianshu.com/p/32aa2fa936bb)\n- [Resolver error: Error: The VS Code Server failed to start 的一种解决方案](https://www.cnblogs.com/springwind2006/p/14311454.html)\n- [vs code远程开发 SSH连接失败](https://blog.csdn.net/weilin731/article/details/119778478)\n- [vscode ssh连接失败](https://blog.csdn.net/myWorld001/article/details/119443079?spm=1001.2101.3001.6650.1&utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-1.no_search_link&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-1.no_search_link)\n","slug":"2021-11-26-vscode","published":1,"updated":"2022-04-06T09:47:50.569Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cludw9n9j000j9wv9dbwehz78","content":"<p>我的vscode remote-ssh设置了<a href=\"https://www.jianshu.com/p/32aa2fa936bb\">免密登录</a>，本来昨天上午还能正常登录，但昨晚开始登录失败，怀疑是vscode版本更新后动了某些配置。参考一些资料后，总结了如下的解决方案.<br><span id=\"more\"></span></p>\n<ul>\n<li>环境：本地 win11，服务器 linux</li>\n</ul>\n<h2 id=\"步骤1-更改Remote-SSH设置\"><a href=\"#步骤1-更改Remote-SSH设置\" class=\"headerlink\" title=\"步骤1.更改Remote-SSH设置\"></a>步骤1.更改Remote-SSH设置</h2><ul>\n<li>一种可能导致登录失败的理由是，更新后的remote-ssh缺失了<code>&quot;remote.SSH.useLocalServer: true&quot;</code>的配置。为此，我们进入remote-ssh的settings.json中查看配置情况：</li>\n</ul>\n<ol>\n<li><p>点击vscode左边栏“扩展”或按<code>Ctrl+Shift+X</code>，找到remote-ssh插件，点击右下角的小齿轮，进入设置页面 </p>\n<p><img src=\"/LiJT-Daily/images/2021112601.png\" alt=\"1\"></p>\n</li>\n<li><p>在设置页面，找到”在settings.json编辑”按钮，点击进入</p>\n<p><img src=\"/LiJT-Daily/images/2021112602.png\" alt=\"2\"></p>\n</li>\n<li><p>在settings.json中，检查是否有<code>&quot;remote.SSH.useLocalServer&quot;</code>选项。如果没有，则在最外层大括号内添加<code>&quot;remote.SSH.useLocalServer&quot;: true</code>；如果有且值为<code>false</code>，则将值修改为<code>true</code>。修改后结果如下所示</p>\n<p><img src=\"/LiJT-Daily/images/2021112603.png\" alt=\"3\"></p>\n</li>\n<li>保存settings.json，重新启动vscode，尝试远程登录。</li>\n</ol>\n<h2 id=\"步骤2-清空远程-vscode-server文件夹\"><a href=\"#步骤2-清空远程-vscode-server文件夹\" class=\"headerlink\" title=\"步骤2.清空远程~/.vscode-server文件夹\"></a>步骤2.清空远程~/.vscode-server文件夹</h2><ul>\n<li>如果步骤1不能解决问题，则可以尝试步骤2.步骤2相比于步骤1，是强制初始化远程vscode环境。</li>\n</ul>\n<ol>\n<li><p><strong>关闭vscode server</strong>。在本地vscode中按<code>Ctrl+Shift+P</code>进入命令面板，输入<code>Kill VS Code Server on Host</code>，选中Remote-SSH中的对应命令，强制关闭对应的vscode server。这一步一定不能省略，否则下一步将无法删除 ~/.vscode-server 文件</p>\n<p><img src=\"/LiJT-Daily/images/2021112604.png\" alt=\"4\"></p>\n</li>\n<li>强制删除~/.vscode-server。vscode 服务器环境统一存储在~/.vscode-server中，其中~表示自己服务器账号的根目录。使用如下命令删除该文件夹：<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rm -rf ~/.vscode-server</span><br></pre></td></tr></table></figure></li>\n<li>重新启动vscode，尝试远程登录。此时服务器会自动下载新的~/.vscode-server文件，待下载完成、配置完成后，即可使用。</li>\n</ol>\n<h2 id=\"更新-2021-11-27\"><a href=\"#更新-2021-11-27\" class=\"headerlink\" title=\"更新 (2021.11.27)\"></a>更新 (2021.11.27)</h2><ul>\n<li>当vscode remote-ssh 未关闭而电脑休眠后再唤醒时，会出现相同的登陆失败的问题。直接采用步骤2，问题解决</li>\n</ul>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li><a href=\"https://www.jianshu.com/p/32aa2fa936bb\">非root用户配置VS Code Remote-SSH - - windows系统</a></li>\n<li><a href=\"https://www.cnblogs.com/springwind2006/p/14311454.html\">Resolver error: Error: The VS Code Server failed to start 的一种解决方案</a></li>\n<li><a href=\"https://blog.csdn.net/weilin731/article/details/119778478\">vs code远程开发 SSH连接失败</a></li>\n<li><a href=\"https://blog.csdn.net/myWorld001/article/details/119443079?spm=1001.2101.3001.6650.1&amp;utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-1.no_search_link&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-1.no_search_link\">vscode ssh连接失败</a></li>\n</ul>\n","site":{"data":{}},"length":1114,"excerpt":"<p>我的vscode remote-ssh设置了<a href=\"https://www.jianshu.com/p/32aa2fa936bb\">免密登录</a>，本来昨天上午还能正常登录，但昨晚开始登录失败，怀疑是vscode版本更新后动了某些配置。参考一些资料后，总结了如下的解决方案.<br>","more":"</p>\n<ul>\n<li>环境：本地 win11，服务器 linux</li>\n</ul>\n<h2 id=\"步骤1-更改Remote-SSH设置\"><a href=\"#步骤1-更改Remote-SSH设置\" class=\"headerlink\" title=\"步骤1.更改Remote-SSH设置\"></a>步骤1.更改Remote-SSH设置</h2><ul>\n<li>一种可能导致登录失败的理由是，更新后的remote-ssh缺失了<code>&quot;remote.SSH.useLocalServer: true&quot;</code>的配置。为此，我们进入remote-ssh的settings.json中查看配置情况：</li>\n</ul>\n<ol>\n<li><p>点击vscode左边栏“扩展”或按<code>Ctrl+Shift+X</code>，找到remote-ssh插件，点击右下角的小齿轮，进入设置页面 </p>\n<p><img src=\"/LiJT-Daily/images/2021112601.png\" alt=\"1\"></p>\n</li>\n<li><p>在设置页面，找到”在settings.json编辑”按钮，点击进入</p>\n<p><img src=\"/LiJT-Daily/images/2021112602.png\" alt=\"2\"></p>\n</li>\n<li><p>在settings.json中，检查是否有<code>&quot;remote.SSH.useLocalServer&quot;</code>选项。如果没有，则在最外层大括号内添加<code>&quot;remote.SSH.useLocalServer&quot;: true</code>；如果有且值为<code>false</code>，则将值修改为<code>true</code>。修改后结果如下所示</p>\n<p><img src=\"/LiJT-Daily/images/2021112603.png\" alt=\"3\"></p>\n</li>\n<li>保存settings.json，重新启动vscode，尝试远程登录。</li>\n</ol>\n<h2 id=\"步骤2-清空远程-vscode-server文件夹\"><a href=\"#步骤2-清空远程-vscode-server文件夹\" class=\"headerlink\" title=\"步骤2.清空远程~/.vscode-server文件夹\"></a>步骤2.清空远程~/.vscode-server文件夹</h2><ul>\n<li>如果步骤1不能解决问题，则可以尝试步骤2.步骤2相比于步骤1，是强制初始化远程vscode环境。</li>\n</ul>\n<ol>\n<li><p><strong>关闭vscode server</strong>。在本地vscode中按<code>Ctrl+Shift+P</code>进入命令面板，输入<code>Kill VS Code Server on Host</code>，选中Remote-SSH中的对应命令，强制关闭对应的vscode server。这一步一定不能省略，否则下一步将无法删除 ~/.vscode-server 文件</p>\n<p><img src=\"/LiJT-Daily/images/2021112604.png\" alt=\"4\"></p>\n</li>\n<li>强制删除~/.vscode-server。vscode 服务器环境统一存储在~/.vscode-server中，其中~表示自己服务器账号的根目录。使用如下命令删除该文件夹：<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rm -rf ~/.vscode-server</span><br></pre></td></tr></table></figure></li>\n<li>重新启动vscode，尝试远程登录。此时服务器会自动下载新的~/.vscode-server文件，待下载完成、配置完成后，即可使用。</li>\n</ol>\n<h2 id=\"更新-2021-11-27\"><a href=\"#更新-2021-11-27\" class=\"headerlink\" title=\"更新 (2021.11.27)\"></a>更新 (2021.11.27)</h2><ul>\n<li>当vscode remote-ssh 未关闭而电脑休眠后再唤醒时，会出现相同的登陆失败的问题。直接采用步骤2，问题解决</li>\n</ul>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li><a href=\"https://www.jianshu.com/p/32aa2fa936bb\">非root用户配置VS Code Remote-SSH - - windows系统</a></li>\n<li><a href=\"https://www.cnblogs.com/springwind2006/p/14311454.html\">Resolver error: Error: The VS Code Server failed to start 的一种解决方案</a></li>\n<li><a href=\"https://blog.csdn.net/weilin731/article/details/119778478\">vs code远程开发 SSH连接失败</a></li>\n<li><a href=\"https://blog.csdn.net/myWorld001/article/details/119443079?spm=1001.2101.3001.6650.1&amp;utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-1.no_search_link&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-1.no_search_link\">vscode ssh连接失败</a></li>\n</ul>"},{"title":"Hadoop 实战练习记录","author":"LiJT","date":"2021-12-12T16:00:00.000Z","key":"hadoop20211213","_content":"\n## 写在前面\n本篇记录Hadoop实战学习中的笔记以及问题分析。\n\n<!--more-->\n\n## Mapreduce 实战\n### Mapreduce 程序模型\n#### 什么是Mapreduce\nMapReduce是一种可用于数据处理的编程模型，我们现在设想一个场景，你接到一个任务，任务是：挖掘分析我国气象中心近年来的数据日志，该数据日志大小有3T,让你分析计算出每一年的最高气温，如果你现在只有一台计算机，如何处理呢？我想你应该会读取这些数据，并且将读取到的数据与目前的最大气温值进行比较。比较完所有的数据之后就可以得出最高气温了。不过以我们的经验都知道要处理这么多数据肯定是非常耗时的。\n\n如果我现在给你三台机器，你会如何处理呢？你应该想到了：最好的处理方式是将这些数据切分成三块，然后分别计算处理这些数据（Map），处理完毕之后发送到一台机器上进行合并（merge），再计算合并之后的数据，归纳（reduce）并输出。\n\n这就是一个比较完整的MapReduce的过程了。\n\n![Mapreduce原理](/LiJT-Daily/images/2021121301.png)\n\n#### Mapreduce程序结构(以Word Count为例)\n```java\nimport java.io.IOException;\nimport java.util.StringTokenizer;\n \nimport java.io.IOException;\nimport java.util.StringTokenizer;\nimport org.apache.hadoop.conf.Configuration;\nimport org.apache.hadoop.fs.Path;\nimport org.apache.hadoop.io.*;\nimport org.apache.hadoop.io.Text;\nimport org.apache.hadoop.mapreduce.Job;\nimport org.apache.hadoop.mapreduce.Mapper;\nimport org.apache.hadoop.mapreduce.Reducer;\nimport org.apache.hadoop.mapreduce.lib.input.FileInputFormat;\nimport org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;\nimport org.apache.hadoop.util.GenericOptionsParser;\n\npublic class WordCount {\n//Mapper类\n/*LongWritable表示每一行起始偏移量\n第一个Text是用来接受文件中的内容，\n第二个Text是用来输出给Reduce类的key,\nIntWritable是用来输出给Reduce类的value*/\n public static class TokenizerMapper \n       extends Mapper<LongWritable, Text, Text, IntWritable>{\n    private final static IntWritable one = new IntWritable(1);\n    private Text word = new Text();\n    public void map(LongWritable key, Text value, Context context\n                    ) throws IOException, InterruptedException {\n      StringTokenizer itr = new StringTokenizer(value.toString());\n      while (itr.hasMoreTokens()) {\n        word.set(itr.nextToken());\n        context.write(word, one);\n      }\n    }\n  }\n  public static class IntSumReducer \n       extends Reducer<Text,IntWritable,Text,IntWritable> {\n    private IntWritable result = new IntWritable();\n    public void reduce(Text key, Iterable<IntWritable> values, \n                       Context context\n                       ) throws IOException, InterruptedException {\n      int sum = 0;\n      for (IntWritable val : values) {\n        sum += val.get();\n      }\n      result.set(sum);\n      context.write(key, result);\n    }\n  }\n  public static void main(String[] args) throws Exception {\n    //创建配置对象\n    Configuration conf = new Configuration();\n    //创建job对象\n    Job job = new Job(conf, \"word count\");\n    //设置运行job的类\n    job.setJarByClass(WordCount.class);\n    //设置Mapper的类\n    job.setMapperClass(TokenizerMapper.class);\n    //设置Reduce的类\n    job.setReducerClass(IntSumReducer.class);\n    //设置输出的key value格式\n    job.setOutputKeyClass(Text.class);\n    job.setOutputValueClass(IntWritable.class);\n    //设置输入路径\n    String inputfile = \"/usr/input\";\n    //设置输出路径\n    String outputFile = \"/usr/output\";\n    //执行输入\n    FileInputFormat.addInputPath(job, new Path(inputfile));\n    //执行输出\n    FileOutputFormat.setOutputPath(job, new Path(outputFile));\n    //是否运行成功，true输出0，false输出1\n    System.exit(job.waitForCompletion(true) ? 0 : 1);\n  }\n}\n```\n## Hbase 实战\n这里主要记录Hbase shell里的一些常用指令\n\n#### 创建表\n新建一个名为`test`的表，使其中包含一个名为`data`的列，表和列族属性都为默认值：\n```sql\ncreate 'test','data'\n```\n\n创建完成后，我们可以输入`list`来查看表是否创建成功\n\n#### 添加数据\n我们来给上一关创建的`test`表的列`data`添加一些数据.使用`put`命令可以用来添加数据，使用`get`命令可以获取数据。\n```sql\nput 'test','row1','data:1','value1'\nput 'test','row2','data:2','value2'\nget 'test','row1'\n```\n\n输入`scan`命令就可以查看所有的数据了\n\n#### 删除数据和表\n删除整行数据：`deleteall [表名]，[行名称]`\n```sql\ndeleteall 'test','row1'\n```\n\n删除表需要先禁用、再删除。分为两步：\n```\ndisable 表名\ndrop 表名\n```","source":"_posts/2021-12-13-hadoop.md","raw":"---\ntitle: Hadoop 实战练习记录\nauthor: LiJT\ndate: 2021-12-13\ntags: \n  - 大数据 \n  - Java \n  - Hadoop \n  - Mapreduce\nkey: hadoop20211213\n---\n\n## 写在前面\n本篇记录Hadoop实战学习中的笔记以及问题分析。\n\n<!--more-->\n\n## Mapreduce 实战\n### Mapreduce 程序模型\n#### 什么是Mapreduce\nMapReduce是一种可用于数据处理的编程模型，我们现在设想一个场景，你接到一个任务，任务是：挖掘分析我国气象中心近年来的数据日志，该数据日志大小有3T,让你分析计算出每一年的最高气温，如果你现在只有一台计算机，如何处理呢？我想你应该会读取这些数据，并且将读取到的数据与目前的最大气温值进行比较。比较完所有的数据之后就可以得出最高气温了。不过以我们的经验都知道要处理这么多数据肯定是非常耗时的。\n\n如果我现在给你三台机器，你会如何处理呢？你应该想到了：最好的处理方式是将这些数据切分成三块，然后分别计算处理这些数据（Map），处理完毕之后发送到一台机器上进行合并（merge），再计算合并之后的数据，归纳（reduce）并输出。\n\n这就是一个比较完整的MapReduce的过程了。\n\n![Mapreduce原理](/LiJT-Daily/images/2021121301.png)\n\n#### Mapreduce程序结构(以Word Count为例)\n```java\nimport java.io.IOException;\nimport java.util.StringTokenizer;\n \nimport java.io.IOException;\nimport java.util.StringTokenizer;\nimport org.apache.hadoop.conf.Configuration;\nimport org.apache.hadoop.fs.Path;\nimport org.apache.hadoop.io.*;\nimport org.apache.hadoop.io.Text;\nimport org.apache.hadoop.mapreduce.Job;\nimport org.apache.hadoop.mapreduce.Mapper;\nimport org.apache.hadoop.mapreduce.Reducer;\nimport org.apache.hadoop.mapreduce.lib.input.FileInputFormat;\nimport org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;\nimport org.apache.hadoop.util.GenericOptionsParser;\n\npublic class WordCount {\n//Mapper类\n/*LongWritable表示每一行起始偏移量\n第一个Text是用来接受文件中的内容，\n第二个Text是用来输出给Reduce类的key,\nIntWritable是用来输出给Reduce类的value*/\n public static class TokenizerMapper \n       extends Mapper<LongWritable, Text, Text, IntWritable>{\n    private final static IntWritable one = new IntWritable(1);\n    private Text word = new Text();\n    public void map(LongWritable key, Text value, Context context\n                    ) throws IOException, InterruptedException {\n      StringTokenizer itr = new StringTokenizer(value.toString());\n      while (itr.hasMoreTokens()) {\n        word.set(itr.nextToken());\n        context.write(word, one);\n      }\n    }\n  }\n  public static class IntSumReducer \n       extends Reducer<Text,IntWritable,Text,IntWritable> {\n    private IntWritable result = new IntWritable();\n    public void reduce(Text key, Iterable<IntWritable> values, \n                       Context context\n                       ) throws IOException, InterruptedException {\n      int sum = 0;\n      for (IntWritable val : values) {\n        sum += val.get();\n      }\n      result.set(sum);\n      context.write(key, result);\n    }\n  }\n  public static void main(String[] args) throws Exception {\n    //创建配置对象\n    Configuration conf = new Configuration();\n    //创建job对象\n    Job job = new Job(conf, \"word count\");\n    //设置运行job的类\n    job.setJarByClass(WordCount.class);\n    //设置Mapper的类\n    job.setMapperClass(TokenizerMapper.class);\n    //设置Reduce的类\n    job.setReducerClass(IntSumReducer.class);\n    //设置输出的key value格式\n    job.setOutputKeyClass(Text.class);\n    job.setOutputValueClass(IntWritable.class);\n    //设置输入路径\n    String inputfile = \"/usr/input\";\n    //设置输出路径\n    String outputFile = \"/usr/output\";\n    //执行输入\n    FileInputFormat.addInputPath(job, new Path(inputfile));\n    //执行输出\n    FileOutputFormat.setOutputPath(job, new Path(outputFile));\n    //是否运行成功，true输出0，false输出1\n    System.exit(job.waitForCompletion(true) ? 0 : 1);\n  }\n}\n```\n## Hbase 实战\n这里主要记录Hbase shell里的一些常用指令\n\n#### 创建表\n新建一个名为`test`的表，使其中包含一个名为`data`的列，表和列族属性都为默认值：\n```sql\ncreate 'test','data'\n```\n\n创建完成后，我们可以输入`list`来查看表是否创建成功\n\n#### 添加数据\n我们来给上一关创建的`test`表的列`data`添加一些数据.使用`put`命令可以用来添加数据，使用`get`命令可以获取数据。\n```sql\nput 'test','row1','data:1','value1'\nput 'test','row2','data:2','value2'\nget 'test','row1'\n```\n\n输入`scan`命令就可以查看所有的数据了\n\n#### 删除数据和表\n删除整行数据：`deleteall [表名]，[行名称]`\n```sql\ndeleteall 'test','row1'\n```\n\n删除表需要先禁用、再删除。分为两步：\n```\ndisable 表名\ndrop 表名\n```","slug":"2021-12-13-hadoop","published":1,"updated":"2022-04-06T09:49:51.656Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cludw9n9j000k9wv99h7icxsk","content":"<h2 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h2><p>本篇记录Hadoop实战学习中的笔记以及问题分析。</p>\n<span id=\"more\"></span>\n<h2 id=\"Mapreduce-实战\"><a href=\"#Mapreduce-实战\" class=\"headerlink\" title=\"Mapreduce 实战\"></a>Mapreduce 实战</h2><h3 id=\"Mapreduce-程序模型\"><a href=\"#Mapreduce-程序模型\" class=\"headerlink\" title=\"Mapreduce 程序模型\"></a>Mapreduce 程序模型</h3><h4 id=\"什么是Mapreduce\"><a href=\"#什么是Mapreduce\" class=\"headerlink\" title=\"什么是Mapreduce\"></a>什么是Mapreduce</h4><p>MapReduce是一种可用于数据处理的编程模型，我们现在设想一个场景，你接到一个任务，任务是：挖掘分析我国气象中心近年来的数据日志，该数据日志大小有3T,让你分析计算出每一年的最高气温，如果你现在只有一台计算机，如何处理呢？我想你应该会读取这些数据，并且将读取到的数据与目前的最大气温值进行比较。比较完所有的数据之后就可以得出最高气温了。不过以我们的经验都知道要处理这么多数据肯定是非常耗时的。</p>\n<p>如果我现在给你三台机器，你会如何处理呢？你应该想到了：最好的处理方式是将这些数据切分成三块，然后分别计算处理这些数据（Map），处理完毕之后发送到一台机器上进行合并（merge），再计算合并之后的数据，归纳（reduce）并输出。</p>\n<p>这就是一个比较完整的MapReduce的过程了。</p>\n<p><img src=\"/LiJT-Daily/images/2021121301.png\" alt=\"Mapreduce原理\"></p>\n<h4 id=\"Mapreduce程序结构-以Word-Count为例\"><a href=\"#Mapreduce程序结构-以Word-Count为例\" class=\"headerlink\" title=\"Mapreduce程序结构(以Word Count为例)\"></a>Mapreduce程序结构(以Word Count为例)</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.StringTokenizer;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.StringTokenizer;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.hadoop.conf.Configuration;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.hadoop.fs.Path;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.hadoop.io.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.hadoop.io.Text;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.hadoop.mapreduce.Job;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.hadoop.mapreduce.Mapper;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.hadoop.mapreduce.Reducer;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.hadoop.mapreduce.lib.input.FileInputFormat;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.hadoop.util.GenericOptionsParser;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">WordCount</span> &#123;</span><br><span class=\"line\"><span class=\"comment\">//Mapper类</span></span><br><span class=\"line\"><span class=\"comment\">/*LongWritable表示每一行起始偏移量</span></span><br><span class=\"line\"><span class=\"comment\">第一个Text是用来接受文件中的内容，</span></span><br><span class=\"line\"><span class=\"comment\">第二个Text是用来输出给Reduce类的key,</span></span><br><span class=\"line\"><span class=\"comment\">IntWritable是用来输出给Reduce类的value*/</span></span><br><span class=\"line\"> <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TokenizerMapper</span> </span><br><span class=\"line\">       <span class=\"keyword\">extends</span> <span class=\"title class_\">Mapper</span>&lt;LongWritable, Text, Text, IntWritable&gt;&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">static</span> <span class=\"type\">IntWritable</span> <span class=\"variable\">one</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">IntWritable</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">Text</span> <span class=\"variable\">word</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Text</span>();</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">map</span><span class=\"params\">(LongWritable key, Text value, Context context</span></span><br><span class=\"line\"><span class=\"params\">                    )</span> <span class=\"keyword\">throws</span> IOException, InterruptedException &#123;</span><br><span class=\"line\">      <span class=\"type\">StringTokenizer</span> <span class=\"variable\">itr</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">StringTokenizer</span>(value.toString());</span><br><span class=\"line\">      <span class=\"keyword\">while</span> (itr.hasMoreTokens()) &#123;</span><br><span class=\"line\">        word.set(itr.nextToken());</span><br><span class=\"line\">        context.write(word, one);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title class_\">IntSumReducer</span> </span><br><span class=\"line\">       <span class=\"keyword\">extends</span> <span class=\"title class_\">Reducer</span>&lt;Text,IntWritable,Text,IntWritable&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">IntWritable</span> <span class=\"variable\">result</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">IntWritable</span>();</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">reduce</span><span class=\"params\">(Text key, Iterable&lt;IntWritable&gt; values, </span></span><br><span class=\"line\"><span class=\"params\">                       Context context</span></span><br><span class=\"line\"><span class=\"params\">                       )</span> <span class=\"keyword\">throws</span> IOException, InterruptedException &#123;</span><br><span class=\"line\">      <span class=\"type\">int</span> <span class=\"variable\">sum</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (IntWritable val : values) &#123;</span><br><span class=\"line\">        sum += val.get();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      result.set(sum);</span><br><span class=\"line\">      context.write(key, result);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">    <span class=\"comment\">//创建配置对象</span></span><br><span class=\"line\">    <span class=\"type\">Configuration</span> <span class=\"variable\">conf</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Configuration</span>();</span><br><span class=\"line\">    <span class=\"comment\">//创建job对象</span></span><br><span class=\"line\">    <span class=\"type\">Job</span> <span class=\"variable\">job</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Job</span>(conf, <span class=\"string\">&quot;word count&quot;</span>);</span><br><span class=\"line\">    <span class=\"comment\">//设置运行job的类</span></span><br><span class=\"line\">    job.setJarByClass(WordCount.class);</span><br><span class=\"line\">    <span class=\"comment\">//设置Mapper的类</span></span><br><span class=\"line\">    job.setMapperClass(TokenizerMapper.class);</span><br><span class=\"line\">    <span class=\"comment\">//设置Reduce的类</span></span><br><span class=\"line\">    job.setReducerClass(IntSumReducer.class);</span><br><span class=\"line\">    <span class=\"comment\">//设置输出的key value格式</span></span><br><span class=\"line\">    job.setOutputKeyClass(Text.class);</span><br><span class=\"line\">    job.setOutputValueClass(IntWritable.class);</span><br><span class=\"line\">    <span class=\"comment\">//设置输入路径</span></span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">inputfile</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;/usr/input&quot;</span>;</span><br><span class=\"line\">    <span class=\"comment\">//设置输出路径</span></span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">outputFile</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;/usr/output&quot;</span>;</span><br><span class=\"line\">    <span class=\"comment\">//执行输入</span></span><br><span class=\"line\">    FileInputFormat.addInputPath(job, <span class=\"keyword\">new</span> <span class=\"title class_\">Path</span>(inputfile));</span><br><span class=\"line\">    <span class=\"comment\">//执行输出</span></span><br><span class=\"line\">    FileOutputFormat.setOutputPath(job, <span class=\"keyword\">new</span> <span class=\"title class_\">Path</span>(outputFile));</span><br><span class=\"line\">    <span class=\"comment\">//是否运行成功，true输出0，false输出1</span></span><br><span class=\"line\">    System.exit(job.waitForCompletion(<span class=\"literal\">true</span>) ? <span class=\"number\">0</span> : <span class=\"number\">1</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Hbase-实战\"><a href=\"#Hbase-实战\" class=\"headerlink\" title=\"Hbase 实战\"></a>Hbase 实战</h2><p>这里主要记录Hbase shell里的一些常用指令</p>\n<h4 id=\"创建表\"><a href=\"#创建表\" class=\"headerlink\" title=\"创建表\"></a>创建表</h4><p>新建一个名为<code>test</code>的表，使其中包含一个名为<code>data</code>的列，表和列族属性都为默认值：<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"string\">&#x27;test&#x27;</span>,<span class=\"string\">&#x27;data&#x27;</span></span><br></pre></td></tr></table></figure></p>\n<p>创建完成后，我们可以输入<code>list</code>来查看表是否创建成功</p>\n<h4 id=\"添加数据\"><a href=\"#添加数据\" class=\"headerlink\" title=\"添加数据\"></a>添加数据</h4><p>我们来给上一关创建的<code>test</code>表的列<code>data</code>添加一些数据.使用<code>put</code>命令可以用来添加数据，使用<code>get</code>命令可以获取数据。<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">put <span class=\"string\">&#x27;test&#x27;</span>,<span class=\"string\">&#x27;row1&#x27;</span>,<span class=\"string\">&#x27;data:1&#x27;</span>,<span class=\"string\">&#x27;value1&#x27;</span></span><br><span class=\"line\">put <span class=\"string\">&#x27;test&#x27;</span>,<span class=\"string\">&#x27;row2&#x27;</span>,<span class=\"string\">&#x27;data:2&#x27;</span>,<span class=\"string\">&#x27;value2&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">get</span> <span class=\"string\">&#x27;test&#x27;</span>,<span class=\"string\">&#x27;row1&#x27;</span></span><br></pre></td></tr></table></figure></p>\n<p>输入<code>scan</code>命令就可以查看所有的数据了</p>\n<h4 id=\"删除数据和表\"><a href=\"#删除数据和表\" class=\"headerlink\" title=\"删除数据和表\"></a>删除数据和表</h4><p>删除整行数据：<code>deleteall [表名]，[行名称]</code><br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deleteall <span class=\"string\">&#x27;test&#x27;</span>,<span class=\"string\">&#x27;row1&#x27;</span></span><br></pre></td></tr></table></figure></p>\n<p>删除表需要先禁用、再删除。分为两步：<br><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">disable 表名</span><br><span class=\"line\">drop 表名</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"length":3258,"excerpt":"<h2 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h2><p>本篇记录Hadoop实战学习中的笔记以及问题分析。</p>","more":"<h2 id=\"Mapreduce-实战\"><a href=\"#Mapreduce-实战\" class=\"headerlink\" title=\"Mapreduce 实战\"></a>Mapreduce 实战</h2><h3 id=\"Mapreduce-程序模型\"><a href=\"#Mapreduce-程序模型\" class=\"headerlink\" title=\"Mapreduce 程序模型\"></a>Mapreduce 程序模型</h3><h4 id=\"什么是Mapreduce\"><a href=\"#什么是Mapreduce\" class=\"headerlink\" title=\"什么是Mapreduce\"></a>什么是Mapreduce</h4><p>MapReduce是一种可用于数据处理的编程模型，我们现在设想一个场景，你接到一个任务，任务是：挖掘分析我国气象中心近年来的数据日志，该数据日志大小有3T,让你分析计算出每一年的最高气温，如果你现在只有一台计算机，如何处理呢？我想你应该会读取这些数据，并且将读取到的数据与目前的最大气温值进行比较。比较完所有的数据之后就可以得出最高气温了。不过以我们的经验都知道要处理这么多数据肯定是非常耗时的。</p>\n<p>如果我现在给你三台机器，你会如何处理呢？你应该想到了：最好的处理方式是将这些数据切分成三块，然后分别计算处理这些数据（Map），处理完毕之后发送到一台机器上进行合并（merge），再计算合并之后的数据，归纳（reduce）并输出。</p>\n<p>这就是一个比较完整的MapReduce的过程了。</p>\n<p><img src=\"/LiJT-Daily/images/2021121301.png\" alt=\"Mapreduce原理\"></p>\n<h4 id=\"Mapreduce程序结构-以Word-Count为例\"><a href=\"#Mapreduce程序结构-以Word-Count为例\" class=\"headerlink\" title=\"Mapreduce程序结构(以Word Count为例)\"></a>Mapreduce程序结构(以Word Count为例)</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.StringTokenizer;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.StringTokenizer;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.hadoop.conf.Configuration;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.hadoop.fs.Path;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.hadoop.io.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.hadoop.io.Text;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.hadoop.mapreduce.Job;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.hadoop.mapreduce.Mapper;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.hadoop.mapreduce.Reducer;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.hadoop.mapreduce.lib.input.FileInputFormat;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.hadoop.util.GenericOptionsParser;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">WordCount</span> &#123;</span><br><span class=\"line\"><span class=\"comment\">//Mapper类</span></span><br><span class=\"line\"><span class=\"comment\">/*LongWritable表示每一行起始偏移量</span></span><br><span class=\"line\"><span class=\"comment\">第一个Text是用来接受文件中的内容，</span></span><br><span class=\"line\"><span class=\"comment\">第二个Text是用来输出给Reduce类的key,</span></span><br><span class=\"line\"><span class=\"comment\">IntWritable是用来输出给Reduce类的value*/</span></span><br><span class=\"line\"> <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TokenizerMapper</span> </span><br><span class=\"line\">       <span class=\"keyword\">extends</span> <span class=\"title class_\">Mapper</span>&lt;LongWritable, Text, Text, IntWritable&gt;&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">static</span> <span class=\"type\">IntWritable</span> <span class=\"variable\">one</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">IntWritable</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">Text</span> <span class=\"variable\">word</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Text</span>();</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">map</span><span class=\"params\">(LongWritable key, Text value, Context context</span></span><br><span class=\"line\"><span class=\"params\">                    )</span> <span class=\"keyword\">throws</span> IOException, InterruptedException &#123;</span><br><span class=\"line\">      <span class=\"type\">StringTokenizer</span> <span class=\"variable\">itr</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">StringTokenizer</span>(value.toString());</span><br><span class=\"line\">      <span class=\"keyword\">while</span> (itr.hasMoreTokens()) &#123;</span><br><span class=\"line\">        word.set(itr.nextToken());</span><br><span class=\"line\">        context.write(word, one);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title class_\">IntSumReducer</span> </span><br><span class=\"line\">       <span class=\"keyword\">extends</span> <span class=\"title class_\">Reducer</span>&lt;Text,IntWritable,Text,IntWritable&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">IntWritable</span> <span class=\"variable\">result</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">IntWritable</span>();</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">reduce</span><span class=\"params\">(Text key, Iterable&lt;IntWritable&gt; values, </span></span><br><span class=\"line\"><span class=\"params\">                       Context context</span></span><br><span class=\"line\"><span class=\"params\">                       )</span> <span class=\"keyword\">throws</span> IOException, InterruptedException &#123;</span><br><span class=\"line\">      <span class=\"type\">int</span> <span class=\"variable\">sum</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (IntWritable val : values) &#123;</span><br><span class=\"line\">        sum += val.get();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      result.set(sum);</span><br><span class=\"line\">      context.write(key, result);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">    <span class=\"comment\">//创建配置对象</span></span><br><span class=\"line\">    <span class=\"type\">Configuration</span> <span class=\"variable\">conf</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Configuration</span>();</span><br><span class=\"line\">    <span class=\"comment\">//创建job对象</span></span><br><span class=\"line\">    <span class=\"type\">Job</span> <span class=\"variable\">job</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Job</span>(conf, <span class=\"string\">&quot;word count&quot;</span>);</span><br><span class=\"line\">    <span class=\"comment\">//设置运行job的类</span></span><br><span class=\"line\">    job.setJarByClass(WordCount.class);</span><br><span class=\"line\">    <span class=\"comment\">//设置Mapper的类</span></span><br><span class=\"line\">    job.setMapperClass(TokenizerMapper.class);</span><br><span class=\"line\">    <span class=\"comment\">//设置Reduce的类</span></span><br><span class=\"line\">    job.setReducerClass(IntSumReducer.class);</span><br><span class=\"line\">    <span class=\"comment\">//设置输出的key value格式</span></span><br><span class=\"line\">    job.setOutputKeyClass(Text.class);</span><br><span class=\"line\">    job.setOutputValueClass(IntWritable.class);</span><br><span class=\"line\">    <span class=\"comment\">//设置输入路径</span></span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">inputfile</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;/usr/input&quot;</span>;</span><br><span class=\"line\">    <span class=\"comment\">//设置输出路径</span></span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">outputFile</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;/usr/output&quot;</span>;</span><br><span class=\"line\">    <span class=\"comment\">//执行输入</span></span><br><span class=\"line\">    FileInputFormat.addInputPath(job, <span class=\"keyword\">new</span> <span class=\"title class_\">Path</span>(inputfile));</span><br><span class=\"line\">    <span class=\"comment\">//执行输出</span></span><br><span class=\"line\">    FileOutputFormat.setOutputPath(job, <span class=\"keyword\">new</span> <span class=\"title class_\">Path</span>(outputFile));</span><br><span class=\"line\">    <span class=\"comment\">//是否运行成功，true输出0，false输出1</span></span><br><span class=\"line\">    System.exit(job.waitForCompletion(<span class=\"literal\">true</span>) ? <span class=\"number\">0</span> : <span class=\"number\">1</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Hbase-实战\"><a href=\"#Hbase-实战\" class=\"headerlink\" title=\"Hbase 实战\"></a>Hbase 实战</h2><p>这里主要记录Hbase shell里的一些常用指令</p>\n<h4 id=\"创建表\"><a href=\"#创建表\" class=\"headerlink\" title=\"创建表\"></a>创建表</h4><p>新建一个名为<code>test</code>的表，使其中包含一个名为<code>data</code>的列，表和列族属性都为默认值：<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"string\">&#x27;test&#x27;</span>,<span class=\"string\">&#x27;data&#x27;</span></span><br></pre></td></tr></table></figure></p>\n<p>创建完成后，我们可以输入<code>list</code>来查看表是否创建成功</p>\n<h4 id=\"添加数据\"><a href=\"#添加数据\" class=\"headerlink\" title=\"添加数据\"></a>添加数据</h4><p>我们来给上一关创建的<code>test</code>表的列<code>data</code>添加一些数据.使用<code>put</code>命令可以用来添加数据，使用<code>get</code>命令可以获取数据。<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">put <span class=\"string\">&#x27;test&#x27;</span>,<span class=\"string\">&#x27;row1&#x27;</span>,<span class=\"string\">&#x27;data:1&#x27;</span>,<span class=\"string\">&#x27;value1&#x27;</span></span><br><span class=\"line\">put <span class=\"string\">&#x27;test&#x27;</span>,<span class=\"string\">&#x27;row2&#x27;</span>,<span class=\"string\">&#x27;data:2&#x27;</span>,<span class=\"string\">&#x27;value2&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">get</span> <span class=\"string\">&#x27;test&#x27;</span>,<span class=\"string\">&#x27;row1&#x27;</span></span><br></pre></td></tr></table></figure></p>\n<p>输入<code>scan</code>命令就可以查看所有的数据了</p>\n<h4 id=\"删除数据和表\"><a href=\"#删除数据和表\" class=\"headerlink\" title=\"删除数据和表\"></a>删除数据和表</h4><p>删除整行数据：<code>deleteall [表名]，[行名称]</code><br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deleteall <span class=\"string\">&#x27;test&#x27;</span>,<span class=\"string\">&#x27;row1&#x27;</span></span><br></pre></td></tr></table></figure></p>\n<p>删除表需要先禁用、再删除。分为两步：<br><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">disable 表名</span><br><span class=\"line\">drop 表名</span><br></pre></td></tr></table></figure></p>"},{"title":"Java 常用轮子","author":"LiJT","date":"2021-12-12T16:00:00.000Z","key":"java20211213","_content":"\n## 写在前面\nWelcome back! （也对我自己）\n\n这一篇记录一些常用的Java工具包，与[Python技巧](/LiJT-Daily/2021/10/25/python.html)相对应。后者也好长时间没更新了，以后会慢慢补上。\n\n```\n偷偷地我走了，\n正如我偷偷地来。\n偷偷地我挥一挥手，\n不留下一篇SCI。\n```\n<!--more-->\n\n## java.util\n### StringTokenizer 类\n- 用途：分割字符串，类似于python的 `re.split()`.\n\n#### 构造方法\n1. `StringTokenizer(String str)` ：构造一个用来解析 str 的 StringTokenizer 对象。java 默认的分隔符是空格(\"\")、制表符(\\t)、换行符(\\n)、回车符(\\r)。\n2. `StringTokenizer(String str, String delim)` ：构造一个用来解析 str 的 StringTokenizer 对象，并提供一个指定的分隔符。\n3. `StringTokenizer(String str, String delim, boolean returnDelims)` ：构造一个用来解析 str 的 StringTokenizer 对象，并提供一个指定的分隔符，同时，指定是否返回分隔符。\n\n#### 常用方法\n1. `int countTokens()`：返回nextToken方法被调用的次数。\n2. `boolean hasMoreTokens()`：返回是否还有分隔符。\n3. `boolean hasMoreElements()`：判断枚举 （Enumeration） 对象中是否还有数据。\n4. `String nextToken()`：返回从当前位置到下一个分隔符的字符串。\n5. `Object nextElement()`：返回枚举 （Enumeration） 对象的下一个元素。\n6. `String nextToken(String delim)`：与 4 类似，以指定的分隔符返回结果。\n\n#### 示例\n```java\n// Hadoop WordCount中，mapper的map方法。默认用空格分隔字符串\npublic void map(LongWritable key, Text value, Context context\n                    ) throws IOException, InterruptedException {\n    StringTokenizer itr = new StringTokenizer(value.toString());\n    word.set(itr.nextToken());\n    context.write(word, one);\n}\n```","source":"_posts/2021-12-13-java.md","raw":"---\ntitle: Java 常用轮子\nauthor: LiJT\ndate: 2021-12-13\ntags: 大数据 Java Hadoop \nkey: java20211213\n---\n\n## 写在前面\nWelcome back! （也对我自己）\n\n这一篇记录一些常用的Java工具包，与[Python技巧](/LiJT-Daily/2021/10/25/python.html)相对应。后者也好长时间没更新了，以后会慢慢补上。\n\n```\n偷偷地我走了，\n正如我偷偷地来。\n偷偷地我挥一挥手，\n不留下一篇SCI。\n```\n<!--more-->\n\n## java.util\n### StringTokenizer 类\n- 用途：分割字符串，类似于python的 `re.split()`.\n\n#### 构造方法\n1. `StringTokenizer(String str)` ：构造一个用来解析 str 的 StringTokenizer 对象。java 默认的分隔符是空格(\"\")、制表符(\\t)、换行符(\\n)、回车符(\\r)。\n2. `StringTokenizer(String str, String delim)` ：构造一个用来解析 str 的 StringTokenizer 对象，并提供一个指定的分隔符。\n3. `StringTokenizer(String str, String delim, boolean returnDelims)` ：构造一个用来解析 str 的 StringTokenizer 对象，并提供一个指定的分隔符，同时，指定是否返回分隔符。\n\n#### 常用方法\n1. `int countTokens()`：返回nextToken方法被调用的次数。\n2. `boolean hasMoreTokens()`：返回是否还有分隔符。\n3. `boolean hasMoreElements()`：判断枚举 （Enumeration） 对象中是否还有数据。\n4. `String nextToken()`：返回从当前位置到下一个分隔符的字符串。\n5. `Object nextElement()`：返回枚举 （Enumeration） 对象的下一个元素。\n6. `String nextToken(String delim)`：与 4 类似，以指定的分隔符返回结果。\n\n#### 示例\n```java\n// Hadoop WordCount中，mapper的map方法。默认用空格分隔字符串\npublic void map(LongWritable key, Text value, Context context\n                    ) throws IOException, InterruptedException {\n    StringTokenizer itr = new StringTokenizer(value.toString());\n    word.set(itr.nextToken());\n    context.write(word, one);\n}\n```","slug":"2021-12-13-java","published":1,"updated":"2022-04-06T09:50:32.027Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cludw9n9k000m9wv9cpyea728","content":"<h2 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h2><p>Welcome back! （也对我自己）</p>\n<p>这一篇记录一些常用的Java工具包，与<a href=\"/LiJT-Daily/2021/10/25/python.html\">Python技巧</a>相对应。后者也好长时间没更新了，以后会慢慢补上。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">偷偷地我走了，</span><br><span class=\"line\">正如我偷偷地来。</span><br><span class=\"line\">偷偷地我挥一挥手，</span><br><span class=\"line\">不留下一篇SCI。</span><br></pre></td></tr></table></figure>\n<span id=\"more\"></span>\n<h2 id=\"java-util\"><a href=\"#java-util\" class=\"headerlink\" title=\"java.util\"></a>java.util</h2><h3 id=\"StringTokenizer-类\"><a href=\"#StringTokenizer-类\" class=\"headerlink\" title=\"StringTokenizer 类\"></a>StringTokenizer 类</h3><ul>\n<li>用途：分割字符串，类似于python的 <code>re.split()</code>.</li>\n</ul>\n<h4 id=\"构造方法\"><a href=\"#构造方法\" class=\"headerlink\" title=\"构造方法\"></a>构造方法</h4><ol>\n<li><code>StringTokenizer(String str)</code> ：构造一个用来解析 str 的 StringTokenizer 对象。java 默认的分隔符是空格(“”)、制表符(\\t)、换行符(\\n)、回车符(\\r)。</li>\n<li><code>StringTokenizer(String str, String delim)</code> ：构造一个用来解析 str 的 StringTokenizer 对象，并提供一个指定的分隔符。</li>\n<li><code>StringTokenizer(String str, String delim, boolean returnDelims)</code> ：构造一个用来解析 str 的 StringTokenizer 对象，并提供一个指定的分隔符，同时，指定是否返回分隔符。</li>\n</ol>\n<h4 id=\"常用方法\"><a href=\"#常用方法\" class=\"headerlink\" title=\"常用方法\"></a>常用方法</h4><ol>\n<li><code>int countTokens()</code>：返回nextToken方法被调用的次数。</li>\n<li><code>boolean hasMoreTokens()</code>：返回是否还有分隔符。</li>\n<li><code>boolean hasMoreElements()</code>：判断枚举 （Enumeration） 对象中是否还有数据。</li>\n<li><code>String nextToken()</code>：返回从当前位置到下一个分隔符的字符串。</li>\n<li><code>Object nextElement()</code>：返回枚举 （Enumeration） 对象的下一个元素。</li>\n<li><code>String nextToken(String delim)</code>：与 4 类似，以指定的分隔符返回结果。</li>\n</ol>\n<h4 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Hadoop WordCount中，mapper的map方法。默认用空格分隔字符串</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">map</span><span class=\"params\">(LongWritable key, Text value, Context context</span></span><br><span class=\"line\"><span class=\"params\">                    )</span> <span class=\"keyword\">throws</span> IOException, InterruptedException &#123;</span><br><span class=\"line\">    <span class=\"type\">StringTokenizer</span> <span class=\"variable\">itr</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">StringTokenizer</span>(value.toString());</span><br><span class=\"line\">    word.set(itr.nextToken());</span><br><span class=\"line\">    context.write(word, one);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"length":981,"excerpt":"<h2 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h2><p>Welcome back! （也对我自己）</p>\n<p>这一篇记录一些常用的Java工具包，与<a href=\"/LiJT-Daily/2021/10/25/python.html\">Python技巧</a>相对应。后者也好长时间没更新了，以后会慢慢补上。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">偷偷地我走了，</span><br><span class=\"line\">正如我偷偷地来。</span><br><span class=\"line\">偷偷地我挥一挥手，</span><br><span class=\"line\">不留下一篇SCI。</span><br></pre></td></tr></table></figure>","more":"<h2 id=\"java-util\"><a href=\"#java-util\" class=\"headerlink\" title=\"java.util\"></a>java.util</h2><h3 id=\"StringTokenizer-类\"><a href=\"#StringTokenizer-类\" class=\"headerlink\" title=\"StringTokenizer 类\"></a>StringTokenizer 类</h3><ul>\n<li>用途：分割字符串，类似于python的 <code>re.split()</code>.</li>\n</ul>\n<h4 id=\"构造方法\"><a href=\"#构造方法\" class=\"headerlink\" title=\"构造方法\"></a>构造方法</h4><ol>\n<li><code>StringTokenizer(String str)</code> ：构造一个用来解析 str 的 StringTokenizer 对象。java 默认的分隔符是空格(“”)、制表符(\\t)、换行符(\\n)、回车符(\\r)。</li>\n<li><code>StringTokenizer(String str, String delim)</code> ：构造一个用来解析 str 的 StringTokenizer 对象，并提供一个指定的分隔符。</li>\n<li><code>StringTokenizer(String str, String delim, boolean returnDelims)</code> ：构造一个用来解析 str 的 StringTokenizer 对象，并提供一个指定的分隔符，同时，指定是否返回分隔符。</li>\n</ol>\n<h4 id=\"常用方法\"><a href=\"#常用方法\" class=\"headerlink\" title=\"常用方法\"></a>常用方法</h4><ol>\n<li><code>int countTokens()</code>：返回nextToken方法被调用的次数。</li>\n<li><code>boolean hasMoreTokens()</code>：返回是否还有分隔符。</li>\n<li><code>boolean hasMoreElements()</code>：判断枚举 （Enumeration） 对象中是否还有数据。</li>\n<li><code>String nextToken()</code>：返回从当前位置到下一个分隔符的字符串。</li>\n<li><code>Object nextElement()</code>：返回枚举 （Enumeration） 对象的下一个元素。</li>\n<li><code>String nextToken(String delim)</code>：与 4 类似，以指定的分隔符返回结果。</li>\n</ol>\n<h4 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Hadoop WordCount中，mapper的map方法。默认用空格分隔字符串</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">map</span><span class=\"params\">(LongWritable key, Text value, Context context</span></span><br><span class=\"line\"><span class=\"params\">                    )</span> <span class=\"keyword\">throws</span> IOException, InterruptedException &#123;</span><br><span class=\"line\">    <span class=\"type\">StringTokenizer</span> <span class=\"variable\">itr</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">StringTokenizer</span>(value.toString());</span><br><span class=\"line\">    word.set(itr.nextToken());</span><br><span class=\"line\">    context.write(word, one);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"模糊理论及其应用简介（笔记）","author":"LiJT","date":"2021-12-28T16:00:00.000Z","mathjax":true,"key":"fuzzy20211229","_content":"\n模糊理论（Fuzzy Theory）是指用到了**模糊集合**的基本概念或**连续隶属度函数**的理论。它可分类为模糊数学，模糊系统，不确定性和信息，模糊决策，模糊逻辑与人工智能这五个分支，它们并不是完全独立的，它们之间有紧密的联系。例如，模糊控制就会用到模糊数学和模糊逻辑中的概念。从实际应用的观点来看，模糊理论的应用大部分集中在**模糊系统**上，尤其集中在模糊控制上。也有一些模糊专家系统应用于医疗诊断和决策支持。由于模糊理论从理论和实践的角度看仍然是新生事物，所以我们期望，随着模糊领域的成熟，将会出现更多可靠的实际应用。 （摘自百度百科）\n\n<!--more-->\n## 什么是模糊理论\n\n### 模糊\n\n介绍模糊理论之前，我们首先直观地理解**模糊**这一概念。例如小明**十分喜欢吃牛肉和鸡蛋**，**特别讨厌番茄和甜食**。那么可以明确地说，小明喜欢吃牛肉滑蛋饭但很讨厌吃糖拌西红柿。但如果给小明做一份**番茄炖牛肉**，我们就不能确定小明是喜欢还是不喜欢。在这一场景下，小明对番茄炖牛肉的态度就是“模糊”的。\n\n### 模糊逻辑\n\n更一般地，我们引入**模糊逻辑**的概念。在经典二值逻辑中，我们用1表示真（喜欢），0表示假（不喜欢），那么命题1（小明喜欢牛肉滑蛋饭）的值为1，命题2（小明喜欢糖拌西红柿）的值为假。对于命题3（小明喜欢番茄炖牛肉），我们使用介于0和1之间的**隶属度**表示这两个值之间的过渡状态，例如命题3的值=0.7，表示小明有点喜欢番茄炖牛肉。使用隶属度值**消除二值之间非此即彼的对立，这就是模糊逻辑**。\n\n### 模糊集合\n\n接下来，我们更进一步地引入**模糊集合**的概念。在古典集合中，对于任意全域$U$内的一个元素$x$和一个集合$A$，如果使用$f_A(\\cdot)$表示元素相对于集合的关系，则只包含以下两种情况：\n\n$$\nf_A(x)=\\left\\{\n\\begin{aligned}\n0, x\\notin A\\\\\n1, x\\in A\n\\end{aligned}\\right.\n$$\n\n那么 $f_A:U\\to\\{ 0,1\\}$就是一个二值函数。在**模糊集合**中，则使用连续值表示*元素属于集合的程度*，这样的函数$f_A：U\\to[0,1]$就被称为连续的**隶属度函数**。所谓“隶属度”，就是“元素隶属于集合的程度”。例如 $f_A(x)=0.6$，表示元素$x$属于集合$A$的程度是0.6.","source":"_posts/2021-12-29-fuzzy.md","raw":"---\ntitle: 模糊理论及其应用简介（笔记）\nauthor: LiJT\ndate: 2021-12-29\ntags: 数学\nmathjax: true\nkey: fuzzy20211229\n---\n\n模糊理论（Fuzzy Theory）是指用到了**模糊集合**的基本概念或**连续隶属度函数**的理论。它可分类为模糊数学，模糊系统，不确定性和信息，模糊决策，模糊逻辑与人工智能这五个分支，它们并不是完全独立的，它们之间有紧密的联系。例如，模糊控制就会用到模糊数学和模糊逻辑中的概念。从实际应用的观点来看，模糊理论的应用大部分集中在**模糊系统**上，尤其集中在模糊控制上。也有一些模糊专家系统应用于医疗诊断和决策支持。由于模糊理论从理论和实践的角度看仍然是新生事物，所以我们期望，随着模糊领域的成熟，将会出现更多可靠的实际应用。 （摘自百度百科）\n\n<!--more-->\n## 什么是模糊理论\n\n### 模糊\n\n介绍模糊理论之前，我们首先直观地理解**模糊**这一概念。例如小明**十分喜欢吃牛肉和鸡蛋**，**特别讨厌番茄和甜食**。那么可以明确地说，小明喜欢吃牛肉滑蛋饭但很讨厌吃糖拌西红柿。但如果给小明做一份**番茄炖牛肉**，我们就不能确定小明是喜欢还是不喜欢。在这一场景下，小明对番茄炖牛肉的态度就是“模糊”的。\n\n### 模糊逻辑\n\n更一般地，我们引入**模糊逻辑**的概念。在经典二值逻辑中，我们用1表示真（喜欢），0表示假（不喜欢），那么命题1（小明喜欢牛肉滑蛋饭）的值为1，命题2（小明喜欢糖拌西红柿）的值为假。对于命题3（小明喜欢番茄炖牛肉），我们使用介于0和1之间的**隶属度**表示这两个值之间的过渡状态，例如命题3的值=0.7，表示小明有点喜欢番茄炖牛肉。使用隶属度值**消除二值之间非此即彼的对立，这就是模糊逻辑**。\n\n### 模糊集合\n\n接下来，我们更进一步地引入**模糊集合**的概念。在古典集合中，对于任意全域$U$内的一个元素$x$和一个集合$A$，如果使用$f_A(\\cdot)$表示元素相对于集合的关系，则只包含以下两种情况：\n\n$$\nf_A(x)=\\left\\{\n\\begin{aligned}\n0, x\\notin A\\\\\n1, x\\in A\n\\end{aligned}\\right.\n$$\n\n那么 $f_A:U\\to\\{ 0,1\\}$就是一个二值函数。在**模糊集合**中，则使用连续值表示*元素属于集合的程度*，这样的函数$f_A：U\\to[0,1]$就被称为连续的**隶属度函数**。所谓“隶属度”，就是“元素隶属于集合的程度”。例如 $f_A(x)=0.6$，表示元素$x$属于集合$A$的程度是0.6.","slug":"2021-12-29-fuzzy","published":1,"updated":"2022-04-06T16:03:00.550Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cludw9n9m000o9wv9hajdbnmw","content":"<p>模糊理论（Fuzzy Theory）是指用到了<strong>模糊集合</strong>的基本概念或<strong>连续隶属度函数</strong>的理论。它可分类为模糊数学，模糊系统，不确定性和信息，模糊决策，模糊逻辑与人工智能这五个分支，它们并不是完全独立的，它们之间有紧密的联系。例如，模糊控制就会用到模糊数学和模糊逻辑中的概念。从实际应用的观点来看，模糊理论的应用大部分集中在<strong>模糊系统</strong>上，尤其集中在模糊控制上。也有一些模糊专家系统应用于医疗诊断和决策支持。由于模糊理论从理论和实践的角度看仍然是新生事物，所以我们期望，随着模糊领域的成熟，将会出现更多可靠的实际应用。 （摘自百度百科）</p>\n<span id=\"more\"></span>\n<h2 id=\"什么是模糊理论\"><a href=\"#什么是模糊理论\" class=\"headerlink\" title=\"什么是模糊理论\"></a>什么是模糊理论</h2><h3 id=\"模糊\"><a href=\"#模糊\" class=\"headerlink\" title=\"模糊\"></a>模糊</h3><p>介绍模糊理论之前，我们首先直观地理解<strong>模糊</strong>这一概念。例如小明<strong>十分喜欢吃牛肉和鸡蛋</strong>，<strong>特别讨厌番茄和甜食</strong>。那么可以明确地说，小明喜欢吃牛肉滑蛋饭但很讨厌吃糖拌西红柿。但如果给小明做一份<strong>番茄炖牛肉</strong>，我们就不能确定小明是喜欢还是不喜欢。在这一场景下，小明对番茄炖牛肉的态度就是“模糊”的。</p>\n<h3 id=\"模糊逻辑\"><a href=\"#模糊逻辑\" class=\"headerlink\" title=\"模糊逻辑\"></a>模糊逻辑</h3><p>更一般地，我们引入<strong>模糊逻辑</strong>的概念。在经典二值逻辑中，我们用1表示真（喜欢），0表示假（不喜欢），那么命题1（小明喜欢牛肉滑蛋饭）的值为1，命题2（小明喜欢糖拌西红柿）的值为假。对于命题3（小明喜欢番茄炖牛肉），我们使用介于0和1之间的<strong>隶属度</strong>表示这两个值之间的过渡状态，例如命题3的值=0.7，表示小明有点喜欢番茄炖牛肉。使用隶属度值<strong>消除二值之间非此即彼的对立，这就是模糊逻辑</strong>。</p>\n<h3 id=\"模糊集合\"><a href=\"#模糊集合\" class=\"headerlink\" title=\"模糊集合\"></a>模糊集合</h3><p>接下来，我们更进一步地引入<strong>模糊集合</strong>的概念。在古典集合中，对于任意全域<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.735ex\" height=\"1.595ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 767 705\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D448\" d=\"M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z\"></path></g></g></g></svg></mjx-container>内的一个元素<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.294ex\" height=\"1.025ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 572 453\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></g></g></g></svg></mjx-container>和一个集合<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.697ex\" height=\"1.62ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 750 716\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g></g></g></svg></mjx-container>，如果使用<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.885ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 2159.3 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D453\" d=\"M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(523,-152.7) scale(0.707)\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(1103.3,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1492.3,0)\"><path data-c=\"22C5\" d=\"M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1770.3,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>表示元素相对于集合的关系，则只包含以下两种情况：</p>\n<script type=\"math/tex; mode=display\">\nf_A(x)=\\left\\{\n\\begin{aligned}\n0, x\\notin A\\\\\n1, x\\in A\n\\end{aligned}\\right.</script><p>那么 <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"15.168ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 6704.1 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D453\" d=\"M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(523,-152.7) scale(0.707)\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(1381.1,0)\"><path data-c=\"3A\" d=\"M78 370Q78 394 95 412T138 430Q162 430 180 414T199 371Q199 346 182 328T139 310T96 327T78 370ZM78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1936.9,0)\"><path data-c=\"1D448\" d=\"M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2981.7,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4259.4,0)\"><path data-c=\"7B\" d=\"M434 -231Q434 -244 428 -250H410Q281 -250 230 -184Q225 -177 222 -172T217 -161T213 -148T211 -133T210 -111T209 -84T209 -47T209 0Q209 21 209 53Q208 142 204 153Q203 154 203 155Q189 191 153 211T82 231Q71 231 68 234T65 250T68 266T82 269Q116 269 152 289T203 345Q208 356 208 377T209 529V579Q209 634 215 656T244 698Q270 724 324 740Q361 748 377 749Q379 749 390 749T408 750H428Q434 744 434 732Q434 719 431 716Q429 713 415 713Q362 710 332 689T296 647Q291 634 291 499V417Q291 370 288 353T271 314Q240 271 184 255L170 250L184 245Q202 239 220 230T262 196T290 137Q291 131 291 1Q291 -134 296 -147Q306 -174 339 -192T415 -213Q429 -213 431 -216Q434 -219 434 -231Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(4759.4,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(5259.4,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(5704.1,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6204.1,0)\"><path data-c=\"7D\" d=\"M65 731Q65 745 68 747T88 750Q171 750 216 725T279 670Q288 649 289 635T291 501Q292 362 293 357Q306 312 345 291T417 269Q428 269 431 266T434 250T431 234T417 231Q380 231 345 210T298 157Q293 143 292 121T291 -28V-79Q291 -134 285 -156T256 -198Q202 -250 89 -250Q71 -250 68 -247T65 -230Q65 -224 65 -223T66 -218T69 -214T77 -213Q91 -213 108 -210T146 -200T183 -177T207 -139Q208 -134 209 3L210 139Q223 196 280 230Q315 247 330 250Q305 257 280 270Q225 304 212 352L210 362L209 498Q208 635 207 640Q195 680 154 696T77 713Q68 713 67 716T65 731Z\"></path></g></g></g></svg></mjx-container>就是一个二值函数。在<strong>模糊集合</strong>中，则使用连续值表示<em>元素属于集合的程度</em>，这样的函数<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"14.313ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 6326.6 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D453\" d=\"M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(523,-152.7) scale(0.707)\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g></g><g data-mml-node=\"mi\" transform=\"translate(1103.3,0)\"><text data-variant=\"italic\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\" font-style=\"italic\">：</text></g><g data-mml-node=\"mi\" transform=\"translate(2003.3,0)\"><path data-c=\"1D448\" d=\"M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3048.1,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4325.9,0)\"><path data-c=\"5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(4603.9,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(5103.9,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(5548.6,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6048.6,0)\"><path data-c=\"5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"></path></g></g></g></svg></mjx-container>就被称为连续的<strong>隶属度函数</strong>。所谓“隶属度”，就是“元素隶属于集合的程度”。例如 <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"11.459ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 5064.9 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D453\" d=\"M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(523,-152.7) scale(0.707)\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(1103.3,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1492.3,0)\"><path data-c=\"1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2064.3,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2731.1,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(3786.9,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path><path data-c=\"2E\" d=\"M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z\" transform=\"translate(500,0)\"></path><path data-c=\"36\" d=\"M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z\" transform=\"translate(778,0)\"></path></g></g></g></svg></mjx-container>，表示元素<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.294ex\" height=\"1.025ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 572 453\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></g></g></g></svg></mjx-container>属于集合<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.697ex\" height=\"1.62ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 750 716\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g></g></g></svg></mjx-container>的程度是0.6.</p>\n","site":{"data":{}},"length":913,"excerpt":"<p>模糊理论（Fuzzy Theory）是指用到了<strong>模糊集合</strong>的基本概念或<strong>连续隶属度函数</strong>的理论。它可分类为模糊数学，模糊系统，不确定性和信息，模糊决策，模糊逻辑与人工智能这五个分支，它们并不是完全独立的，它们之间有紧密的联系。例如，模糊控制就会用到模糊数学和模糊逻辑中的概念。从实际应用的观点来看，模糊理论的应用大部分集中在<strong>模糊系统</strong>上，尤其集中在模糊控制上。也有一些模糊专家系统应用于医疗诊断和决策支持。由于模糊理论从理论和实践的角度看仍然是新生事物，所以我们期望，随着模糊领域的成熟，将会出现更多可靠的实际应用。 （摘自百度百科）</p>","more":"<h2 id=\"什么是模糊理论\"><a href=\"#什么是模糊理论\" class=\"headerlink\" title=\"什么是模糊理论\"></a>什么是模糊理论</h2><h3 id=\"模糊\"><a href=\"#模糊\" class=\"headerlink\" title=\"模糊\"></a>模糊</h3><p>介绍模糊理论之前，我们首先直观地理解<strong>模糊</strong>这一概念。例如小明<strong>十分喜欢吃牛肉和鸡蛋</strong>，<strong>特别讨厌番茄和甜食</strong>。那么可以明确地说，小明喜欢吃牛肉滑蛋饭但很讨厌吃糖拌西红柿。但如果给小明做一份<strong>番茄炖牛肉</strong>，我们就不能确定小明是喜欢还是不喜欢。在这一场景下，小明对番茄炖牛肉的态度就是“模糊”的。</p>\n<h3 id=\"模糊逻辑\"><a href=\"#模糊逻辑\" class=\"headerlink\" title=\"模糊逻辑\"></a>模糊逻辑</h3><p>更一般地，我们引入<strong>模糊逻辑</strong>的概念。在经典二值逻辑中，我们用1表示真（喜欢），0表示假（不喜欢），那么命题1（小明喜欢牛肉滑蛋饭）的值为1，命题2（小明喜欢糖拌西红柿）的值为假。对于命题3（小明喜欢番茄炖牛肉），我们使用介于0和1之间的<strong>隶属度</strong>表示这两个值之间的过渡状态，例如命题3的值=0.7，表示小明有点喜欢番茄炖牛肉。使用隶属度值<strong>消除二值之间非此即彼的对立，这就是模糊逻辑</strong>。</p>\n<h3 id=\"模糊集合\"><a href=\"#模糊集合\" class=\"headerlink\" title=\"模糊集合\"></a>模糊集合</h3><p>接下来，我们更进一步地引入<strong>模糊集合</strong>的概念。在古典集合中，对于任意全域<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.735ex\" height=\"1.595ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 767 705\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D448\" d=\"M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z\"></path></g></g></g></svg></mjx-container>内的一个元素<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.294ex\" height=\"1.025ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 572 453\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></g></g></g></svg></mjx-container>和一个集合<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.697ex\" height=\"1.62ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 750 716\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g></g></g></svg></mjx-container>，如果使用<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.885ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 2159.3 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D453\" d=\"M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(523,-152.7) scale(0.707)\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(1103.3,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1492.3,0)\"><path data-c=\"22C5\" d=\"M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1770.3,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>表示元素相对于集合的关系，则只包含以下两种情况：</p>\n<script type=\"math/tex; mode=display\">\nf_A(x)=\\left\\{\n\\begin{aligned}\n0, x\\notin A\\\\\n1, x\\in A\n\\end{aligned}\\right.</script><p>那么 <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"15.168ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 6704.1 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D453\" d=\"M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(523,-152.7) scale(0.707)\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(1381.1,0)\"><path data-c=\"3A\" d=\"M78 370Q78 394 95 412T138 430Q162 430 180 414T199 371Q199 346 182 328T139 310T96 327T78 370ZM78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1936.9,0)\"><path data-c=\"1D448\" d=\"M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2981.7,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4259.4,0)\"><path data-c=\"7B\" d=\"M434 -231Q434 -244 428 -250H410Q281 -250 230 -184Q225 -177 222 -172T217 -161T213 -148T211 -133T210 -111T209 -84T209 -47T209 0Q209 21 209 53Q208 142 204 153Q203 154 203 155Q189 191 153 211T82 231Q71 231 68 234T65 250T68 266T82 269Q116 269 152 289T203 345Q208 356 208 377T209 529V579Q209 634 215 656T244 698Q270 724 324 740Q361 748 377 749Q379 749 390 749T408 750H428Q434 744 434 732Q434 719 431 716Q429 713 415 713Q362 710 332 689T296 647Q291 634 291 499V417Q291 370 288 353T271 314Q240 271 184 255L170 250L184 245Q202 239 220 230T262 196T290 137Q291 131 291 1Q291 -134 296 -147Q306 -174 339 -192T415 -213Q429 -213 431 -216Q434 -219 434 -231Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(4759.4,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(5259.4,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(5704.1,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6204.1,0)\"><path data-c=\"7D\" d=\"M65 731Q65 745 68 747T88 750Q171 750 216 725T279 670Q288 649 289 635T291 501Q292 362 293 357Q306 312 345 291T417 269Q428 269 431 266T434 250T431 234T417 231Q380 231 345 210T298 157Q293 143 292 121T291 -28V-79Q291 -134 285 -156T256 -198Q202 -250 89 -250Q71 -250 68 -247T65 -230Q65 -224 65 -223T66 -218T69 -214T77 -213Q91 -213 108 -210T146 -200T183 -177T207 -139Q208 -134 209 3L210 139Q223 196 280 230Q315 247 330 250Q305 257 280 270Q225 304 212 352L210 362L209 498Q208 635 207 640Q195 680 154 696T77 713Q68 713 67 716T65 731Z\"></path></g></g></g></svg></mjx-container>就是一个二值函数。在<strong>模糊集合</strong>中，则使用连续值表示<em>元素属于集合的程度</em>，这样的函数<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"14.313ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 6326.6 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D453\" d=\"M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(523,-152.7) scale(0.707)\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g></g><g data-mml-node=\"mi\" transform=\"translate(1103.3,0)\"><text data-variant=\"italic\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\" font-style=\"italic\">：</text></g><g data-mml-node=\"mi\" transform=\"translate(2003.3,0)\"><path data-c=\"1D448\" d=\"M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3048.1,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4325.9,0)\"><path data-c=\"5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(4603.9,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(5103.9,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(5548.6,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6048.6,0)\"><path data-c=\"5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"></path></g></g></g></svg></mjx-container>就被称为连续的<strong>隶属度函数</strong>。所谓“隶属度”，就是“元素隶属于集合的程度”。例如 <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"11.459ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 5064.9 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D453\" d=\"M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(523,-152.7) scale(0.707)\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(1103.3,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1492.3,0)\"><path data-c=\"1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2064.3,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2731.1,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(3786.9,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path><path data-c=\"2E\" d=\"M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z\" transform=\"translate(500,0)\"></path><path data-c=\"36\" d=\"M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z\" transform=\"translate(778,0)\"></path></g></g></g></svg></mjx-container>，表示元素<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.294ex\" height=\"1.025ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 572 453\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></g></g></g></svg></mjx-container>属于集合<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.697ex\" height=\"1.62ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 750 716\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g></g></g></svg></mjx-container>的程度是0.6.</p>"},{"title":"读Paper的一些感想记录","date":"2022-02-21T16:00:00.000Z","key":"paper20220222","_content":"\n最近一直在读paper。结合之前与老师、前辈、朋友讨论的经历，在此总结读paper的一些感想记录。这既是我自己的反思与总结，也可以为大家提供一些经验参考。\n\n<!--more-->\n## 读写paper\n在开始一个研究项目前，往往需要阅读大量领域内的paper。这一方面是为了快速了解最新研究进展，寻找idea并且避免工作重复；另一方面是为了学习优秀paper的写作风格。毕竟，读者在读你的Intro之前，并不知道你的工作内容是什么。因此在优秀的paper中，作者会让读者在进入正文之前快速了解：1. 本文研究的是什么问题；2. 该问题有什么研究挑战； 3. 我们怎样一一解决这些挑战。一言以蔽之，让读者快速了解研究工作的价值。然而，虽然优秀的paper篇篇相似，不行的paper各有各的缺点，但即便是优秀的paper也浩如烟海。因此，高效地阅读paper是一个重要的能力。为此，我主要总结了以下几点：\n1. 外语水平：基本语言素养\n2. 注意力分配：各个章节注意力占比\n3. 带着问题去读\n\n### 外语水平\n就个人经验而言，在cs领域，绝大部分paper用英文写成。因此高效阅读paper的基本素养便是足够过关的英文水平。\n\n首先，专业paper需要大量的词汇积累，既包括日常常见词汇，也包括领域内的专业词汇。积累词汇能极大减少查词典的时间，因此无疑能提升阅读paper效率。其次，要锻炼阅读长难句、复杂句式的能力（虽然写论文严重不建议用长难句）。如果paper作者来自于英语国家，或者研究领域在教育学、心理学等不那么理工科的专业，那么对应的英文paper常常会出现三四行一句的长难句。遇到这种情况时，我一般会手动将长难句化解为几个简单的短句，然后结合上下文分别阅读。虽然cs领域的论文鲜有长难句，但目前机器学习和其他领域的交叉十分普遍，因此免不了阅读其他领域的论文，故而必须适应阅读这类复杂句式的能力。\n\n整体而言，个人认为六级550+或托福100+是量化的必要水平（废话，国外研究生申请很多是这个bar）。在此之上，还需要大量阅读本领域的文章，从而内化paper的写作风格、积累专业表达。这样在阅读新Paper时便能快速上手。\n\n### 注意力分配\n初读paper时，我往往恨不得一字一句地都读下去，从abstract到intro到model到experiment，每一个部分都打破沙锅问到底。**然而**，这是一个十分低效的阅读策略。就个人经验和老师前辈们的指导而言，注意力应该多放在intro上——这一章节具体介绍了paper主要的研究方向、研究问题和解决方法。如果阅读过程中能够快速理解问题的价值和研究贡献，那么就考虑读model和experiment部分。能发出来的paper，模型结构基本七七八八，实验效果都不会差。因此没有必要花太多时间在研究模型和实验细节部分。对于个人而言，这两部分的阅读主要起到启发灵感的作用——比如模型的设计有无借鉴；实验的组织安排、性能评测指标能否参考使用等。如某友所言，写paper不是写技术文档，更不是写实验报告。创新永远是第一位的，而这一点一定会在intro中展示。\n\n总结而言，读paper的注意力分配策略实质上是一个自顶向下的层次化(hierarchical)方法。第一层，快速阅读abstract和intro，了解研究问题和创新点。第二层，根据第一层的阅读结果动态选择继续细读或快速浏览或放弃。这一自顶向下、自粗向细的方法能极大提升阅读效率，并将注意力放在与自己研究内容相关的paper上。\n\n### 带着问题去读\n需要明白的是，任何一项研究工作，都需要一个动机(motivation)——每一篇paper都为解决某些专业问题而写成。而paper的创新点，则构成了解决问题的方法。不仅写paper是问题导向的，读paper也是问题导向的。如果不带着问题去读，往往会有头无尾，晕头转向——为什么这里要用LSTM而不是FC？为什么要使用强理论假设？相反，带着问题去读，逻辑便能和作者的思维贯通，也有助于读者达成自己的阅读目的（如研究paper是怎么解决问题的，从而启发灵感）。\n\n在读写论文的问题上，我曾和一位在国际学校学习过的好友聊过——他的课程中包含大量科技写作的训练。友人建议用\"5W\"法阅读和写作。这里进一步参考[百度百科](https://baike.baidu.com/item/5W2H%E5%88%86%E6%9E%90%E6%B3%95/8111597)，总结5W2H法的问题提出方法：\n\n#### 5W2H\n- WHAT——是什么？目的是什么？做什么工作？\n- WHY——为什么要做？可不可以不做？有没有替代方案？\n- WHO——谁？由谁来做？\n- WHEN——何时？什么时间做？什么时机最适宜？\n- WHERE——何处？在哪里做？\n- HOW ——怎么做？如何提高效率？如何实施？方法是什么？\n- HOW MUCH——多少？做到什么程度？数量如何？质量水平如何？费用产出如何？\n\n在阅读论文中，可以灵活地使用5W2H法提出和跟踪问题。带着问题去读，能帮助理清paper的逻辑和创新点，达到事半功倍的阅读效果。\n\n最后，这里推荐一篇范文——[《一种加辣椒的番茄炒蛋》](https://zhuanlan.zhihu.com/p/433237905)，可以从作者的角度了解一篇paper的逻辑是如何组织的。\n\n## 参考文献\n1. [一种加辣椒的番茄炒蛋.Jingwei Huang.CVPR 9999 Best Paper](https://zhuanlan.zhihu.com/p/433237905)\n2. [技术之外(一).Yuandong Tian](https://zhuanlan.zhihu.com/p/469717875)\n3. [5W2H分析法.百度百科](https://baike.baidu.com/item/5W2H%E5%88%86%E6%9E%90%E6%B3%95/8111597)","source":"_posts/2022-02-22-paper.md","raw":"---\ntitle: 读Paper的一些感想记录\ndate: 2022-02-22\ntags: 科研\nkey: paper20220222\n---\n\n最近一直在读paper。结合之前与老师、前辈、朋友讨论的经历，在此总结读paper的一些感想记录。这既是我自己的反思与总结，也可以为大家提供一些经验参考。\n\n<!--more-->\n## 读写paper\n在开始一个研究项目前，往往需要阅读大量领域内的paper。这一方面是为了快速了解最新研究进展，寻找idea并且避免工作重复；另一方面是为了学习优秀paper的写作风格。毕竟，读者在读你的Intro之前，并不知道你的工作内容是什么。因此在优秀的paper中，作者会让读者在进入正文之前快速了解：1. 本文研究的是什么问题；2. 该问题有什么研究挑战； 3. 我们怎样一一解决这些挑战。一言以蔽之，让读者快速了解研究工作的价值。然而，虽然优秀的paper篇篇相似，不行的paper各有各的缺点，但即便是优秀的paper也浩如烟海。因此，高效地阅读paper是一个重要的能力。为此，我主要总结了以下几点：\n1. 外语水平：基本语言素养\n2. 注意力分配：各个章节注意力占比\n3. 带着问题去读\n\n### 外语水平\n就个人经验而言，在cs领域，绝大部分paper用英文写成。因此高效阅读paper的基本素养便是足够过关的英文水平。\n\n首先，专业paper需要大量的词汇积累，既包括日常常见词汇，也包括领域内的专业词汇。积累词汇能极大减少查词典的时间，因此无疑能提升阅读paper效率。其次，要锻炼阅读长难句、复杂句式的能力（虽然写论文严重不建议用长难句）。如果paper作者来自于英语国家，或者研究领域在教育学、心理学等不那么理工科的专业，那么对应的英文paper常常会出现三四行一句的长难句。遇到这种情况时，我一般会手动将长难句化解为几个简单的短句，然后结合上下文分别阅读。虽然cs领域的论文鲜有长难句，但目前机器学习和其他领域的交叉十分普遍，因此免不了阅读其他领域的论文，故而必须适应阅读这类复杂句式的能力。\n\n整体而言，个人认为六级550+或托福100+是量化的必要水平（废话，国外研究生申请很多是这个bar）。在此之上，还需要大量阅读本领域的文章，从而内化paper的写作风格、积累专业表达。这样在阅读新Paper时便能快速上手。\n\n### 注意力分配\n初读paper时，我往往恨不得一字一句地都读下去，从abstract到intro到model到experiment，每一个部分都打破沙锅问到底。**然而**，这是一个十分低效的阅读策略。就个人经验和老师前辈们的指导而言，注意力应该多放在intro上——这一章节具体介绍了paper主要的研究方向、研究问题和解决方法。如果阅读过程中能够快速理解问题的价值和研究贡献，那么就考虑读model和experiment部分。能发出来的paper，模型结构基本七七八八，实验效果都不会差。因此没有必要花太多时间在研究模型和实验细节部分。对于个人而言，这两部分的阅读主要起到启发灵感的作用——比如模型的设计有无借鉴；实验的组织安排、性能评测指标能否参考使用等。如某友所言，写paper不是写技术文档，更不是写实验报告。创新永远是第一位的，而这一点一定会在intro中展示。\n\n总结而言，读paper的注意力分配策略实质上是一个自顶向下的层次化(hierarchical)方法。第一层，快速阅读abstract和intro，了解研究问题和创新点。第二层，根据第一层的阅读结果动态选择继续细读或快速浏览或放弃。这一自顶向下、自粗向细的方法能极大提升阅读效率，并将注意力放在与自己研究内容相关的paper上。\n\n### 带着问题去读\n需要明白的是，任何一项研究工作，都需要一个动机(motivation)——每一篇paper都为解决某些专业问题而写成。而paper的创新点，则构成了解决问题的方法。不仅写paper是问题导向的，读paper也是问题导向的。如果不带着问题去读，往往会有头无尾，晕头转向——为什么这里要用LSTM而不是FC？为什么要使用强理论假设？相反，带着问题去读，逻辑便能和作者的思维贯通，也有助于读者达成自己的阅读目的（如研究paper是怎么解决问题的，从而启发灵感）。\n\n在读写论文的问题上，我曾和一位在国际学校学习过的好友聊过——他的课程中包含大量科技写作的训练。友人建议用\"5W\"法阅读和写作。这里进一步参考[百度百科](https://baike.baidu.com/item/5W2H%E5%88%86%E6%9E%90%E6%B3%95/8111597)，总结5W2H法的问题提出方法：\n\n#### 5W2H\n- WHAT——是什么？目的是什么？做什么工作？\n- WHY——为什么要做？可不可以不做？有没有替代方案？\n- WHO——谁？由谁来做？\n- WHEN——何时？什么时间做？什么时机最适宜？\n- WHERE——何处？在哪里做？\n- HOW ——怎么做？如何提高效率？如何实施？方法是什么？\n- HOW MUCH——多少？做到什么程度？数量如何？质量水平如何？费用产出如何？\n\n在阅读论文中，可以灵活地使用5W2H法提出和跟踪问题。带着问题去读，能帮助理清paper的逻辑和创新点，达到事半功倍的阅读效果。\n\n最后，这里推荐一篇范文——[《一种加辣椒的番茄炒蛋》](https://zhuanlan.zhihu.com/p/433237905)，可以从作者的角度了解一篇paper的逻辑是如何组织的。\n\n## 参考文献\n1. [一种加辣椒的番茄炒蛋.Jingwei Huang.CVPR 9999 Best Paper](https://zhuanlan.zhihu.com/p/433237905)\n2. [技术之外(一).Yuandong Tian](https://zhuanlan.zhihu.com/p/469717875)\n3. [5W2H分析法.百度百科](https://baike.baidu.com/item/5W2H%E5%88%86%E6%9E%90%E6%B3%95/8111597)","slug":"2022-02-22-paper","published":1,"updated":"2022-04-06T09:50:58.025Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cludw9n9n000q9wv90g0ifcki","content":"<p>最近一直在读paper。结合之前与老师、前辈、朋友讨论的经历，在此总结读paper的一些感想记录。这既是我自己的反思与总结，也可以为大家提供一些经验参考。</p>\n<span id=\"more\"></span>\n<h2 id=\"读写paper\"><a href=\"#读写paper\" class=\"headerlink\" title=\"读写paper\"></a>读写paper</h2><p>在开始一个研究项目前，往往需要阅读大量领域内的paper。这一方面是为了快速了解最新研究进展，寻找idea并且避免工作重复；另一方面是为了学习优秀paper的写作风格。毕竟，读者在读你的Intro之前，并不知道你的工作内容是什么。因此在优秀的paper中，作者会让读者在进入正文之前快速了解：1. 本文研究的是什么问题；2. 该问题有什么研究挑战； 3. 我们怎样一一解决这些挑战。一言以蔽之，让读者快速了解研究工作的价值。然而，虽然优秀的paper篇篇相似，不行的paper各有各的缺点，但即便是优秀的paper也浩如烟海。因此，高效地阅读paper是一个重要的能力。为此，我主要总结了以下几点：</p>\n<ol>\n<li>外语水平：基本语言素养</li>\n<li>注意力分配：各个章节注意力占比</li>\n<li>带着问题去读</li>\n</ol>\n<h3 id=\"外语水平\"><a href=\"#外语水平\" class=\"headerlink\" title=\"外语水平\"></a>外语水平</h3><p>就个人经验而言，在cs领域，绝大部分paper用英文写成。因此高效阅读paper的基本素养便是足够过关的英文水平。</p>\n<p>首先，专业paper需要大量的词汇积累，既包括日常常见词汇，也包括领域内的专业词汇。积累词汇能极大减少查词典的时间，因此无疑能提升阅读paper效率。其次，要锻炼阅读长难句、复杂句式的能力（虽然写论文严重不建议用长难句）。如果paper作者来自于英语国家，或者研究领域在教育学、心理学等不那么理工科的专业，那么对应的英文paper常常会出现三四行一句的长难句。遇到这种情况时，我一般会手动将长难句化解为几个简单的短句，然后结合上下文分别阅读。虽然cs领域的论文鲜有长难句，但目前机器学习和其他领域的交叉十分普遍，因此免不了阅读其他领域的论文，故而必须适应阅读这类复杂句式的能力。</p>\n<p>整体而言，个人认为六级550+或托福100+是量化的必要水平（废话，国外研究生申请很多是这个bar）。在此之上，还需要大量阅读本领域的文章，从而内化paper的写作风格、积累专业表达。这样在阅读新Paper时便能快速上手。</p>\n<h3 id=\"注意力分配\"><a href=\"#注意力分配\" class=\"headerlink\" title=\"注意力分配\"></a>注意力分配</h3><p>初读paper时，我往往恨不得一字一句地都读下去，从abstract到intro到model到experiment，每一个部分都打破沙锅问到底。<strong>然而</strong>，这是一个十分低效的阅读策略。就个人经验和老师前辈们的指导而言，注意力应该多放在intro上——这一章节具体介绍了paper主要的研究方向、研究问题和解决方法。如果阅读过程中能够快速理解问题的价值和研究贡献，那么就考虑读model和experiment部分。能发出来的paper，模型结构基本七七八八，实验效果都不会差。因此没有必要花太多时间在研究模型和实验细节部分。对于个人而言，这两部分的阅读主要起到启发灵感的作用——比如模型的设计有无借鉴；实验的组织安排、性能评测指标能否参考使用等。如某友所言，写paper不是写技术文档，更不是写实验报告。创新永远是第一位的，而这一点一定会在intro中展示。</p>\n<p>总结而言，读paper的注意力分配策略实质上是一个自顶向下的层次化(hierarchical)方法。第一层，快速阅读abstract和intro，了解研究问题和创新点。第二层，根据第一层的阅读结果动态选择继续细读或快速浏览或放弃。这一自顶向下、自粗向细的方法能极大提升阅读效率，并将注意力放在与自己研究内容相关的paper上。</p>\n<h3 id=\"带着问题去读\"><a href=\"#带着问题去读\" class=\"headerlink\" title=\"带着问题去读\"></a>带着问题去读</h3><p>需要明白的是，任何一项研究工作，都需要一个动机(motivation)——每一篇paper都为解决某些专业问题而写成。而paper的创新点，则构成了解决问题的方法。不仅写paper是问题导向的，读paper也是问题导向的。如果不带着问题去读，往往会有头无尾，晕头转向——为什么这里要用LSTM而不是FC？为什么要使用强理论假设？相反，带着问题去读，逻辑便能和作者的思维贯通，也有助于读者达成自己的阅读目的（如研究paper是怎么解决问题的，从而启发灵感）。</p>\n<p>在读写论文的问题上，我曾和一位在国际学校学习过的好友聊过——他的课程中包含大量科技写作的训练。友人建议用”5W”法阅读和写作。这里进一步参考<a href=\"https://baike.baidu.com/item/5W2H%E5%88%86%E6%9E%90%E6%B3%95/8111597\">百度百科</a>，总结5W2H法的问题提出方法：</p>\n<h4 id=\"5W2H\"><a href=\"#5W2H\" class=\"headerlink\" title=\"5W2H\"></a>5W2H</h4><ul>\n<li>WHAT——是什么？目的是什么？做什么工作？</li>\n<li>WHY——为什么要做？可不可以不做？有没有替代方案？</li>\n<li>WHO——谁？由谁来做？</li>\n<li>WHEN——何时？什么时间做？什么时机最适宜？</li>\n<li>WHERE——何处？在哪里做？</li>\n<li>HOW ——怎么做？如何提高效率？如何实施？方法是什么？</li>\n<li>HOW MUCH——多少？做到什么程度？数量如何？质量水平如何？费用产出如何？</li>\n</ul>\n<p>在阅读论文中，可以灵活地使用5W2H法提出和跟踪问题。带着问题去读，能帮助理清paper的逻辑和创新点，达到事半功倍的阅读效果。</p>\n<p>最后，这里推荐一篇范文——<a href=\"https://zhuanlan.zhihu.com/p/433237905\">《一种加辣椒的番茄炒蛋》</a>，可以从作者的角度了解一篇paper的逻辑是如何组织的。</p>\n<h2 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h2><ol>\n<li><a href=\"https://zhuanlan.zhihu.com/p/433237905\">一种加辣椒的番茄炒蛋.Jingwei Huang.CVPR 9999 Best Paper</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/469717875\">技术之外(一).Yuandong Tian</a></li>\n<li><a href=\"https://baike.baidu.com/item/5W2H%E5%88%86%E6%9E%90%E6%B3%95/8111597\">5W2H分析法.百度百科</a></li>\n</ol>\n","site":{"data":{}},"length":2100,"excerpt":"<p>最近一直在读paper。结合之前与老师、前辈、朋友讨论的经历，在此总结读paper的一些感想记录。这既是我自己的反思与总结，也可以为大家提供一些经验参考。</p>","more":"<h2 id=\"读写paper\"><a href=\"#读写paper\" class=\"headerlink\" title=\"读写paper\"></a>读写paper</h2><p>在开始一个研究项目前，往往需要阅读大量领域内的paper。这一方面是为了快速了解最新研究进展，寻找idea并且避免工作重复；另一方面是为了学习优秀paper的写作风格。毕竟，读者在读你的Intro之前，并不知道你的工作内容是什么。因此在优秀的paper中，作者会让读者在进入正文之前快速了解：1. 本文研究的是什么问题；2. 该问题有什么研究挑战； 3. 我们怎样一一解决这些挑战。一言以蔽之，让读者快速了解研究工作的价值。然而，虽然优秀的paper篇篇相似，不行的paper各有各的缺点，但即便是优秀的paper也浩如烟海。因此，高效地阅读paper是一个重要的能力。为此，我主要总结了以下几点：</p>\n<ol>\n<li>外语水平：基本语言素养</li>\n<li>注意力分配：各个章节注意力占比</li>\n<li>带着问题去读</li>\n</ol>\n<h3 id=\"外语水平\"><a href=\"#外语水平\" class=\"headerlink\" title=\"外语水平\"></a>外语水平</h3><p>就个人经验而言，在cs领域，绝大部分paper用英文写成。因此高效阅读paper的基本素养便是足够过关的英文水平。</p>\n<p>首先，专业paper需要大量的词汇积累，既包括日常常见词汇，也包括领域内的专业词汇。积累词汇能极大减少查词典的时间，因此无疑能提升阅读paper效率。其次，要锻炼阅读长难句、复杂句式的能力（虽然写论文严重不建议用长难句）。如果paper作者来自于英语国家，或者研究领域在教育学、心理学等不那么理工科的专业，那么对应的英文paper常常会出现三四行一句的长难句。遇到这种情况时，我一般会手动将长难句化解为几个简单的短句，然后结合上下文分别阅读。虽然cs领域的论文鲜有长难句，但目前机器学习和其他领域的交叉十分普遍，因此免不了阅读其他领域的论文，故而必须适应阅读这类复杂句式的能力。</p>\n<p>整体而言，个人认为六级550+或托福100+是量化的必要水平（废话，国外研究生申请很多是这个bar）。在此之上，还需要大量阅读本领域的文章，从而内化paper的写作风格、积累专业表达。这样在阅读新Paper时便能快速上手。</p>\n<h3 id=\"注意力分配\"><a href=\"#注意力分配\" class=\"headerlink\" title=\"注意力分配\"></a>注意力分配</h3><p>初读paper时，我往往恨不得一字一句地都读下去，从abstract到intro到model到experiment，每一个部分都打破沙锅问到底。<strong>然而</strong>，这是一个十分低效的阅读策略。就个人经验和老师前辈们的指导而言，注意力应该多放在intro上——这一章节具体介绍了paper主要的研究方向、研究问题和解决方法。如果阅读过程中能够快速理解问题的价值和研究贡献，那么就考虑读model和experiment部分。能发出来的paper，模型结构基本七七八八，实验效果都不会差。因此没有必要花太多时间在研究模型和实验细节部分。对于个人而言，这两部分的阅读主要起到启发灵感的作用——比如模型的设计有无借鉴；实验的组织安排、性能评测指标能否参考使用等。如某友所言，写paper不是写技术文档，更不是写实验报告。创新永远是第一位的，而这一点一定会在intro中展示。</p>\n<p>总结而言，读paper的注意力分配策略实质上是一个自顶向下的层次化(hierarchical)方法。第一层，快速阅读abstract和intro，了解研究问题和创新点。第二层，根据第一层的阅读结果动态选择继续细读或快速浏览或放弃。这一自顶向下、自粗向细的方法能极大提升阅读效率，并将注意力放在与自己研究内容相关的paper上。</p>\n<h3 id=\"带着问题去读\"><a href=\"#带着问题去读\" class=\"headerlink\" title=\"带着问题去读\"></a>带着问题去读</h3><p>需要明白的是，任何一项研究工作，都需要一个动机(motivation)——每一篇paper都为解决某些专业问题而写成。而paper的创新点，则构成了解决问题的方法。不仅写paper是问题导向的，读paper也是问题导向的。如果不带着问题去读，往往会有头无尾，晕头转向——为什么这里要用LSTM而不是FC？为什么要使用强理论假设？相反，带着问题去读，逻辑便能和作者的思维贯通，也有助于读者达成自己的阅读目的（如研究paper是怎么解决问题的，从而启发灵感）。</p>\n<p>在读写论文的问题上，我曾和一位在国际学校学习过的好友聊过——他的课程中包含大量科技写作的训练。友人建议用”5W”法阅读和写作。这里进一步参考<a href=\"https://baike.baidu.com/item/5W2H%E5%88%86%E6%9E%90%E6%B3%95/8111597\">百度百科</a>，总结5W2H法的问题提出方法：</p>\n<h4 id=\"5W2H\"><a href=\"#5W2H\" class=\"headerlink\" title=\"5W2H\"></a>5W2H</h4><ul>\n<li>WHAT——是什么？目的是什么？做什么工作？</li>\n<li>WHY——为什么要做？可不可以不做？有没有替代方案？</li>\n<li>WHO——谁？由谁来做？</li>\n<li>WHEN——何时？什么时间做？什么时机最适宜？</li>\n<li>WHERE——何处？在哪里做？</li>\n<li>HOW ——怎么做？如何提高效率？如何实施？方法是什么？</li>\n<li>HOW MUCH——多少？做到什么程度？数量如何？质量水平如何？费用产出如何？</li>\n</ul>\n<p>在阅读论文中，可以灵活地使用5W2H法提出和跟踪问题。带着问题去读，能帮助理清paper的逻辑和创新点，达到事半功倍的阅读效果。</p>\n<p>最后，这里推荐一篇范文——<a href=\"https://zhuanlan.zhihu.com/p/433237905\">《一种加辣椒的番茄炒蛋》</a>，可以从作者的角度了解一篇paper的逻辑是如何组织的。</p>\n<h2 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h2><ol>\n<li><a href=\"https://zhuanlan.zhihu.com/p/433237905\">一种加辣椒的番茄炒蛋.Jingwei Huang.CVPR 9999 Best Paper</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/469717875\">技术之外(一).Yuandong Tian</a></li>\n<li><a href=\"https://baike.baidu.com/item/5W2H%E5%88%86%E6%9E%90%E6%B3%95/8111597\">5W2H分析法.百度百科</a></li>\n</ol>"},{"title":"一些杂谈.2","author":"LiJT","date":"2022-03-25T16:00:00.000Z","key":"remind2022032601","sharing":true,"_content":"\n本科期间上的统计类课程是多么美好的回忆。\n\n<!--more-->\n\n最近回炉统计学的一些分析与检验方法，翻到了ynyang老师的多元回归分析的讲义。\n\nynyang老师的课深入浅出，是给我印象最深，也是让我收获最大的统计类课程。从矩阵变换的技巧，到PCA，到SVD，甚至到谱聚类，PageRank算法的启蒙，都是在ynyang老师的课上完成的。尤其是SVD，当初花书和西瓜书翻了个遍也不知所云。但是ynyang老师的课却让我醍醐灌顶-SVD是对矩阵的最优低秩分解。\n\n![SVD1](https://cslijt.github.io/LiJT-Daily/images/屏幕截图_202022-03-26_175317.jpg)\n\n如今想来，本科四年在学习上的遗憾有二：\n1. 大三由于畏难，退了ynyang老师的回归分析的课。错过了一个亿的知识。\n2. 铁憨憨，没有和yang老师保持联系。\n\n\n\n\n","source":"_posts/2022-03-26-remind.md","raw":"---\ntitle: 一些杂谈.2\nauthor: LiJT\ndate: 2022-03-26\ntags: \n  - 数学 \n  - 杂谈\nkey: remind2022032601\nsharing: true\n---\n\n本科期间上的统计类课程是多么美好的回忆。\n\n<!--more-->\n\n最近回炉统计学的一些分析与检验方法，翻到了ynyang老师的多元回归分析的讲义。\n\nynyang老师的课深入浅出，是给我印象最深，也是让我收获最大的统计类课程。从矩阵变换的技巧，到PCA，到SVD，甚至到谱聚类，PageRank算法的启蒙，都是在ynyang老师的课上完成的。尤其是SVD，当初花书和西瓜书翻了个遍也不知所云。但是ynyang老师的课却让我醍醐灌顶-SVD是对矩阵的最优低秩分解。\n\n![SVD1](https://cslijt.github.io/LiJT-Daily/images/屏幕截图_202022-03-26_175317.jpg)\n\n如今想来，本科四年在学习上的遗憾有二：\n1. 大三由于畏难，退了ynyang老师的回归分析的课。错过了一个亿的知识。\n2. 铁憨憨，没有和yang老师保持联系。\n\n\n\n\n","slug":"2022-03-26-remind","published":1,"updated":"2022-04-06T09:51:09.106Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cludw9n9o000t9wv919s26njd","content":"<p>本科期间上的统计类课程是多么美好的回忆。</p>\n<span id=\"more\"></span>\n<p>最近回炉统计学的一些分析与检验方法，翻到了ynyang老师的多元回归分析的讲义。</p>\n<p>ynyang老师的课深入浅出，是给我印象最深，也是让我收获最大的统计类课程。从矩阵变换的技巧，到PCA，到SVD，甚至到谱聚类，PageRank算法的启蒙，都是在ynyang老师的课上完成的。尤其是SVD，当初花书和西瓜书翻了个遍也不知所云。但是ynyang老师的课却让我醍醐灌顶-SVD是对矩阵的最优低秩分解。</p>\n<p><img src=\"https://cslijt.github.io/LiJT-Daily/images/屏幕截图_202022-03-26_175317.jpg\" alt=\"SVD1\"></p>\n<p>如今想来，本科四年在学习上的遗憾有二：</p>\n<ol>\n<li>大三由于畏难，退了ynyang老师的回归分析的课。错过了一个亿的知识。</li>\n<li>铁憨憨，没有和yang老师保持联系。</li>\n</ol>\n","site":{"data":{}},"length":288,"excerpt":"<p>本科期间上的统计类课程是多么美好的回忆。</p>","more":"<p>最近回炉统计学的一些分析与检验方法，翻到了ynyang老师的多元回归分析的讲义。</p>\n<p>ynyang老师的课深入浅出，是给我印象最深，也是让我收获最大的统计类课程。从矩阵变换的技巧，到PCA，到SVD，甚至到谱聚类，PageRank算法的启蒙，都是在ynyang老师的课上完成的。尤其是SVD，当初花书和西瓜书翻了个遍也不知所云。但是ynyang老师的课却让我醍醐灌顶-SVD是对矩阵的最优低秩分解。</p>\n<p><img src=\"https://cslijt.github.io/LiJT-Daily/images/屏幕截图_202022-03-26_175317.jpg\" alt=\"SVD1\"></p>\n<p>如今想来，本科四年在学习上的遗憾有二：</p>\n<ol>\n<li>大三由于畏难，退了ynyang老师的回归分析的课。错过了一个亿的知识。</li>\n<li>铁憨憨，没有和yang老师保持联系。</li>\n</ol>"},{"title":"最近的学习计划","author":"LiJT","date":"2022-03-31T16:00:00.000Z","show_author_profile":true,"key":"plan20220401","sharing":true,"_content":"\n记录一些出于兴趣或出于工程需要，最近计划系统学习的一些知识。\n\n相当于立一个flag.\n<!--more-->\n\n## CS\n- git\n  - 不要问一个学了四年CS(1年CS+3年DS)的人为什么要学git. 在此之前，git只是作为我管理代码的工具。仅仅到达“知其然”，而非知其“所以然”的程度。很多功能先搜先用、现学现卖，却不知其原理，不知其变化的用法。因此打算系统学习一下git，彻底（七七八八）掌握其各种功能的原理和用法。\n- 编译原理\n  - 3年DS跳过了编译原理这门课，实在是大不幸。考虑到最近code intelligence大火，以及自己可能整活的需要，计划学习编译原理。这一科目的学习以实践先行，理论后补的方法，免得满嘴跑火车却连语法树（听说的）都不会写。\n- GAN\n  - GAN就是干！\n\n## Stats\n- 各种参数优化方法\n  - 当初机器学习没学好，统计学里的参数优化方法不明所以。极大似然估计、贝叶斯推断、MCMC、MCMC里的Metropolis、Gibbs... 都需要补足\n  - 亲身体会：优化方法如果只看原理而没有具体案例，则原理很难理解透彻。需要结合具体的模型进行学习\n  - 最费解的还是EM算法....","source":"_posts/2022-04-01-plan.md","raw":"---\ntitle: 最近的学习计划\nauthor: LiJT\ndate: 2022-04-01\nshow_author_profile: true\ntags: \n  - 科研\n  - 学习\nkey: plan20220401\nsharing: true\n---\n\n记录一些出于兴趣或出于工程需要，最近计划系统学习的一些知识。\n\n相当于立一个flag.\n<!--more-->\n\n## CS\n- git\n  - 不要问一个学了四年CS(1年CS+3年DS)的人为什么要学git. 在此之前，git只是作为我管理代码的工具。仅仅到达“知其然”，而非知其“所以然”的程度。很多功能先搜先用、现学现卖，却不知其原理，不知其变化的用法。因此打算系统学习一下git，彻底（七七八八）掌握其各种功能的原理和用法。\n- 编译原理\n  - 3年DS跳过了编译原理这门课，实在是大不幸。考虑到最近code intelligence大火，以及自己可能整活的需要，计划学习编译原理。这一科目的学习以实践先行，理论后补的方法，免得满嘴跑火车却连语法树（听说的）都不会写。\n- GAN\n  - GAN就是干！\n\n## Stats\n- 各种参数优化方法\n  - 当初机器学习没学好，统计学里的参数优化方法不明所以。极大似然估计、贝叶斯推断、MCMC、MCMC里的Metropolis、Gibbs... 都需要补足\n  - 亲身体会：优化方法如果只看原理而没有具体案例，则原理很难理解透彻。需要结合具体的模型进行学习\n  - 最费解的还是EM算法....","slug":"2022-04-01-plan","published":1,"updated":"2022-04-06T09:51:18.870Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cludw9n9p000v9wv97l3h6pfa","content":"<p>记录一些出于兴趣或出于工程需要，最近计划系统学习的一些知识。</p>\n<p>相当于立一个flag.<br><span id=\"more\"></span></p>\n<h2 id=\"CS\"><a href=\"#CS\" class=\"headerlink\" title=\"CS\"></a>CS</h2><ul>\n<li>git<ul>\n<li>不要问一个学了四年CS(1年CS+3年DS)的人为什么要学git. 在此之前，git只是作为我管理代码的工具。仅仅到达“知其然”，而非知其“所以然”的程度。很多功能先搜先用、现学现卖，却不知其原理，不知其变化的用法。因此打算系统学习一下git，彻底（七七八八）掌握其各种功能的原理和用法。</li>\n</ul>\n</li>\n<li>编译原理<ul>\n<li>3年DS跳过了编译原理这门课，实在是大不幸。考虑到最近code intelligence大火，以及自己可能整活的需要，计划学习编译原理。这一科目的学习以实践先行，理论后补的方法，免得满嘴跑火车却连语法树（听说的）都不会写。</li>\n</ul>\n</li>\n<li>GAN<ul>\n<li>GAN就是干！</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Stats\"><a href=\"#Stats\" class=\"headerlink\" title=\"Stats\"></a>Stats</h2><ul>\n<li>各种参数优化方法<ul>\n<li>当初机器学习没学好，统计学里的参数优化方法不明所以。极大似然估计、贝叶斯推断、MCMC、MCMC里的Metropolis、Gibbs… 都需要补足</li>\n<li>亲身体会：优化方法如果只看原理而没有具体案例，则原理很难理解透彻。需要结合具体的模型进行学习</li>\n<li>最费解的还是EM算法….</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"length":456,"excerpt":"<p>记录一些出于兴趣或出于工程需要，最近计划系统学习的一些知识。</p>\n<p>相当于立一个flag.<br>","more":"</p>\n<h2 id=\"CS\"><a href=\"#CS\" class=\"headerlink\" title=\"CS\"></a>CS</h2><ul>\n<li>git<ul>\n<li>不要问一个学了四年CS(1年CS+3年DS)的人为什么要学git. 在此之前，git只是作为我管理代码的工具。仅仅到达“知其然”，而非知其“所以然”的程度。很多功能先搜先用、现学现卖，却不知其原理，不知其变化的用法。因此打算系统学习一下git，彻底（七七八八）掌握其各种功能的原理和用法。</li>\n</ul>\n</li>\n<li>编译原理<ul>\n<li>3年DS跳过了编译原理这门课，实在是大不幸。考虑到最近code intelligence大火，以及自己可能整活的需要，计划学习编译原理。这一科目的学习以实践先行，理论后补的方法，免得满嘴跑火车却连语法树（听说的）都不会写。</li>\n</ul>\n</li>\n<li>GAN<ul>\n<li>GAN就是干！</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Stats\"><a href=\"#Stats\" class=\"headerlink\" title=\"Stats\"></a>Stats</h2><ul>\n<li>各种参数优化方法<ul>\n<li>当初机器学习没学好，统计学里的参数优化方法不明所以。极大似然估计、贝叶斯推断、MCMC、MCMC里的Metropolis、Gibbs… 都需要补足</li>\n<li>亲身体会：优化方法如果只看原理而没有具体案例，则原理很难理解透彻。需要结合具体的模型进行学习</li>\n<li>最费解的还是EM算法….</li>\n</ul>\n</li>\n</ul>"},{"title":"2022-04-06-hexo","date":"2022-04-06T12:46:17.000Z","_content":"\n把个人blog的模板从jekyll更换到hexo了。\n返璞归真。\n\n<!--more-->\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'f73c0bc3c19755d1c0d886c0d8791cad24509c9a',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: document.title,\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","source":"_posts/2022-04-06-hexo.md","raw":"---\ntitle: 2022-04-06-hexo\ndate: 2022-04-06 20:46:17\ntags:\n---\n\n把个人blog的模板从jekyll更换到hexo了。\n返璞归真。\n\n<!--more-->\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'f73c0bc3c19755d1c0d886c0d8791cad24509c9a',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: document.title,\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","slug":"2022-04-06-hexo","published":1,"updated":"2022-04-06T12:50:10.827Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cludw9n9p000y9wv9h9vc9989","content":"<p>把个人blog的模板从jekyll更换到hexo了。<br>返璞归真。</p>\n<span id=\"more\"></span>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'f73c0bc3c19755d1c0d886c0d8791cad24509c9a',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: document.title,\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","site":{"data":{}},"length":345,"excerpt":"<p>把个人blog的模板从jekyll更换到hexo了。<br>返璞归真。</p>","more":"<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'f73c0bc3c19755d1c0d886c0d8791cad24509c9a',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: document.title,\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>"},{"title":"因果推断学习笔记.1","mathjax":true,"codeblock":{"enable":true,"show_result":true},"date":"2022-04-07T04:16:58.000Z","_content":"\n因果推断的基本概念。\n\n<!--more-->\n\n## 基本概念\n### 相关与因果的不同\n- 相关性 $\\neq$ 因果性\n  - 相关性是双向的；因果性是单向的。因果关系会在统计层面导致相关性，但相关性并不蕴含因果性。\n\n### 相关概念\n- **unit**: 因果推理中的原子（不可分）研究对象，可以是实物，也可以是概念\n- **treatment**: 施加给unit的操作。也叫做干预、介入等\n- **variables**(context): unit自带的一些属性。例如，若unit=患者，则variables=性别、病史、血压... 在treatment中不受影响的variable被称为pre-treatment variables\n- **confounders**(covariate): 会影响treatment选择和结果的一些变量。例如treatment=用药，confounder=年龄，即同一剂量的药剂在不同年龄段人群导致的结果可能不一样\n- **casual effect**: 因果效应。对于unit，若treatment A 的施加与否对其结果状态有影响，则称A构成一个casual effect. 施加对象是个体则构成个体因果效应；施加对象是群体则构成群体因果效应\n- **potential outcome**: 施加给unit的treatment所产生的所有结果的取值空间，包含factual outcome(观测结果)和counterfactual outcomes(反事实结果)\n- **factual outcome**: 施加给操作对象最终观测到的结果，记为Y\n- **counterfactual outcome**: 反事实结果，即不作treatment产生的结果\n- **individualized treatment effect**($ITE$): 个体操作效果。 $ITE=Y(1)-Y(0)$。其中$Y(1)$是事实结果，$Y(0)$是反事实结果。二者相减，相当于施加操作后和施加操作前unit状态的差别，即操作treatment所带来的增益。\n- **average treatment effect**($ATE$): $ITE$关于unit分布的期望。即$ATE=E(Y(1)-Y(0))$\n- **counterfactual inference**: 决类似于“如果这个病人采用其他疗法，血压会降下来吗？”这样的问题的推理。\n\n## 研究方向\n- 因果发现：给定若干个变量，发现/挖掘变量间的因果关系，形成因果有向图\n- 因果效应：已知变量和变量间的因果关系，求因果关系的效果（原因对结果的影响程度）\n\n## 参考文献\n1. [chen-wai-wai-7.因果推断综述及基础方法介绍（一）](https://zhuanlan.zhihu.com/p/258562953)\n2. [xue-ruo-7.通俗解释因果推理 casual inference](https://zhuanlan.zhihu.com/p/109996301)\n3. [丁鹏.因果推断简介.PKU-MATH-00112230.2019](https://www.math.pku.edu.cn/teachers/yaoy/math112230/lecture10_DingP_causal091101.pdf)\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: decodeURI(window.location.pathname),\n            distractionFreeMode: true // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","source":"_posts/2022-04-07-casual-inference-1.md","raw":"---\ntitle: 因果推断学习笔记.1\nmathjax: true\ncodeblock:\n  enable: true\n  show_result: true\ndate: 2022-04-07 12:16:58\ntags: 因果推断\ncategories: 学习笔记\n---\n\n因果推断的基本概念。\n\n<!--more-->\n\n## 基本概念\n### 相关与因果的不同\n- 相关性 $\\neq$ 因果性\n  - 相关性是双向的；因果性是单向的。因果关系会在统计层面导致相关性，但相关性并不蕴含因果性。\n\n### 相关概念\n- **unit**: 因果推理中的原子（不可分）研究对象，可以是实物，也可以是概念\n- **treatment**: 施加给unit的操作。也叫做干预、介入等\n- **variables**(context): unit自带的一些属性。例如，若unit=患者，则variables=性别、病史、血压... 在treatment中不受影响的variable被称为pre-treatment variables\n- **confounders**(covariate): 会影响treatment选择和结果的一些变量。例如treatment=用药，confounder=年龄，即同一剂量的药剂在不同年龄段人群导致的结果可能不一样\n- **casual effect**: 因果效应。对于unit，若treatment A 的施加与否对其结果状态有影响，则称A构成一个casual effect. 施加对象是个体则构成个体因果效应；施加对象是群体则构成群体因果效应\n- **potential outcome**: 施加给unit的treatment所产生的所有结果的取值空间，包含factual outcome(观测结果)和counterfactual outcomes(反事实结果)\n- **factual outcome**: 施加给操作对象最终观测到的结果，记为Y\n- **counterfactual outcome**: 反事实结果，即不作treatment产生的结果\n- **individualized treatment effect**($ITE$): 个体操作效果。 $ITE=Y(1)-Y(0)$。其中$Y(1)$是事实结果，$Y(0)$是反事实结果。二者相减，相当于施加操作后和施加操作前unit状态的差别，即操作treatment所带来的增益。\n- **average treatment effect**($ATE$): $ITE$关于unit分布的期望。即$ATE=E(Y(1)-Y(0))$\n- **counterfactual inference**: 决类似于“如果这个病人采用其他疗法，血压会降下来吗？”这样的问题的推理。\n\n## 研究方向\n- 因果发现：给定若干个变量，发现/挖掘变量间的因果关系，形成因果有向图\n- 因果效应：已知变量和变量间的因果关系，求因果关系的效果（原因对结果的影响程度）\n\n## 参考文献\n1. [chen-wai-wai-7.因果推断综述及基础方法介绍（一）](https://zhuanlan.zhihu.com/p/258562953)\n2. [xue-ruo-7.通俗解释因果推理 casual inference](https://zhuanlan.zhihu.com/p/109996301)\n3. [丁鹏.因果推断简介.PKU-MATH-00112230.2019](https://www.math.pku.edu.cn/teachers/yaoy/math112230/lecture10_DingP_causal091101.pdf)\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: decodeURI(window.location.pathname),\n            distractionFreeMode: true // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","slug":"2022-04-07-casual-inference-1","published":1,"updated":"2023-03-19T09:42:52.654Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cludw9n9q00109wv9aaima41w","content":"<p>因果推断的基本概念。</p>\n<span id=\"more\"></span>\n<h2 id=\"基本概念\"><a href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"></a>基本概念</h2><h3 id=\"相关与因果的不同\"><a href=\"#相关与因果的不同\" class=\"headerlink\" title=\"相关与因果的不同\"></a>相关与因果的不同</h3><ul>\n<li>相关性 <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.486ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.76ex\" height=\"2.106ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 778 931\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"2260\" d=\"M166 -215T159 -215T147 -212T141 -204T139 -197Q139 -190 144 -183L306 133H70Q56 140 56 153Q56 168 72 173H327L406 327H72Q56 332 56 347Q56 360 70 367H426Q597 702 602 707Q605 716 618 716Q625 716 630 712T636 703T638 696Q638 692 471 367H707Q722 359 722 347Q722 336 708 328L451 327L371 173H708Q722 163 722 153Q722 140 707 133H351Q175 -210 170 -212Q166 -215 159 -215Z\"></path></g></g></g></svg></mjx-container> 因果性<ul>\n<li>相关性是双向的；因果性是单向的。因果关系会在统计层面导致相关性，但相关性并不蕴含因果性。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"相关概念\"><a href=\"#相关概念\" class=\"headerlink\" title=\"相关概念\"></a>相关概念</h3><ul>\n<li><strong>unit</strong>: 因果推理中的原子（不可分）研究对象，可以是实物，也可以是概念</li>\n<li><strong>treatment</strong>: 施加给unit的操作。也叫做干预、介入等</li>\n<li><strong>variables</strong>(context): unit自带的一些属性。例如，若unit=患者，则variables=性别、病史、血压… 在treatment中不受影响的variable被称为pre-treatment variables</li>\n<li><strong>confounders</strong>(covariate): 会影响treatment选择和结果的一些变量。例如treatment=用药，confounder=年龄，即同一剂量的药剂在不同年龄段人群导致的结果可能不一样</li>\n<li><strong>casual effect</strong>: 因果效应。对于unit，若treatment A 的施加与否对其结果状态有影响，则称A构成一个casual effect. 施加对象是个体则构成个体因果效应；施加对象是群体则构成群体因果效应</li>\n<li><strong>potential outcome</strong>: 施加给unit的treatment所产生的所有结果的取值空间，包含factual outcome(观测结果)和counterfactual outcomes(反事实结果)</li>\n<li><strong>factual outcome</strong>: 施加给操作对象最终观测到的结果，记为Y</li>\n<li><strong>counterfactual outcome</strong>: 反事实结果，即不作treatment产生的结果</li>\n<li><strong>individualized treatment effect</strong>(<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.462ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 1972 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D43C\" d=\"M43 1Q26 1 26 10Q26 12 29 24Q34 43 39 45Q42 46 54 46H60Q120 46 136 53Q137 53 138 54Q143 56 149 77T198 273Q210 318 216 344Q286 624 286 626Q284 630 284 631Q274 637 213 637H193Q184 643 189 662Q193 677 195 680T209 683H213Q285 681 359 681Q481 681 487 683H497Q504 676 504 672T501 655T494 639Q491 637 471 637Q440 637 407 634Q393 631 388 623Q381 609 337 432Q326 385 315 341Q245 65 245 59Q245 52 255 50T307 46H339Q345 38 345 37T342 19Q338 6 332 0H316Q279 2 179 2Q143 2 113 2T65 2T43 1Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(504,0)\"><path data-c=\"1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1208,0)\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g></g></g></svg></mjx-container>): 个体操作效果。 <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"19.48ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 8610 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D43C\" d=\"M43 1Q26 1 26 10Q26 12 29 24Q34 43 39 45Q42 46 54 46H60Q120 46 136 53Q137 53 138 54Q143 56 149 77T198 273Q210 318 216 344Q286 624 286 626Q284 630 284 631Q274 637 213 637H193Q184 643 189 662Q193 677 195 680T209 683H213Q285 681 359 681Q481 681 487 683H497Q504 676 504 672T501 655T494 639Q491 637 471 637Q440 637 407 634Q393 631 388 623Q381 609 337 432Q326 385 315 341Q245 65 245 59Q245 52 255 50T307 46H339Q345 38 345 37T342 19Q338 6 332 0H316Q279 2 179 2Q143 2 113 2T65 2T43 1Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(504,0)\"><path data-c=\"1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1208,0)\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2249.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3305.6,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4068.6,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(4457.6,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4957.6,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(5568.8,0)\"><path data-c=\"2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(6569,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(7332,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(7721,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(8221,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>。其中<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.618ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 2041 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(763,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(1152,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1652,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>是事实结果，<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.618ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 2041 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(763,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(1152,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1652,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>是反事实结果。二者相减，相当于施加操作后和施加操作前unit状态的差别，即操作treatment所带来的增益。</li>\n<li><strong>average treatment effect</strong>(<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.018ex\" height=\"1.62ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 2218 716\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(750,0)\"><path data-c=\"1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1454,0)\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g></g></g></svg></mjx-container>): <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.462ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 1972 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D43C\" d=\"M43 1Q26 1 26 10Q26 12 29 24Q34 43 39 45Q42 46 54 46H60Q120 46 136 53Q137 53 138 54Q143 56 149 77T198 273Q210 318 216 344Q286 624 286 626Q284 630 284 631Q274 637 213 637H193Q184 643 189 662Q193 677 195 680T209 683H213Q285 681 359 681Q481 681 487 683H497Q504 676 504 672T501 655T494 639Q491 637 471 637Q440 637 407 634Q393 631 388 623Q381 609 337 432Q326 385 315 341Q245 65 245 59Q245 52 255 50T307 46H339Q345 38 345 37T342 19Q338 6 332 0H316Q279 2 179 2Q143 2 113 2T65 2T43 1Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(504,0)\"><path data-c=\"1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1208,0)\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g></g></g></svg></mjx-container>关于unit分布的期望。即<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"23.525ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 10398 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(750,0)\"><path data-c=\"1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1454,0)\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2495.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3551.6,0)\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4315.6,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4704.6,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(5467.6,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(5856.6,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6356.6,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6967.8,0)\"><path data-c=\"2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(7968,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(8731,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(9120,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(9620,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(10009,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container></li>\n<li><strong>counterfactual inference</strong>: 决类似于“如果这个病人采用其他疗法，血压会降下来吗？”这样的问题的推理。</li>\n</ul>\n<h2 id=\"研究方向\"><a href=\"#研究方向\" class=\"headerlink\" title=\"研究方向\"></a>研究方向</h2><ul>\n<li>因果发现：给定若干个变量，发现/挖掘变量间的因果关系，形成因果有向图</li>\n<li>因果效应：已知变量和变量间的因果关系，求因果关系的效果（原因对结果的影响程度）</li>\n</ul>\n<h2 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h2><ol>\n<li><a href=\"https://zhuanlan.zhihu.com/p/258562953\">chen-wai-wai-7.因果推断综述及基础方法介绍（一）</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/109996301\">xue-ruo-7.通俗解释因果推理 casual inference</a></li>\n<li><a href=\"https://www.math.pku.edu.cn/teachers/yaoy/math112230/lecture10_DingP_causal091101.pdf\">丁鹏.因果推断简介.PKU-MATH-00112230.2019</a></li>\n</ol>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: decodeURI(window.location.pathname),\n            distractionFreeMode: true // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","site":{"data":{}},"length":1415,"excerpt":"<p>因果推断的基本概念。</p>","more":"<h2 id=\"基本概念\"><a href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"></a>基本概念</h2><h3 id=\"相关与因果的不同\"><a href=\"#相关与因果的不同\" class=\"headerlink\" title=\"相关与因果的不同\"></a>相关与因果的不同</h3><ul>\n<li>相关性 <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.486ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.76ex\" height=\"2.106ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 778 931\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"2260\" d=\"M166 -215T159 -215T147 -212T141 -204T139 -197Q139 -190 144 -183L306 133H70Q56 140 56 153Q56 168 72 173H327L406 327H72Q56 332 56 347Q56 360 70 367H426Q597 702 602 707Q605 716 618 716Q625 716 630 712T636 703T638 696Q638 692 471 367H707Q722 359 722 347Q722 336 708 328L451 327L371 173H708Q722 163 722 153Q722 140 707 133H351Q175 -210 170 -212Q166 -215 159 -215Z\"></path></g></g></g></svg></mjx-container> 因果性<ul>\n<li>相关性是双向的；因果性是单向的。因果关系会在统计层面导致相关性，但相关性并不蕴含因果性。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"相关概念\"><a href=\"#相关概念\" class=\"headerlink\" title=\"相关概念\"></a>相关概念</h3><ul>\n<li><strong>unit</strong>: 因果推理中的原子（不可分）研究对象，可以是实物，也可以是概念</li>\n<li><strong>treatment</strong>: 施加给unit的操作。也叫做干预、介入等</li>\n<li><strong>variables</strong>(context): unit自带的一些属性。例如，若unit=患者，则variables=性别、病史、血压… 在treatment中不受影响的variable被称为pre-treatment variables</li>\n<li><strong>confounders</strong>(covariate): 会影响treatment选择和结果的一些变量。例如treatment=用药，confounder=年龄，即同一剂量的药剂在不同年龄段人群导致的结果可能不一样</li>\n<li><strong>casual effect</strong>: 因果效应。对于unit，若treatment A 的施加与否对其结果状态有影响，则称A构成一个casual effect. 施加对象是个体则构成个体因果效应；施加对象是群体则构成群体因果效应</li>\n<li><strong>potential outcome</strong>: 施加给unit的treatment所产生的所有结果的取值空间，包含factual outcome(观测结果)和counterfactual outcomes(反事实结果)</li>\n<li><strong>factual outcome</strong>: 施加给操作对象最终观测到的结果，记为Y</li>\n<li><strong>counterfactual outcome</strong>: 反事实结果，即不作treatment产生的结果</li>\n<li><strong>individualized treatment effect</strong>(<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.462ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 1972 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D43C\" d=\"M43 1Q26 1 26 10Q26 12 29 24Q34 43 39 45Q42 46 54 46H60Q120 46 136 53Q137 53 138 54Q143 56 149 77T198 273Q210 318 216 344Q286 624 286 626Q284 630 284 631Q274 637 213 637H193Q184 643 189 662Q193 677 195 680T209 683H213Q285 681 359 681Q481 681 487 683H497Q504 676 504 672T501 655T494 639Q491 637 471 637Q440 637 407 634Q393 631 388 623Q381 609 337 432Q326 385 315 341Q245 65 245 59Q245 52 255 50T307 46H339Q345 38 345 37T342 19Q338 6 332 0H316Q279 2 179 2Q143 2 113 2T65 2T43 1Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(504,0)\"><path data-c=\"1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1208,0)\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g></g></g></svg></mjx-container>): 个体操作效果。 <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"19.48ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 8610 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D43C\" d=\"M43 1Q26 1 26 10Q26 12 29 24Q34 43 39 45Q42 46 54 46H60Q120 46 136 53Q137 53 138 54Q143 56 149 77T198 273Q210 318 216 344Q286 624 286 626Q284 630 284 631Q274 637 213 637H193Q184 643 189 662Q193 677 195 680T209 683H213Q285 681 359 681Q481 681 487 683H497Q504 676 504 672T501 655T494 639Q491 637 471 637Q440 637 407 634Q393 631 388 623Q381 609 337 432Q326 385 315 341Q245 65 245 59Q245 52 255 50T307 46H339Q345 38 345 37T342 19Q338 6 332 0H316Q279 2 179 2Q143 2 113 2T65 2T43 1Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(504,0)\"><path data-c=\"1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1208,0)\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2249.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3305.6,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4068.6,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(4457.6,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4957.6,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(5568.8,0)\"><path data-c=\"2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(6569,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(7332,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(7721,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(8221,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>。其中<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.618ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 2041 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(763,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(1152,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1652,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>是事实结果，<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.618ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 2041 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(763,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(1152,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1652,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>是反事实结果。二者相减，相当于施加操作后和施加操作前unit状态的差别，即操作treatment所带来的增益。</li>\n<li><strong>average treatment effect</strong>(<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.018ex\" height=\"1.62ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 2218 716\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(750,0)\"><path data-c=\"1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1454,0)\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g></g></g></svg></mjx-container>): <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.462ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 1972 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D43C\" d=\"M43 1Q26 1 26 10Q26 12 29 24Q34 43 39 45Q42 46 54 46H60Q120 46 136 53Q137 53 138 54Q143 56 149 77T198 273Q210 318 216 344Q286 624 286 626Q284 630 284 631Q274 637 213 637H193Q184 643 189 662Q193 677 195 680T209 683H213Q285 681 359 681Q481 681 487 683H497Q504 676 504 672T501 655T494 639Q491 637 471 637Q440 637 407 634Q393 631 388 623Q381 609 337 432Q326 385 315 341Q245 65 245 59Q245 52 255 50T307 46H339Q345 38 345 37T342 19Q338 6 332 0H316Q279 2 179 2Q143 2 113 2T65 2T43 1Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(504,0)\"><path data-c=\"1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1208,0)\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g></g></g></svg></mjx-container>关于unit分布的期望。即<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"23.525ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 10398 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(750,0)\"><path data-c=\"1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1454,0)\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2495.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3551.6,0)\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4315.6,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4704.6,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(5467.6,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(5856.6,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6356.6,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6967.8,0)\"><path data-c=\"2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(7968,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(8731,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(9120,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(9620,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(10009,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container></li>\n<li><strong>counterfactual inference</strong>: 决类似于“如果这个病人采用其他疗法，血压会降下来吗？”这样的问题的推理。</li>\n</ul>\n<h2 id=\"研究方向\"><a href=\"#研究方向\" class=\"headerlink\" title=\"研究方向\"></a>研究方向</h2><ul>\n<li>因果发现：给定若干个变量，发现/挖掘变量间的因果关系，形成因果有向图</li>\n<li>因果效应：已知变量和变量间的因果关系，求因果关系的效果（原因对结果的影响程度）</li>\n</ul>\n<h2 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h2><ol>\n<li><a href=\"https://zhuanlan.zhihu.com/p/258562953\">chen-wai-wai-7.因果推断综述及基础方法介绍（一）</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/109996301\">xue-ruo-7.通俗解释因果推理 casual inference</a></li>\n<li><a href=\"https://www.math.pku.edu.cn/teachers/yaoy/math112230/lecture10_DingP_causal091101.pdf\">丁鹏.因果推断简介.PKU-MATH-00112230.2019</a></li>\n</ol>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: decodeURI(window.location.pathname),\n            distractionFreeMode: true // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>"},{"title":"pymysql的简单使用","mathjax":false,"codeblock":{"enable":true,"show_result":true},"date":"2022-04-09T08:02:09.000Z","_content":"\npymysql是python3中用于连接mysql数据库的第三方库，并可以实现增删改查功能。\n\n<!--more-->\n## 安装\n- 假设已经安装pip3\n- 使用pip3安装pymysql(适用于windows, mac, linux):\n```python\npip3 install PyMySQL\n```\n\n## 连接到数据库\n- 使用connect方法连接到目标数据库。\n  - host: 目标数据库主机的ip地址\n  - port: 目标数据库主机的端口（可选）\n  - user: 登录数据库的用户名\n  - password: 用户密码\n  - database: 数据库名（一个主机下可能有多个数据库）\n\n```python\nimport pymysql\n'''\n假设在本地的mysql中开了一个数据库mydb，可使用用户asdf登录\n'''\n\n# 打开数据库连接\ndb = pymysql.connect(host='localhost',\n                     user='asdf',\n                     password='1234',\n                     database='mydb')\n```\n\n## 执行sql语句  \n- pymysql中，数据库的增删改查通过游标执行方法来间接完成。游标(cursor)在数据库中是一个颇为重要的概念，日后再细写。这里先给出pymysql中游标的用法\n\n```python\n# ...\n# 承接上文，假设已通过pymysql.connect方法获取数据库对象db\n\n# 创建一个游标对象\ncursor = db.cursor()\n\n# 定义sql命令\nsql = 'select * from Student limit 10;'\n\n# 使用execute执行sql命令\ncursor.execute(sql)\n\n# fetchone用来获取查询结果的下一行(tuple)\n# fetchall用来获取查询结果的所有行(list(tuple))\ndata=cursor.fetchone()\n\nprint(data)\n\n# 关闭数据库连接\ndb.close()\n```\n\n## 参考文献\n1. https://pymysql.readthedocs.io/en/latest/index.html\n2. https://www.runoob.com/python3/python3-mysql.html\n3. https://cloud.tencent.com/developer/article/1575066\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'f73c0bc3c19755d1c0d886c0d8791cad24509c9a',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: (document.title),\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","source":"_posts/2022-04-09-python.md","raw":"---\ntitle: pymysql的简单使用\nmathjax: false\ncodeblock:\n  enable: true\n  show_result: true\ndate: 2022-04-09 16:02:09\ntags:\n    - coding\n    - python\ncategories: 技术文档\n---\n\npymysql是python3中用于连接mysql数据库的第三方库，并可以实现增删改查功能。\n\n<!--more-->\n## 安装\n- 假设已经安装pip3\n- 使用pip3安装pymysql(适用于windows, mac, linux):\n```python\npip3 install PyMySQL\n```\n\n## 连接到数据库\n- 使用connect方法连接到目标数据库。\n  - host: 目标数据库主机的ip地址\n  - port: 目标数据库主机的端口（可选）\n  - user: 登录数据库的用户名\n  - password: 用户密码\n  - database: 数据库名（一个主机下可能有多个数据库）\n\n```python\nimport pymysql\n'''\n假设在本地的mysql中开了一个数据库mydb，可使用用户asdf登录\n'''\n\n# 打开数据库连接\ndb = pymysql.connect(host='localhost',\n                     user='asdf',\n                     password='1234',\n                     database='mydb')\n```\n\n## 执行sql语句  \n- pymysql中，数据库的增删改查通过游标执行方法来间接完成。游标(cursor)在数据库中是一个颇为重要的概念，日后再细写。这里先给出pymysql中游标的用法\n\n```python\n# ...\n# 承接上文，假设已通过pymysql.connect方法获取数据库对象db\n\n# 创建一个游标对象\ncursor = db.cursor()\n\n# 定义sql命令\nsql = 'select * from Student limit 10;'\n\n# 使用execute执行sql命令\ncursor.execute(sql)\n\n# fetchone用来获取查询结果的下一行(tuple)\n# fetchall用来获取查询结果的所有行(list(tuple))\ndata=cursor.fetchone()\n\nprint(data)\n\n# 关闭数据库连接\ndb.close()\n```\n\n## 参考文献\n1. https://pymysql.readthedocs.io/en/latest/index.html\n2. https://www.runoob.com/python3/python3-mysql.html\n3. https://cloud.tencent.com/developer/article/1575066\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'f73c0bc3c19755d1c0d886c0d8791cad24509c9a',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: (document.title),\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","slug":"2022-04-09-python","published":1,"updated":"2022-04-21T07:27:53.383Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cludw9n9q00129wv9ac603rx9","content":"<p>pymysql是python3中用于连接mysql数据库的第三方库，并可以实现增删改查功能。</p>\n<span id=\"more\"></span>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><ul>\n<li>假设已经安装pip3</li>\n<li>使用pip3安装pymysql(适用于windows, mac, linux):<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip3 install PyMySQL</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"连接到数据库\"><a href=\"#连接到数据库\" class=\"headerlink\" title=\"连接到数据库\"></a>连接到数据库</h2><ul>\n<li>使用connect方法连接到目标数据库。<ul>\n<li>host: 目标数据库主机的ip地址</li>\n<li>port: 目标数据库主机的端口（可选）</li>\n<li>user: 登录数据库的用户名</li>\n<li>password: 用户密码</li>\n<li>database: 数据库名（一个主机下可能有多个数据库）</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pymysql</span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">假设在本地的mysql中开了一个数据库mydb，可使用用户asdf登录</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 打开数据库连接</span></span><br><span class=\"line\">db = pymysql.connect(host=<span class=\"string\">&#x27;localhost&#x27;</span>,</span><br><span class=\"line\">                     user=<span class=\"string\">&#x27;asdf&#x27;</span>,</span><br><span class=\"line\">                     password=<span class=\"string\">&#x27;1234&#x27;</span>,</span><br><span class=\"line\">                     database=<span class=\"string\">&#x27;mydb&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<h2 id=\"执行sql语句\"><a href=\"#执行sql语句\" class=\"headerlink\" title=\"执行sql语句\"></a>执行sql语句</h2><ul>\n<li>pymysql中，数据库的增删改查通过游标执行方法来间接完成。游标(cursor)在数据库中是一个颇为重要的概念，日后再细写。这里先给出pymysql中游标的用法</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># ...</span></span><br><span class=\"line\"><span class=\"comment\"># 承接上文，假设已通过pymysql.connect方法获取数据库对象db</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建一个游标对象</span></span><br><span class=\"line\">cursor = db.cursor()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 定义sql命令</span></span><br><span class=\"line\">sql = <span class=\"string\">&#x27;select * from Student limit 10;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 使用execute执行sql命令</span></span><br><span class=\"line\">cursor.execute(sql)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># fetchone用来获取查询结果的下一行(tuple)</span></span><br><span class=\"line\"><span class=\"comment\"># fetchall用来获取查询结果的所有行(list(tuple))</span></span><br><span class=\"line\">data=cursor.fetchone()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(data)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 关闭数据库连接</span></span><br><span class=\"line\">db.close()</span><br></pre></td></tr></table></figure>\n<h2 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h2><ol>\n<li><a href=\"https://pymysql.readthedocs.io/en/latest/index.html\">https://pymysql.readthedocs.io/en/latest/index.html</a></li>\n<li><a href=\"https://www.runoob.com/python3/python3-mysql.html\">https://www.runoob.com/python3/python3-mysql.html</a></li>\n<li><a href=\"https://cloud.tencent.com/developer/article/1575066\">https://cloud.tencent.com/developer/article/1575066</a></li>\n</ol>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'f73c0bc3c19755d1c0d886c0d8791cad24509c9a',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: (document.title),\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","site":{"data":{}},"length":1312,"excerpt":"<p>pymysql是python3中用于连接mysql数据库的第三方库，并可以实现增删改查功能。</p>","more":"<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><ul>\n<li>假设已经安装pip3</li>\n<li>使用pip3安装pymysql(适用于windows, mac, linux):<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip3 install PyMySQL</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"连接到数据库\"><a href=\"#连接到数据库\" class=\"headerlink\" title=\"连接到数据库\"></a>连接到数据库</h2><ul>\n<li>使用connect方法连接到目标数据库。<ul>\n<li>host: 目标数据库主机的ip地址</li>\n<li>port: 目标数据库主机的端口（可选）</li>\n<li>user: 登录数据库的用户名</li>\n<li>password: 用户密码</li>\n<li>database: 数据库名（一个主机下可能有多个数据库）</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pymysql</span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">假设在本地的mysql中开了一个数据库mydb，可使用用户asdf登录</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 打开数据库连接</span></span><br><span class=\"line\">db = pymysql.connect(host=<span class=\"string\">&#x27;localhost&#x27;</span>,</span><br><span class=\"line\">                     user=<span class=\"string\">&#x27;asdf&#x27;</span>,</span><br><span class=\"line\">                     password=<span class=\"string\">&#x27;1234&#x27;</span>,</span><br><span class=\"line\">                     database=<span class=\"string\">&#x27;mydb&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<h2 id=\"执行sql语句\"><a href=\"#执行sql语句\" class=\"headerlink\" title=\"执行sql语句\"></a>执行sql语句</h2><ul>\n<li>pymysql中，数据库的增删改查通过游标执行方法来间接完成。游标(cursor)在数据库中是一个颇为重要的概念，日后再细写。这里先给出pymysql中游标的用法</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># ...</span></span><br><span class=\"line\"><span class=\"comment\"># 承接上文，假设已通过pymysql.connect方法获取数据库对象db</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建一个游标对象</span></span><br><span class=\"line\">cursor = db.cursor()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 定义sql命令</span></span><br><span class=\"line\">sql = <span class=\"string\">&#x27;select * from Student limit 10;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 使用execute执行sql命令</span></span><br><span class=\"line\">cursor.execute(sql)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># fetchone用来获取查询结果的下一行(tuple)</span></span><br><span class=\"line\"><span class=\"comment\"># fetchall用来获取查询结果的所有行(list(tuple))</span></span><br><span class=\"line\">data=cursor.fetchone()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(data)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 关闭数据库连接</span></span><br><span class=\"line\">db.close()</span><br></pre></td></tr></table></figure>\n<h2 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h2><ol>\n<li><a href=\"https://pymysql.readthedocs.io/en/latest/index.html\">https://pymysql.readthedocs.io/en/latest/index.html</a></li>\n<li><a href=\"https://www.runoob.com/python3/python3-mysql.html\">https://www.runoob.com/python3/python3-mysql.html</a></li>\n<li><a href=\"https://cloud.tencent.com/developer/article/1575066\">https://cloud.tencent.com/developer/article/1575066</a></li>\n</ol>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'f73c0bc3c19755d1c0d886c0d8791cad24509c9a',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: (document.title),\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>"},{"title":"设置威批恩后Github push失败的解决方案","mathjax":false,"codeblock":{"enable":true,"show_result":true},"date":"2022-04-17T01:45:15.000Z","_content":"\nGithub本在国内访问就极慢。然而翻墙后从本地push却又出现超时错误。点解？\n\n<!--more-->\n\n## 前驱条件\n- 假设你已经使用全局代理模式激活了威批恩，并且在命令行中push git时出现以下问题：\n```git\ngit push origin # 试图将当前commit内容push到远程主机origin上\n...: Failed to connect to github.com port 443 after ***** ms: Timed out\n```\n\n## 问题分析\n### 原因\n- 网络慢导致访问超时\n\n### 解决方案\n- 在终端使用设置代理\n  \n1. 查看威批恩设置的**本地端口号**，标记为post\n2. 在bash或者cmd中，按如下方式设置git的代理选项：\n\n```bash\ngit config --global http.proxy http://127.0.0.1:{post}\ngit config --global https.proxy https://127.0.0.1:{post}\n```\n- 例如，常用的威批恩本地端口号为1080，如下图所示\n![local port](github20220401701.png)\n- 则输入的命令为：\n```bash\ngit config --global http.proxy http://127.0.0.1:1080\ngit config --global https.proxy https://127.0.0.1:1080\n```\n\n- 随后再次在bash输入`git push origin`，即可成功将本地代码push到github仓库中。\n\n## 参考文献\n1. https://blog.csdn.net/weixin_52796927/article/details/121664227\n2. https://blog.csdn.net/BanRuo_Cheng/article/details/121444020\n\n\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: (document.title),\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","source":"_posts/2022-04-17-github.md","raw":"---\ntitle: 设置威批恩后Github push失败的解决方案\nmathjax: false\ncodeblock:\n  enable: true\n  show_result: true\ndate: 2022-04-17 09:45:15\ntags: \n    - git\n    - github\ncategories: 技术文档\n---\n\nGithub本在国内访问就极慢。然而翻墙后从本地push却又出现超时错误。点解？\n\n<!--more-->\n\n## 前驱条件\n- 假设你已经使用全局代理模式激活了威批恩，并且在命令行中push git时出现以下问题：\n```git\ngit push origin # 试图将当前commit内容push到远程主机origin上\n...: Failed to connect to github.com port 443 after ***** ms: Timed out\n```\n\n## 问题分析\n### 原因\n- 网络慢导致访问超时\n\n### 解决方案\n- 在终端使用设置代理\n  \n1. 查看威批恩设置的**本地端口号**，标记为post\n2. 在bash或者cmd中，按如下方式设置git的代理选项：\n\n```bash\ngit config --global http.proxy http://127.0.0.1:{post}\ngit config --global https.proxy https://127.0.0.1:{post}\n```\n- 例如，常用的威批恩本地端口号为1080，如下图所示\n![local port](github20220401701.png)\n- 则输入的命令为：\n```bash\ngit config --global http.proxy http://127.0.0.1:1080\ngit config --global https.proxy https://127.0.0.1:1080\n```\n\n- 随后再次在bash输入`git push origin`，即可成功将本地代码push到github仓库中。\n\n## 参考文献\n1. https://blog.csdn.net/weixin_52796927/article/details/121664227\n2. https://blog.csdn.net/BanRuo_Cheng/article/details/121444020\n\n\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: (document.title),\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","slug":"2022-04-17-github","published":1,"updated":"2022-04-21T07:27:13.322Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cludw9n9r00159wv9a3pb45az","content":"<p>Github本在国内访问就极慢。然而翻墙后从本地push却又出现超时错误。点解？</p>\n<span id=\"more\"></span>\n<h2 id=\"前驱条件\"><a href=\"#前驱条件\" class=\"headerlink\" title=\"前驱条件\"></a>前驱条件</h2><ul>\n<li>假设你已经使用全局代理模式激活了威批恩，并且在命令行中push git时出现以下问题：<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push origin # 试图将当前commit内容push到远程主机origin上</span><br><span class=\"line\">...: Failed to connect to github.com port 443 after ***** ms: Timed out</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"问题分析\"><a href=\"#问题分析\" class=\"headerlink\" title=\"问题分析\"></a>问题分析</h2><h3 id=\"原因\"><a href=\"#原因\" class=\"headerlink\" title=\"原因\"></a>原因</h3><ul>\n<li>网络慢导致访问超时</li>\n</ul>\n<h3 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h3><ul>\n<li>在终端使用设置代理</li>\n</ul>\n<ol>\n<li>查看威批恩设置的<strong>本地端口号</strong>，标记为post</li>\n<li>在bash或者cmd中，按如下方式设置git的代理选项：</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global http.proxy http://127.0.0.1:&#123;post&#125;</span><br><span class=\"line\">git config --global https.proxy https://127.0.0.1:&#123;post&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>例如，常用的威批恩本地端口号为1080，如下图所示<br><img src=\"github20220401701.png\" alt=\"local port\"></li>\n<li><p>则输入的命令为：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global http.proxy http://127.0.0.1:1080</span><br><span class=\"line\">git config --global https.proxy https://127.0.0.1:1080</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>随后再次在bash输入<code>git push origin</code>，即可成功将本地代码push到github仓库中。</p>\n</li>\n</ul>\n<h2 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h2><ol>\n<li><a href=\"https://blog.csdn.net/weixin_52796927/article/details/121664227\">https://blog.csdn.net/weixin_52796927/article/details/121664227</a></li>\n<li><a href=\"https://blog.csdn.net/BanRuo_Cheng/article/details/121444020\">https://blog.csdn.net/BanRuo_Cheng/article/details/121444020</a></li>\n</ol>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: (document.title),\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","site":{"data":{}},"length":1016,"excerpt":"<p>Github本在国内访问就极慢。然而翻墙后从本地push却又出现超时错误。点解？</p>","more":"<h2 id=\"前驱条件\"><a href=\"#前驱条件\" class=\"headerlink\" title=\"前驱条件\"></a>前驱条件</h2><ul>\n<li>假设你已经使用全局代理模式激活了威批恩，并且在命令行中push git时出现以下问题：<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push origin # 试图将当前commit内容push到远程主机origin上</span><br><span class=\"line\">...: Failed to connect to github.com port 443 after ***** ms: Timed out</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"问题分析\"><a href=\"#问题分析\" class=\"headerlink\" title=\"问题分析\"></a>问题分析</h2><h3 id=\"原因\"><a href=\"#原因\" class=\"headerlink\" title=\"原因\"></a>原因</h3><ul>\n<li>网络慢导致访问超时</li>\n</ul>\n<h3 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h3><ul>\n<li>在终端使用设置代理</li>\n</ul>\n<ol>\n<li>查看威批恩设置的<strong>本地端口号</strong>，标记为post</li>\n<li>在bash或者cmd中，按如下方式设置git的代理选项：</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global http.proxy http://127.0.0.1:&#123;post&#125;</span><br><span class=\"line\">git config --global https.proxy https://127.0.0.1:&#123;post&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>例如，常用的威批恩本地端口号为1080，如下图所示<br><img src=\"github20220401701.png\" alt=\"local port\"></li>\n<li><p>则输入的命令为：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global http.proxy http://127.0.0.1:1080</span><br><span class=\"line\">git config --global https.proxy https://127.0.0.1:1080</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>随后再次在bash输入<code>git push origin</code>，即可成功将本地代码push到github仓库中。</p>\n</li>\n</ul>\n<h2 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h2><ol>\n<li><a href=\"https://blog.csdn.net/weixin_52796927/article/details/121664227\">https://blog.csdn.net/weixin_52796927/article/details/121664227</a></li>\n<li><a href=\"https://blog.csdn.net/BanRuo_Cheng/article/details/121444020\">https://blog.csdn.net/BanRuo_Cheng/article/details/121444020</a></li>\n</ol>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: (document.title),\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>"},{"title":"观《楚汉传奇》有感","mathjax":false,"codeblock":{"enable":true,"show_result":true},"date":"2022-04-17T14:48:14.000Z","_content":"\n<table>\n<tr>\n<td>大风起兮云飞扬，<br>威加海内兮归故乡。<br>安得猛士兮守四方？<br>——刘邦</td>\n\n<td>力拔山兮气盖世，<br>时不利兮骓不逝。<br>骓不逝兮可奈何，<br>虞兮虞兮奈若何！<br>——项羽</td>\n</tr>\n</table>\n\n<!--more-->\n严格地说，这是个人对楚汉战争这段历史的感悟。更确切地说，这是对汉王的成功与楚王的失败的感悟。\n\n楚汉相争，汉王最终夺取天下。项籍之败，哪里是什么“时不利兮”。匹夫之勇——项羽纵然可以冲锋破阵如履平地，纵然可以武勇绝冠作万人敌，却不懂得不战而屈人之兵，更不懂得得民心者得天下。妇人之仁——优柔姑息，不识大体；没有战略眼光，不晓杀伐果断。鸿门之宴、彭城之围、阳夏之战，均是灭亡汉王集团的绝佳机会。然而，项羽高估了义气，低估了人性。一次次的心慈手软，一次次的放虎归山，一次次的错失机会。相比之下，刘邦招贤纳士、安抚百姓；眼光长远，心怀天下。在可见的与不可见的争斗中，刘邦牢牢抓住每一个不放过的机会，上芒砀山、投项羽（前期）；入关中、下巴蜀、还定三秦，一切只为两个字——天下。终于，这虎蜕变成能与赤龙一决雌雄的白龙，并战胜了赤龙。\n\n虽然有马后炮的嫌疑，但刘邦之胜与项羽之败，在讨诛暴秦时期便可见端倪。刘邦虽然出身低微（泗水亭长），也无过人武勇，但他为人慷慨仗义，处事圆滑灵活，有着强大的个人魅力。因此在创业初期，刘邦便能够结实一群坚定不移的好兄弟（即丰沛集团，包括卢绾、萧何、曹参、樊哙、周勃、夏侯婴，以及芒砀山时期组织的军队成员）。这一团队是刘邦日后与项羽抗争的中坚力量。刘邦的个人特质，也是天下英才趋之若鹜的重要原因。与此同时，项羽虽然贵为楚国名将项燕之后，能够凭借贵族身份与民间威望团结楚地人民的力量，然而项羽为人固执、刚愎自用。咨诹善道、从善如流这些词，从来与项羽不搭边。项羽虽重义气，却有强烈的身份优越感，看不起出身卑贱的人（包括对手刘邦、昔日执戟郎中后来大将军的韩信）。这导致项羽虽然也结识一群好弟兄（虞子期、龙且），但在外人看来，项羽心高气傲、难以接近。除了一心复兴楚国的范增，再无其他谋士愿意加入项羽麾下。\n\n刘邦与项羽的性格特质，放大了他们各自的团队特点，从而影响了局势走向。在人才吸引方面，刘邦为人慷慨，用人果断，能够让每个人发挥自己最大的才能。张良加入汉军之初也曾领兵打仗。但刘邦在部下反馈与自己观察之下，决定让张良以谋士身份供职，更大程度地发挥其过人智慧及战略规划能力。入巴蜀、定三秦、鸿门脱险，无一不是张良助力。韩信加入汉营前是项羽帐下的执戟郎中，在汉营亦只从运粮官做起。然而刘邦能听从萧何的建议，仅在读过韩信之兵书、见韩信其人一面之后，拜韩信为一人之下万人之上的大将军。这需要何等强大的果敢和定力！更不用说韩信攻略齐地后，刘邦能听从张良陈平的建议，封其为“真”齐王，使其死心塌地地效忠于汉家。陈平归于刘邦之前曾降于项王，且名声不好，有“盗嫂受金”之嫌。然而刘邦能够听从陈平之计，拨出四分之一的国库存金支持他在楚营开展间谍活动，离间项羽与范增。范增一除，项羽剩下的便只有“勇”，分明是一块案板上的牛肉。与之相比，项羽纵有拔山之力，却小肚鸡肠，为人固执、猜忌部下；任人唯亲，有功之臣不得奖赏，项家子弟却保荣华富贵。虽然应该客观承认，项羽有着冠绝古今的军事才能；但也不得不言，项羽并不是一个合格的“王”。刘邦的慷慨与果断，使天下英杰趋之若鹜；项羽的无双勇力，却不是吸引天下人才的理由。\n\n此外，刘项二人的志向差异，更加决定了各自结局的不同。对项羽而言，战斗的意义有两点：其一是诛灭无道的暴秦，其二是光荣复兴楚国大旗。首先，项羽对秦国人怀有极深的仇恨，因此其对秦人的态度并无任何慈悲。屠咸阳、火烧阿房、坑杀30万秦军，项羽对秦人没有任何怜悯。其次，项羽的最终目标在于复兴“楚国”，而非重振“天下”，因而在荡平咸阳之后，土地肥沃、易守难攻的三秦之地对项羽没有任何吸引力。项羽想做的只有回到故乡彭城，做自己的“西楚霸王”，仿照周朝恢复分封制，守住楚国的一亩三分地。至于刘邦，创业前期刘邦并不知道自己的目标为何——乱世之中，生存第一。然而在入关中之后，刘邦把目光放到了“天下”。刘邦的目标在于统一天下。虽然我们不能冠冕堂皇地认为，刘邦所做的一切都是为了百姓福祉、人类和平。但可以确定的是，刘邦没有像项羽一样对秦人的仇恨（亡国之痛），同时他出身低微，更加能够体会百姓疾苦。因而在战略问题上，刘邦能够从更加全局的角度思考，并且更加考虑人民的感受，而非像项羽一样的你死我活、快意恩仇。入关中称王后，刘邦看到巴蜀之地虽然路途遥远，却是沃野千里的天府之土，因而顺水推舟地入蜀以积攒实力。随后，汉家军明修栈道暗度陈仓以定三秦，据守崤关以保有坚不可摧的防御。再加上大后方的巴蜀源源不断地提供粮草，使得汉军具有蒸不烂、煮不熟、捶不匾、炒不爆的韧性。虽然汉军一直在打败仗，但汉军只需要最后赢一次；虽然楚军屡战屡胜，但楚军禁不住哪怕一次失败。\n\n---\n\n\n\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: (document.title),\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","source":"_posts/2022-04-17-legend.md","raw":"---\ntitle: 观《楚汉传奇》有感\nmathjax: false\ncodeblock:\n  enable: true\n  show_result: true\ndate: 2022-04-17 22:48:14\ntags:\ncategories:\n---\n\n<table>\n<tr>\n<td>大风起兮云飞扬，<br>威加海内兮归故乡。<br>安得猛士兮守四方？<br>——刘邦</td>\n\n<td>力拔山兮气盖世，<br>时不利兮骓不逝。<br>骓不逝兮可奈何，<br>虞兮虞兮奈若何！<br>——项羽</td>\n</tr>\n</table>\n\n<!--more-->\n严格地说，这是个人对楚汉战争这段历史的感悟。更确切地说，这是对汉王的成功与楚王的失败的感悟。\n\n楚汉相争，汉王最终夺取天下。项籍之败，哪里是什么“时不利兮”。匹夫之勇——项羽纵然可以冲锋破阵如履平地，纵然可以武勇绝冠作万人敌，却不懂得不战而屈人之兵，更不懂得得民心者得天下。妇人之仁——优柔姑息，不识大体；没有战略眼光，不晓杀伐果断。鸿门之宴、彭城之围、阳夏之战，均是灭亡汉王集团的绝佳机会。然而，项羽高估了义气，低估了人性。一次次的心慈手软，一次次的放虎归山，一次次的错失机会。相比之下，刘邦招贤纳士、安抚百姓；眼光长远，心怀天下。在可见的与不可见的争斗中，刘邦牢牢抓住每一个不放过的机会，上芒砀山、投项羽（前期）；入关中、下巴蜀、还定三秦，一切只为两个字——天下。终于，这虎蜕变成能与赤龙一决雌雄的白龙，并战胜了赤龙。\n\n虽然有马后炮的嫌疑，但刘邦之胜与项羽之败，在讨诛暴秦时期便可见端倪。刘邦虽然出身低微（泗水亭长），也无过人武勇，但他为人慷慨仗义，处事圆滑灵活，有着强大的个人魅力。因此在创业初期，刘邦便能够结实一群坚定不移的好兄弟（即丰沛集团，包括卢绾、萧何、曹参、樊哙、周勃、夏侯婴，以及芒砀山时期组织的军队成员）。这一团队是刘邦日后与项羽抗争的中坚力量。刘邦的个人特质，也是天下英才趋之若鹜的重要原因。与此同时，项羽虽然贵为楚国名将项燕之后，能够凭借贵族身份与民间威望团结楚地人民的力量，然而项羽为人固执、刚愎自用。咨诹善道、从善如流这些词，从来与项羽不搭边。项羽虽重义气，却有强烈的身份优越感，看不起出身卑贱的人（包括对手刘邦、昔日执戟郎中后来大将军的韩信）。这导致项羽虽然也结识一群好弟兄（虞子期、龙且），但在外人看来，项羽心高气傲、难以接近。除了一心复兴楚国的范增，再无其他谋士愿意加入项羽麾下。\n\n刘邦与项羽的性格特质，放大了他们各自的团队特点，从而影响了局势走向。在人才吸引方面，刘邦为人慷慨，用人果断，能够让每个人发挥自己最大的才能。张良加入汉军之初也曾领兵打仗。但刘邦在部下反馈与自己观察之下，决定让张良以谋士身份供职，更大程度地发挥其过人智慧及战略规划能力。入巴蜀、定三秦、鸿门脱险，无一不是张良助力。韩信加入汉营前是项羽帐下的执戟郎中，在汉营亦只从运粮官做起。然而刘邦能听从萧何的建议，仅在读过韩信之兵书、见韩信其人一面之后，拜韩信为一人之下万人之上的大将军。这需要何等强大的果敢和定力！更不用说韩信攻略齐地后，刘邦能听从张良陈平的建议，封其为“真”齐王，使其死心塌地地效忠于汉家。陈平归于刘邦之前曾降于项王，且名声不好，有“盗嫂受金”之嫌。然而刘邦能够听从陈平之计，拨出四分之一的国库存金支持他在楚营开展间谍活动，离间项羽与范增。范增一除，项羽剩下的便只有“勇”，分明是一块案板上的牛肉。与之相比，项羽纵有拔山之力，却小肚鸡肠，为人固执、猜忌部下；任人唯亲，有功之臣不得奖赏，项家子弟却保荣华富贵。虽然应该客观承认，项羽有着冠绝古今的军事才能；但也不得不言，项羽并不是一个合格的“王”。刘邦的慷慨与果断，使天下英杰趋之若鹜；项羽的无双勇力，却不是吸引天下人才的理由。\n\n此外，刘项二人的志向差异，更加决定了各自结局的不同。对项羽而言，战斗的意义有两点：其一是诛灭无道的暴秦，其二是光荣复兴楚国大旗。首先，项羽对秦国人怀有极深的仇恨，因此其对秦人的态度并无任何慈悲。屠咸阳、火烧阿房、坑杀30万秦军，项羽对秦人没有任何怜悯。其次，项羽的最终目标在于复兴“楚国”，而非重振“天下”，因而在荡平咸阳之后，土地肥沃、易守难攻的三秦之地对项羽没有任何吸引力。项羽想做的只有回到故乡彭城，做自己的“西楚霸王”，仿照周朝恢复分封制，守住楚国的一亩三分地。至于刘邦，创业前期刘邦并不知道自己的目标为何——乱世之中，生存第一。然而在入关中之后，刘邦把目光放到了“天下”。刘邦的目标在于统一天下。虽然我们不能冠冕堂皇地认为，刘邦所做的一切都是为了百姓福祉、人类和平。但可以确定的是，刘邦没有像项羽一样对秦人的仇恨（亡国之痛），同时他出身低微，更加能够体会百姓疾苦。因而在战略问题上，刘邦能够从更加全局的角度思考，并且更加考虑人民的感受，而非像项羽一样的你死我活、快意恩仇。入关中称王后，刘邦看到巴蜀之地虽然路途遥远，却是沃野千里的天府之土，因而顺水推舟地入蜀以积攒实力。随后，汉家军明修栈道暗度陈仓以定三秦，据守崤关以保有坚不可摧的防御。再加上大后方的巴蜀源源不断地提供粮草，使得汉军具有蒸不烂、煮不熟、捶不匾、炒不爆的韧性。虽然汉军一直在打败仗，但汉军只需要最后赢一次；虽然楚军屡战屡胜，但楚军禁不住哪怕一次失败。\n\n---\n\n\n\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: (document.title),\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","slug":"2022-04-17-legend","published":1,"updated":"2022-04-21T07:27:44.833Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cludw9n9s00179wv9diq58c1p","content":"<table>\n<tr>\n<td>大风起兮云飞扬，<br>威加海内兮归故乡。<br>安得猛士兮守四方？<br>——刘邦</td>\n\n<td>力拔山兮气盖世，<br>时不利兮骓不逝。<br>骓不逝兮可奈何，<br>虞兮虞兮奈若何！<br>——项羽</td>\n</tr>\n</table>\n\n<span id=\"more\"></span>\n<p>严格地说，这是个人对楚汉战争这段历史的感悟。更确切地说，这是对汉王的成功与楚王的失败的感悟。</p>\n<p>楚汉相争，汉王最终夺取天下。项籍之败，哪里是什么“时不利兮”。匹夫之勇——项羽纵然可以冲锋破阵如履平地，纵然可以武勇绝冠作万人敌，却不懂得不战而屈人之兵，更不懂得得民心者得天下。妇人之仁——优柔姑息，不识大体；没有战略眼光，不晓杀伐果断。鸿门之宴、彭城之围、阳夏之战，均是灭亡汉王集团的绝佳机会。然而，项羽高估了义气，低估了人性。一次次的心慈手软，一次次的放虎归山，一次次的错失机会。相比之下，刘邦招贤纳士、安抚百姓；眼光长远，心怀天下。在可见的与不可见的争斗中，刘邦牢牢抓住每一个不放过的机会，上芒砀山、投项羽（前期）；入关中、下巴蜀、还定三秦，一切只为两个字——天下。终于，这虎蜕变成能与赤龙一决雌雄的白龙，并战胜了赤龙。</p>\n<p>虽然有马后炮的嫌疑，但刘邦之胜与项羽之败，在讨诛暴秦时期便可见端倪。刘邦虽然出身低微（泗水亭长），也无过人武勇，但他为人慷慨仗义，处事圆滑灵活，有着强大的个人魅力。因此在创业初期，刘邦便能够结实一群坚定不移的好兄弟（即丰沛集团，包括卢绾、萧何、曹参、樊哙、周勃、夏侯婴，以及芒砀山时期组织的军队成员）。这一团队是刘邦日后与项羽抗争的中坚力量。刘邦的个人特质，也是天下英才趋之若鹜的重要原因。与此同时，项羽虽然贵为楚国名将项燕之后，能够凭借贵族身份与民间威望团结楚地人民的力量，然而项羽为人固执、刚愎自用。咨诹善道、从善如流这些词，从来与项羽不搭边。项羽虽重义气，却有强烈的身份优越感，看不起出身卑贱的人（包括对手刘邦、昔日执戟郎中后来大将军的韩信）。这导致项羽虽然也结识一群好弟兄（虞子期、龙且），但在外人看来，项羽心高气傲、难以接近。除了一心复兴楚国的范增，再无其他谋士愿意加入项羽麾下。</p>\n<p>刘邦与项羽的性格特质，放大了他们各自的团队特点，从而影响了局势走向。在人才吸引方面，刘邦为人慷慨，用人果断，能够让每个人发挥自己最大的才能。张良加入汉军之初也曾领兵打仗。但刘邦在部下反馈与自己观察之下，决定让张良以谋士身份供职，更大程度地发挥其过人智慧及战略规划能力。入巴蜀、定三秦、鸿门脱险，无一不是张良助力。韩信加入汉营前是项羽帐下的执戟郎中，在汉营亦只从运粮官做起。然而刘邦能听从萧何的建议，仅在读过韩信之兵书、见韩信其人一面之后，拜韩信为一人之下万人之上的大将军。这需要何等强大的果敢和定力！更不用说韩信攻略齐地后，刘邦能听从张良陈平的建议，封其为“真”齐王，使其死心塌地地效忠于汉家。陈平归于刘邦之前曾降于项王，且名声不好，有“盗嫂受金”之嫌。然而刘邦能够听从陈平之计，拨出四分之一的国库存金支持他在楚营开展间谍活动，离间项羽与范增。范增一除，项羽剩下的便只有“勇”，分明是一块案板上的牛肉。与之相比，项羽纵有拔山之力，却小肚鸡肠，为人固执、猜忌部下；任人唯亲，有功之臣不得奖赏，项家子弟却保荣华富贵。虽然应该客观承认，项羽有着冠绝古今的军事才能；但也不得不言，项羽并不是一个合格的“王”。刘邦的慷慨与果断，使天下英杰趋之若鹜；项羽的无双勇力，却不是吸引天下人才的理由。</p>\n<p>此外，刘项二人的志向差异，更加决定了各自结局的不同。对项羽而言，战斗的意义有两点：其一是诛灭无道的暴秦，其二是光荣复兴楚国大旗。首先，项羽对秦国人怀有极深的仇恨，因此其对秦人的态度并无任何慈悲。屠咸阳、火烧阿房、坑杀30万秦军，项羽对秦人没有任何怜悯。其次，项羽的最终目标在于复兴“楚国”，而非重振“天下”，因而在荡平咸阳之后，土地肥沃、易守难攻的三秦之地对项羽没有任何吸引力。项羽想做的只有回到故乡彭城，做自己的“西楚霸王”，仿照周朝恢复分封制，守住楚国的一亩三分地。至于刘邦，创业前期刘邦并不知道自己的目标为何——乱世之中，生存第一。然而在入关中之后，刘邦把目光放到了“天下”。刘邦的目标在于统一天下。虽然我们不能冠冕堂皇地认为，刘邦所做的一切都是为了百姓福祉、人类和平。但可以确定的是，刘邦没有像项羽一样对秦人的仇恨（亡国之痛），同时他出身低微，更加能够体会百姓疾苦。因而在战略问题上，刘邦能够从更加全局的角度思考，并且更加考虑人民的感受，而非像项羽一样的你死我活、快意恩仇。入关中称王后，刘邦看到巴蜀之地虽然路途遥远，却是沃野千里的天府之土，因而顺水推舟地入蜀以积攒实力。随后，汉家军明修栈道暗度陈仓以定三秦，据守崤关以保有坚不可摧的防御。再加上大后方的巴蜀源源不断地提供粮草，使得汉军具有蒸不烂、煮不熟、捶不匾、炒不爆的韧性。虽然汉军一直在打败仗，但汉军只需要最后赢一次；虽然楚军屡战屡胜，但楚军禁不住哪怕一次失败。</p>\n<hr>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: (document.title),\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","site":{"data":{}},"length":2289,"excerpt":"<table>\n<tr>\n<td>大风起兮云飞扬，<br>威加海内兮归故乡。<br>安得猛士兮守四方？<br>——刘邦</td>\n\n<td>力拔山兮气盖世，<br>时不利兮骓不逝。<br>骓不逝兮可奈何，<br>虞兮虞兮奈若何！<br>——项羽</td>\n</tr>\n</table>","more":"<p>严格地说，这是个人对楚汉战争这段历史的感悟。更确切地说，这是对汉王的成功与楚王的失败的感悟。</p>\n<p>楚汉相争，汉王最终夺取天下。项籍之败，哪里是什么“时不利兮”。匹夫之勇——项羽纵然可以冲锋破阵如履平地，纵然可以武勇绝冠作万人敌，却不懂得不战而屈人之兵，更不懂得得民心者得天下。妇人之仁——优柔姑息，不识大体；没有战略眼光，不晓杀伐果断。鸿门之宴、彭城之围、阳夏之战，均是灭亡汉王集团的绝佳机会。然而，项羽高估了义气，低估了人性。一次次的心慈手软，一次次的放虎归山，一次次的错失机会。相比之下，刘邦招贤纳士、安抚百姓；眼光长远，心怀天下。在可见的与不可见的争斗中，刘邦牢牢抓住每一个不放过的机会，上芒砀山、投项羽（前期）；入关中、下巴蜀、还定三秦，一切只为两个字——天下。终于，这虎蜕变成能与赤龙一决雌雄的白龙，并战胜了赤龙。</p>\n<p>虽然有马后炮的嫌疑，但刘邦之胜与项羽之败，在讨诛暴秦时期便可见端倪。刘邦虽然出身低微（泗水亭长），也无过人武勇，但他为人慷慨仗义，处事圆滑灵活，有着强大的个人魅力。因此在创业初期，刘邦便能够结实一群坚定不移的好兄弟（即丰沛集团，包括卢绾、萧何、曹参、樊哙、周勃、夏侯婴，以及芒砀山时期组织的军队成员）。这一团队是刘邦日后与项羽抗争的中坚力量。刘邦的个人特质，也是天下英才趋之若鹜的重要原因。与此同时，项羽虽然贵为楚国名将项燕之后，能够凭借贵族身份与民间威望团结楚地人民的力量，然而项羽为人固执、刚愎自用。咨诹善道、从善如流这些词，从来与项羽不搭边。项羽虽重义气，却有强烈的身份优越感，看不起出身卑贱的人（包括对手刘邦、昔日执戟郎中后来大将军的韩信）。这导致项羽虽然也结识一群好弟兄（虞子期、龙且），但在外人看来，项羽心高气傲、难以接近。除了一心复兴楚国的范增，再无其他谋士愿意加入项羽麾下。</p>\n<p>刘邦与项羽的性格特质，放大了他们各自的团队特点，从而影响了局势走向。在人才吸引方面，刘邦为人慷慨，用人果断，能够让每个人发挥自己最大的才能。张良加入汉军之初也曾领兵打仗。但刘邦在部下反馈与自己观察之下，决定让张良以谋士身份供职，更大程度地发挥其过人智慧及战略规划能力。入巴蜀、定三秦、鸿门脱险，无一不是张良助力。韩信加入汉营前是项羽帐下的执戟郎中，在汉营亦只从运粮官做起。然而刘邦能听从萧何的建议，仅在读过韩信之兵书、见韩信其人一面之后，拜韩信为一人之下万人之上的大将军。这需要何等强大的果敢和定力！更不用说韩信攻略齐地后，刘邦能听从张良陈平的建议，封其为“真”齐王，使其死心塌地地效忠于汉家。陈平归于刘邦之前曾降于项王，且名声不好，有“盗嫂受金”之嫌。然而刘邦能够听从陈平之计，拨出四分之一的国库存金支持他在楚营开展间谍活动，离间项羽与范增。范增一除，项羽剩下的便只有“勇”，分明是一块案板上的牛肉。与之相比，项羽纵有拔山之力，却小肚鸡肠，为人固执、猜忌部下；任人唯亲，有功之臣不得奖赏，项家子弟却保荣华富贵。虽然应该客观承认，项羽有着冠绝古今的军事才能；但也不得不言，项羽并不是一个合格的“王”。刘邦的慷慨与果断，使天下英杰趋之若鹜；项羽的无双勇力，却不是吸引天下人才的理由。</p>\n<p>此外，刘项二人的志向差异，更加决定了各自结局的不同。对项羽而言，战斗的意义有两点：其一是诛灭无道的暴秦，其二是光荣复兴楚国大旗。首先，项羽对秦国人怀有极深的仇恨，因此其对秦人的态度并无任何慈悲。屠咸阳、火烧阿房、坑杀30万秦军，项羽对秦人没有任何怜悯。其次，项羽的最终目标在于复兴“楚国”，而非重振“天下”，因而在荡平咸阳之后，土地肥沃、易守难攻的三秦之地对项羽没有任何吸引力。项羽想做的只有回到故乡彭城，做自己的“西楚霸王”，仿照周朝恢复分封制，守住楚国的一亩三分地。至于刘邦，创业前期刘邦并不知道自己的目标为何——乱世之中，生存第一。然而在入关中之后，刘邦把目光放到了“天下”。刘邦的目标在于统一天下。虽然我们不能冠冕堂皇地认为，刘邦所做的一切都是为了百姓福祉、人类和平。但可以确定的是，刘邦没有像项羽一样对秦人的仇恨（亡国之痛），同时他出身低微，更加能够体会百姓疾苦。因而在战略问题上，刘邦能够从更加全局的角度思考，并且更加考虑人民的感受，而非像项羽一样的你死我活、快意恩仇。入关中称王后，刘邦看到巴蜀之地虽然路途遥远，却是沃野千里的天府之土，因而顺水推舟地入蜀以积攒实力。随后，汉家军明修栈道暗度陈仓以定三秦，据守崤关以保有坚不可摧的防御。再加上大后方的巴蜀源源不断地提供粮草，使得汉军具有蒸不烂、煮不熟、捶不匾、炒不爆的韧性。虽然汉军一直在打败仗，但汉军只需要最后赢一次；虽然楚军屡战屡胜，但楚军禁不住哪怕一次失败。</p>\n<hr>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: (document.title),\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>"},{"title":"因果推断学习笔记.2","mathjax":true,"codeblock":{"enable":true,"show_result":true},"date":"2022-04-21T03:15:31.000Z","_content":"\n因果推断的常用方法。\n\n<!--more-->\n\n## 承接上文\n推断因果关系：试问某种处理/因素/变量，对于个体的状态有没有影响（因果作用）？\n\n## Rubin Causal Model (RCM)\n- 设$Z_i$表示**个体$i$**接受处理与否（处理取1，对照取0）；$Y_i$表示个体$i$的**结果变量**。另外记二元组$(Y_i(1),Y_i(0))$表示个体$i$接受处理或对照的潜在结果(potential outcome)。那么$Y_i(1)-Y_i(0)$表示个体$i$接受处理的**个体因果作用**。\n- 然而问题在于，每个个体要么接受处理，要么作为对照，因此在一次观测中$(Y_i(1),Y_i(0))$必然缺失一半，因此个体的因果作用是不可识别的（注意，这里不允许前一个时刻对照、后一个时刻处理）。从概率的角度看，$i$可以看成样本空间$\\Omega$中的样本点$\\omega$。但是在**$Z$**做随机化的前提下，我们可以识别总体的平均因果作用(Average Casual Effect, ACE):\n$$\nACE(Z\\to Y)=E(Y_i(1)-Y_i(0)).\n$$\n这是因为\n$$\n\\begin{aligned}\nACE(Z\\to Y)&=E(Y_i(1))-E(Y_i(0)) &\\#\\text{对单个个体的全体结果变量求期望}\\\\\n&= E(Y_i(1)|Z_i=1)-E(Y_i(0)|Z_i=0) &\\#\\text{随机化，即}Z\\perp(Y(1),Y(0))\\\\\n&= E(Y_i|Z_i=1)-E(Y_i|Z_i=0) &\\#\\text{表明ACE可以由观测数据估计出来}\\\\\n\\end{aligned}\n$$\n*注：这里$i$是固定的，期望的取法是将$Y_i$视作随机变量，对$Y_i$取条件期望*\n\n- 上述推导表明，**随机化试验**对于平均因果作用的识别起着至关重要的作用。\n\n## 观测性研究：可忽略性、倾向得分与回归分析\n- 上一节的结论表明随机化试验对于平均因果作用的识别非常重要。然而在现实中，很多研究都是无法进行随机化试验的的（**对同一个体的随机化**）。在观测性研究中，通常能搜集到以下数据：个体的信息变量$X$（如年龄、性别）、个体是否接受处理$Z$（如是否吃某种新药、是否吸烟等）、个体的结果变量$Y$（如康复情况、肺部清洁程度等）。那么，我们可以用如下条件期望之差去估计$ACE$吗？\n$$\nE(Y|Z=1)-E(Y|Z=0)\n$$\n- 答案是：**不能**。反面教材：辛普森悖论（[Yule-Simpson Paradox](https://baike.baidu.com/item/%E8%BE%9B%E6%99%AE%E6%A3%AE%E6%82%96%E8%AE%BA/4475862)）\n- 这就引出一个$ACE$的识别性问题，即通过观测数据我们能否得到ACE的相合估计。实际中，这需要一个不可验证的假定：**可忽略性**。\n\n### 可忽略性&ACE的识别性\n- 可忽略行假定：$Z\\perp(Y(1),Y(0))$。即上文公式中的“随机化”。\n- 这是一条不可验证的**假定**，它的存在使得我们可以通过观测数据识别$ACE$。然而，在观测性研究中，个体**选择处理与否**（$Z$）与其**个体属性**可能相关（注意，本质上，$(Y(1),Y(0))$也是个体属性的一部分！），上面的假定可能被破坏。但通常的方法是，收集充分多的个体信息$X$，使得如下的**强可忽略性假定**成立：\n$$\nZ\\perp(Y(1),Y(0))\\perp X\n$$\n可以证明，此时的$ACE$是可以识别的，因为\n$$\n\\begin{aligned}\nACE &= E(Y(1))-E(Y(0)) &\\#\\text{对全体个体的全体结果变量求期望}\\\\\n&= E[E(Y(1)|X)] - E[E(Y(0)|X)] &\\#\\text{全期望公式} \\\\\n&= E[E(Y(1)|X,Z=1)] - E[E(Y(0)|X,Z=0)] \\\\ \n&= E[E(Y|X,Z=1)] - E[E(Y|X,Z=0)] \\\\ \n\\end{aligned}\n$$\n- 在上述推导中，通过全期望公式引入个体信息变量$X$的权重，解决了辛普森悖论的问题。接下来的问题是，如何通过上述条件期望计算$ACE$。目前有三种方法：\n> 倾向得分（propensity score）\n> 线性回归（linear regression）\n> Heckman Selection Model（又称Tobit Model）\n\n## 参考文献\n\n1. [丁鹏.因果推断简介.PKU-MATH-00112230.2019](https://www.math.pku.edu.cn/teachers/yaoy/math112230/lecture10_DingP_causal091101.pdf)\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: decodeURI(window.location.pathname),\n            distractionFreeMode: true // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","source":"_posts/2022-04-21-casual-inference-2.md","raw":"---\ntitle: 因果推断学习笔记.2\nmathjax: true\ncodeblock:\n  enable: true\n  show_result: true\ndate: 2022-04-21 11:15:31\ntags: 因果推断\ncategories: 学习笔记\n---\n\n因果推断的常用方法。\n\n<!--more-->\n\n## 承接上文\n推断因果关系：试问某种处理/因素/变量，对于个体的状态有没有影响（因果作用）？\n\n## Rubin Causal Model (RCM)\n- 设$Z_i$表示**个体$i$**接受处理与否（处理取1，对照取0）；$Y_i$表示个体$i$的**结果变量**。另外记二元组$(Y_i(1),Y_i(0))$表示个体$i$接受处理或对照的潜在结果(potential outcome)。那么$Y_i(1)-Y_i(0)$表示个体$i$接受处理的**个体因果作用**。\n- 然而问题在于，每个个体要么接受处理，要么作为对照，因此在一次观测中$(Y_i(1),Y_i(0))$必然缺失一半，因此个体的因果作用是不可识别的（注意，这里不允许前一个时刻对照、后一个时刻处理）。从概率的角度看，$i$可以看成样本空间$\\Omega$中的样本点$\\omega$。但是在**$Z$**做随机化的前提下，我们可以识别总体的平均因果作用(Average Casual Effect, ACE):\n$$\nACE(Z\\to Y)=E(Y_i(1)-Y_i(0)).\n$$\n这是因为\n$$\n\\begin{aligned}\nACE(Z\\to Y)&=E(Y_i(1))-E(Y_i(0)) &\\#\\text{对单个个体的全体结果变量求期望}\\\\\n&= E(Y_i(1)|Z_i=1)-E(Y_i(0)|Z_i=0) &\\#\\text{随机化，即}Z\\perp(Y(1),Y(0))\\\\\n&= E(Y_i|Z_i=1)-E(Y_i|Z_i=0) &\\#\\text{表明ACE可以由观测数据估计出来}\\\\\n\\end{aligned}\n$$\n*注：这里$i$是固定的，期望的取法是将$Y_i$视作随机变量，对$Y_i$取条件期望*\n\n- 上述推导表明，**随机化试验**对于平均因果作用的识别起着至关重要的作用。\n\n## 观测性研究：可忽略性、倾向得分与回归分析\n- 上一节的结论表明随机化试验对于平均因果作用的识别非常重要。然而在现实中，很多研究都是无法进行随机化试验的的（**对同一个体的随机化**）。在观测性研究中，通常能搜集到以下数据：个体的信息变量$X$（如年龄、性别）、个体是否接受处理$Z$（如是否吃某种新药、是否吸烟等）、个体的结果变量$Y$（如康复情况、肺部清洁程度等）。那么，我们可以用如下条件期望之差去估计$ACE$吗？\n$$\nE(Y|Z=1)-E(Y|Z=0)\n$$\n- 答案是：**不能**。反面教材：辛普森悖论（[Yule-Simpson Paradox](https://baike.baidu.com/item/%E8%BE%9B%E6%99%AE%E6%A3%AE%E6%82%96%E8%AE%BA/4475862)）\n- 这就引出一个$ACE$的识别性问题，即通过观测数据我们能否得到ACE的相合估计。实际中，这需要一个不可验证的假定：**可忽略性**。\n\n### 可忽略性&ACE的识别性\n- 可忽略行假定：$Z\\perp(Y(1),Y(0))$。即上文公式中的“随机化”。\n- 这是一条不可验证的**假定**，它的存在使得我们可以通过观测数据识别$ACE$。然而，在观测性研究中，个体**选择处理与否**（$Z$）与其**个体属性**可能相关（注意，本质上，$(Y(1),Y(0))$也是个体属性的一部分！），上面的假定可能被破坏。但通常的方法是，收集充分多的个体信息$X$，使得如下的**强可忽略性假定**成立：\n$$\nZ\\perp(Y(1),Y(0))\\perp X\n$$\n可以证明，此时的$ACE$是可以识别的，因为\n$$\n\\begin{aligned}\nACE &= E(Y(1))-E(Y(0)) &\\#\\text{对全体个体的全体结果变量求期望}\\\\\n&= E[E(Y(1)|X)] - E[E(Y(0)|X)] &\\#\\text{全期望公式} \\\\\n&= E[E(Y(1)|X,Z=1)] - E[E(Y(0)|X,Z=0)] \\\\ \n&= E[E(Y|X,Z=1)] - E[E(Y|X,Z=0)] \\\\ \n\\end{aligned}\n$$\n- 在上述推导中，通过全期望公式引入个体信息变量$X$的权重，解决了辛普森悖论的问题。接下来的问题是，如何通过上述条件期望计算$ACE$。目前有三种方法：\n> 倾向得分（propensity score）\n> 线性回归（linear regression）\n> Heckman Selection Model（又称Tobit Model）\n\n## 参考文献\n\n1. [丁鹏.因果推断简介.PKU-MATH-00112230.2019](https://www.math.pku.edu.cn/teachers/yaoy/math112230/lecture10_DingP_causal091101.pdf)\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: decodeURI(window.location.pathname),\n            distractionFreeMode: true // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","slug":"2022-04-21-casual-inference-2","published":1,"updated":"2023-03-19T09:42:41.566Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cludw9n9s00189wv9dxenca2a","content":"<p>因果推断的常用方法。</p>\n<span id=\"more\"></span>\n<h2 id=\"承接上文\"><a href=\"#承接上文\" class=\"headerlink\" title=\"承接上文\"></a>承接上文</h2><p>推断因果关系：试问某种处理/因素/变量，对于个体的状态有没有影响（因果作用）？</p>\n<h2 id=\"Rubin-Causal-Model-RCM\"><a href=\"#Rubin-Causal-Model-RCM\" class=\"headerlink\" title=\"Rubin Causal Model (RCM)\"></a>Rubin Causal Model (RCM)</h2><ul>\n<li>设<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.357ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.285ex\" height=\"1.902ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 1010 840.8\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(716,-150) scale(0.707)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g></g></g></svg></mjx-container>表示<strong>个体<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"0.781ex\" height=\"1.52ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -661 345 672\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g></g></svg></mjx-container></strong>接受处理与否（处理取1，对照取0）；<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.357ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.054ex\" height=\"1.902ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 908 840.8\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(614,-150) scale(0.707)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g></g></g></svg></mjx-container>表示个体<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"0.781ex\" height=\"1.52ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -661 345 672\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g></g></svg></mjx-container>的<strong>结果变量</strong>。另外记二元组<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"12.657ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 5594.6 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(389,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(614,-150) scale(0.707)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(1297,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(1686,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2186,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2575,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(3019.6,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(614,-150) scale(0.707)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(3927.6,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(4316.6,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4816.6,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(5205.6,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>表示个体<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"0.781ex\" height=\"1.52ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -661 345 672\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g></g></svg></mjx-container>接受处理或对照的潜在结果(potential outcome)。那么<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"12.657ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 5594.3 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(614,-150) scale(0.707)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(908,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(1297,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1797,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2408.2,0)\"><path data-c=\"2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(3408.4,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(614,-150) scale(0.707)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(4316.3,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(4705.3,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(5205.3,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>表示个体<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"0.781ex\" height=\"1.52ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -661 345 672\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g></g></svg></mjx-container>接受处理的<strong>个体因果作用</strong>。</li>\n<li><p>然而问题在于，每个个体要么接受处理，要么作为对照，因此在一次观测中<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"12.657ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 5594.6 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(389,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(614,-150) scale(0.707)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(1297,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(1686,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2186,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2575,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(3019.6,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(614,-150) scale(0.707)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(3927.6,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(4316.6,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4816.6,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(5205.6,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>必然缺失一半，因此个体的因果作用是不可识别的（注意，这里不允许前一个时刻对照、后一个时刻处理）。从概率的角度看，<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"0.781ex\" height=\"1.52ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -661 345 672\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g></g></svg></mjx-container>可以看成样本空间<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.633ex\" height=\"1.593ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -704 722 704\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"3A9\" d=\"M55 454Q55 503 75 546T127 617T197 665T272 695T337 704H352Q396 704 404 703Q527 687 596 615T666 454Q666 392 635 330T559 200T499 83V80H543Q589 81 600 83T617 93Q622 102 629 135T636 172L637 177H677V175L660 89Q645 3 644 2V0H552H488Q461 0 456 3T451 20Q451 89 499 235T548 455Q548 512 530 555T483 622T424 656T361 668Q332 668 303 658T243 626T193 560T174 456Q174 380 222 233T270 20Q270 7 263 0H77V2Q76 3 61 89L44 175V177H84L85 172Q85 171 88 155T96 119T104 93Q109 86 120 84T178 80H222V83Q206 132 162 199T87 329T55 454Z\"></path></g></g></g></svg></mjx-container>中的样本点<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.407ex\" height=\"1.027ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -443 622 454\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D714\" d=\"M495 384Q495 406 514 424T555 443Q574 443 589 425T604 364Q604 334 592 278T555 155T483 38T377 -11Q297 -11 267 66Q266 68 260 61Q201 -11 125 -11Q15 -11 15 139Q15 230 56 325T123 434Q135 441 147 436Q160 429 160 418Q160 406 140 379T94 306T62 208Q61 202 61 187Q61 124 85 100T143 76Q201 76 245 129L253 137V156Q258 297 317 297Q348 297 348 261Q348 243 338 213T318 158L308 135Q309 133 310 129T318 115T334 97T358 83T393 76Q456 76 501 148T546 274Q546 305 533 325T508 357T495 384Z\"></path></g></g></g></svg></mjx-container>。但是在<strong><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container></strong>做随机化的前提下，我们可以识别总体的平均因果作用(Average Casual Effect, ACE):</p>\n<script type=\"math/tex; mode=display\">\nACE(Z\\to Y)=E(Y_i(1)-Y_i(0)).</script><p>这是因为</p>\n<script type=\"math/tex; mode=display\">\n\\begin{aligned}\nACE(Z\\to Y)&=E(Y_i(1))-E(Y_i(0)) &\\#\\text{对单个个体的全体结果变量求期望}\\\\\n&= E(Y_i(1)|Z_i=1)-E(Y_i(0)|Z_i=0) &\\#\\text{随机化，即}Z\\perp(Y(1),Y(0))\\\\\n&= E(Y_i|Z_i=1)-E(Y_i|Z_i=0) &\\#\\text{表明ACE可以由观测数据估计出来}\\\\\n\\end{aligned}</script><p><em>注：这里<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"0.781ex\" height=\"1.52ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -661 345 672\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g></g></svg></mjx-container>是固定的，期望的取法是将<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.357ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.054ex\" height=\"1.902ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 908 840.8\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(614,-150) scale(0.707)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g></g></g></svg></mjx-container>视作随机变量，对<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.357ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.054ex\" height=\"1.902ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 908 840.8\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(614,-150) scale(0.707)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g></g></g></svg></mjx-container>取条件期望</em></p>\n</li>\n<li><p>上述推导表明，<strong>随机化试验</strong>对于平均因果作用的识别起着至关重要的作用。</p>\n</li>\n</ul>\n<h2 id=\"观测性研究：可忽略性、倾向得分与回归分析\"><a href=\"#观测性研究：可忽略性、倾向得分与回归分析\" class=\"headerlink\" title=\"观测性研究：可忽略性、倾向得分与回归分析\"></a>观测性研究：可忽略性、倾向得分与回归分析</h2><ul>\n<li>上一节的结论表明随机化试验对于平均因果作用的识别非常重要。然而在现实中，很多研究都是无法进行随机化试验的的（<strong>对同一个体的随机化</strong>）。在观测性研究中，通常能搜集到以下数据：个体的信息变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>（如年龄、性别）、个体是否接受处理<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>（如是否吃某种新药、是否吸烟等）、个体的结果变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>（如康复情况、肺部清洁程度等）。那么，我们可以用如下条件期望之差去估计<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.145ex\" height=\"1.67ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 2274 738\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(750,0)\"><path data-c=\"1D436\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1510,0)\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g></g></g></svg></mjx-container>吗？<script type=\"math/tex; mode=display\">\nE(Y|Z=1)-E(Y|Z=0)</script></li>\n<li>答案是：<strong>不能</strong>。反面教材：辛普森悖论（<a href=\"https://baike.baidu.com/item/%E8%BE%9B%E6%99%AE%E6%A3%AE%E6%82%96%E8%AE%BA/4475862\">Yule-Simpson Paradox</a>）</li>\n<li>这就引出一个<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.145ex\" height=\"1.67ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 2274 738\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(750,0)\"><path data-c=\"1D436\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1510,0)\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g></g></g></svg></mjx-container>的识别性问题，即通过观测数据我们能否得到ACE的相合估计。实际中，这需要一个不可验证的假定：<strong>可忽略性</strong>。</li>\n</ul>\n<h3 id=\"可忽略性-amp-ACE的识别性\"><a href=\"#可忽略性-amp-ACE的识别性\" class=\"headerlink\" title=\"可忽略性&ACE的识别性\"></a>可忽略性&amp;ACE的识别性</h3><ul>\n<li>可忽略行假定：<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16.654ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 7361.2 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1000.8,0)\"><path data-c=\"22A5\" d=\"M369 652Q369 653 370 655T372 658T375 662T379 665T384 667T391 668Q402 666 409 653V40H708Q723 32 723 20T708 0H71Q70 0 67 2T59 9T55 20T59 31T66 38T71 40H369V652Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2056.6,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2445.6,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3208.6,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(3597.6,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4097.6,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4486.6,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4931.2,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(5694.2,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(6083.2,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6583.2,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6972.2,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>。即上文公式中的“随机化”。</li>\n<li>这是一条不可验证的<strong>假定</strong>，它的存在使得我们可以通过观测数据识别<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.145ex\" height=\"1.67ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 2274 738\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(750,0)\"><path data-c=\"1D436\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1510,0)\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g></g></g></svg></mjx-container>。然而，在观测性研究中，个体<strong>选择处理与否</strong>（<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>）与其<strong>个体属性</strong>可能相关（注意，本质上，<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"12.002ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 5304.7 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(389,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1152,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(1541,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2041,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2430,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2874.7,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3637.7,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(4026.7,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4526.7,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4915.7,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>也是个体属性的一部分！），上面的假定可能被破坏。但通常的方法是，收集充分多的个体信息<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>，使得如下的<strong>强可忽略性假定</strong>成立：<script type=\"math/tex; mode=display\">\nZ\\perp(Y(1),Y(0))\\perp X</script>可以证明，此时的<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.145ex\" height=\"1.67ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 2274 738\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(750,0)\"><path data-c=\"1D436\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1510,0)\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g></g></g></svg></mjx-container>是可以识别的，因为<script type=\"math/tex; mode=display\">\n\\begin{aligned}\nACE &= E(Y(1))-E(Y(0)) &\\#\\text{对全体个体的全体结果变量求期望}\\\\\n&= E[E(Y(1)|X)] - E[E(Y(0)|X)] &\\#\\text{全期望公式} \\\\\n&= E[E(Y(1)|X,Z=1)] - E[E(Y(0)|X,Z=0)] \\\\ \n&= E[E(Y|X,Z=1)] - E[E(Y|X,Z=0)] \\\\ \n\\end{aligned}</script></li>\n<li>在上述推导中，通过全期望公式引入个体信息变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>的权重，解决了辛普森悖论的问题。接下来的问题是，如何通过上述条件期望计算<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.145ex\" height=\"1.67ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 2274 738\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(750,0)\"><path data-c=\"1D436\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1510,0)\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g></g></g></svg></mjx-container>。目前有三种方法：<blockquote>\n<p>倾向得分（propensity score）<br>线性回归（linear regression）<br>Heckman Selection Model（又称Tobit Model）</p>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h2><ol>\n<li><a href=\"https://www.math.pku.edu.cn/teachers/yaoy/math112230/lecture10_DingP_causal091101.pdf\">丁鹏.因果推断简介.PKU-MATH-00112230.2019</a></li>\n</ol>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: decodeURI(window.location.pathname),\n            distractionFreeMode: true // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","site":{"data":{}},"length":2013,"excerpt":"<p>因果推断的常用方法。</p>","more":"<h2 id=\"承接上文\"><a href=\"#承接上文\" class=\"headerlink\" title=\"承接上文\"></a>承接上文</h2><p>推断因果关系：试问某种处理/因素/变量，对于个体的状态有没有影响（因果作用）？</p>\n<h2 id=\"Rubin-Causal-Model-RCM\"><a href=\"#Rubin-Causal-Model-RCM\" class=\"headerlink\" title=\"Rubin Causal Model (RCM)\"></a>Rubin Causal Model (RCM)</h2><ul>\n<li>设<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.357ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.285ex\" height=\"1.902ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 1010 840.8\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(716,-150) scale(0.707)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g></g></g></svg></mjx-container>表示<strong>个体<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"0.781ex\" height=\"1.52ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -661 345 672\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g></g></svg></mjx-container></strong>接受处理与否（处理取1，对照取0）；<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.357ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.054ex\" height=\"1.902ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 908 840.8\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(614,-150) scale(0.707)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g></g></g></svg></mjx-container>表示个体<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"0.781ex\" height=\"1.52ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -661 345 672\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g></g></svg></mjx-container>的<strong>结果变量</strong>。另外记二元组<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"12.657ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 5594.6 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(389,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(614,-150) scale(0.707)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(1297,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(1686,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2186,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2575,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(3019.6,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(614,-150) scale(0.707)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(3927.6,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(4316.6,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4816.6,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(5205.6,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>表示个体<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"0.781ex\" height=\"1.52ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -661 345 672\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g></g></svg></mjx-container>接受处理或对照的潜在结果(potential outcome)。那么<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"12.657ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 5594.3 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(614,-150) scale(0.707)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(908,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(1297,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1797,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2408.2,0)\"><path data-c=\"2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(3408.4,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(614,-150) scale(0.707)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(4316.3,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(4705.3,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(5205.3,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>表示个体<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"0.781ex\" height=\"1.52ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -661 345 672\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g></g></svg></mjx-container>接受处理的<strong>个体因果作用</strong>。</li>\n<li><p>然而问题在于，每个个体要么接受处理，要么作为对照，因此在一次观测中<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"12.657ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 5594.6 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(389,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(614,-150) scale(0.707)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(1297,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(1686,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2186,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2575,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(3019.6,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(614,-150) scale(0.707)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(3927.6,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(4316.6,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4816.6,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(5205.6,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>必然缺失一半，因此个体的因果作用是不可识别的（注意，这里不允许前一个时刻对照、后一个时刻处理）。从概率的角度看，<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"0.781ex\" height=\"1.52ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -661 345 672\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g></g></svg></mjx-container>可以看成样本空间<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.633ex\" height=\"1.593ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -704 722 704\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"3A9\" d=\"M55 454Q55 503 75 546T127 617T197 665T272 695T337 704H352Q396 704 404 703Q527 687 596 615T666 454Q666 392 635 330T559 200T499 83V80H543Q589 81 600 83T617 93Q622 102 629 135T636 172L637 177H677V175L660 89Q645 3 644 2V0H552H488Q461 0 456 3T451 20Q451 89 499 235T548 455Q548 512 530 555T483 622T424 656T361 668Q332 668 303 658T243 626T193 560T174 456Q174 380 222 233T270 20Q270 7 263 0H77V2Q76 3 61 89L44 175V177H84L85 172Q85 171 88 155T96 119T104 93Q109 86 120 84T178 80H222V83Q206 132 162 199T87 329T55 454Z\"></path></g></g></g></svg></mjx-container>中的样本点<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.407ex\" height=\"1.027ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -443 622 454\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D714\" d=\"M495 384Q495 406 514 424T555 443Q574 443 589 425T604 364Q604 334 592 278T555 155T483 38T377 -11Q297 -11 267 66Q266 68 260 61Q201 -11 125 -11Q15 -11 15 139Q15 230 56 325T123 434Q135 441 147 436Q160 429 160 418Q160 406 140 379T94 306T62 208Q61 202 61 187Q61 124 85 100T143 76Q201 76 245 129L253 137V156Q258 297 317 297Q348 297 348 261Q348 243 338 213T318 158L308 135Q309 133 310 129T318 115T334 97T358 83T393 76Q456 76 501 148T546 274Q546 305 533 325T508 357T495 384Z\"></path></g></g></g></svg></mjx-container>。但是在<strong><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container></strong>做随机化的前提下，我们可以识别总体的平均因果作用(Average Casual Effect, ACE):</p>\n<script type=\"math/tex; mode=display\">\nACE(Z\\to Y)=E(Y_i(1)-Y_i(0)).</script><p>这是因为</p>\n<script type=\"math/tex; mode=display\">\n\\begin{aligned}\nACE(Z\\to Y)&=E(Y_i(1))-E(Y_i(0)) &\\#\\text{对单个个体的全体结果变量求期望}\\\\\n&= E(Y_i(1)|Z_i=1)-E(Y_i(0)|Z_i=0) &\\#\\text{随机化，即}Z\\perp(Y(1),Y(0))\\\\\n&= E(Y_i|Z_i=1)-E(Y_i|Z_i=0) &\\#\\text{表明ACE可以由观测数据估计出来}\\\\\n\\end{aligned}</script><p><em>注：这里<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"0.781ex\" height=\"1.52ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -661 345 672\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g></g></svg></mjx-container>是固定的，期望的取法是将<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.357ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.054ex\" height=\"1.902ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 908 840.8\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(614,-150) scale(0.707)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g></g></g></svg></mjx-container>视作随机变量，对<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.357ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.054ex\" height=\"1.902ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 908 840.8\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(614,-150) scale(0.707)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g></g></g></svg></mjx-container>取条件期望</em></p>\n</li>\n<li><p>上述推导表明，<strong>随机化试验</strong>对于平均因果作用的识别起着至关重要的作用。</p>\n</li>\n</ul>\n<h2 id=\"观测性研究：可忽略性、倾向得分与回归分析\"><a href=\"#观测性研究：可忽略性、倾向得分与回归分析\" class=\"headerlink\" title=\"观测性研究：可忽略性、倾向得分与回归分析\"></a>观测性研究：可忽略性、倾向得分与回归分析</h2><ul>\n<li>上一节的结论表明随机化试验对于平均因果作用的识别非常重要。然而在现实中，很多研究都是无法进行随机化试验的的（<strong>对同一个体的随机化</strong>）。在观测性研究中，通常能搜集到以下数据：个体的信息变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>（如年龄、性别）、个体是否接受处理<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>（如是否吃某种新药、是否吸烟等）、个体的结果变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>（如康复情况、肺部清洁程度等）。那么，我们可以用如下条件期望之差去估计<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.145ex\" height=\"1.67ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 2274 738\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(750,0)\"><path data-c=\"1D436\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1510,0)\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g></g></g></svg></mjx-container>吗？<script type=\"math/tex; mode=display\">\nE(Y|Z=1)-E(Y|Z=0)</script></li>\n<li>答案是：<strong>不能</strong>。反面教材：辛普森悖论（<a href=\"https://baike.baidu.com/item/%E8%BE%9B%E6%99%AE%E6%A3%AE%E6%82%96%E8%AE%BA/4475862\">Yule-Simpson Paradox</a>）</li>\n<li>这就引出一个<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.145ex\" height=\"1.67ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 2274 738\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(750,0)\"><path data-c=\"1D436\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1510,0)\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g></g></g></svg></mjx-container>的识别性问题，即通过观测数据我们能否得到ACE的相合估计。实际中，这需要一个不可验证的假定：<strong>可忽略性</strong>。</li>\n</ul>\n<h3 id=\"可忽略性-amp-ACE的识别性\"><a href=\"#可忽略性-amp-ACE的识别性\" class=\"headerlink\" title=\"可忽略性&ACE的识别性\"></a>可忽略性&amp;ACE的识别性</h3><ul>\n<li>可忽略行假定：<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16.654ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 7361.2 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1000.8,0)\"><path data-c=\"22A5\" d=\"M369 652Q369 653 370 655T372 658T375 662T379 665T384 667T391 668Q402 666 409 653V40H708Q723 32 723 20T708 0H71Q70 0 67 2T59 9T55 20T59 31T66 38T71 40H369V652Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2056.6,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2445.6,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3208.6,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(3597.6,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4097.6,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4486.6,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4931.2,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(5694.2,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(6083.2,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6583.2,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6972.2,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>。即上文公式中的“随机化”。</li>\n<li>这是一条不可验证的<strong>假定</strong>，它的存在使得我们可以通过观测数据识别<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.145ex\" height=\"1.67ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 2274 738\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(750,0)\"><path data-c=\"1D436\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1510,0)\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g></g></g></svg></mjx-container>。然而，在观测性研究中，个体<strong>选择处理与否</strong>（<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>）与其<strong>个体属性</strong>可能相关（注意，本质上，<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"12.002ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 5304.7 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(389,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1152,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(1541,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2041,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2430,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2874.7,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3637.7,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(4026.7,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4526.7,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4915.7,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>也是个体属性的一部分！），上面的假定可能被破坏。但通常的方法是，收集充分多的个体信息<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>，使得如下的<strong>强可忽略性假定</strong>成立：<script type=\"math/tex; mode=display\">\nZ\\perp(Y(1),Y(0))\\perp X</script>可以证明，此时的<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.145ex\" height=\"1.67ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 2274 738\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(750,0)\"><path data-c=\"1D436\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1510,0)\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g></g></g></svg></mjx-container>是可以识别的，因为<script type=\"math/tex; mode=display\">\n\\begin{aligned}\nACE &= E(Y(1))-E(Y(0)) &\\#\\text{对全体个体的全体结果变量求期望}\\\\\n&= E[E(Y(1)|X)] - E[E(Y(0)|X)] &\\#\\text{全期望公式} \\\\\n&= E[E(Y(1)|X,Z=1)] - E[E(Y(0)|X,Z=0)] \\\\ \n&= E[E(Y|X,Z=1)] - E[E(Y|X,Z=0)] \\\\ \n\\end{aligned}</script></li>\n<li>在上述推导中，通过全期望公式引入个体信息变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>的权重，解决了辛普森悖论的问题。接下来的问题是，如何通过上述条件期望计算<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.145ex\" height=\"1.67ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 2274 738\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(750,0)\"><path data-c=\"1D436\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1510,0)\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g></g></g></svg></mjx-container>。目前有三种方法：<blockquote>\n<p>倾向得分（propensity score）<br>线性回归（linear regression）<br>Heckman Selection Model（又称Tobit Model）</p>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h2><ol>\n<li><a href=\"https://www.math.pku.edu.cn/teachers/yaoy/math112230/lecture10_DingP_causal091101.pdf\">丁鹏.因果推断简介.PKU-MATH-00112230.2019</a></li>\n</ol>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: decodeURI(window.location.pathname),\n            distractionFreeMode: true // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>"},{"title":"因果推断学习笔记.3","mathjax":true,"codeblock":{"enable":true,"show_result":true},"date":"2022-04-22T02:49:39.000Z","_content":"观测性研究中对平均因果作用（$ACE$）的估计方法：倾向得分（propensity score）、线性回归、Heckman Selection Model。本篇主要介绍倾向得分方法。线性回归和HSM可见文末附参考文献。\n<!--more-->\n## 观测性研究中对ACE的估计方法\n### 倾向得分\n如上篇学习笔记所言，如果个体信息变量足够简单，$X$为二值变量（如性别），则可以按照$X=1$和$X=0$将样本分为两层，在每层分别估计$ACE$后再做加权平均，即可得到全体$ACE$的相合估计。但事实上，$X$的**维数很高且可能有连续分量**，因此很难将样本按$X$分层。即便能分层，也会面临类别不平衡的问题。为此，Rosenbaum and Rubin(1983) 提出了倾向得分的概念。\n\n**定义**：倾向得分的定义为：\n$$\ne(X)=P(Z=1|X)\n$$\n且满足\n1. $X\\perp Z|e(X)$\n2. 如果有强可忽略性假定（即$Z\\perp(Y(1),Y(0))|X$）且$e(X)\\in(0,1)$，则$Z\\perp(Y(1),Y(0))|e(X)$\n\n#### 分层方法\n上述第二条性质表明，如果给定样本信息$X$，处理机制是可忽略的，那么只需要给定一个一维的变量$e(X)$，处理机制也是可以忽略的。这样一来，我们得到了估计ACE的分层（stratify）方法：\n- Step 1: 先拟合一个Logistic/Probit模型（自变量为$X$，因变量为$e(X)$），估计每个个体的倾向得分$\\hat{e}(X)$\n- Step 2: 用估计的倾向得分$\\hat{e}(X)$分层（相当于把倾向得分当作个体信息），在每一层中估计平均因果作用，再加权平均即可。\n\n#### 加权方法\n此外，Hirano, Imbens and Ridder(2003)从经验似然的角度指出了另一种“加权方法”(weighting)，并证明了该方法是半参数有效的估计方法。该方法使用以下统计量作为$ACE$的估计：\n$$\n\\hat{ACE}=\\frac{1}{n}\\sum_{i=1}^{n}\\left[\\frac{Y_i Z_i}{\\hat{e}(X_i)}-\\frac{Y_i(1-Z_i)}{1-\\hat{e}(X_i)}\\right]\n$$\n\n\n## 参考文献\n\n1. [丁鹏.因果推断简介.PKU-MATH-00112230.2019](https://www.math.pku.edu.cn/teachers/yaoy/math112230/lecture10_DingP_causal091101.pdf)\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: decodeURI(window.location.pathname),\n            distractionFreeMode: true // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","source":"_posts/2022-04-22-casual-inference-3.md","raw":"---\ntitle: 因果推断学习笔记.3\nmathjax: true\ncodeblock:\n  enable: true\n  show_result: true\ndate: 2022-04-22 10:49:39\ntags: 因果推断\ncategories: 学习笔记\n---\n观测性研究中对平均因果作用（$ACE$）的估计方法：倾向得分（propensity score）、线性回归、Heckman Selection Model。本篇主要介绍倾向得分方法。线性回归和HSM可见文末附参考文献。\n<!--more-->\n## 观测性研究中对ACE的估计方法\n### 倾向得分\n如上篇学习笔记所言，如果个体信息变量足够简单，$X$为二值变量（如性别），则可以按照$X=1$和$X=0$将样本分为两层，在每层分别估计$ACE$后再做加权平均，即可得到全体$ACE$的相合估计。但事实上，$X$的**维数很高且可能有连续分量**，因此很难将样本按$X$分层。即便能分层，也会面临类别不平衡的问题。为此，Rosenbaum and Rubin(1983) 提出了倾向得分的概念。\n\n**定义**：倾向得分的定义为：\n$$\ne(X)=P(Z=1|X)\n$$\n且满足\n1. $X\\perp Z|e(X)$\n2. 如果有强可忽略性假定（即$Z\\perp(Y(1),Y(0))|X$）且$e(X)\\in(0,1)$，则$Z\\perp(Y(1),Y(0))|e(X)$\n\n#### 分层方法\n上述第二条性质表明，如果给定样本信息$X$，处理机制是可忽略的，那么只需要给定一个一维的变量$e(X)$，处理机制也是可以忽略的。这样一来，我们得到了估计ACE的分层（stratify）方法：\n- Step 1: 先拟合一个Logistic/Probit模型（自变量为$X$，因变量为$e(X)$），估计每个个体的倾向得分$\\hat{e}(X)$\n- Step 2: 用估计的倾向得分$\\hat{e}(X)$分层（相当于把倾向得分当作个体信息），在每一层中估计平均因果作用，再加权平均即可。\n\n#### 加权方法\n此外，Hirano, Imbens and Ridder(2003)从经验似然的角度指出了另一种“加权方法”(weighting)，并证明了该方法是半参数有效的估计方法。该方法使用以下统计量作为$ACE$的估计：\n$$\n\\hat{ACE}=\\frac{1}{n}\\sum_{i=1}^{n}\\left[\\frac{Y_i Z_i}{\\hat{e}(X_i)}-\\frac{Y_i(1-Z_i)}{1-\\hat{e}(X_i)}\\right]\n$$\n\n\n## 参考文献\n\n1. [丁鹏.因果推断简介.PKU-MATH-00112230.2019](https://www.math.pku.edu.cn/teachers/yaoy/math112230/lecture10_DingP_causal091101.pdf)\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: decodeURI(window.location.pathname),\n            distractionFreeMode: true // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","slug":"2022-04-22-casual-inference-3","published":1,"updated":"2023-03-19T09:42:47.575Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cludw9n9t001b9wv92dlv69q7","content":"<p>观测性研究中对平均因果作用（<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.145ex\" height=\"1.67ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 2274 738\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(750,0)\"><path data-c=\"1D436\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1510,0)\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g></g></g></svg></mjx-container>）的估计方法：倾向得分（propensity score）、线性回归、Heckman Selection Model。本篇主要介绍倾向得分方法。线性回归和HSM可见文末附参考文献。<br><span id=\"more\"></span></p>\n<h2 id=\"观测性研究中对ACE的估计方法\"><a href=\"#观测性研究中对ACE的估计方法\" class=\"headerlink\" title=\"观测性研究中对ACE的估计方法\"></a>观测性研究中对ACE的估计方法</h2><h3 id=\"倾向得分\"><a href=\"#倾向得分\" class=\"headerlink\" title=\"倾向得分\"></a>倾向得分</h3><p>如上篇学习笔记所言，如果个体信息变量足够简单，<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>为二值变量（如性别），则可以按照<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.186ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.076ex\" height=\"1.731ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 2685.6 765\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1129.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(2185.6,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g></g></g></svg></mjx-container>和<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.186ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.076ex\" height=\"1.731ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 2685.6 765\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1129.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(2185.6,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g></g></g></svg></mjx-container>将样本分为两层，在每层分别估计<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.145ex\" height=\"1.67ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 2274 738\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(750,0)\"><path data-c=\"1D436\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1510,0)\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g></g></g></svg></mjx-container>后再做加权平均，即可得到全体<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.145ex\" height=\"1.67ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 2274 738\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(750,0)\"><path data-c=\"1D436\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1510,0)\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g></g></g></svg></mjx-container>的相合估计。但事实上，<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>的<strong>维数很高且可能有连续分量</strong>，因此很难将样本按<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>分层。即便能分层，也会面临类别不平衡的问题。为此，Rosenbaum and Rubin(1983) 提出了倾向得分的概念。</p>\n<p><strong>定义</strong>：倾向得分的定义为：</p>\n<script type=\"math/tex; mode=display\">\ne(X)=P(Z=1|X)</script><p>且满足</p>\n<ol>\n<li><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"11.951ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 5282.6 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1129.8,0)\"><path data-c=\"22A5\" d=\"M369 652Q369 653 370 655T372 658T375 662T379 665T384 667T391 668Q402 666 409 653V40H708Q723 32 723 20T708 0H71Q70 0 67 2T59 9T55 20T59 31T66 38T71 40H369V652Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2185.6,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2908.6,0) translate(0 -0.5)\"><path data-c=\"7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3186.6,0)\"><path data-c=\"1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3652.6,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4041.6,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4893.6,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container></li>\n<li>如果有强可忽略性假定（即<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"19.211ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 8491.2 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1000.8,0)\"><path data-c=\"22A5\" d=\"M369 652Q369 653 370 655T372 658T375 662T379 665T384 667T391 668Q402 666 409 653V40H708Q723 32 723 20T708 0H71Q70 0 67 2T59 9T55 20T59 31T66 38T71 40H369V652Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2056.6,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2445.6,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3208.6,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(3597.6,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4097.6,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4486.6,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4931.2,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(5694.2,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(6083.2,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6583.2,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6972.2,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(7361.2,0) translate(0 -0.5)\"><path data-c=\"7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(7639.2,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>）且<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"12.537ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 5541.2 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(466,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(855,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1707,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2373.8,0)\"><path data-c=\"2208\" d=\"M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3318.6,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(3707.6,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4207.6,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(4652.2,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(5152.2,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>，则<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"22.025ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 9735.2 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1000.8,0)\"><path data-c=\"22A5\" d=\"M369 652Q369 653 370 655T372 658T375 662T379 665T384 667T391 668Q402 666 409 653V40H708Q723 32 723 20T708 0H71Q70 0 67 2T59 9T55 20T59 31T66 38T71 40H369V652Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2056.6,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2445.6,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3208.6,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(3597.6,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4097.6,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4486.6,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4931.2,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(5694.2,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(6083.2,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6583.2,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6972.2,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(7361.2,0) translate(0 -0.5)\"><path data-c=\"7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(7639.2,0)\"><path data-c=\"1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(8105.2,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(8494.2,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(9346.2,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container></li>\n</ol>\n<h4 id=\"分层方法\"><a href=\"#分层方法\" class=\"headerlink\" title=\"分层方法\"></a>分层方法</h4><p>上述第二条性质表明，如果给定样本信息<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>，处理机制是可忽略的，那么只需要给定一个一维的变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.742ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 2096 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(466,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(855,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1707,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>，处理机制也是可以忽略的。这样一来，我们得到了估计ACE的分层（stratify）方法：</p>\n<ul>\n<li>Step 1: 先拟合一个Logistic/Probit模型（自变量为<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>，因变量为<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.742ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 2096 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(466,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(855,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1707,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>），估计每个个体的倾向得分<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.742ex\" height=\"2.398ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -810 2096 1060\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mover\"><g data-mml-node=\"mi\"><path data-c=\"1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(288.6,16) translate(-250 0)\"><path data-c=\"5E\" d=\"M112 560L249 694L257 686Q387 562 387 560L361 531Q359 532 303 581L250 627L195 580Q182 569 169 557T148 538L140 532Q138 530 125 546L112 560Z\"></path></g></g></g><g data-mml-node=\"mo\" transform=\"translate(466,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(855,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1707,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container></li>\n<li>Step 2: 用估计的倾向得分<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.742ex\" height=\"2.398ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -810 2096 1060\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mover\"><g data-mml-node=\"mi\"><path data-c=\"1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(288.6,16) translate(-250 0)\"><path data-c=\"5E\" d=\"M112 560L249 694L257 686Q387 562 387 560L361 531Q359 532 303 581L250 627L195 580Q182 569 169 557T148 538L140 532Q138 530 125 546L112 560Z\"></path></g></g></g><g data-mml-node=\"mo\" transform=\"translate(466,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(855,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1707,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>分层（相当于把倾向得分当作个体信息），在每一层中估计平均因果作用，再加权平均即可。</li>\n</ul>\n<h4 id=\"加权方法\"><a href=\"#加权方法\" class=\"headerlink\" title=\"加权方法\"></a>加权方法</h4><p>此外，Hirano, Imbens and Ridder(2003)从经验似然的角度指出了另一种“加权方法”(weighting)，并证明了该方法是半参数有效的估计方法。该方法使用以下统计量作为<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.145ex\" height=\"1.67ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 2274 738\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(750,0)\"><path data-c=\"1D436\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1510,0)\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g></g></g></svg></mjx-container>的估计：</p>\n<script type=\"math/tex; mode=display\">\n\\hat{ACE}=\\frac{1}{n}\\sum_{i=1}^{n}\\left[\\frac{Y_i Z_i}{\\hat{e}(X_i)}-\\frac{Y_i(1-Z_i)}{1-\\hat{e}(X_i)}\\right]</script><h2 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h2><ol>\n<li><a href=\"https://www.math.pku.edu.cn/teachers/yaoy/math112230/lecture10_DingP_causal091101.pdf\">丁鹏.因果推断简介.PKU-MATH-00112230.2019</a></li>\n</ol>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: decodeURI(window.location.pathname),\n            distractionFreeMode: true // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","site":{"data":{}},"length":1257,"excerpt":"<p>观测性研究中对平均因果作用（<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.145ex\" height=\"1.67ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 2274 738\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(750,0)\"><path data-c=\"1D436\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1510,0)\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g></g></g></svg></mjx-container>）的估计方法：倾向得分（propensity score）、线性回归、Heckman Selection Model。本篇主要介绍倾向得分方法。线性回归和HSM可见文末附参考文献。<br>","more":"</p>\n<h2 id=\"观测性研究中对ACE的估计方法\"><a href=\"#观测性研究中对ACE的估计方法\" class=\"headerlink\" title=\"观测性研究中对ACE的估计方法\"></a>观测性研究中对ACE的估计方法</h2><h3 id=\"倾向得分\"><a href=\"#倾向得分\" class=\"headerlink\" title=\"倾向得分\"></a>倾向得分</h3><p>如上篇学习笔记所言，如果个体信息变量足够简单，<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>为二值变量（如性别），则可以按照<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.186ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.076ex\" height=\"1.731ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 2685.6 765\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1129.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(2185.6,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g></g></g></svg></mjx-container>和<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.186ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.076ex\" height=\"1.731ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 2685.6 765\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1129.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(2185.6,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g></g></g></svg></mjx-container>将样本分为两层，在每层分别估计<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.145ex\" height=\"1.67ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 2274 738\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(750,0)\"><path data-c=\"1D436\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1510,0)\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g></g></g></svg></mjx-container>后再做加权平均，即可得到全体<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.145ex\" height=\"1.67ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 2274 738\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(750,0)\"><path data-c=\"1D436\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1510,0)\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g></g></g></svg></mjx-container>的相合估计。但事实上，<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>的<strong>维数很高且可能有连续分量</strong>，因此很难将样本按<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>分层。即便能分层，也会面临类别不平衡的问题。为此，Rosenbaum and Rubin(1983) 提出了倾向得分的概念。</p>\n<p><strong>定义</strong>：倾向得分的定义为：</p>\n<script type=\"math/tex; mode=display\">\ne(X)=P(Z=1|X)</script><p>且满足</p>\n<ol>\n<li><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"11.951ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 5282.6 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1129.8,0)\"><path data-c=\"22A5\" d=\"M369 652Q369 653 370 655T372 658T375 662T379 665T384 667T391 668Q402 666 409 653V40H708Q723 32 723 20T708 0H71Q70 0 67 2T59 9T55 20T59 31T66 38T71 40H369V652Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2185.6,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2908.6,0) translate(0 -0.5)\"><path data-c=\"7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3186.6,0)\"><path data-c=\"1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3652.6,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4041.6,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4893.6,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container></li>\n<li>如果有强可忽略性假定（即<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"19.211ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 8491.2 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1000.8,0)\"><path data-c=\"22A5\" d=\"M369 652Q369 653 370 655T372 658T375 662T379 665T384 667T391 668Q402 666 409 653V40H708Q723 32 723 20T708 0H71Q70 0 67 2T59 9T55 20T59 31T66 38T71 40H369V652Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2056.6,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2445.6,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3208.6,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(3597.6,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4097.6,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4486.6,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4931.2,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(5694.2,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(6083.2,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6583.2,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6972.2,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(7361.2,0) translate(0 -0.5)\"><path data-c=\"7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(7639.2,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>）且<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"12.537ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 5541.2 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(466,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(855,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1707,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2373.8,0)\"><path data-c=\"2208\" d=\"M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3318.6,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(3707.6,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4207.6,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(4652.2,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(5152.2,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>，则<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"22.025ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 9735.2 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1000.8,0)\"><path data-c=\"22A5\" d=\"M369 652Q369 653 370 655T372 658T375 662T379 665T384 667T391 668Q402 666 409 653V40H708Q723 32 723 20T708 0H71Q70 0 67 2T59 9T55 20T59 31T66 38T71 40H369V652Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2056.6,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2445.6,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3208.6,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(3597.6,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4097.6,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4486.6,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4931.2,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(5694.2,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(6083.2,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6583.2,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6972.2,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(7361.2,0) translate(0 -0.5)\"><path data-c=\"7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(7639.2,0)\"><path data-c=\"1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(8105.2,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(8494.2,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(9346.2,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container></li>\n</ol>\n<h4 id=\"分层方法\"><a href=\"#分层方法\" class=\"headerlink\" title=\"分层方法\"></a>分层方法</h4><p>上述第二条性质表明，如果给定样本信息<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>，处理机制是可忽略的，那么只需要给定一个一维的变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.742ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 2096 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(466,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(855,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1707,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>，处理机制也是可以忽略的。这样一来，我们得到了估计ACE的分层（stratify）方法：</p>\n<ul>\n<li>Step 1: 先拟合一个Logistic/Probit模型（自变量为<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>，因变量为<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.742ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 2096 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(466,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(855,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1707,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>），估计每个个体的倾向得分<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.742ex\" height=\"2.398ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -810 2096 1060\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mover\"><g data-mml-node=\"mi\"><path data-c=\"1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(288.6,16) translate(-250 0)\"><path data-c=\"5E\" d=\"M112 560L249 694L257 686Q387 562 387 560L361 531Q359 532 303 581L250 627L195 580Q182 569 169 557T148 538L140 532Q138 530 125 546L112 560Z\"></path></g></g></g><g data-mml-node=\"mo\" transform=\"translate(466,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(855,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1707,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container></li>\n<li>Step 2: 用估计的倾向得分<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.742ex\" height=\"2.398ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -810 2096 1060\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mover\"><g data-mml-node=\"mi\"><path data-c=\"1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(288.6,16) translate(-250 0)\"><path data-c=\"5E\" d=\"M112 560L249 694L257 686Q387 562 387 560L361 531Q359 532 303 581L250 627L195 580Q182 569 169 557T148 538L140 532Q138 530 125 546L112 560Z\"></path></g></g></g><g data-mml-node=\"mo\" transform=\"translate(466,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(855,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1707,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>分层（相当于把倾向得分当作个体信息），在每一层中估计平均因果作用，再加权平均即可。</li>\n</ul>\n<h4 id=\"加权方法\"><a href=\"#加权方法\" class=\"headerlink\" title=\"加权方法\"></a>加权方法</h4><p>此外，Hirano, Imbens and Ridder(2003)从经验似然的角度指出了另一种“加权方法”(weighting)，并证明了该方法是半参数有效的估计方法。该方法使用以下统计量作为<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.145ex\" height=\"1.67ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 2274 738\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(750,0)\"><path data-c=\"1D436\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1510,0)\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g></g></g></svg></mjx-container>的估计：</p>\n<script type=\"math/tex; mode=display\">\n\\hat{ACE}=\\frac{1}{n}\\sum_{i=1}^{n}\\left[\\frac{Y_i Z_i}{\\hat{e}(X_i)}-\\frac{Y_i(1-Z_i)}{1-\\hat{e}(X_i)}\\right]</script><h2 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h2><ol>\n<li><a href=\"https://www.math.pku.edu.cn/teachers/yaoy/math112230/lecture10_DingP_causal091101.pdf\">丁鹏.因果推断简介.PKU-MATH-00112230.2019</a></li>\n</ol>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: decodeURI(window.location.pathname),\n            distractionFreeMode: true // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>"},{"title":"因果推断学习笔记.4","mathjax":true,"codeblock":{"enable":true,"show_result":true},"date":"2022-04-27T14:41:22.000Z","_content":"本篇主要记录 A Survey of Learning Causality with Data: Problems and Methods 的调研记录。这是一篇机器学习研究者视角下的因果推断研究综述。\n\n<!--more-->\n\n## 因果推断的两大研究方向\n1. 因果推理（causal inference）：研究指定变量对另一变量的影响程度=已知因果关系，求关系强度\n2. 因果发现（causal discovery）：研究哪些变量会对指定变量产生影响=不知因果关系，求因果关系\n\n## 用于因果推断的数据形式\n- 干预型数据：至少一个变量是通过（人为）干预设定的\n- **观测型数据**：任何变量都是依靠因果关系中的“因”确定的\n\n例如，为了调查顾客对餐厅满意度的影响因素，可以使用现有的点评记录数据（观测型数据）或通过进行某些处理/干预来收集不同条件下的点评记录数据（干预型）。一般观测型数据比干预型数据更加容易获得。\n\n### 用于因果推理的数据\n共有3种形式：\n1. 标准数据集：$(\\mathbf{X},\\mathbf{t},\\mathbf{y})$\n   - $\\mathbf{X}$: 样本特征矩阵\n   - $\\mathbf{t}$: 样本处理向量。第$i$个分量标记样本$i$被处理（值为1）或未处理（值为0）\n   - $\\mathbf{y}$: 样本结果向量。第$i$个分量标记样本处理/未处理后的状态\n2. 标记不同数据单元间相互连结关系的辅助信息（用矩阵$\\mathbf{A}$表示）\n   - 例如时间序列、时序点过程（由不同时间点的随机事件组成的随机过程）、属性网络\n   - 不直接显示目标变量间的因果关系，但不同数据单元间的联系间接蕴含了因果关系\n3. 包含未观测的干扰因素（unobserved confounders）的数据\n   - 辅助变量（instrumental variable）\n   - 中介变量（mediator）\n   - running variable （暂不理解，待补充）\n\n### 用于因果发现的数据\n1. 多元数据$\\mathbf{X}$+标准因果图$G$，其中$G$用于因果发现模型的评测\n   - $G$源于先验知识，有可能是不完善(incomplete)的。\n2. 多元时间序列数据+标准因果图$G$\n\n## 因果推断的基本框架\n- 结构因果模型（Structural Causal Model, SCM）\n- 潜在结果框架（Potential Outcome Framework）\n\n第一次读因果推断的综述论文，比较懵。\n\n接下来以阅读Judea Pearl的Causal Inference in Statistics: A Primer为主。\n\n## 参考文献\n1. [Guo, Ruocheng & Cheng, Lu & Li, Jundong & Hahn, Paul & Liu, Huan. (2018). A Survey of Learning Causality with Data: Problems and Methods.](https://rguo12.github.io/causal_survey.pdf)\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: document.title+document.date,\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","source":"_posts/2022-04-27-casual-inference-4.md","raw":"---\ntitle: 因果推断学习笔记.4\nmathjax: true\ncodeblock:\n  enable: true\n  show_result: true\ndate: 2022-04-27 22:41:22\ntags: 因果推断\ncategories: 学习笔记\n---\n本篇主要记录 A Survey of Learning Causality with Data: Problems and Methods 的调研记录。这是一篇机器学习研究者视角下的因果推断研究综述。\n\n<!--more-->\n\n## 因果推断的两大研究方向\n1. 因果推理（causal inference）：研究指定变量对另一变量的影响程度=已知因果关系，求关系强度\n2. 因果发现（causal discovery）：研究哪些变量会对指定变量产生影响=不知因果关系，求因果关系\n\n## 用于因果推断的数据形式\n- 干预型数据：至少一个变量是通过（人为）干预设定的\n- **观测型数据**：任何变量都是依靠因果关系中的“因”确定的\n\n例如，为了调查顾客对餐厅满意度的影响因素，可以使用现有的点评记录数据（观测型数据）或通过进行某些处理/干预来收集不同条件下的点评记录数据（干预型）。一般观测型数据比干预型数据更加容易获得。\n\n### 用于因果推理的数据\n共有3种形式：\n1. 标准数据集：$(\\mathbf{X},\\mathbf{t},\\mathbf{y})$\n   - $\\mathbf{X}$: 样本特征矩阵\n   - $\\mathbf{t}$: 样本处理向量。第$i$个分量标记样本$i$被处理（值为1）或未处理（值为0）\n   - $\\mathbf{y}$: 样本结果向量。第$i$个分量标记样本处理/未处理后的状态\n2. 标记不同数据单元间相互连结关系的辅助信息（用矩阵$\\mathbf{A}$表示）\n   - 例如时间序列、时序点过程（由不同时间点的随机事件组成的随机过程）、属性网络\n   - 不直接显示目标变量间的因果关系，但不同数据单元间的联系间接蕴含了因果关系\n3. 包含未观测的干扰因素（unobserved confounders）的数据\n   - 辅助变量（instrumental variable）\n   - 中介变量（mediator）\n   - running variable （暂不理解，待补充）\n\n### 用于因果发现的数据\n1. 多元数据$\\mathbf{X}$+标准因果图$G$，其中$G$用于因果发现模型的评测\n   - $G$源于先验知识，有可能是不完善(incomplete)的。\n2. 多元时间序列数据+标准因果图$G$\n\n## 因果推断的基本框架\n- 结构因果模型（Structural Causal Model, SCM）\n- 潜在结果框架（Potential Outcome Framework）\n\n第一次读因果推断的综述论文，比较懵。\n\n接下来以阅读Judea Pearl的Causal Inference in Statistics: A Primer为主。\n\n## 参考文献\n1. [Guo, Ruocheng & Cheng, Lu & Li, Jundong & Hahn, Paul & Liu, Huan. (2018). A Survey of Learning Causality with Data: Problems and Methods.](https://rguo12.github.io/causal_survey.pdf)\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: document.title+document.date,\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","slug":"2022-04-27-casual-inference-4","published":1,"updated":"2023-03-19T09:43:52.335Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cludw9n9u001d9wv9chrq4eos","content":"<p>本篇主要记录 A Survey of Learning Causality with Data: Problems and Methods 的调研记录。这是一篇机器学习研究者视角下的因果推断研究综述。</p>\n<span id=\"more\"></span>\n<h2 id=\"因果推断的两大研究方向\"><a href=\"#因果推断的两大研究方向\" class=\"headerlink\" title=\"因果推断的两大研究方向\"></a>因果推断的两大研究方向</h2><ol>\n<li>因果推理（causal inference）：研究指定变量对另一变量的影响程度=已知因果关系，求关系强度</li>\n<li>因果发现（causal discovery）：研究哪些变量会对指定变量产生影响=不知因果关系，求因果关系</li>\n</ol>\n<h2 id=\"用于因果推断的数据形式\"><a href=\"#用于因果推断的数据形式\" class=\"headerlink\" title=\"用于因果推断的数据形式\"></a>用于因果推断的数据形式</h2><ul>\n<li>干预型数据：至少一个变量是通过（人为）干预设定的</li>\n<li><strong>观测型数据</strong>：任何变量都是依靠因果关系中的“因”确定的</li>\n</ul>\n<p>例如，为了调查顾客对餐厅满意度的影响因素，可以使用现有的点评记录数据（观测型数据）或通过进行某些处理/干预来收集不同条件下的点评记录数据（干预型）。一般观测型数据比干预型数据更加容易获得。</p>\n<h3 id=\"用于因果推理的数据\"><a href=\"#用于因果推理的数据\" class=\"headerlink\" title=\"用于因果推理的数据\"></a>用于因果推理的数据</h3><p>共有3种形式：</p>\n<ol>\n<li>标准数据集：<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"8.123ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 3590.3 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\" transform=\"translate(389,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D417\" d=\"M327 0Q306 3 174 3Q52 3 43 0H33V62H98L162 63L360 333L157 624H48V686H59Q80 683 217 683Q368 683 395 686H408V624H335L393 540L452 458L573 623Q573 624 528 624H483V686H494Q515 683 646 683Q769 683 778 686H787V624H658L575 511Q493 398 493 397L508 376Q522 356 553 312T611 229L727 62H835V0H824Q803 3 667 3Q516 3 489 0H476V62H513L549 63L401 274L247 63Q247 62 292 62H338V0H327Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(1258,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\" transform=\"translate(1702.7,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D42D\" d=\"M272 49Q320 49 320 136V145V177H382V143Q382 106 380 99Q374 62 349 36T285 -2L272 -5H247Q173 -5 134 27Q109 46 102 74T94 160Q94 171 94 199T95 245V382H21V433H25Q58 433 90 456Q121 479 140 523T162 621V635H224V444H363V382H224V239V207V149Q224 98 228 81T249 55Q261 49 272 49Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(2149.7,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\" transform=\"translate(2594.3,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D432\" d=\"M84 -102Q84 -110 87 -119T102 -138T133 -149Q148 -148 162 -143T186 -131T206 -114T222 -95T234 -76T243 -59T249 -45T252 -37L269 0L96 382H26V444H34Q49 441 146 441Q252 441 270 444H279V382H255Q232 382 232 380L337 151L442 382H394V444H401Q413 441 495 441Q568 441 574 444H580V382H510L406 152Q298 -84 297 -87Q269 -139 225 -169T131 -200Q85 -200 54 -172T23 -100Q23 -64 44 -50T87 -35Q111 -35 130 -50T152 -92V-100H84V-102Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(3201.3,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container><ul>\n<li><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.966ex\" height=\"1.552ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -686 869 686\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"1D417\" d=\"M327 0Q306 3 174 3Q52 3 43 0H33V62H98L162 63L360 333L157 624H48V686H59Q80 683 217 683Q368 683 395 686H408V624H335L393 540L452 458L573 623Q573 624 528 624H483V686H494Q515 683 646 683Q769 683 778 686H787V624H658L575 511Q493 398 493 397L508 376Q522 356 553 312T611 229L727 62H835V0H824Q803 3 667 3Q516 3 489 0H476V62H513L549 63L401 274L247 63Q247 62 292 62H338V0H327Z\"></path></g></g></g></g></svg></mjx-container>: 样本特征矩阵</li>\n<li><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.011ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.011ex\" height=\"1.448ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -635 447 640\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"1D42D\" d=\"M272 49Q320 49 320 136V145V177H382V143Q382 106 380 99Q374 62 349 36T285 -2L272 -5H247Q173 -5 134 27Q109 46 102 74T94 160Q94 171 94 199T95 245V382H21V433H25Q58 433 90 456Q121 479 140 523T162 621V635H224V444H363V382H224V239V207V149Q224 98 228 81T249 55Q261 49 272 49Z\"></path></g></g></g></g></svg></mjx-container>: 样本处理向量。第<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"0.781ex\" height=\"1.52ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -661 345 672\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g></g></svg></mjx-container>个分量标记样本<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"0.781ex\" height=\"1.52ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -661 345 672\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g></g></svg></mjx-container>被处理（值为1）或未处理（值为0）</li>\n<li><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.452ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.373ex\" height=\"1.457ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -444 607 644\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"1D432\" d=\"M84 -102Q84 -110 87 -119T102 -138T133 -149Q148 -148 162 -143T186 -131T206 -114T222 -95T234 -76T243 -59T249 -45T252 -37L269 0L96 382H26V444H34Q49 441 146 441Q252 441 270 444H279V382H255Q232 382 232 380L337 151L442 382H394V444H401Q413 441 495 441Q568 441 574 444H580V382H510L406 152Q298 -84 297 -87Q269 -139 225 -169T131 -200Q85 -200 54 -172T23 -100Q23 -64 44 -50T87 -35Q111 -35 130 -50T152 -92V-100H84V-102Z\"></path></g></g></g></g></svg></mjx-container>: 样本结果向量。第<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"0.781ex\" height=\"1.52ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -661 345 672\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g></g></svg></mjx-container>个分量标记样本处理/未处理后的状态</li>\n</ul>\n</li>\n<li>标记不同数据单元间相互连结关系的辅助信息（用矩阵<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.966ex\" height=\"1.579ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -698 869 698\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"1D400\" d=\"M296 0Q278 3 164 3Q58 3 49 0H40V62H92Q144 62 144 64Q388 682 397 689Q403 698 434 698Q463 698 471 689Q475 686 538 530T663 218L724 64Q724 62 776 62H828V0H817Q796 3 658 3Q509 3 485 0H472V62H517Q561 62 561 63L517 175H262L240 120Q218 65 217 64Q217 62 261 62H306V0H296ZM390 237L492 238L440 365Q390 491 388 491Q287 239 287 237H390Z\"></path></g></g></g></g></svg></mjx-container>表示）<ul>\n<li>例如时间序列、时序点过程（由不同时间点的随机事件组成的随机过程）、属性网络</li>\n<li>不直接显示目标变量间的因果关系，但不同数据单元间的联系间接蕴含了因果关系</li>\n</ul>\n</li>\n<li>包含未观测的干扰因素（unobserved confounders）的数据<ul>\n<li>辅助变量（instrumental variable）</li>\n<li>中介变量（mediator）</li>\n<li>running variable （暂不理解，待补充）</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"用于因果发现的数据\"><a href=\"#用于因果发现的数据\" class=\"headerlink\" title=\"用于因果发现的数据\"></a>用于因果发现的数据</h3><ol>\n<li>多元数据<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.966ex\" height=\"1.552ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -686 869 686\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"1D417\" d=\"M327 0Q306 3 174 3Q52 3 43 0H33V62H98L162 63L360 333L157 624H48V686H59Q80 683 217 683Q368 683 395 686H408V624H335L393 540L452 458L573 623Q573 624 528 624H483V686H494Q515 683 646 683Q769 683 778 686H787V624H658L575 511Q493 398 493 397L508 376Q522 356 553 312T611 229L727 62H835V0H824Q803 3 667 3Q516 3 489 0H476V62H513L549 63L401 274L247 63Q247 62 292 62H338V0H327Z\"></path></g></g></g></g></svg></mjx-container>+标准因果图<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.778ex\" height=\"1.645ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -705 786 727\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D43A\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q492 659 471 656T418 643T357 615T294 567T236 496T189 394T158 260Q156 242 156 221Q156 173 170 136T206 79T256 45T308 28T353 24Q407 24 452 47T514 106Q517 114 529 161T541 214Q541 222 528 224T468 227H431Q425 233 425 235T427 254Q431 267 437 273H454Q494 271 594 271Q634 271 659 271T695 272T707 272Q721 272 721 263Q721 261 719 249Q714 230 709 228Q706 227 694 227Q674 227 653 224Q646 221 643 215T629 164Q620 131 614 108Q589 6 586 3Q584 1 581 1Q571 1 553 21T530 52Q530 53 528 52T522 47Q448 -22 322 -22Q201 -22 126 55T50 252Z\"></path></g></g></g></svg></mjx-container>，其中<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.778ex\" height=\"1.645ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -705 786 727\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D43A\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q492 659 471 656T418 643T357 615T294 567T236 496T189 394T158 260Q156 242 156 221Q156 173 170 136T206 79T256 45T308 28T353 24Q407 24 452 47T514 106Q517 114 529 161T541 214Q541 222 528 224T468 227H431Q425 233 425 235T427 254Q431 267 437 273H454Q494 271 594 271Q634 271 659 271T695 272T707 272Q721 272 721 263Q721 261 719 249Q714 230 709 228Q706 227 694 227Q674 227 653 224Q646 221 643 215T629 164Q620 131 614 108Q589 6 586 3Q584 1 581 1Q571 1 553 21T530 52Q530 53 528 52T522 47Q448 -22 322 -22Q201 -22 126 55T50 252Z\"></path></g></g></g></svg></mjx-container>用于因果发现模型的评测<ul>\n<li><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.778ex\" height=\"1.645ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -705 786 727\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D43A\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q492 659 471 656T418 643T357 615T294 567T236 496T189 394T158 260Q156 242 156 221Q156 173 170 136T206 79T256 45T308 28T353 24Q407 24 452 47T514 106Q517 114 529 161T541 214Q541 222 528 224T468 227H431Q425 233 425 235T427 254Q431 267 437 273H454Q494 271 594 271Q634 271 659 271T695 272T707 272Q721 272 721 263Q721 261 719 249Q714 230 709 228Q706 227 694 227Q674 227 653 224Q646 221 643 215T629 164Q620 131 614 108Q589 6 586 3Q584 1 581 1Q571 1 553 21T530 52Q530 53 528 52T522 47Q448 -22 322 -22Q201 -22 126 55T50 252Z\"></path></g></g></g></svg></mjx-container>源于先验知识，有可能是不完善(incomplete)的。</li>\n</ul>\n</li>\n<li>多元时间序列数据+标准因果图<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.778ex\" height=\"1.645ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -705 786 727\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D43A\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q492 659 471 656T418 643T357 615T294 567T236 496T189 394T158 260Q156 242 156 221Q156 173 170 136T206 79T256 45T308 28T353 24Q407 24 452 47T514 106Q517 114 529 161T541 214Q541 222 528 224T468 227H431Q425 233 425 235T427 254Q431 267 437 273H454Q494 271 594 271Q634 271 659 271T695 272T707 272Q721 272 721 263Q721 261 719 249Q714 230 709 228Q706 227 694 227Q674 227 653 224Q646 221 643 215T629 164Q620 131 614 108Q589 6 586 3Q584 1 581 1Q571 1 553 21T530 52Q530 53 528 52T522 47Q448 -22 322 -22Q201 -22 126 55T50 252Z\"></path></g></g></g></svg></mjx-container></li>\n</ol>\n<h2 id=\"因果推断的基本框架\"><a href=\"#因果推断的基本框架\" class=\"headerlink\" title=\"因果推断的基本框架\"></a>因果推断的基本框架</h2><ul>\n<li>结构因果模型（Structural Causal Model, SCM）</li>\n<li>潜在结果框架（Potential Outcome Framework）</li>\n</ul>\n<p>第一次读因果推断的综述论文，比较懵。</p>\n<p>接下来以阅读Judea Pearl的Causal Inference in Statistics: A Primer为主。</p>\n<h2 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h2><ol>\n<li><a href=\"https://rguo12.github.io/causal_survey.pdf\">Guo, Ruocheng &amp; Cheng, Lu &amp; Li, Jundong &amp; Hahn, Paul &amp; Liu, Huan. (2018). A Survey of Learning Causality with Data: Problems and Methods.</a></li>\n</ol>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: document.title+document.date,\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","site":{"data":{}},"length":1447,"excerpt":"<p>本篇主要记录 A Survey of Learning Causality with Data: Problems and Methods 的调研记录。这是一篇机器学习研究者视角下的因果推断研究综述。</p>","more":"<h2 id=\"因果推断的两大研究方向\"><a href=\"#因果推断的两大研究方向\" class=\"headerlink\" title=\"因果推断的两大研究方向\"></a>因果推断的两大研究方向</h2><ol>\n<li>因果推理（causal inference）：研究指定变量对另一变量的影响程度=已知因果关系，求关系强度</li>\n<li>因果发现（causal discovery）：研究哪些变量会对指定变量产生影响=不知因果关系，求因果关系</li>\n</ol>\n<h2 id=\"用于因果推断的数据形式\"><a href=\"#用于因果推断的数据形式\" class=\"headerlink\" title=\"用于因果推断的数据形式\"></a>用于因果推断的数据形式</h2><ul>\n<li>干预型数据：至少一个变量是通过（人为）干预设定的</li>\n<li><strong>观测型数据</strong>：任何变量都是依靠因果关系中的“因”确定的</li>\n</ul>\n<p>例如，为了调查顾客对餐厅满意度的影响因素，可以使用现有的点评记录数据（观测型数据）或通过进行某些处理/干预来收集不同条件下的点评记录数据（干预型）。一般观测型数据比干预型数据更加容易获得。</p>\n<h3 id=\"用于因果推理的数据\"><a href=\"#用于因果推理的数据\" class=\"headerlink\" title=\"用于因果推理的数据\"></a>用于因果推理的数据</h3><p>共有3种形式：</p>\n<ol>\n<li>标准数据集：<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"8.123ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 3590.3 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\" transform=\"translate(389,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D417\" d=\"M327 0Q306 3 174 3Q52 3 43 0H33V62H98L162 63L360 333L157 624H48V686H59Q80 683 217 683Q368 683 395 686H408V624H335L393 540L452 458L573 623Q573 624 528 624H483V686H494Q515 683 646 683Q769 683 778 686H787V624H658L575 511Q493 398 493 397L508 376Q522 356 553 312T611 229L727 62H835V0H824Q803 3 667 3Q516 3 489 0H476V62H513L549 63L401 274L247 63Q247 62 292 62H338V0H327Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(1258,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\" transform=\"translate(1702.7,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D42D\" d=\"M272 49Q320 49 320 136V145V177H382V143Q382 106 380 99Q374 62 349 36T285 -2L272 -5H247Q173 -5 134 27Q109 46 102 74T94 160Q94 171 94 199T95 245V382H21V433H25Q58 433 90 456Q121 479 140 523T162 621V635H224V444H363V382H224V239V207V149Q224 98 228 81T249 55Q261 49 272 49Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(2149.7,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\" transform=\"translate(2594.3,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D432\" d=\"M84 -102Q84 -110 87 -119T102 -138T133 -149Q148 -148 162 -143T186 -131T206 -114T222 -95T234 -76T243 -59T249 -45T252 -37L269 0L96 382H26V444H34Q49 441 146 441Q252 441 270 444H279V382H255Q232 382 232 380L337 151L442 382H394V444H401Q413 441 495 441Q568 441 574 444H580V382H510L406 152Q298 -84 297 -87Q269 -139 225 -169T131 -200Q85 -200 54 -172T23 -100Q23 -64 44 -50T87 -35Q111 -35 130 -50T152 -92V-100H84V-102Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(3201.3,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container><ul>\n<li><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.966ex\" height=\"1.552ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -686 869 686\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"1D417\" d=\"M327 0Q306 3 174 3Q52 3 43 0H33V62H98L162 63L360 333L157 624H48V686H59Q80 683 217 683Q368 683 395 686H408V624H335L393 540L452 458L573 623Q573 624 528 624H483V686H494Q515 683 646 683Q769 683 778 686H787V624H658L575 511Q493 398 493 397L508 376Q522 356 553 312T611 229L727 62H835V0H824Q803 3 667 3Q516 3 489 0H476V62H513L549 63L401 274L247 63Q247 62 292 62H338V0H327Z\"></path></g></g></g></g></svg></mjx-container>: 样本特征矩阵</li>\n<li><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.011ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.011ex\" height=\"1.448ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -635 447 640\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"1D42D\" d=\"M272 49Q320 49 320 136V145V177H382V143Q382 106 380 99Q374 62 349 36T285 -2L272 -5H247Q173 -5 134 27Q109 46 102 74T94 160Q94 171 94 199T95 245V382H21V433H25Q58 433 90 456Q121 479 140 523T162 621V635H224V444H363V382H224V239V207V149Q224 98 228 81T249 55Q261 49 272 49Z\"></path></g></g></g></g></svg></mjx-container>: 样本处理向量。第<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"0.781ex\" height=\"1.52ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -661 345 672\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g></g></svg></mjx-container>个分量标记样本<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"0.781ex\" height=\"1.52ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -661 345 672\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g></g></svg></mjx-container>被处理（值为1）或未处理（值为0）</li>\n<li><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.452ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.373ex\" height=\"1.457ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -444 607 644\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"1D432\" d=\"M84 -102Q84 -110 87 -119T102 -138T133 -149Q148 -148 162 -143T186 -131T206 -114T222 -95T234 -76T243 -59T249 -45T252 -37L269 0L96 382H26V444H34Q49 441 146 441Q252 441 270 444H279V382H255Q232 382 232 380L337 151L442 382H394V444H401Q413 441 495 441Q568 441 574 444H580V382H510L406 152Q298 -84 297 -87Q269 -139 225 -169T131 -200Q85 -200 54 -172T23 -100Q23 -64 44 -50T87 -35Q111 -35 130 -50T152 -92V-100H84V-102Z\"></path></g></g></g></g></svg></mjx-container>: 样本结果向量。第<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"0.781ex\" height=\"1.52ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -661 345 672\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g></g></svg></mjx-container>个分量标记样本处理/未处理后的状态</li>\n</ul>\n</li>\n<li>标记不同数据单元间相互连结关系的辅助信息（用矩阵<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.966ex\" height=\"1.579ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -698 869 698\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"1D400\" d=\"M296 0Q278 3 164 3Q58 3 49 0H40V62H92Q144 62 144 64Q388 682 397 689Q403 698 434 698Q463 698 471 689Q475 686 538 530T663 218L724 64Q724 62 776 62H828V0H817Q796 3 658 3Q509 3 485 0H472V62H517Q561 62 561 63L517 175H262L240 120Q218 65 217 64Q217 62 261 62H306V0H296ZM390 237L492 238L440 365Q390 491 388 491Q287 239 287 237H390Z\"></path></g></g></g></g></svg></mjx-container>表示）<ul>\n<li>例如时间序列、时序点过程（由不同时间点的随机事件组成的随机过程）、属性网络</li>\n<li>不直接显示目标变量间的因果关系，但不同数据单元间的联系间接蕴含了因果关系</li>\n</ul>\n</li>\n<li>包含未观测的干扰因素（unobserved confounders）的数据<ul>\n<li>辅助变量（instrumental variable）</li>\n<li>中介变量（mediator）</li>\n<li>running variable （暂不理解，待补充）</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"用于因果发现的数据\"><a href=\"#用于因果发现的数据\" class=\"headerlink\" title=\"用于因果发现的数据\"></a>用于因果发现的数据</h3><ol>\n<li>多元数据<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.966ex\" height=\"1.552ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -686 869 686\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"1D417\" d=\"M327 0Q306 3 174 3Q52 3 43 0H33V62H98L162 63L360 333L157 624H48V686H59Q80 683 217 683Q368 683 395 686H408V624H335L393 540L452 458L573 623Q573 624 528 624H483V686H494Q515 683 646 683Q769 683 778 686H787V624H658L575 511Q493 398 493 397L508 376Q522 356 553 312T611 229L727 62H835V0H824Q803 3 667 3Q516 3 489 0H476V62H513L549 63L401 274L247 63Q247 62 292 62H338V0H327Z\"></path></g></g></g></g></svg></mjx-container>+标准因果图<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.778ex\" height=\"1.645ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -705 786 727\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D43A\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q492 659 471 656T418 643T357 615T294 567T236 496T189 394T158 260Q156 242 156 221Q156 173 170 136T206 79T256 45T308 28T353 24Q407 24 452 47T514 106Q517 114 529 161T541 214Q541 222 528 224T468 227H431Q425 233 425 235T427 254Q431 267 437 273H454Q494 271 594 271Q634 271 659 271T695 272T707 272Q721 272 721 263Q721 261 719 249Q714 230 709 228Q706 227 694 227Q674 227 653 224Q646 221 643 215T629 164Q620 131 614 108Q589 6 586 3Q584 1 581 1Q571 1 553 21T530 52Q530 53 528 52T522 47Q448 -22 322 -22Q201 -22 126 55T50 252Z\"></path></g></g></g></svg></mjx-container>，其中<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.778ex\" height=\"1.645ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -705 786 727\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D43A\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q492 659 471 656T418 643T357 615T294 567T236 496T189 394T158 260Q156 242 156 221Q156 173 170 136T206 79T256 45T308 28T353 24Q407 24 452 47T514 106Q517 114 529 161T541 214Q541 222 528 224T468 227H431Q425 233 425 235T427 254Q431 267 437 273H454Q494 271 594 271Q634 271 659 271T695 272T707 272Q721 272 721 263Q721 261 719 249Q714 230 709 228Q706 227 694 227Q674 227 653 224Q646 221 643 215T629 164Q620 131 614 108Q589 6 586 3Q584 1 581 1Q571 1 553 21T530 52Q530 53 528 52T522 47Q448 -22 322 -22Q201 -22 126 55T50 252Z\"></path></g></g></g></svg></mjx-container>用于因果发现模型的评测<ul>\n<li><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.778ex\" height=\"1.645ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -705 786 727\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D43A\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q492 659 471 656T418 643T357 615T294 567T236 496T189 394T158 260Q156 242 156 221Q156 173 170 136T206 79T256 45T308 28T353 24Q407 24 452 47T514 106Q517 114 529 161T541 214Q541 222 528 224T468 227H431Q425 233 425 235T427 254Q431 267 437 273H454Q494 271 594 271Q634 271 659 271T695 272T707 272Q721 272 721 263Q721 261 719 249Q714 230 709 228Q706 227 694 227Q674 227 653 224Q646 221 643 215T629 164Q620 131 614 108Q589 6 586 3Q584 1 581 1Q571 1 553 21T530 52Q530 53 528 52T522 47Q448 -22 322 -22Q201 -22 126 55T50 252Z\"></path></g></g></g></svg></mjx-container>源于先验知识，有可能是不完善(incomplete)的。</li>\n</ul>\n</li>\n<li>多元时间序列数据+标准因果图<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.778ex\" height=\"1.645ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -705 786 727\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D43A\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q492 659 471 656T418 643T357 615T294 567T236 496T189 394T158 260Q156 242 156 221Q156 173 170 136T206 79T256 45T308 28T353 24Q407 24 452 47T514 106Q517 114 529 161T541 214Q541 222 528 224T468 227H431Q425 233 425 235T427 254Q431 267 437 273H454Q494 271 594 271Q634 271 659 271T695 272T707 272Q721 272 721 263Q721 261 719 249Q714 230 709 228Q706 227 694 227Q674 227 653 224Q646 221 643 215T629 164Q620 131 614 108Q589 6 586 3Q584 1 581 1Q571 1 553 21T530 52Q530 53 528 52T522 47Q448 -22 322 -22Q201 -22 126 55T50 252Z\"></path></g></g></g></svg></mjx-container></li>\n</ol>\n<h2 id=\"因果推断的基本框架\"><a href=\"#因果推断的基本框架\" class=\"headerlink\" title=\"因果推断的基本框架\"></a>因果推断的基本框架</h2><ul>\n<li>结构因果模型（Structural Causal Model, SCM）</li>\n<li>潜在结果框架（Potential Outcome Framework）</li>\n</ul>\n<p>第一次读因果推断的综述论文，比较懵。</p>\n<p>接下来以阅读Judea Pearl的Causal Inference in Statistics: A Primer为主。</p>\n<h2 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h2><ol>\n<li><a href=\"https://rguo12.github.io/causal_survey.pdf\">Guo, Ruocheng &amp; Cheng, Lu &amp; Li, Jundong &amp; Hahn, Paul &amp; Liu, Huan. (2018). A Survey of Learning Causality with Data: Problems and Methods.</a></li>\n</ol>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: document.title+document.date,\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>"},{"title":"因果推断学习笔记.5","mathjax":true,"codeblock":{"enable":true,"show_result":true},"date":"2022-05-05T09:00:57.000Z","_content":"上一篇的综述论文读的比较懵。为此，从这一篇开始记录Judea Pearl的Causal Inference in Statistics: A Primer的阅读笔记，将经典的因果推断理论基础打好后再考虑机器学习领域的因果推断。\n<!--more-->\n\n## 结构因果模型\n- 结构因果模型（Structural Causal Model, SCM）\n结构因果模型使用有向图（通常为有向无环图，Directed Acyclic Graph, DAG）来建模变量间的因果关系。\n\n### 基本概念\n- 外源变量（exogenous variables）$U$：处在模型之外（指模型中没有指向它的原因变量）的变量，无需建模其他变量指向它的因果。在因果有向图中，外源变量全部为根节点。外源变量一般充当内源变量的误差项（在模型建模的因果关系外影响内源变量取值的因素）。\n- 内源变量（endogenous variables）$V$：模型内（建模）的变量。每个内源变量被至少一个外源变量指向（存在有向边）。\n- 映射函数 $f$：从原因变量到结果变量的映射函数，解释因果关系如何产生作用。\n\n### 乘积分解规则\n- 乘积分解规则（rule of product decomposition）\n使用因果变量间的条件概率的乘积分解所有变量的联合概率：\n$$\nP(x_1,x_2,\\ldots,x_n)=\\prod_i P(x_i|pa_i)\n$$\n其中$pa_i$表示变量$X_i$的父节点变量的取值。例如，已知链状有向因果图$X\\to Y\\to Z$，则它们的取值的联合概率为：\n$$\nP(X=x,Y=y,Z=z) = P(X=x)P(Y=y|X=x)P(Z=z|Y=y)\n$$\n\n## 有向图模型\n- 结构因果模型中的有向图模型及其应用\n根据图的构型，将有向图模型分为三类：\n- Chains：$X\\to Y\\to Z$，链状连接\n- Forks：$X\\to Y, X\\to Z$，一个原因变量决定所有结果变量。其中那唯一的原因变量被称作common cause\n- Colliders：$X\\to Z, Y\\to Z$，所有原因变量决定一个结果变量（碰撞节点，collision node）\n\n```mermaid\ngraph TB\nUx1((Ux1))\nX1((X1))\nUy1((Uy1))\nY1((Y1))\nUz1((Uz1))\nZ1((Z1))\nUx2((Ux2))\nUy2((Uy2))\nX2((X2))\nY2((Y2))\nUz2((Uz2))\nZ2((Z2))\nUx3((Ux3))\nX3((X3))\nUy3((Uy3))\nY3((Y3))\nUz3((Uz3))\nZ3((Z3))\n\nX1-->Y1\nY1-->Z1\nX2-->Y2\nX2-->Z2\nX3-->Z3\nY3-->Z3\nUx1-->X1\nUy1-->Y1\nUz1-->Z1\nUx2-->X2\nUy2-->Y2\nUz2-->Z2\nUx3-->X3\nUy3-->Y3\nUz3-->Z3\n```\n\n上图从左到右每个连通图依次为Chains, Forks, Colliders。其中U*表示外源变量。\n\n### Chains & Forks & Colliders 中的三条独立性规则\n**R1.** Chains中的条件独立性：给定两个变量$X$和$Y$，称它们在给定变量$Z$时是独立的，如果$X$和$Y$之间只有一条单向路径，并且该路径被$Z$截断。\n\n*解释：如果$X\\to...\\to Z\\to...\\to Y$且$X$到$Y$的路径只有这一条，那么他俩就是关于$Z$条件独立的。*\n\n**R2.** Forks中的条件独立性：如果变量$X$是变量$Y$和变量$Z$的唯一原因变量，那么变量$Y$和$Z$是关于$X$条件独立的。\n\n*理解：当$X$固定时，唯一影响$Y$和$Z$的取值的只有它们各自的外源变量$U_y$和$U_z$。由于$U_y$和$U_z$是独立的（外源变量不依赖于任何其他变量），因此$Y$和$Z$是条件独立的。*\n\n**R3.** Colliders中的条件独立性：如果变量$Z$是$X$和$Y$的碰撞节点，并且$X$和$Y$之间只有这一条路径（注意，不仅是有向路径），那么$X$和$Y$在无条件时是独立的，但在给定$Z$或$Z$的任意后继节点时是条件不独立的。\n\n*理解：R3是对因果关系的研究中极其重要的一条规则！它可以理解为，如果结果变量$Z$是固定的，那么当$X$的值改变时，需要改变$Y$的值，从而补偿$X$对$Z$造成的影响。例如一次考试包含理论、实验两部分。那么“总分”就是“理论分”和“实验分”的碰撞节点。如果总分固定，且某人的理论分较高，那么它的实验分必须较低从而使总分固定，反之亦然。那么理论分和实验分就是关于总分条件不独立的。*\n\n## 有向分离&有向连接(d-*)\n- 有向分离：d-seperation（‘d’的意思是directional）用于识别节点对处于的状态（有向分离态或有向连接态）的过程。\n- 有向连接态：d-connected，表示存在连接两个节点的路径。有向连接态的节点对是不独立（一个依赖另一个）的。\n- 有向分离态：d-seperated，表示不存在连接两个节点的路径。有向分离态的节点对一定是独立的。\n\n判断一对节点是否是有向分离态的，其方法在于判断连接它们的所有路径（注意，不是有向路径）是否都是**阻断**的（blocked）。如果所有路径都是阻断的，那么此二者就是有向分离态的，否则它们是有向连接态的。\n\n- 如果“依赖性”不能从某个节点沿着经过节点$Z$（对$Z$不取条件）的路径传递到另一个节点，那么称$Z$阻断这条路径。\n- 被阻断的对象是连接两个节点的一条路径，而不是两个节点。\n- 如果节点$Z$是节点$X$和$Y$的一条路径上的碰撞节点（collider），那么$Z$必然是能够阻断这条路径的。\n\n除了碰撞节点，还有满足以下条件的节点能够阻断一条路径：\n- 如果我们对一个**节点集**$K$取条件（即固定节点集中的变量的值），且节点$Z$满足：\n  - $Z$是碰撞节点且$Z\\notin K$，且$Z$的任意后继节点都不属于$K$\n  - $Z\\in K$且$Z$是一个chain或fork的中间节点\n\n满足上述任意一种条件的节点$Z$都能阻断条件中提及的路径。\n\n基于“阻断”的定义，我们可以给出有向分离的定义：\n\n---\n**定义（有向分离，d-separation）**：一条路径$p$能够被一个节点集$Z$阻断，当且仅当：\n1. $p$包含chain $A\\to B\\to C$或fork $A\\leftarrow B\\to C$使得中间节点$B\\in Z$（即$B$取条件），或\n2. $p$包含collider $A\\to B\\leftarrow C$使得碰撞节点$B\\notin Z$，且$B$的任意后继节点都不属于$Z$。\n\n若上述节点集$Z$阻断节点$X$和$Y$之间的所有路径，那么称$X$和$Y$是关于$Z$有向分离的（d-separated, conditional on $Z$），因此是关于$Z$条件独立的。\n\n---\n\n## 参考文献\n1. Judea Pearl, Madlyn Glymour, Nicholas P.Jewell.Causal Inference in Statistics: A Primer.2016.WILEY\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: document.title+document.date,\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","source":"_posts/2022-05-05-causal-inference-5.md","raw":"---\ntitle: 因果推断学习笔记.5\nmathjax: true\ncodeblock:\n  enable: true\n  show_result: true\ndate: 2022-05-05 17:00:57\ntags: 因果推断\ncategories: 学习笔记\n---\n上一篇的综述论文读的比较懵。为此，从这一篇开始记录Judea Pearl的Causal Inference in Statistics: A Primer的阅读笔记，将经典的因果推断理论基础打好后再考虑机器学习领域的因果推断。\n<!--more-->\n\n## 结构因果模型\n- 结构因果模型（Structural Causal Model, SCM）\n结构因果模型使用有向图（通常为有向无环图，Directed Acyclic Graph, DAG）来建模变量间的因果关系。\n\n### 基本概念\n- 外源变量（exogenous variables）$U$：处在模型之外（指模型中没有指向它的原因变量）的变量，无需建模其他变量指向它的因果。在因果有向图中，外源变量全部为根节点。外源变量一般充当内源变量的误差项（在模型建模的因果关系外影响内源变量取值的因素）。\n- 内源变量（endogenous variables）$V$：模型内（建模）的变量。每个内源变量被至少一个外源变量指向（存在有向边）。\n- 映射函数 $f$：从原因变量到结果变量的映射函数，解释因果关系如何产生作用。\n\n### 乘积分解规则\n- 乘积分解规则（rule of product decomposition）\n使用因果变量间的条件概率的乘积分解所有变量的联合概率：\n$$\nP(x_1,x_2,\\ldots,x_n)=\\prod_i P(x_i|pa_i)\n$$\n其中$pa_i$表示变量$X_i$的父节点变量的取值。例如，已知链状有向因果图$X\\to Y\\to Z$，则它们的取值的联合概率为：\n$$\nP(X=x,Y=y,Z=z) = P(X=x)P(Y=y|X=x)P(Z=z|Y=y)\n$$\n\n## 有向图模型\n- 结构因果模型中的有向图模型及其应用\n根据图的构型，将有向图模型分为三类：\n- Chains：$X\\to Y\\to Z$，链状连接\n- Forks：$X\\to Y, X\\to Z$，一个原因变量决定所有结果变量。其中那唯一的原因变量被称作common cause\n- Colliders：$X\\to Z, Y\\to Z$，所有原因变量决定一个结果变量（碰撞节点，collision node）\n\n```mermaid\ngraph TB\nUx1((Ux1))\nX1((X1))\nUy1((Uy1))\nY1((Y1))\nUz1((Uz1))\nZ1((Z1))\nUx2((Ux2))\nUy2((Uy2))\nX2((X2))\nY2((Y2))\nUz2((Uz2))\nZ2((Z2))\nUx3((Ux3))\nX3((X3))\nUy3((Uy3))\nY3((Y3))\nUz3((Uz3))\nZ3((Z3))\n\nX1-->Y1\nY1-->Z1\nX2-->Y2\nX2-->Z2\nX3-->Z3\nY3-->Z3\nUx1-->X1\nUy1-->Y1\nUz1-->Z1\nUx2-->X2\nUy2-->Y2\nUz2-->Z2\nUx3-->X3\nUy3-->Y3\nUz3-->Z3\n```\n\n上图从左到右每个连通图依次为Chains, Forks, Colliders。其中U*表示外源变量。\n\n### Chains & Forks & Colliders 中的三条独立性规则\n**R1.** Chains中的条件独立性：给定两个变量$X$和$Y$，称它们在给定变量$Z$时是独立的，如果$X$和$Y$之间只有一条单向路径，并且该路径被$Z$截断。\n\n*解释：如果$X\\to...\\to Z\\to...\\to Y$且$X$到$Y$的路径只有这一条，那么他俩就是关于$Z$条件独立的。*\n\n**R2.** Forks中的条件独立性：如果变量$X$是变量$Y$和变量$Z$的唯一原因变量，那么变量$Y$和$Z$是关于$X$条件独立的。\n\n*理解：当$X$固定时，唯一影响$Y$和$Z$的取值的只有它们各自的外源变量$U_y$和$U_z$。由于$U_y$和$U_z$是独立的（外源变量不依赖于任何其他变量），因此$Y$和$Z$是条件独立的。*\n\n**R3.** Colliders中的条件独立性：如果变量$Z$是$X$和$Y$的碰撞节点，并且$X$和$Y$之间只有这一条路径（注意，不仅是有向路径），那么$X$和$Y$在无条件时是独立的，但在给定$Z$或$Z$的任意后继节点时是条件不独立的。\n\n*理解：R3是对因果关系的研究中极其重要的一条规则！它可以理解为，如果结果变量$Z$是固定的，那么当$X$的值改变时，需要改变$Y$的值，从而补偿$X$对$Z$造成的影响。例如一次考试包含理论、实验两部分。那么“总分”就是“理论分”和“实验分”的碰撞节点。如果总分固定，且某人的理论分较高，那么它的实验分必须较低从而使总分固定，反之亦然。那么理论分和实验分就是关于总分条件不独立的。*\n\n## 有向分离&有向连接(d-*)\n- 有向分离：d-seperation（‘d’的意思是directional）用于识别节点对处于的状态（有向分离态或有向连接态）的过程。\n- 有向连接态：d-connected，表示存在连接两个节点的路径。有向连接态的节点对是不独立（一个依赖另一个）的。\n- 有向分离态：d-seperated，表示不存在连接两个节点的路径。有向分离态的节点对一定是独立的。\n\n判断一对节点是否是有向分离态的，其方法在于判断连接它们的所有路径（注意，不是有向路径）是否都是**阻断**的（blocked）。如果所有路径都是阻断的，那么此二者就是有向分离态的，否则它们是有向连接态的。\n\n- 如果“依赖性”不能从某个节点沿着经过节点$Z$（对$Z$不取条件）的路径传递到另一个节点，那么称$Z$阻断这条路径。\n- 被阻断的对象是连接两个节点的一条路径，而不是两个节点。\n- 如果节点$Z$是节点$X$和$Y$的一条路径上的碰撞节点（collider），那么$Z$必然是能够阻断这条路径的。\n\n除了碰撞节点，还有满足以下条件的节点能够阻断一条路径：\n- 如果我们对一个**节点集**$K$取条件（即固定节点集中的变量的值），且节点$Z$满足：\n  - $Z$是碰撞节点且$Z\\notin K$，且$Z$的任意后继节点都不属于$K$\n  - $Z\\in K$且$Z$是一个chain或fork的中间节点\n\n满足上述任意一种条件的节点$Z$都能阻断条件中提及的路径。\n\n基于“阻断”的定义，我们可以给出有向分离的定义：\n\n---\n**定义（有向分离，d-separation）**：一条路径$p$能够被一个节点集$Z$阻断，当且仅当：\n1. $p$包含chain $A\\to B\\to C$或fork $A\\leftarrow B\\to C$使得中间节点$B\\in Z$（即$B$取条件），或\n2. $p$包含collider $A\\to B\\leftarrow C$使得碰撞节点$B\\notin Z$，且$B$的任意后继节点都不属于$Z$。\n\n若上述节点集$Z$阻断节点$X$和$Y$之间的所有路径，那么称$X$和$Y$是关于$Z$有向分离的（d-separated, conditional on $Z$），因此是关于$Z$条件独立的。\n\n---\n\n## 参考文献\n1. Judea Pearl, Madlyn Glymour, Nicholas P.Jewell.Causal Inference in Statistics: A Primer.2016.WILEY\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: document.title+document.date,\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","slug":"2022-05-05-causal-inference-5","published":1,"updated":"2022-05-06T06:44:32.462Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cludw9n9v001i9wv9hoxs7sl4","content":"<p>上一篇的综述论文读的比较懵。为此，从这一篇开始记录Judea Pearl的Causal Inference in Statistics: A Primer的阅读笔记，将经典的因果推断理论基础打好后再考虑机器学习领域的因果推断。<br><span id=\"more\"></span></p>\n<h2 id=\"结构因果模型\"><a href=\"#结构因果模型\" class=\"headerlink\" title=\"结构因果模型\"></a>结构因果模型</h2><ul>\n<li>结构因果模型（Structural Causal Model, SCM）<br>结构因果模型使用有向图（通常为有向无环图，Directed Acyclic Graph, DAG）来建模变量间的因果关系。</li>\n</ul>\n<h3 id=\"基本概念\"><a href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"></a>基本概念</h3><ul>\n<li>外源变量（exogenous variables）<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.735ex\" height=\"1.595ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 767 705\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D448\" d=\"M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z\"></path></g></g></g></svg></mjx-container>：处在模型之外（指模型中没有指向它的原因变量）的变量，无需建模其他变量指向它的因果。在因果有向图中，外源变量全部为根节点。外源变量一般充当内源变量的误差项（在模型建模的因果关系外影响内源变量取值的因素）。</li>\n<li>内源变量（endogenous variables）<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.74ex\" height=\"1.595ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 769 705\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D449\" d=\"M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z\"></path></g></g></g></svg></mjx-container>：模型内（建模）的变量。每个内源变量被至少一个外源变量指向（存在有向边）。</li>\n<li>映射函数 <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.464ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.244ex\" height=\"2.059ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -705 550 910\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D453\" d=\"M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z\"></path></g></g></g></svg></mjx-container>：从原因变量到结果变量的映射函数，解释因果关系如何产生作用。</li>\n</ul>\n<h3 id=\"乘积分解规则\"><a href=\"#乘积分解规则\" class=\"headerlink\" title=\"乘积分解规则\"></a>乘积分解规则</h3><ul>\n<li>乘积分解规则（rule of product decomposition）<br>使用因果变量间的条件概率的乘积分解所有变量的联合概率：<script type=\"math/tex; mode=display\">\nP(x_1,x_2,\\ldots,x_n)=\\prod_i P(x_i|pa_i)</script>其中<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.439ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"3.075ex\" height=\"1.439ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 1359 636\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(503,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(562,-150) scale(0.707)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g></g></g></svg></mjx-container>表示变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.357ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.613ex\" height=\"1.902ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 1155 840.8\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(861,-150) scale(0.707)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g></g></g></svg></mjx-container>的父节点变量的取值。例如，已知链状有向因果图<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"12.328ex\" height=\"1.57ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 5449.1 694\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1129.8,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2407.6,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3448.3,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4726.1,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>，则它们的取值的联合概率为：<script type=\"math/tex; mode=display\">\nP(X=x,Y=y,Z=z) = P(X=x)P(Y=y|X=x)P(Z=z|Y=y)</script></li>\n</ul>\n<h2 id=\"有向图模型\"><a href=\"#有向图模型\" class=\"headerlink\" title=\"有向图模型\"></a>有向图模型</h2><ul>\n<li>结构因果模型中的有向图模型及其应用<br>根据图的构型，将有向图模型分为三类：</li>\n<li>Chains：<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"12.328ex\" height=\"1.57ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 5449.1 694\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1129.8,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2407.6,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3448.3,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4726.1,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>，链状连接</li>\n<li>Forks：<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.439ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"15.262ex\" height=\"1.984ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 6745.8 877\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1129.8,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2407.6,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3170.6,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3615.2,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4745,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(6022.8,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>，一个原因变量决定所有结果变量。其中那唯一的原因变量被称作common cause</li>\n<li>Colliders：<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.439ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"14.97ex\" height=\"1.984ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 6616.8 877\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1129.8,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2407.6,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3130.6,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3575.2,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4616,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(5893.8,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>，所有原因变量决定一个结果变量（碰撞节点，collision node）</li>\n</ul>\n<pre class=\"mermaid\">graph TB\nUx1((Ux1))\nX1((X1))\nUy1((Uy1))\nY1((Y1))\nUz1((Uz1))\nZ1((Z1))\nUx2((Ux2))\nUy2((Uy2))\nX2((X2))\nY2((Y2))\nUz2((Uz2))\nZ2((Z2))\nUx3((Ux3))\nX3((X3))\nUy3((Uy3))\nY3((Y3))\nUz3((Uz3))\nZ3((Z3))\n\nX1--&gt;Y1\nY1--&gt;Z1\nX2--&gt;Y2\nX2--&gt;Z2\nX3--&gt;Z3\nY3--&gt;Z3\nUx1--&gt;X1\nUy1--&gt;Y1\nUz1--&gt;Z1\nUx2--&gt;X2\nUy2--&gt;Y2\nUz2--&gt;Z2\nUx3--&gt;X3\nUy3--&gt;Y3\nUz3--&gt;Z3</pre>\n\n<p>上图从左到右每个连通图依次为Chains, Forks, Colliders。其中U*表示外源变量。</p>\n<h3 id=\"Chains-amp-Forks-amp-Colliders-中的三条独立性规则\"><a href=\"#Chains-amp-Forks-amp-Colliders-中的三条独立性规则\" class=\"headerlink\" title=\"Chains & Forks & Colliders 中的三条独立性规则\"></a>Chains &amp; Forks &amp; Colliders 中的三条独立性规则</h3><p><strong>R1.</strong> Chains中的条件独立性：给定两个变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>和<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>，称它们在给定变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>时是独立的，如果<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>和<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>之间只有一条单向路径，并且该路径被<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>截断。</p>\n<p><em>解释：如果<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24.67ex\" height=\"1.57ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 10904.2 694\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1129.8,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2407.6,0)\"><path data-c=\"2026\" d=\"M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60ZM525 60Q525 84 542 102T585 120Q609 120 627 104T646 61Q646 36 629 18T586 0T543 17T525 60ZM972 60Q972 84 989 102T1032 120Q1056 120 1074 104T1093 61Q1093 36 1076 18T1033 0T990 17T972 60Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3857.3,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(5135.1,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6135.9,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(7413.7,0)\"><path data-c=\"2026\" d=\"M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60ZM525 60Q525 84 542 102T585 120Q609 120 627 104T646 61Q646 36 629 18T586 0T543 17T525 60ZM972 60Q972 84 989 102T1032 120Q1056 120 1074 104T1093 61Q1093 36 1076 18T1033 0T990 17T972 60Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(8863.4,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(10141.2,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>且<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>到<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>的路径只有这一条，那么他俩就是关于<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>条件独立的。</em></p>\n<p><strong>R2.</strong> Forks中的条件独立性：如果变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>是变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>和变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>的唯一原因变量，那么变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>和<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>是关于<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>条件独立的。</p>\n<p><em>理解：当<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>固定时，唯一影响<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>和<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>的取值的只有它们各自的外源变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.667ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.517ex\" height=\"2.213ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 1112.5 978\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D448\" d=\"M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(716,-150) scale(0.707)\"><path data-c=\"1D466\" d=\"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g></g></g></g></svg></mjx-container>和<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.357ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.477ex\" height=\"1.902ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 1094.8 840.8\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D448\" d=\"M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(716,-150) scale(0.707)\"><path data-c=\"1D467\" d=\"M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z\"></path></g></g></g></g></svg></mjx-container>。由于<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.667ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.517ex\" height=\"2.213ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 1112.5 978\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D448\" d=\"M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(716,-150) scale(0.707)\"><path data-c=\"1D466\" d=\"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g></g></g></g></svg></mjx-container>和<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.357ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.477ex\" height=\"1.902ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 1094.8 840.8\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D448\" d=\"M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(716,-150) scale(0.707)\"><path data-c=\"1D467\" d=\"M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z\"></path></g></g></g></g></svg></mjx-container>是独立的（外源变量不依赖于任何其他变量），因此<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>和<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>是条件独立的。</em></p>\n<p><strong>R3.</strong> Colliders中的条件独立性：如果变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>是<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>和<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>的碰撞节点，并且<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>和<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>之间只有这一条路径（注意，不仅是有向路径），那么<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>和<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>在无条件时是独立的，但在给定<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>或<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>的任意后继节点时是条件不独立的。</p>\n<p><em>理解：R3是对因果关系的研究中极其重要的一条规则！它可以理解为，如果结果变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>是固定的，那么当<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>的值改变时，需要改变<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>的值，从而补偿<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>对<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>造成的影响。例如一次考试包含理论、实验两部分。那么“总分”就是“理论分”和“实验分”的碰撞节点。如果总分固定，且某人的理论分较高，那么它的实验分必须较低从而使总分固定，反之亦然。那么理论分和实验分就是关于总分条件不独立的。</em></p>\n<h2 id=\"有向分离-amp-有向连接-d\"><a href=\"#有向分离-amp-有向连接-d\" class=\"headerlink\" title=\"有向分离&有向连接(d-*)\"></a>有向分离&amp;有向连接(d-*)</h2><ul>\n<li>有向分离：d-seperation（‘d’的意思是directional）用于识别节点对处于的状态（有向分离态或有向连接态）的过程。</li>\n<li>有向连接态：d-connected，表示存在连接两个节点的路径。有向连接态的节点对是不独立（一个依赖另一个）的。</li>\n<li>有向分离态：d-seperated，表示不存在连接两个节点的路径。有向分离态的节点对一定是独立的。</li>\n</ul>\n<p>判断一对节点是否是有向分离态的，其方法在于判断连接它们的所有路径（注意，不是有向路径）是否都是<strong>阻断</strong>的（blocked）。如果所有路径都是阻断的，那么此二者就是有向分离态的，否则它们是有向连接态的。</p>\n<ul>\n<li>如果“依赖性”不能从某个节点沿着经过节点<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>（对<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>不取条件）的路径传递到另一个节点，那么称<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>阻断这条路径。</li>\n<li>被阻断的对象是连接两个节点的一条路径，而不是两个节点。</li>\n<li>如果节点<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>是节点<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>和<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>的一条路径上的碰撞节点（collider），那么<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>必然是能够阻断这条路径的。</li>\n</ul>\n<p>除了碰撞节点，还有满足以下条件的节点能够阻断一条路径：</p>\n<ul>\n<li>如果我们对一个<strong>节点集</strong><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.011ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 889 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D43E\" d=\"M285 628Q285 635 228 637Q205 637 198 638T191 647Q191 649 193 661Q199 681 203 682Q205 683 214 683H219Q260 681 355 681Q389 681 418 681T463 682T483 682Q500 682 500 674Q500 669 497 660Q496 658 496 654T495 648T493 644T490 641T486 639T479 638T470 637T456 637Q416 636 405 634T387 623L306 305Q307 305 490 449T678 597Q692 611 692 620Q692 635 667 637Q651 637 651 648Q651 650 654 662T659 677Q662 682 676 682Q680 682 711 681T791 680Q814 680 839 681T869 682Q889 682 889 672Q889 650 881 642Q878 637 862 637Q787 632 726 586Q710 576 656 534T556 455L509 418L518 396Q527 374 546 329T581 244Q656 67 661 61Q663 59 666 57Q680 47 717 46H738Q744 38 744 37T741 19Q737 6 731 0H720Q680 3 625 3Q503 3 488 0H478Q472 6 472 9T474 27Q478 40 480 43T491 46H494Q544 46 544 71Q544 75 517 141T485 216L427 354L359 301L291 248L268 155Q245 63 245 58Q245 51 253 49T303 46H334Q340 37 340 35Q340 19 333 5Q328 0 317 0Q314 0 280 1T180 2Q118 2 85 2T49 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Z\"></path></g></g></g></svg></mjx-container>取条件（即固定节点集中的变量的值），且节点<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>满足：<ul>\n<li><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>是碰撞节点且<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.486ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.413ex\" height=\"2.106ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 2834.6 931\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1000.8,0)\"><path data-c=\"2209\" d=\"M196 25Q84 109 84 250Q84 372 166 450T360 539Q361 539 375 539T413 540T460 540L547 707Q550 716 563 716Q570 716 575 712T581 703T583 696T505 540H568Q583 532 583 520Q583 511 570 501L484 500L366 270H568Q583 262 583 250T568 230H346L247 38Q284 16 328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 447 -40T419 -41Q304 -41 228 3Q117 -211 115 -212Q111 -215 104 -215T92 -212T86 -204T84 -197Q84 -190 89 -183L196 25ZM214 61L301 230H124V228Q124 196 147 147T214 61ZM321 270L440 500Q353 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H321Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1945.6,0)\"><path data-c=\"1D43E\" d=\"M285 628Q285 635 228 637Q205 637 198 638T191 647Q191 649 193 661Q199 681 203 682Q205 683 214 683H219Q260 681 355 681Q389 681 418 681T463 682T483 682Q500 682 500 674Q500 669 497 660Q496 658 496 654T495 648T493 644T490 641T486 639T479 638T470 637T456 637Q416 636 405 634T387 623L306 305Q307 305 490 449T678 597Q692 611 692 620Q692 635 667 637Q651 637 651 648Q651 650 654 662T659 677Q662 682 676 682Q680 682 711 681T791 680Q814 680 839 681T869 682Q889 682 889 672Q889 650 881 642Q878 637 862 637Q787 632 726 586Q710 576 656 534T556 455L509 418L518 396Q527 374 546 329T581 244Q656 67 661 61Q663 59 666 57Q680 47 717 46H738Q744 38 744 37T741 19Q737 6 731 0H720Q680 3 625 3Q503 3 488 0H478Q472 6 472 9T474 27Q478 40 480 43T491 46H494Q544 46 544 71Q544 75 517 141T485 216L427 354L359 301L291 248L268 155Q245 63 245 58Q245 51 253 49T303 46H334Q340 37 340 35Q340 19 333 5Q328 0 317 0Q314 0 280 1T180 2Q118 2 85 2T49 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Z\"></path></g></g></g></svg></mjx-container>，且<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>的任意后继节点都不属于<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.011ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 889 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D43E\" d=\"M285 628Q285 635 228 637Q205 637 198 638T191 647Q191 649 193 661Q199 681 203 682Q205 683 214 683H219Q260 681 355 681Q389 681 418 681T463 682T483 682Q500 682 500 674Q500 669 497 660Q496 658 496 654T495 648T493 644T490 641T486 639T479 638T470 637T456 637Q416 636 405 634T387 623L306 305Q307 305 490 449T678 597Q692 611 692 620Q692 635 667 637Q651 637 651 648Q651 650 654 662T659 677Q662 682 676 682Q680 682 711 681T791 680Q814 680 839 681T869 682Q889 682 889 672Q889 650 881 642Q878 637 862 637Q787 632 726 586Q710 576 656 534T556 455L509 418L518 396Q527 374 546 329T581 244Q656 67 661 61Q663 59 666 57Q680 47 717 46H738Q744 38 744 37T741 19Q737 6 731 0H720Q680 3 625 3Q503 3 488 0H478Q472 6 472 9T474 27Q478 40 480 43T491 46H494Q544 46 544 71Q544 75 517 141T485 216L427 354L359 301L291 248L268 155Q245 63 245 58Q245 51 253 49T303 46H334Q340 37 340 35Q340 19 333 5Q328 0 317 0Q314 0 280 1T180 2Q118 2 85 2T49 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Z\"></path></g></g></g></svg></mjx-container></li>\n<li><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.09ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.413ex\" height=\"1.636ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 2834.6 723\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1000.8,0)\"><path data-c=\"2208\" d=\"M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1945.6,0)\"><path data-c=\"1D43E\" d=\"M285 628Q285 635 228 637Q205 637 198 638T191 647Q191 649 193 661Q199 681 203 682Q205 683 214 683H219Q260 681 355 681Q389 681 418 681T463 682T483 682Q500 682 500 674Q500 669 497 660Q496 658 496 654T495 648T493 644T490 641T486 639T479 638T470 637T456 637Q416 636 405 634T387 623L306 305Q307 305 490 449T678 597Q692 611 692 620Q692 635 667 637Q651 637 651 648Q651 650 654 662T659 677Q662 682 676 682Q680 682 711 681T791 680Q814 680 839 681T869 682Q889 682 889 672Q889 650 881 642Q878 637 862 637Q787 632 726 586Q710 576 656 534T556 455L509 418L518 396Q527 374 546 329T581 244Q656 67 661 61Q663 59 666 57Q680 47 717 46H738Q744 38 744 37T741 19Q737 6 731 0H720Q680 3 625 3Q503 3 488 0H478Q472 6 472 9T474 27Q478 40 480 43T491 46H494Q544 46 544 71Q544 75 517 141T485 216L427 354L359 301L291 248L268 155Q245 63 245 58Q245 51 253 49T303 46H334Q340 37 340 35Q340 19 333 5Q328 0 317 0Q314 0 280 1T180 2Q118 2 85 2T49 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Z\"></path></g></g></g></svg></mjx-container>且<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>是一个chain或fork的中间节点</li>\n</ul>\n</li>\n</ul>\n<p>满足上述任意一种条件的节点<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>都能阻断条件中提及的路径。</p>\n<p>基于“阻断”的定义，我们可以给出有向分离的定义：</p>\n<hr>\n<p><strong>定义（有向分离，d-separation）</strong>：一条路径<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.439ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.138ex\" height=\"1.439ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 503 636\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path></g></g></g></svg></mjx-container>能够被一个节点集<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>阻断，当且仅当：</p>\n<ol>\n<li><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.439ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.138ex\" height=\"1.439ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 503 636\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path></g></g></g></svg></mjx-container>包含chain <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"12.172ex\" height=\"1.67ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 5380.1 738\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1027.8,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2305.6,0)\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3342.3,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4620.1,0)\"><path data-c=\"1D436\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z\"></path></g></g></g></svg></mjx-container>或fork <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"12.172ex\" height=\"1.67ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 5380.1 738\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1027.8,0)\"><path data-c=\"2190\" d=\"M944 261T944 250T929 230H165Q167 228 182 216T211 189T244 152T277 96T303 25Q308 7 308 0Q308 -11 288 -11Q281 -11 278 -11T272 -7T267 2T263 21Q245 94 195 151T73 236Q58 242 55 247Q55 254 59 257T73 264Q121 283 158 314T215 375T247 434T264 480L267 497Q269 503 270 505T275 509T288 511Q308 511 308 500Q308 493 303 475Q293 438 278 406T246 352T215 315T185 287T165 270H929Q944 261 944 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2305.6,0)\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3342.3,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4620.1,0)\"><path data-c=\"1D436\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z\"></path></g></g></g></svg></mjx-container>使得中间节点<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.09ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.119ex\" height=\"1.636ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 2704.6 723\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1036.8,0)\"><path data-c=\"2208\" d=\"M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1981.6,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>（即<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.717ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 759 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g></g></g></svg></mjx-container>取条件），或</li>\n<li><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.439ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.138ex\" height=\"1.439ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 503 636\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path></g></g></g></svg></mjx-container>包含collider <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"12.172ex\" height=\"1.67ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 5380.1 738\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1027.8,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2305.6,0)\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3342.3,0)\"><path data-c=\"2190\" d=\"M944 261T944 250T929 230H165Q167 228 182 216T211 189T244 152T277 96T303 25Q308 7 308 0Q308 -11 288 -11Q281 -11 278 -11T272 -7T267 2T263 21Q245 94 195 151T73 236Q58 242 55 247Q55 254 59 257T73 264Q121 283 158 314T215 375T247 434T264 480L267 497Q269 503 270 505T275 509T288 511Q308 511 308 500Q308 493 303 475Q293 438 278 406T246 352T215 315T185 287T165 270H929Q944 261 944 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4620.1,0)\"><path data-c=\"1D436\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z\"></path></g></g></g></svg></mjx-container>使得碰撞节点<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.486ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.119ex\" height=\"2.106ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 2704.6 931\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1036.8,0)\"><path data-c=\"2209\" d=\"M196 25Q84 109 84 250Q84 372 166 450T360 539Q361 539 375 539T413 540T460 540L547 707Q550 716 563 716Q570 716 575 712T581 703T583 696T505 540H568Q583 532 583 520Q583 511 570 501L484 500L366 270H568Q583 262 583 250T568 230H346L247 38Q284 16 328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 447 -40T419 -41Q304 -41 228 3Q117 -211 115 -212Q111 -215 104 -215T92 -212T86 -204T84 -197Q84 -190 89 -183L196 25ZM214 61L301 230H124V228Q124 196 147 147T214 61ZM321 270L440 500Q353 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H321Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1981.6,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>，且<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.717ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 759 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g></g></g></svg></mjx-container>的任意后继节点都不属于<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>。</li>\n</ol>\n<p>若上述节点集<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>阻断节点<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>和<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>之间的所有路径，那么称<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>和<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>是关于<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>有向分离的（d-separated, conditional on <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>），因此是关于<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>条件独立的。</p>\n<hr>\n<h2 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h2><ol>\n<li>Judea Pearl, Madlyn Glymour, Nicholas P.Jewell.Causal Inference in Statistics: A Primer.2016.WILEY</li>\n</ol>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: document.title+document.date,\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","site":{"data":{}},"length":3125,"excerpt":"<p>上一篇的综述论文读的比较懵。为此，从这一篇开始记录Judea Pearl的Causal Inference in Statistics: A Primer的阅读笔记，将经典的因果推断理论基础打好后再考虑机器学习领域的因果推断。<br>","more":"</p>\n<h2 id=\"结构因果模型\"><a href=\"#结构因果模型\" class=\"headerlink\" title=\"结构因果模型\"></a>结构因果模型</h2><ul>\n<li>结构因果模型（Structural Causal Model, SCM）<br>结构因果模型使用有向图（通常为有向无环图，Directed Acyclic Graph, DAG）来建模变量间的因果关系。</li>\n</ul>\n<h3 id=\"基本概念\"><a href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"></a>基本概念</h3><ul>\n<li>外源变量（exogenous variables）<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.735ex\" height=\"1.595ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 767 705\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D448\" d=\"M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z\"></path></g></g></g></svg></mjx-container>：处在模型之外（指模型中没有指向它的原因变量）的变量，无需建模其他变量指向它的因果。在因果有向图中，外源变量全部为根节点。外源变量一般充当内源变量的误差项（在模型建模的因果关系外影响内源变量取值的因素）。</li>\n<li>内源变量（endogenous variables）<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.74ex\" height=\"1.595ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 769 705\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D449\" d=\"M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z\"></path></g></g></g></svg></mjx-container>：模型内（建模）的变量。每个内源变量被至少一个外源变量指向（存在有向边）。</li>\n<li>映射函数 <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.464ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.244ex\" height=\"2.059ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -705 550 910\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D453\" d=\"M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z\"></path></g></g></g></svg></mjx-container>：从原因变量到结果变量的映射函数，解释因果关系如何产生作用。</li>\n</ul>\n<h3 id=\"乘积分解规则\"><a href=\"#乘积分解规则\" class=\"headerlink\" title=\"乘积分解规则\"></a>乘积分解规则</h3><ul>\n<li>乘积分解规则（rule of product decomposition）<br>使用因果变量间的条件概率的乘积分解所有变量的联合概率：<script type=\"math/tex; mode=display\">\nP(x_1,x_2,\\ldots,x_n)=\\prod_i P(x_i|pa_i)</script>其中<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.439ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"3.075ex\" height=\"1.439ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 1359 636\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(503,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(562,-150) scale(0.707)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g></g></g></svg></mjx-container>表示变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.357ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.613ex\" height=\"1.902ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 1155 840.8\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(861,-150) scale(0.707)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g></g></g></svg></mjx-container>的父节点变量的取值。例如，已知链状有向因果图<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"12.328ex\" height=\"1.57ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 5449.1 694\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1129.8,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2407.6,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3448.3,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4726.1,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>，则它们的取值的联合概率为：<script type=\"math/tex; mode=display\">\nP(X=x,Y=y,Z=z) = P(X=x)P(Y=y|X=x)P(Z=z|Y=y)</script></li>\n</ul>\n<h2 id=\"有向图模型\"><a href=\"#有向图模型\" class=\"headerlink\" title=\"有向图模型\"></a>有向图模型</h2><ul>\n<li>结构因果模型中的有向图模型及其应用<br>根据图的构型，将有向图模型分为三类：</li>\n<li>Chains：<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"12.328ex\" height=\"1.57ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 5449.1 694\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1129.8,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2407.6,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3448.3,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4726.1,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>，链状连接</li>\n<li>Forks：<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.439ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"15.262ex\" height=\"1.984ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 6745.8 877\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1129.8,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2407.6,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3170.6,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3615.2,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4745,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(6022.8,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>，一个原因变量决定所有结果变量。其中那唯一的原因变量被称作common cause</li>\n<li>Colliders：<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.439ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"14.97ex\" height=\"1.984ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 6616.8 877\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1129.8,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2407.6,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3130.6,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3575.2,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4616,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(5893.8,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>，所有原因变量决定一个结果变量（碰撞节点，collision node）</li>\n</ul>\n<pre class=\"mermaid\">graph TB\nUx1((Ux1))\nX1((X1))\nUy1((Uy1))\nY1((Y1))\nUz1((Uz1))\nZ1((Z1))\nUx2((Ux2))\nUy2((Uy2))\nX2((X2))\nY2((Y2))\nUz2((Uz2))\nZ2((Z2))\nUx3((Ux3))\nX3((X3))\nUy3((Uy3))\nY3((Y3))\nUz3((Uz3))\nZ3((Z3))\n\nX1--&gt;Y1\nY1--&gt;Z1\nX2--&gt;Y2\nX2--&gt;Z2\nX3--&gt;Z3\nY3--&gt;Z3\nUx1--&gt;X1\nUy1--&gt;Y1\nUz1--&gt;Z1\nUx2--&gt;X2\nUy2--&gt;Y2\nUz2--&gt;Z2\nUx3--&gt;X3\nUy3--&gt;Y3\nUz3--&gt;Z3</pre>\n\n<p>上图从左到右每个连通图依次为Chains, Forks, Colliders。其中U*表示外源变量。</p>\n<h3 id=\"Chains-amp-Forks-amp-Colliders-中的三条独立性规则\"><a href=\"#Chains-amp-Forks-amp-Colliders-中的三条独立性规则\" class=\"headerlink\" title=\"Chains & Forks & Colliders 中的三条独立性规则\"></a>Chains &amp; Forks &amp; Colliders 中的三条独立性规则</h3><p><strong>R1.</strong> Chains中的条件独立性：给定两个变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>和<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>，称它们在给定变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>时是独立的，如果<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>和<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>之间只有一条单向路径，并且该路径被<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>截断。</p>\n<p><em>解释：如果<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24.67ex\" height=\"1.57ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 10904.2 694\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1129.8,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2407.6,0)\"><path data-c=\"2026\" d=\"M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60ZM525 60Q525 84 542 102T585 120Q609 120 627 104T646 61Q646 36 629 18T586 0T543 17T525 60ZM972 60Q972 84 989 102T1032 120Q1056 120 1074 104T1093 61Q1093 36 1076 18T1033 0T990 17T972 60Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3857.3,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(5135.1,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6135.9,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(7413.7,0)\"><path data-c=\"2026\" d=\"M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60ZM525 60Q525 84 542 102T585 120Q609 120 627 104T646 61Q646 36 629 18T586 0T543 17T525 60ZM972 60Q972 84 989 102T1032 120Q1056 120 1074 104T1093 61Q1093 36 1076 18T1033 0T990 17T972 60Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(8863.4,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(10141.2,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>且<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>到<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>的路径只有这一条，那么他俩就是关于<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>条件独立的。</em></p>\n<p><strong>R2.</strong> Forks中的条件独立性：如果变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>是变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>和变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>的唯一原因变量，那么变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>和<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>是关于<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>条件独立的。</p>\n<p><em>理解：当<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>固定时，唯一影响<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>和<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>的取值的只有它们各自的外源变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.667ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.517ex\" height=\"2.213ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 1112.5 978\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D448\" d=\"M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(716,-150) scale(0.707)\"><path data-c=\"1D466\" d=\"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g></g></g></g></svg></mjx-container>和<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.357ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.477ex\" height=\"1.902ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 1094.8 840.8\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D448\" d=\"M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(716,-150) scale(0.707)\"><path data-c=\"1D467\" d=\"M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z\"></path></g></g></g></g></svg></mjx-container>。由于<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.667ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.517ex\" height=\"2.213ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 1112.5 978\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D448\" d=\"M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(716,-150) scale(0.707)\"><path data-c=\"1D466\" d=\"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g></g></g></g></svg></mjx-container>和<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.357ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.477ex\" height=\"1.902ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 1094.8 840.8\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D448\" d=\"M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(716,-150) scale(0.707)\"><path data-c=\"1D467\" d=\"M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z\"></path></g></g></g></g></svg></mjx-container>是独立的（外源变量不依赖于任何其他变量），因此<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>和<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>是条件独立的。</em></p>\n<p><strong>R3.</strong> Colliders中的条件独立性：如果变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>是<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>和<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>的碰撞节点，并且<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>和<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>之间只有这一条路径（注意，不仅是有向路径），那么<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>和<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>在无条件时是独立的，但在给定<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>或<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>的任意后继节点时是条件不独立的。</p>\n<p><em>理解：R3是对因果关系的研究中极其重要的一条规则！它可以理解为，如果结果变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>是固定的，那么当<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>的值改变时，需要改变<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>的值，从而补偿<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>对<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>造成的影响。例如一次考试包含理论、实验两部分。那么“总分”就是“理论分”和“实验分”的碰撞节点。如果总分固定，且某人的理论分较高，那么它的实验分必须较低从而使总分固定，反之亦然。那么理论分和实验分就是关于总分条件不独立的。</em></p>\n<h2 id=\"有向分离-amp-有向连接-d\"><a href=\"#有向分离-amp-有向连接-d\" class=\"headerlink\" title=\"有向分离&有向连接(d-*)\"></a>有向分离&amp;有向连接(d-*)</h2><ul>\n<li>有向分离：d-seperation（‘d’的意思是directional）用于识别节点对处于的状态（有向分离态或有向连接态）的过程。</li>\n<li>有向连接态：d-connected，表示存在连接两个节点的路径。有向连接态的节点对是不独立（一个依赖另一个）的。</li>\n<li>有向分离态：d-seperated，表示不存在连接两个节点的路径。有向分离态的节点对一定是独立的。</li>\n</ul>\n<p>判断一对节点是否是有向分离态的，其方法在于判断连接它们的所有路径（注意，不是有向路径）是否都是<strong>阻断</strong>的（blocked）。如果所有路径都是阻断的，那么此二者就是有向分离态的，否则它们是有向连接态的。</p>\n<ul>\n<li>如果“依赖性”不能从某个节点沿着经过节点<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>（对<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>不取条件）的路径传递到另一个节点，那么称<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>阻断这条路径。</li>\n<li>被阻断的对象是连接两个节点的一条路径，而不是两个节点。</li>\n<li>如果节点<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>是节点<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>和<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>的一条路径上的碰撞节点（collider），那么<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>必然是能够阻断这条路径的。</li>\n</ul>\n<p>除了碰撞节点，还有满足以下条件的节点能够阻断一条路径：</p>\n<ul>\n<li>如果我们对一个<strong>节点集</strong><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.011ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 889 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D43E\" d=\"M285 628Q285 635 228 637Q205 637 198 638T191 647Q191 649 193 661Q199 681 203 682Q205 683 214 683H219Q260 681 355 681Q389 681 418 681T463 682T483 682Q500 682 500 674Q500 669 497 660Q496 658 496 654T495 648T493 644T490 641T486 639T479 638T470 637T456 637Q416 636 405 634T387 623L306 305Q307 305 490 449T678 597Q692 611 692 620Q692 635 667 637Q651 637 651 648Q651 650 654 662T659 677Q662 682 676 682Q680 682 711 681T791 680Q814 680 839 681T869 682Q889 682 889 672Q889 650 881 642Q878 637 862 637Q787 632 726 586Q710 576 656 534T556 455L509 418L518 396Q527 374 546 329T581 244Q656 67 661 61Q663 59 666 57Q680 47 717 46H738Q744 38 744 37T741 19Q737 6 731 0H720Q680 3 625 3Q503 3 488 0H478Q472 6 472 9T474 27Q478 40 480 43T491 46H494Q544 46 544 71Q544 75 517 141T485 216L427 354L359 301L291 248L268 155Q245 63 245 58Q245 51 253 49T303 46H334Q340 37 340 35Q340 19 333 5Q328 0 317 0Q314 0 280 1T180 2Q118 2 85 2T49 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Z\"></path></g></g></g></svg></mjx-container>取条件（即固定节点集中的变量的值），且节点<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>满足：<ul>\n<li><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>是碰撞节点且<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.486ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.413ex\" height=\"2.106ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 2834.6 931\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1000.8,0)\"><path data-c=\"2209\" d=\"M196 25Q84 109 84 250Q84 372 166 450T360 539Q361 539 375 539T413 540T460 540L547 707Q550 716 563 716Q570 716 575 712T581 703T583 696T505 540H568Q583 532 583 520Q583 511 570 501L484 500L366 270H568Q583 262 583 250T568 230H346L247 38Q284 16 328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 447 -40T419 -41Q304 -41 228 3Q117 -211 115 -212Q111 -215 104 -215T92 -212T86 -204T84 -197Q84 -190 89 -183L196 25ZM214 61L301 230H124V228Q124 196 147 147T214 61ZM321 270L440 500Q353 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H321Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1945.6,0)\"><path data-c=\"1D43E\" d=\"M285 628Q285 635 228 637Q205 637 198 638T191 647Q191 649 193 661Q199 681 203 682Q205 683 214 683H219Q260 681 355 681Q389 681 418 681T463 682T483 682Q500 682 500 674Q500 669 497 660Q496 658 496 654T495 648T493 644T490 641T486 639T479 638T470 637T456 637Q416 636 405 634T387 623L306 305Q307 305 490 449T678 597Q692 611 692 620Q692 635 667 637Q651 637 651 648Q651 650 654 662T659 677Q662 682 676 682Q680 682 711 681T791 680Q814 680 839 681T869 682Q889 682 889 672Q889 650 881 642Q878 637 862 637Q787 632 726 586Q710 576 656 534T556 455L509 418L518 396Q527 374 546 329T581 244Q656 67 661 61Q663 59 666 57Q680 47 717 46H738Q744 38 744 37T741 19Q737 6 731 0H720Q680 3 625 3Q503 3 488 0H478Q472 6 472 9T474 27Q478 40 480 43T491 46H494Q544 46 544 71Q544 75 517 141T485 216L427 354L359 301L291 248L268 155Q245 63 245 58Q245 51 253 49T303 46H334Q340 37 340 35Q340 19 333 5Q328 0 317 0Q314 0 280 1T180 2Q118 2 85 2T49 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Z\"></path></g></g></g></svg></mjx-container>，且<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>的任意后继节点都不属于<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.011ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 889 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D43E\" d=\"M285 628Q285 635 228 637Q205 637 198 638T191 647Q191 649 193 661Q199 681 203 682Q205 683 214 683H219Q260 681 355 681Q389 681 418 681T463 682T483 682Q500 682 500 674Q500 669 497 660Q496 658 496 654T495 648T493 644T490 641T486 639T479 638T470 637T456 637Q416 636 405 634T387 623L306 305Q307 305 490 449T678 597Q692 611 692 620Q692 635 667 637Q651 637 651 648Q651 650 654 662T659 677Q662 682 676 682Q680 682 711 681T791 680Q814 680 839 681T869 682Q889 682 889 672Q889 650 881 642Q878 637 862 637Q787 632 726 586Q710 576 656 534T556 455L509 418L518 396Q527 374 546 329T581 244Q656 67 661 61Q663 59 666 57Q680 47 717 46H738Q744 38 744 37T741 19Q737 6 731 0H720Q680 3 625 3Q503 3 488 0H478Q472 6 472 9T474 27Q478 40 480 43T491 46H494Q544 46 544 71Q544 75 517 141T485 216L427 354L359 301L291 248L268 155Q245 63 245 58Q245 51 253 49T303 46H334Q340 37 340 35Q340 19 333 5Q328 0 317 0Q314 0 280 1T180 2Q118 2 85 2T49 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Z\"></path></g></g></g></svg></mjx-container></li>\n<li><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.09ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.413ex\" height=\"1.636ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 2834.6 723\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1000.8,0)\"><path data-c=\"2208\" d=\"M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1945.6,0)\"><path data-c=\"1D43E\" d=\"M285 628Q285 635 228 637Q205 637 198 638T191 647Q191 649 193 661Q199 681 203 682Q205 683 214 683H219Q260 681 355 681Q389 681 418 681T463 682T483 682Q500 682 500 674Q500 669 497 660Q496 658 496 654T495 648T493 644T490 641T486 639T479 638T470 637T456 637Q416 636 405 634T387 623L306 305Q307 305 490 449T678 597Q692 611 692 620Q692 635 667 637Q651 637 651 648Q651 650 654 662T659 677Q662 682 676 682Q680 682 711 681T791 680Q814 680 839 681T869 682Q889 682 889 672Q889 650 881 642Q878 637 862 637Q787 632 726 586Q710 576 656 534T556 455L509 418L518 396Q527 374 546 329T581 244Q656 67 661 61Q663 59 666 57Q680 47 717 46H738Q744 38 744 37T741 19Q737 6 731 0H720Q680 3 625 3Q503 3 488 0H478Q472 6 472 9T474 27Q478 40 480 43T491 46H494Q544 46 544 71Q544 75 517 141T485 216L427 354L359 301L291 248L268 155Q245 63 245 58Q245 51 253 49T303 46H334Q340 37 340 35Q340 19 333 5Q328 0 317 0Q314 0 280 1T180 2Q118 2 85 2T49 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Z\"></path></g></g></g></svg></mjx-container>且<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>是一个chain或fork的中间节点</li>\n</ul>\n</li>\n</ul>\n<p>满足上述任意一种条件的节点<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>都能阻断条件中提及的路径。</p>\n<p>基于“阻断”的定义，我们可以给出有向分离的定义：</p>\n<hr>\n<p><strong>定义（有向分离，d-separation）</strong>：一条路径<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.439ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.138ex\" height=\"1.439ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 503 636\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path></g></g></g></svg></mjx-container>能够被一个节点集<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>阻断，当且仅当：</p>\n<ol>\n<li><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.439ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.138ex\" height=\"1.439ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 503 636\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path></g></g></g></svg></mjx-container>包含chain <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"12.172ex\" height=\"1.67ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 5380.1 738\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1027.8,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2305.6,0)\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3342.3,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4620.1,0)\"><path data-c=\"1D436\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z\"></path></g></g></g></svg></mjx-container>或fork <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"12.172ex\" height=\"1.67ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 5380.1 738\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1027.8,0)\"><path data-c=\"2190\" d=\"M944 261T944 250T929 230H165Q167 228 182 216T211 189T244 152T277 96T303 25Q308 7 308 0Q308 -11 288 -11Q281 -11 278 -11T272 -7T267 2T263 21Q245 94 195 151T73 236Q58 242 55 247Q55 254 59 257T73 264Q121 283 158 314T215 375T247 434T264 480L267 497Q269 503 270 505T275 509T288 511Q308 511 308 500Q308 493 303 475Q293 438 278 406T246 352T215 315T185 287T165 270H929Q944 261 944 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2305.6,0)\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3342.3,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4620.1,0)\"><path data-c=\"1D436\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z\"></path></g></g></g></svg></mjx-container>使得中间节点<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.09ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.119ex\" height=\"1.636ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 2704.6 723\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1036.8,0)\"><path data-c=\"2208\" d=\"M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1981.6,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>（即<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.717ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 759 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g></g></g></svg></mjx-container>取条件），或</li>\n<li><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.439ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.138ex\" height=\"1.439ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 503 636\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path></g></g></g></svg></mjx-container>包含collider <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"12.172ex\" height=\"1.67ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 5380.1 738\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1027.8,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2305.6,0)\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3342.3,0)\"><path data-c=\"2190\" d=\"M944 261T944 250T929 230H165Q167 228 182 216T211 189T244 152T277 96T303 25Q308 7 308 0Q308 -11 288 -11Q281 -11 278 -11T272 -7T267 2T263 21Q245 94 195 151T73 236Q58 242 55 247Q55 254 59 257T73 264Q121 283 158 314T215 375T247 434T264 480L267 497Q269 503 270 505T275 509T288 511Q308 511 308 500Q308 493 303 475Q293 438 278 406T246 352T215 315T185 287T165 270H929Q944 261 944 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4620.1,0)\"><path data-c=\"1D436\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z\"></path></g></g></g></svg></mjx-container>使得碰撞节点<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.486ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.119ex\" height=\"2.106ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 2704.6 931\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1036.8,0)\"><path data-c=\"2209\" d=\"M196 25Q84 109 84 250Q84 372 166 450T360 539Q361 539 375 539T413 540T460 540L547 707Q550 716 563 716Q570 716 575 712T581 703T583 696T505 540H568Q583 532 583 520Q583 511 570 501L484 500L366 270H568Q583 262 583 250T568 230H346L247 38Q284 16 328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 447 -40T419 -41Q304 -41 228 3Q117 -211 115 -212Q111 -215 104 -215T92 -212T86 -204T84 -197Q84 -190 89 -183L196 25ZM214 61L301 230H124V228Q124 196 147 147T214 61ZM321 270L440 500Q353 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H321Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1981.6,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>，且<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.717ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 759 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g></g></g></svg></mjx-container>的任意后继节点都不属于<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>。</li>\n</ol>\n<p>若上述节点集<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>阻断节点<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>和<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>之间的所有路径，那么称<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>和<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>是关于<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>有向分离的（d-separated, conditional on <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>），因此是关于<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>条件独立的。</p>\n<hr>\n<h2 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h2><ol>\n<li>Judea Pearl, Madlyn Glymour, Nicholas P.Jewell.Causal Inference in Statistics: A Primer.2016.WILEY</li>\n</ol>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: document.title+document.date,\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>"},{"title":"因果推断学习笔记.6","mathjax":true,"codeblock":{"enable":true,"show_result":true},"date":"2022-05-06T06:41:10.000Z","_content":"\n因果推断中的干预概念。\n\n<!--more-->\n上一篇主要讲因果模型的形式化表示方法（结构因果模型）。从这一篇开始，主要围绕如何在现实场景中推断因果的问题展开叙述。首先，最理想的因果推断方法是随机化控制实验（randomized controlled experiments），即通过控制变量的随机化试验验证变量间的因果关系（问题如：统计数据表明纸尿裤和啤酒的销量成正相关，那么他俩之间存在因果关系吗？）。然而，随机化控制实验的要求过于严苛，以至于难以实行（例如，难以同时控制纸尿裤和啤酒的销量）。因此研究者试图通过观测研究（observational studies）探索因果关系，从中只记录数据，不控制变量。然而，记录的数据只能呈现相关性，不能呈现因果性。在此背景下，干预（intervention）作为一种因果推断的方法出现了。通俗而言，“干预”是指通过控制某些变量、观察其他变量的变化，从而验证因果性。例如，为了干预纸尿裤的销量，可以在试验期间关闭超市的纸尿裤贩售区（前提是和超市达成合作协议）。\n\n## 干预\n- 干预（intervention）：**固定**某些变量，**改变**整个系统，观察其他变量的变化\n  - 与取条件（conditioning）的区别：取条件时，在行为上不固定/改变任何变量，仅仅“关注”被取条件的变量取某些固定值时，整个系统的状态。\n  - 例：关闭纸尿裤贩售区，观察啤酒销量，是为干预；照常卖纸尿裤和啤酒，只看当纸尿裤数量小于1000时啤酒的销量，是为取条件。\n\n在结构因果模型的有向图中，对某个变量的干预可以理解为**删去图中所有指向该变量的有向边**。例如：\n\n干预前：\n```mermaid\ngraph TB\nUz((Uz))\nZ((Z))\nUx((Ux))\nX((X))\nUy((Uy))\nY((Y))\nUz-->Z\nUx-->X\nZ-->X\nZ-->Y\nUy-->Y\n```\n\n对$X$实施干预后：\n```mermaid\ngraph TB\nUz((Uz))\nZ((Z))\nUy((Uy))\nX((X))\nY((Y))\nUz-->Z\nZ-->Y\nUy-->Y\n```\n\n注意到$U_x$是外源变量，不需要SCM负责建模。当$U_x$与$X$之间的有向边删去后，$U_x$没用就可以丢弃了。\n\n### do-操作\n上文已讲，干预和取条件是两种不同的概念。为了对二者加以区分，使用do-操作表示干预。例如，如果通过干预使得变量$X$取值为$x$，则记为$do(X=x)$；如果取条件，则是$X=x$。在变量分布的意义上，\n- $P(Y=y|X=x)$表示**当样本的$X=x$时**，$Y$的分布；\n- $P(Y=y|do(X=x))$表示**令所有样本的$X=x$时**，$Y$的分布。\n\n基于do操作，我们马上可以定义出因果效应差，即因果效应的强度：\n$$\nP(Y=1|do(X=1))-P(Y=1|do(X=0))\n$$\n而这正是[学习笔记2中记录的ACE](https://cslijt.github.io/LiJT-Daily/2022/04/21/2022-04-21-casual-inference-2/)。\n\n### Adjustment formula\nAdjustment formula描述了通过干预前分布推断干预后分布的方法，定义如下。其具体推导见参考文献1 p56-57.\n$$\nP(Y=y|do(X=x))=\\sum_z P(Y=y|X=x,Z=z)P(Z=z)\n$$\n\n需要注意的是$Z$必须是$X$的父节点。下面给出Adjustment formula的严谨的形式化定义：\n\n---\n**R1. 因果效应规则（The Causal Effect Rule）**：给定有向图$G$，节点$X$和它的父节点（可能多个）$PA$，则$X$对$Y$的因果效应被定义为：\n$$\nP(Y=y|do(X=x))=\\sum_z P(Y=y|X=x,PA=z)P(PA=z)\n$$\n其中$z$为所有属于$PA$的节点的联合取值。\n\n---\nAdjust formula对应模型-干预前：\n```mermaid\ngraph TB\nZ((Z))\nX((X))\nY((Y))\nZ-->X\nZ-->Y\nX-->Y\n```\n\nAdjust formula对应模型-干预后：\n```mermaid\ngraph TB\nZ((Z))\nX((X))\nY((Y))\nZ-->Y\nX-->Y\n```\n\nAdjust formula提供了一种仅依靠观测数据（不用干预！）计算因果效应的方法。但该方法有一缺陷，即要求原因变量$X$的所有被SCM所假设的父节点都是可观测的。下面着手解决部分父节点不可观测时如何计算因果效应的问题。\n\n\n\n## 参考文献\n1. Judea Pearl, Madlyn Glymour, Nicholas P.Jewell.Causal Inference in Statistics: A Primer.2016.WILEY\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: document.title+document.date,\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","source":"_posts/2022-05-06-causal-inference-6.md","raw":"---\ntitle: 因果推断学习笔记.6\nmathjax: true\ncodeblock:\n  enable: true\n  show_result: true\ndate: 2022-05-06 14:41:10\ntags: 因果推断\ncategories: 学习笔记\n---\n\n因果推断中的干预概念。\n\n<!--more-->\n上一篇主要讲因果模型的形式化表示方法（结构因果模型）。从这一篇开始，主要围绕如何在现实场景中推断因果的问题展开叙述。首先，最理想的因果推断方法是随机化控制实验（randomized controlled experiments），即通过控制变量的随机化试验验证变量间的因果关系（问题如：统计数据表明纸尿裤和啤酒的销量成正相关，那么他俩之间存在因果关系吗？）。然而，随机化控制实验的要求过于严苛，以至于难以实行（例如，难以同时控制纸尿裤和啤酒的销量）。因此研究者试图通过观测研究（observational studies）探索因果关系，从中只记录数据，不控制变量。然而，记录的数据只能呈现相关性，不能呈现因果性。在此背景下，干预（intervention）作为一种因果推断的方法出现了。通俗而言，“干预”是指通过控制某些变量、观察其他变量的变化，从而验证因果性。例如，为了干预纸尿裤的销量，可以在试验期间关闭超市的纸尿裤贩售区（前提是和超市达成合作协议）。\n\n## 干预\n- 干预（intervention）：**固定**某些变量，**改变**整个系统，观察其他变量的变化\n  - 与取条件（conditioning）的区别：取条件时，在行为上不固定/改变任何变量，仅仅“关注”被取条件的变量取某些固定值时，整个系统的状态。\n  - 例：关闭纸尿裤贩售区，观察啤酒销量，是为干预；照常卖纸尿裤和啤酒，只看当纸尿裤数量小于1000时啤酒的销量，是为取条件。\n\n在结构因果模型的有向图中，对某个变量的干预可以理解为**删去图中所有指向该变量的有向边**。例如：\n\n干预前：\n```mermaid\ngraph TB\nUz((Uz))\nZ((Z))\nUx((Ux))\nX((X))\nUy((Uy))\nY((Y))\nUz-->Z\nUx-->X\nZ-->X\nZ-->Y\nUy-->Y\n```\n\n对$X$实施干预后：\n```mermaid\ngraph TB\nUz((Uz))\nZ((Z))\nUy((Uy))\nX((X))\nY((Y))\nUz-->Z\nZ-->Y\nUy-->Y\n```\n\n注意到$U_x$是外源变量，不需要SCM负责建模。当$U_x$与$X$之间的有向边删去后，$U_x$没用就可以丢弃了。\n\n### do-操作\n上文已讲，干预和取条件是两种不同的概念。为了对二者加以区分，使用do-操作表示干预。例如，如果通过干预使得变量$X$取值为$x$，则记为$do(X=x)$；如果取条件，则是$X=x$。在变量分布的意义上，\n- $P(Y=y|X=x)$表示**当样本的$X=x$时**，$Y$的分布；\n- $P(Y=y|do(X=x))$表示**令所有样本的$X=x$时**，$Y$的分布。\n\n基于do操作，我们马上可以定义出因果效应差，即因果效应的强度：\n$$\nP(Y=1|do(X=1))-P(Y=1|do(X=0))\n$$\n而这正是[学习笔记2中记录的ACE](https://cslijt.github.io/LiJT-Daily/2022/04/21/2022-04-21-casual-inference-2/)。\n\n### Adjustment formula\nAdjustment formula描述了通过干预前分布推断干预后分布的方法，定义如下。其具体推导见参考文献1 p56-57.\n$$\nP(Y=y|do(X=x))=\\sum_z P(Y=y|X=x,Z=z)P(Z=z)\n$$\n\n需要注意的是$Z$必须是$X$的父节点。下面给出Adjustment formula的严谨的形式化定义：\n\n---\n**R1. 因果效应规则（The Causal Effect Rule）**：给定有向图$G$，节点$X$和它的父节点（可能多个）$PA$，则$X$对$Y$的因果效应被定义为：\n$$\nP(Y=y|do(X=x))=\\sum_z P(Y=y|X=x,PA=z)P(PA=z)\n$$\n其中$z$为所有属于$PA$的节点的联合取值。\n\n---\nAdjust formula对应模型-干预前：\n```mermaid\ngraph TB\nZ((Z))\nX((X))\nY((Y))\nZ-->X\nZ-->Y\nX-->Y\n```\n\nAdjust formula对应模型-干预后：\n```mermaid\ngraph TB\nZ((Z))\nX((X))\nY((Y))\nZ-->Y\nX-->Y\n```\n\nAdjust formula提供了一种仅依靠观测数据（不用干预！）计算因果效应的方法。但该方法有一缺陷，即要求原因变量$X$的所有被SCM所假设的父节点都是可观测的。下面着手解决部分父节点不可观测时如何计算因果效应的问题。\n\n\n\n## 参考文献\n1. Judea Pearl, Madlyn Glymour, Nicholas P.Jewell.Causal Inference in Statistics: A Primer.2016.WILEY\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: document.title+document.date,\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","slug":"2022-05-06-causal-inference-6","published":1,"updated":"2023-03-19T09:45:41.455Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cludw9n9v001l9wv9bszc2si3","content":"<p>因果推断中的干预概念。</p>\n<span id=\"more\"></span>\n<p>上一篇主要讲因果模型的形式化表示方法（结构因果模型）。从这一篇开始，主要围绕如何在现实场景中推断因果的问题展开叙述。首先，最理想的因果推断方法是随机化控制实验（randomized controlled experiments），即通过控制变量的随机化试验验证变量间的因果关系（问题如：统计数据表明纸尿裤和啤酒的销量成正相关，那么他俩之间存在因果关系吗？）。然而，随机化控制实验的要求过于严苛，以至于难以实行（例如，难以同时控制纸尿裤和啤酒的销量）。因此研究者试图通过观测研究（observational studies）探索因果关系，从中只记录数据，不控制变量。然而，记录的数据只能呈现相关性，不能呈现因果性。在此背景下，干预（intervention）作为一种因果推断的方法出现了。通俗而言，“干预”是指通过控制某些变量、观察其他变量的变化，从而验证因果性。例如，为了干预纸尿裤的销量，可以在试验期间关闭超市的纸尿裤贩售区（前提是和超市达成合作协议）。</p>\n<h2 id=\"干预\"><a href=\"#干预\" class=\"headerlink\" title=\"干预\"></a>干预</h2><ul>\n<li>干预（intervention）：<strong>固定</strong>某些变量，<strong>改变</strong>整个系统，观察其他变量的变化<ul>\n<li>与取条件（conditioning）的区别：取条件时，在行为上不固定/改变任何变量，仅仅“关注”被取条件的变量取某些固定值时，整个系统的状态。</li>\n<li>例：关闭纸尿裤贩售区，观察啤酒销量，是为干预；照常卖纸尿裤和啤酒，只看当纸尿裤数量小于1000时啤酒的销量，是为取条件。</li>\n</ul>\n</li>\n</ul>\n<p>在结构因果模型的有向图中，对某个变量的干预可以理解为<strong>删去图中所有指向该变量的有向边</strong>。例如：</p>\n<p>干预前：</p>\n<pre class=\"mermaid\">graph TB\nUz((Uz))\nZ((Z))\nUx((Ux))\nX((X))\nUy((Uy))\nY((Y))\nUz--&gt;Z\nUx--&gt;X\nZ--&gt;X\nZ--&gt;Y\nUy--&gt;Y</pre>\n\n<p>对<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>实施干预后：</p>\n<pre class=\"mermaid\">graph TB\nUz((Uz))\nZ((Z))\nUy((Uy))\nX((X))\nY((Y))\nUz--&gt;Z\nZ--&gt;Y\nUy--&gt;Y</pre>\n\n<p>注意到<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.357ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.648ex\" height=\"1.902ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 1170.5 840.8\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D448\" d=\"M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(716,-150) scale(0.707)\"><path data-c=\"1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></g></g></g></g></svg></mjx-container>是外源变量，不需要SCM负责建模。当<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.357ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.648ex\" height=\"1.902ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 1170.5 840.8\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D448\" d=\"M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(716,-150) scale(0.707)\"><path data-c=\"1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></g></g></g></g></svg></mjx-container>与<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>之间的有向边删去后，<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.357ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.648ex\" height=\"1.902ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 1170.5 840.8\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D448\" d=\"M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(716,-150) scale(0.707)\"><path data-c=\"1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></g></g></g></g></svg></mjx-container>没用就可以丢弃了。</p>\n<h3 id=\"do-操作\"><a href=\"#do-操作\" class=\"headerlink\" title=\"do-操作\"></a>do-操作</h3><p>上文已讲，干预和取条件是两种不同的概念。为了对二者加以区分，使用do-操作表示干预。例如，如果通过干预使得变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>取值为<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.294ex\" height=\"1.025ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 572 453\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></g></g></g></svg></mjx-container>，则记为<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.273ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 4540.6 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D451\" d=\"M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(520,0)\"><path data-c=\"1D45C\" d=\"M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1005,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1394,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2523.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3579.6,0)\"><path data-c=\"1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4151.6,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>；如果取条件，则是<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.186ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.239ex\" height=\"1.731ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 2757.6 765\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1129.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2185.6,0)\"><path data-c=\"1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></g></g></g></svg></mjx-container>。在变量分布的意义上，</p>\n<ul>\n<li><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16.179ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 7151.1 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(751,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1140,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2180.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3236.6,0)\"><path data-c=\"1D466\" d=\"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3726.6,0) translate(0 -0.5)\"><path data-c=\"7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4004.6,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(5134.3,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(6190.1,0)\"><path data-c=\"1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6762.1,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>表示<strong>当样本的<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.186ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.239ex\" height=\"1.731ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 2757.6 765\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1129.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2185.6,0)\"><path data-c=\"1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></g></g></g></svg></mjx-container>时</strong>，<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>的分布；</li>\n<li><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20.213ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 8934.1 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(751,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1140,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2180.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3236.6,0)\"><path data-c=\"1D466\" d=\"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3726.6,0) translate(0 -0.5)\"><path data-c=\"7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4004.6,0)\"><path data-c=\"1D451\" d=\"M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4524.6,0)\"><path data-c=\"1D45C\" d=\"M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(5009.6,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(5398.6,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6528.3,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(7584.1,0)\"><path data-c=\"1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(8156.1,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(8545.1,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>表示<strong>令所有样本的<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.186ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.239ex\" height=\"1.731ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 2757.6 765\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1129.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2185.6,0)\"><path data-c=\"1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></g></g></g></svg></mjx-container>时</strong>，<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>的分布。</li>\n</ul>\n<p>基于do操作，我们马上可以定义出因果效应差，即因果效应的强度：</p>\n<script type=\"math/tex; mode=display\">\nP(Y=1|do(X=1))-P(Y=1|do(X=0))</script><p>而这正是<a href=\"https://cslijt.github.io/LiJT-Daily/2022/04/21/2022-04-21-casual-inference-2/\">学习笔记2中记录的ACE</a>。</p>\n<h3 id=\"Adjustment-formula\"><a href=\"#Adjustment-formula\" class=\"headerlink\" title=\"Adjustment formula\"></a>Adjustment formula</h3><p>Adjustment formula描述了通过干预前分布推断干预后分布的方法，定义如下。其具体推导见参考文献1 p56-57.</p>\n<script type=\"math/tex; mode=display\">\nP(Y=y|do(X=x))=\\sum_z P(Y=y|X=x,Z=z)P(Z=z)</script><p>需要注意的是<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>必须是<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>的父节点。下面给出Adjustment formula的严谨的形式化定义：</p>\n<hr>\n<p><strong>R1. 因果效应规则（The Causal Effect Rule）</strong>：给定有向图<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.778ex\" height=\"1.645ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -705 786 727\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D43A\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q492 659 471 656T418 643T357 615T294 567T236 496T189 394T158 260Q156 242 156 221Q156 173 170 136T206 79T256 45T308 28T353 24Q407 24 452 47T514 106Q517 114 529 161T541 214Q541 222 528 224T468 227H431Q425 233 425 235T427 254Q431 267 437 273H454Q494 271 594 271Q634 271 659 271T695 272T707 272Q721 272 721 263Q721 261 719 249Q714 230 709 228Q706 227 694 227Q674 227 653 224Q646 221 643 215T629 164Q620 131 614 108Q589 6 586 3Q584 1 581 1Q571 1 553 21T530 52Q530 53 528 52T522 47Q448 -22 322 -22Q201 -22 126 55T50 252Z\"></path></g></g></g></svg></mjx-container>，节点<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>和它的父节点（可能多个）<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"3.396ex\" height=\"1.62ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 1501 716\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(751,0)\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g></g></g></svg></mjx-container>，则<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>对<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>的因果效应被定义为：</p>\n<script type=\"math/tex; mode=display\">\nP(Y=y|do(X=x))=\\sum_z P(Y=y|X=x,PA=z)P(PA=z)</script><p>其中<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.052ex\" height=\"1.025ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 465 453\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D467\" d=\"M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z\"></path></g></g></g></svg></mjx-container>为所有属于<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"3.396ex\" height=\"1.62ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 1501 716\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(751,0)\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g></g></g></svg></mjx-container>的节点的联合取值。</p>\n<hr>\n<p>Adjust formula对应模型-干预前：</p>\n<pre class=\"mermaid\">graph TB\nZ((Z))\nX((X))\nY((Y))\nZ--&gt;X\nZ--&gt;Y\nX--&gt;Y</pre>\n\n<p>Adjust formula对应模型-干预后：</p>\n<pre class=\"mermaid\">graph TB\nZ((Z))\nX((X))\nY((Y))\nZ--&gt;Y\nX--&gt;Y</pre>\n\n<p>Adjust formula提供了一种仅依靠观测数据（不用干预！）计算因果效应的方法。但该方法有一缺陷，即要求原因变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>的所有被SCM所假设的父节点都是可观测的。下面着手解决部分父节点不可观测时如何计算因果效应的问题。</p>\n<h2 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h2><ol>\n<li>Judea Pearl, Madlyn Glymour, Nicholas P.Jewell.Causal Inference in Statistics: A Primer.2016.WILEY</li>\n</ol>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: document.title+document.date,\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","site":{"data":{}},"length":2081,"excerpt":"<p>因果推断中的干预概念。</p>","more":"<p>上一篇主要讲因果模型的形式化表示方法（结构因果模型）。从这一篇开始，主要围绕如何在现实场景中推断因果的问题展开叙述。首先，最理想的因果推断方法是随机化控制实验（randomized controlled experiments），即通过控制变量的随机化试验验证变量间的因果关系（问题如：统计数据表明纸尿裤和啤酒的销量成正相关，那么他俩之间存在因果关系吗？）。然而，随机化控制实验的要求过于严苛，以至于难以实行（例如，难以同时控制纸尿裤和啤酒的销量）。因此研究者试图通过观测研究（observational studies）探索因果关系，从中只记录数据，不控制变量。然而，记录的数据只能呈现相关性，不能呈现因果性。在此背景下，干预（intervention）作为一种因果推断的方法出现了。通俗而言，“干预”是指通过控制某些变量、观察其他变量的变化，从而验证因果性。例如，为了干预纸尿裤的销量，可以在试验期间关闭超市的纸尿裤贩售区（前提是和超市达成合作协议）。</p>\n<h2 id=\"干预\"><a href=\"#干预\" class=\"headerlink\" title=\"干预\"></a>干预</h2><ul>\n<li>干预（intervention）：<strong>固定</strong>某些变量，<strong>改变</strong>整个系统，观察其他变量的变化<ul>\n<li>与取条件（conditioning）的区别：取条件时，在行为上不固定/改变任何变量，仅仅“关注”被取条件的变量取某些固定值时，整个系统的状态。</li>\n<li>例：关闭纸尿裤贩售区，观察啤酒销量，是为干预；照常卖纸尿裤和啤酒，只看当纸尿裤数量小于1000时啤酒的销量，是为取条件。</li>\n</ul>\n</li>\n</ul>\n<p>在结构因果模型的有向图中，对某个变量的干预可以理解为<strong>删去图中所有指向该变量的有向边</strong>。例如：</p>\n<p>干预前：</p>\n<pre class=\"mermaid\">graph TB\nUz((Uz))\nZ((Z))\nUx((Ux))\nX((X))\nUy((Uy))\nY((Y))\nUz--&gt;Z\nUx--&gt;X\nZ--&gt;X\nZ--&gt;Y\nUy--&gt;Y</pre>\n\n<p>对<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>实施干预后：</p>\n<pre class=\"mermaid\">graph TB\nUz((Uz))\nZ((Z))\nUy((Uy))\nX((X))\nY((Y))\nUz--&gt;Z\nZ--&gt;Y\nUy--&gt;Y</pre>\n\n<p>注意到<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.357ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.648ex\" height=\"1.902ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 1170.5 840.8\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D448\" d=\"M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(716,-150) scale(0.707)\"><path data-c=\"1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></g></g></g></g></svg></mjx-container>是外源变量，不需要SCM负责建模。当<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.357ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.648ex\" height=\"1.902ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 1170.5 840.8\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D448\" d=\"M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(716,-150) scale(0.707)\"><path data-c=\"1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></g></g></g></g></svg></mjx-container>与<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>之间的有向边删去后，<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.357ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.648ex\" height=\"1.902ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 1170.5 840.8\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D448\" d=\"M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(716,-150) scale(0.707)\"><path data-c=\"1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></g></g></g></g></svg></mjx-container>没用就可以丢弃了。</p>\n<h3 id=\"do-操作\"><a href=\"#do-操作\" class=\"headerlink\" title=\"do-操作\"></a>do-操作</h3><p>上文已讲，干预和取条件是两种不同的概念。为了对二者加以区分，使用do-操作表示干预。例如，如果通过干预使得变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>取值为<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.294ex\" height=\"1.025ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 572 453\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></g></g></g></svg></mjx-container>，则记为<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.273ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 4540.6 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D451\" d=\"M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(520,0)\"><path data-c=\"1D45C\" d=\"M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1005,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1394,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2523.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3579.6,0)\"><path data-c=\"1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4151.6,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>；如果取条件，则是<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.186ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.239ex\" height=\"1.731ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 2757.6 765\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1129.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2185.6,0)\"><path data-c=\"1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></g></g></g></svg></mjx-container>。在变量分布的意义上，</p>\n<ul>\n<li><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16.179ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 7151.1 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(751,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1140,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2180.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3236.6,0)\"><path data-c=\"1D466\" d=\"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3726.6,0) translate(0 -0.5)\"><path data-c=\"7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4004.6,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(5134.3,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(6190.1,0)\"><path data-c=\"1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6762.1,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>表示<strong>当样本的<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.186ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.239ex\" height=\"1.731ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 2757.6 765\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1129.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2185.6,0)\"><path data-c=\"1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></g></g></g></svg></mjx-container>时</strong>，<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>的分布；</li>\n<li><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20.213ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 8934.1 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(751,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1140,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2180.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3236.6,0)\"><path data-c=\"1D466\" d=\"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3726.6,0) translate(0 -0.5)\"><path data-c=\"7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4004.6,0)\"><path data-c=\"1D451\" d=\"M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4524.6,0)\"><path data-c=\"1D45C\" d=\"M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(5009.6,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(5398.6,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6528.3,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(7584.1,0)\"><path data-c=\"1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(8156.1,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(8545.1,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>表示<strong>令所有样本的<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.186ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.239ex\" height=\"1.731ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 2757.6 765\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1129.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2185.6,0)\"><path data-c=\"1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></g></g></g></svg></mjx-container>时</strong>，<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>的分布。</li>\n</ul>\n<p>基于do操作，我们马上可以定义出因果效应差，即因果效应的强度：</p>\n<script type=\"math/tex; mode=display\">\nP(Y=1|do(X=1))-P(Y=1|do(X=0))</script><p>而这正是<a href=\"https://cslijt.github.io/LiJT-Daily/2022/04/21/2022-04-21-casual-inference-2/\">学习笔记2中记录的ACE</a>。</p>\n<h3 id=\"Adjustment-formula\"><a href=\"#Adjustment-formula\" class=\"headerlink\" title=\"Adjustment formula\"></a>Adjustment formula</h3><p>Adjustment formula描述了通过干预前分布推断干预后分布的方法，定义如下。其具体推导见参考文献1 p56-57.</p>\n<script type=\"math/tex; mode=display\">\nP(Y=y|do(X=x))=\\sum_z P(Y=y|X=x,Z=z)P(Z=z)</script><p>需要注意的是<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>必须是<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>的父节点。下面给出Adjustment formula的严谨的形式化定义：</p>\n<hr>\n<p><strong>R1. 因果效应规则（The Causal Effect Rule）</strong>：给定有向图<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.778ex\" height=\"1.645ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -705 786 727\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D43A\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q492 659 471 656T418 643T357 615T294 567T236 496T189 394T158 260Q156 242 156 221Q156 173 170 136T206 79T256 45T308 28T353 24Q407 24 452 47T514 106Q517 114 529 161T541 214Q541 222 528 224T468 227H431Q425 233 425 235T427 254Q431 267 437 273H454Q494 271 594 271Q634 271 659 271T695 272T707 272Q721 272 721 263Q721 261 719 249Q714 230 709 228Q706 227 694 227Q674 227 653 224Q646 221 643 215T629 164Q620 131 614 108Q589 6 586 3Q584 1 581 1Q571 1 553 21T530 52Q530 53 528 52T522 47Q448 -22 322 -22Q201 -22 126 55T50 252Z\"></path></g></g></g></svg></mjx-container>，节点<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>和它的父节点（可能多个）<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"3.396ex\" height=\"1.62ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 1501 716\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(751,0)\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g></g></g></svg></mjx-container>，则<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>对<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>的因果效应被定义为：</p>\n<script type=\"math/tex; mode=display\">\nP(Y=y|do(X=x))=\\sum_z P(Y=y|X=x,PA=z)P(PA=z)</script><p>其中<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.052ex\" height=\"1.025ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 465 453\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D467\" d=\"M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z\"></path></g></g></g></svg></mjx-container>为所有属于<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"3.396ex\" height=\"1.62ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 1501 716\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(751,0)\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g></g></g></svg></mjx-container>的节点的联合取值。</p>\n<hr>\n<p>Adjust formula对应模型-干预前：</p>\n<pre class=\"mermaid\">graph TB\nZ((Z))\nX((X))\nY((Y))\nZ--&gt;X\nZ--&gt;Y\nX--&gt;Y</pre>\n\n<p>Adjust formula对应模型-干预后：</p>\n<pre class=\"mermaid\">graph TB\nZ((Z))\nX((X))\nY((Y))\nZ--&gt;Y\nX--&gt;Y</pre>\n\n<p>Adjust formula提供了一种仅依靠观测数据（不用干预！）计算因果效应的方法。但该方法有一缺陷，即要求原因变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>的所有被SCM所假设的父节点都是可观测的。下面着手解决部分父节点不可观测时如何计算因果效应的问题。</p>\n<h2 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h2><ol>\n<li>Judea Pearl, Madlyn Glymour, Nicholas P.Jewell.Causal Inference in Statistics: A Primer.2016.WILEY</li>\n</ol>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: document.title+document.date,\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>"},{"title":"因果推断学习笔记.7","mathjax":true,"codeblock":{"enable":true,"show_result":true},"date":"2022-05-18T11:43:36.000Z","_content":"\n为了解决其他变量/协变量干扰因果效应的问题，老爷子提出了后门准则 & 前门准则。\n\n<!--more-->\n\n## 后门准则\n- 假设在变量图中，想要探究 $X\\to Y$的因果效应\n- 但是图中总有一些指向$X$的、看得见（图中有显示）却摸不着（实验中难以测量）的父变量\n- 后门准则所解决的就是由于$X$的可见不可得的父变量导致无法测量$X$对$Y$的因果效应的问题！\n\n---\n**定义：后门准则（The Backdoor Criterion）**：在有向无环图$G=(V,E)$中，给定一对变量$(X,Y)\\in E$，则变量集合$Z$相对于$(X,Y)$满足后门准则，当且仅当$Z$的任一元素均不是$X$的后继节点，并且$Z$阻断了所有的在$X$和$Y$之间且指向$X$的路径。\n\n---\n\n如果变量集合$Z$满足后门准则，那么$X$对$Y$的因果效应如下推出：\n$$\nP(Y=y|do(X=x)) = \\sum_z P(Y=y|X=x,Z=z)P(Z=z)\n$$\n\n- “后门”是指那些连接$X$和$Y$，既指向$X$又指向$Y$的羊肠小道，如$X\\leftarrow W\\to Y$\n- “后门”的存在使得$X$和$Y$是相关的，但这种关系不一定是因果的\n- 满足后门准则的变量不能是$X$的后代，否则$X$会因果作用于这类变量，而这类变量又会继续影响$Y$1。\n- 满足后门准则的变量必须是在逻辑图中可见的，而不能是不可观测的协变量(confounders)!\n\n## 前门准则\n- 仍然假设试图探究 $X\\to Y$的因果效应\n- 后门准则的一大要求是，满足后门准则的变量在逻辑图中是可见的。问题在于，这一条件不一定能时时刻刻都成立。\n  - 例如：$U$为协变量(confounders)，并且$X\\leftarrow U\\to Y$。即便这是$X$的唯一的“后门”，由于$U$不可观测，因此$U$不能满足后门准则。\n- 前门准则所解决的正是这样的问题！\n\n---\n**定义：前门准则（The Front-Door Criterion）**：给定一个变量集合$Z$，$Z$相对于变量$(X,Y)$满足前门准则，当且仅当$Z$同时满足以下3个条件：\n1. $Z$中断（intercept）所有从$X$到$Y$的有向边；\n2. 不存在关于$(X,Z)$的后门；\n3. 所有关于$(Z,Y)$的后门均被$X$阻断。\n\n---\n如果$Z$满足前门路径，并且$P(x,z)>0$，那么$X\\to Y$的因果效应是可识别的，并且可按照如下方式计算：\n$$\nP(y|do(x)) = \\sum_{z}P(z|x)\\sum_{x'}P(y|x',z)P(x')\n$$\n\n其推导原理如下：\n- 由条件2可知，由于不存在$(X,Z)$的后门，因此：\n\n$$\nP(Z=z|do(X=x)) = P(Z=z|X=x)\n$$\n\n- 由条件1可知，$Z\\to Y$ 。因此可以使用后门准则计算 $Z\\to Y$的因果效应（书上p68式3.13少写了$P(X=x)$）：\n$$\nP(Y=y|do(Z=z)) = \\sum_{x}P(Y=y|Z=z,X=x)P(X=x)\n$$\n\n- 接下来考虑到$X$对$Y$的整体因果效应。如果$Z$被自然赋予（do-操作）了值$z$，那么$Y$的取值为$y$的概率为$P(Y=y|do(Z=z))$。对于$Z$的每一个取值$z$，在$X$被自然赋予（do-操作）了值$x$时，其取值概率为$P(Z=z|do(X=x))$。那么$X\\to Y$的整体因果效应为\n$$\nP(Y=y|do(X=x)) = \\sum_{z}P(Y=y|do(Z=z))P(Z=z|do(X=x))\\\\\n= \\sum_{z}\\sum_{x'}P(Y=y|Z=z,X=x')P(X=x')P(Z=z|X=x)\\\\\n= \\sum_{z}P(z|x)\\sum_{x'}P(y|x',z)P(x')\n$$\n\n## 参考文献\n1. Judea Pearl, Madlyn Glymour, Nicholas P.Jewell.Causal Inference in Statistics: A Primer.2016.WILEY\n     \n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: decodeURI(window.location.pathname),\n            distractionFreeMode: true // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","source":"_posts/2022-05-18-causal-inference-7.md","raw":"---\ntitle: 因果推断学习笔记.7\nmathjax: true\ncodeblock:\n  enable: true\n  show_result: true\ndate: 2022-05-18 19:43:36\ntags: 因果推断\ncategories: 学习笔记\n---\n\n为了解决其他变量/协变量干扰因果效应的问题，老爷子提出了后门准则 & 前门准则。\n\n<!--more-->\n\n## 后门准则\n- 假设在变量图中，想要探究 $X\\to Y$的因果效应\n- 但是图中总有一些指向$X$的、看得见（图中有显示）却摸不着（实验中难以测量）的父变量\n- 后门准则所解决的就是由于$X$的可见不可得的父变量导致无法测量$X$对$Y$的因果效应的问题！\n\n---\n**定义：后门准则（The Backdoor Criterion）**：在有向无环图$G=(V,E)$中，给定一对变量$(X,Y)\\in E$，则变量集合$Z$相对于$(X,Y)$满足后门准则，当且仅当$Z$的任一元素均不是$X$的后继节点，并且$Z$阻断了所有的在$X$和$Y$之间且指向$X$的路径。\n\n---\n\n如果变量集合$Z$满足后门准则，那么$X$对$Y$的因果效应如下推出：\n$$\nP(Y=y|do(X=x)) = \\sum_z P(Y=y|X=x,Z=z)P(Z=z)\n$$\n\n- “后门”是指那些连接$X$和$Y$，既指向$X$又指向$Y$的羊肠小道，如$X\\leftarrow W\\to Y$\n- “后门”的存在使得$X$和$Y$是相关的，但这种关系不一定是因果的\n- 满足后门准则的变量不能是$X$的后代，否则$X$会因果作用于这类变量，而这类变量又会继续影响$Y$1。\n- 满足后门准则的变量必须是在逻辑图中可见的，而不能是不可观测的协变量(confounders)!\n\n## 前门准则\n- 仍然假设试图探究 $X\\to Y$的因果效应\n- 后门准则的一大要求是，满足后门准则的变量在逻辑图中是可见的。问题在于，这一条件不一定能时时刻刻都成立。\n  - 例如：$U$为协变量(confounders)，并且$X\\leftarrow U\\to Y$。即便这是$X$的唯一的“后门”，由于$U$不可观测，因此$U$不能满足后门准则。\n- 前门准则所解决的正是这样的问题！\n\n---\n**定义：前门准则（The Front-Door Criterion）**：给定一个变量集合$Z$，$Z$相对于变量$(X,Y)$满足前门准则，当且仅当$Z$同时满足以下3个条件：\n1. $Z$中断（intercept）所有从$X$到$Y$的有向边；\n2. 不存在关于$(X,Z)$的后门；\n3. 所有关于$(Z,Y)$的后门均被$X$阻断。\n\n---\n如果$Z$满足前门路径，并且$P(x,z)>0$，那么$X\\to Y$的因果效应是可识别的，并且可按照如下方式计算：\n$$\nP(y|do(x)) = \\sum_{z}P(z|x)\\sum_{x'}P(y|x',z)P(x')\n$$\n\n其推导原理如下：\n- 由条件2可知，由于不存在$(X,Z)$的后门，因此：\n\n$$\nP(Z=z|do(X=x)) = P(Z=z|X=x)\n$$\n\n- 由条件1可知，$Z\\to Y$ 。因此可以使用后门准则计算 $Z\\to Y$的因果效应（书上p68式3.13少写了$P(X=x)$）：\n$$\nP(Y=y|do(Z=z)) = \\sum_{x}P(Y=y|Z=z,X=x)P(X=x)\n$$\n\n- 接下来考虑到$X$对$Y$的整体因果效应。如果$Z$被自然赋予（do-操作）了值$z$，那么$Y$的取值为$y$的概率为$P(Y=y|do(Z=z))$。对于$Z$的每一个取值$z$，在$X$被自然赋予（do-操作）了值$x$时，其取值概率为$P(Z=z|do(X=x))$。那么$X\\to Y$的整体因果效应为\n$$\nP(Y=y|do(X=x)) = \\sum_{z}P(Y=y|do(Z=z))P(Z=z|do(X=x))\\\\\n= \\sum_{z}\\sum_{x'}P(Y=y|Z=z,X=x')P(X=x')P(Z=z|X=x)\\\\\n= \\sum_{z}P(z|x)\\sum_{x'}P(y|x',z)P(x')\n$$\n\n## 参考文献\n1. Judea Pearl, Madlyn Glymour, Nicholas P.Jewell.Causal Inference in Statistics: A Primer.2016.WILEY\n     \n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: decodeURI(window.location.pathname),\n            distractionFreeMode: true // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","slug":"2022-05-18-causal-inference-7","published":1,"updated":"2023-03-19T09:56:12.427Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cludw9n9w001p9wv9a8hnd3wu","content":"<p>为了解决其他变量/协变量干扰因果效应的问题，老爷子提出了后门准则 &amp; 前门准则。</p>\n<span id=\"more\"></span>\n<h2 id=\"后门准则\"><a href=\"#后门准则\" class=\"headerlink\" title=\"后门准则\"></a>后门准则</h2><ul>\n<li>假设在变量图中，想要探究 <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"7.173ex\" height=\"1.57ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 3170.6 694\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1129.8,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2407.6,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>的因果效应</li>\n<li>但是图中总有一些指向<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>的、看得见（图中有显示）却摸不着（实验中难以测量）的父变量</li>\n<li>后门准则所解决的就是由于<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>的可见不可得的父变量导致无法测量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>对<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>的因果效应的问题！</li>\n</ul>\n<hr>\n<p><strong>定义：后门准则（The Backdoor Criterion）</strong>：在有向无环图<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"11.03ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 4875.2 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D43A\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q492 659 471 656T418 643T357 615T294 567T236 496T189 394T158 260Q156 242 156 221Q156 173 170 136T206 79T256 45T308 28T353 24Q407 24 452 47T514 106Q517 114 529 161T541 214Q541 222 528 224T468 227H431Q425 233 425 235T427 254Q431 267 437 273H454Q494 271 594 271Q634 271 659 271T695 272T707 272Q721 272 721 263Q721 261 719 249Q714 230 709 228Q706 227 694 227Q674 227 653 224Q646 221 643 215T629 164Q620 131 614 108Q589 6 586 3Q584 1 581 1Q571 1 553 21T530 52Q530 53 528 52T522 47Q448 -22 322 -22Q201 -22 126 55T50 252Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1063.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2119.6,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2508.6,0)\"><path data-c=\"1D449\" d=\"M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3277.6,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3722.2,0)\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4486.2,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>中，给定一对变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.915ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 4824.2 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(389,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1241,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1685.7,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2448.7,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3115.4,0)\"><path data-c=\"2208\" d=\"M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4060.2,0)\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g></g></g></svg></mjx-container>，则变量集合<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>相对于<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.42ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 2837.7 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(389,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1241,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1685.7,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2448.7,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>满足后门准则，当且仅当<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>的任一元素均不是<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>的后继节点，并且<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>阻断了所有的在<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>和<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>之间且指向<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>的路径。</p>\n<hr>\n<p>如果变量集合<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>满足后门准则，那么<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>对<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>的因果效应如下推出：</p>\n<script type=\"math/tex; mode=display\">\nP(Y=y|do(X=x)) = \\sum_z P(Y=y|X=x,Z=z)P(Z=z)</script><ul>\n<li>“后门”是指那些连接<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>和<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>，既指向<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>又指向<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>的羊肠小道，如<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"13.064ex\" height=\"1.595ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 5774.1 705\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1129.8,0)\"><path data-c=\"2190\" d=\"M944 261T944 250T929 230H165Q167 228 182 216T211 189T244 152T277 96T303 25Q308 7 308 0Q308 -11 288 -11Q281 -11 278 -11T272 -7T267 2T263 21Q245 94 195 151T73 236Q58 242 55 247Q55 254 59 257T73 264Q121 283 158 314T215 375T247 434T264 480L267 497Q269 503 270 505T275 509T288 511Q308 511 308 500Q308 493 303 475Q293 438 278 406T246 352T215 315T185 287T165 270H929Q944 261 944 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2407.6,0)\"><path data-c=\"1D44A\" d=\"M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3733.3,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(5011.1,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container></li>\n<li>“后门”的存在使得<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>和<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>是相关的，但这种关系不一定是因果的</li>\n<li>满足后门准则的变量不能是<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>的后代，否则<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>会因果作用于这类变量，而这类变量又会继续影响<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>1。</li>\n<li>满足后门准则的变量必须是在逻辑图中可见的，而不能是不可观测的协变量(confounders)!</li>\n</ul>\n<h2 id=\"前门准则\"><a href=\"#前门准则\" class=\"headerlink\" title=\"前门准则\"></a>前门准则</h2><ul>\n<li>仍然假设试图探究 <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"7.173ex\" height=\"1.57ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 3170.6 694\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1129.8,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2407.6,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>的因果效应</li>\n<li>后门准则的一大要求是，满足后门准则的变量在逻辑图中是可见的。问题在于，这一条件不一定能时时刻刻都成立。<ul>\n<li>例如：<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.735ex\" height=\"1.595ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 767 705\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D448\" d=\"M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z\"></path></g></g></g></svg></mjx-container>为协变量(confounders)，并且<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"12.428ex\" height=\"1.595ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 5493.1 705\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1129.8,0)\"><path data-c=\"2190\" d=\"M944 261T944 250T929 230H165Q167 228 182 216T211 189T244 152T277 96T303 25Q308 7 308 0Q308 -11 288 -11Q281 -11 278 -11T272 -7T267 2T263 21Q245 94 195 151T73 236Q58 242 55 247Q55 254 59 257T73 264Q121 283 158 314T215 375T247 434T264 480L267 497Q269 503 270 505T275 509T288 511Q308 511 308 500Q308 493 303 475Q293 438 278 406T246 352T215 315T185 287T165 270H929Q944 261 944 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2407.6,0)\"><path data-c=\"1D448\" d=\"M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3452.3,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4730.1,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>。即便这是<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>的唯一的“后门”，由于<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.735ex\" height=\"1.595ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 767 705\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D448\" d=\"M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z\"></path></g></g></g></svg></mjx-container>不可观测，因此<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.735ex\" height=\"1.595ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 767 705\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D448\" d=\"M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z\"></path></g></g></g></svg></mjx-container>不能满足后门准则。</li>\n</ul>\n</li>\n<li>前门准则所解决的正是这样的问题！</li>\n</ul>\n<hr>\n<p><strong>定义：前门准则（The Front-Door Criterion）</strong>：给定一个变量集合<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>，<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>相对于变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.42ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 2837.7 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(389,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1241,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1685.7,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2448.7,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>满足前门准则，当且仅当<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>同时满足以下3个条件：</p>\n<ol>\n<li><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>中断（intercept）所有从<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>到<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>的有向边；</li>\n<li>不存在关于<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.33ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 2797.7 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(389,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1241,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1685.7,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2408.7,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>的后门；</li>\n<li>所有关于<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.128ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 2708.7 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(389,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1112,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1556.7,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2319.7,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>的后门均被<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>阻断。</li>\n</ol>\n<hr>\n<p>如果<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>满足前门路径，并且<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.96ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 4844.2 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(751,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1140,0)\"><path data-c=\"1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1712,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2156.7,0)\"><path data-c=\"1D467\" d=\"M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2621.7,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3288.4,0)\"><path data-c=\"3E\" d=\"M84 520Q84 528 88 533T96 539L99 540Q106 540 253 471T544 334L687 265Q694 260 694 250T687 235Q685 233 395 96L107 -40H101Q83 -38 83 -20Q83 -19 83 -17Q82 -10 98 -1Q117 9 248 71Q326 108 378 132L626 250L378 368Q90 504 86 509Q84 513 84 520Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(4344.2,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g></g></g></svg></mjx-container>，那么<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"7.173ex\" height=\"1.57ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 3170.6 694\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1129.8,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2407.6,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>的因果效应是可识别的，并且可按照如下方式计算：</p>\n<script type=\"math/tex; mode=display\">\nP(y|do(x)) = \\sum_{z}P(z|x)\\sum_{x'}P(y|x',z)P(x')</script><p>其推导原理如下：</p>\n<ul>\n<li>由条件2可知，由于不存在<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.33ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 2797.7 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(389,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1241,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1685.7,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2408.7,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>的后门，因此：</li>\n</ul>\n<script type=\"math/tex; mode=display\">\nP(Z=z|do(X=x)) = P(Z=z|X=x)</script><ul>\n<li><p>由条件1可知，<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.881ex\" height=\"1.57ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 3041.6 694\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1000.8,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2278.6,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container> 。因此可以使用后门准则计算 <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.881ex\" height=\"1.57ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 3041.6 694\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1000.8,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2278.6,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>的因果效应（书上p68式3.13少写了<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"9.698ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 4286.6 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(751,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1140,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2269.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3325.6,0)\"><path data-c=\"1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3897.6,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>）：</p>\n<script type=\"math/tex; mode=display\">\nP(Y=y|do(Z=z)) = \\sum_{x}P(Y=y|Z=z,X=x)P(X=x)</script></li>\n<li><p>接下来考虑到<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>对<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>的整体因果效应。如果<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>被自然赋予（do-操作）了值<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.052ex\" height=\"1.025ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 465 453\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D467\" d=\"M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z\"></path></g></g></g></svg></mjx-container>，那么<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>的取值为<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.464ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.109ex\" height=\"1.464ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 490 647\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D466\" d=\"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g></g></g></svg></mjx-container>的概率为<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"19.679ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 8698.1 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(751,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1140,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2180.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3236.6,0)\"><path data-c=\"1D466\" d=\"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3726.6,0) translate(0 -0.5)\"><path data-c=\"7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4004.6,0)\"><path data-c=\"1D451\" d=\"M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4524.6,0)\"><path data-c=\"1D45C\" d=\"M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(5009.6,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(5398.6,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6399.3,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(7455.1,0)\"><path data-c=\"1D467\" d=\"M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(7920.1,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(8309.1,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>。对于<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>的每一个取值<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.052ex\" height=\"1.025ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 465 453\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D467\" d=\"M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z\"></path></g></g></g></svg></mjx-container>，在<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>被自然赋予（do-操作）了值<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.294ex\" height=\"1.025ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 572 453\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></g></g></g></svg></mjx-container>时，其取值概率为<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20.066ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 8869.1 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(751,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1140,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2140.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3196.6,0)\"><path data-c=\"1D467\" d=\"M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3661.6,0) translate(0 -0.5)\"><path data-c=\"7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3939.6,0)\"><path data-c=\"1D451\" d=\"M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4459.6,0)\"><path data-c=\"1D45C\" d=\"M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4944.6,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(5333.6,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6463.3,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(7519.1,0)\"><path data-c=\"1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(8091.1,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(8480.1,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>。那么<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"7.173ex\" height=\"1.57ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 3170.6 694\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1129.8,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2407.6,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>的整体因果效应为</p>\n<script type=\"math/tex; mode=display\">\nP(Y=y|do(X=x)) = \\sum_{z}P(Y=y|do(Z=z))P(Z=z|do(X=x))\\\\\n= \\sum_{z}\\sum_{x'}P(Y=y|Z=z,X=x')P(X=x')P(Z=z|X=x)\\\\\n= \\sum_{z}P(z|x)\\sum_{x'}P(y|x',z)P(x')</script></li>\n</ul>\n<h2 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h2><ol>\n<li>Judea Pearl, Madlyn Glymour, Nicholas P.Jewell.Causal Inference in Statistics: A Primer.2016.WILEY</li>\n</ol>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: decodeURI(window.location.pathname),\n            distractionFreeMode: true // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","site":{"data":{}},"length":1892,"excerpt":"<p>为了解决其他变量/协变量干扰因果效应的问题，老爷子提出了后门准则 &amp; 前门准则。</p>","more":"<h2 id=\"后门准则\"><a href=\"#后门准则\" class=\"headerlink\" title=\"后门准则\"></a>后门准则</h2><ul>\n<li>假设在变量图中，想要探究 <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"7.173ex\" height=\"1.57ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 3170.6 694\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1129.8,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2407.6,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>的因果效应</li>\n<li>但是图中总有一些指向<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>的、看得见（图中有显示）却摸不着（实验中难以测量）的父变量</li>\n<li>后门准则所解决的就是由于<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>的可见不可得的父变量导致无法测量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>对<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>的因果效应的问题！</li>\n</ul>\n<hr>\n<p><strong>定义：后门准则（The Backdoor Criterion）</strong>：在有向无环图<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"11.03ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 4875.2 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D43A\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q492 659 471 656T418 643T357 615T294 567T236 496T189 394T158 260Q156 242 156 221Q156 173 170 136T206 79T256 45T308 28T353 24Q407 24 452 47T514 106Q517 114 529 161T541 214Q541 222 528 224T468 227H431Q425 233 425 235T427 254Q431 267 437 273H454Q494 271 594 271Q634 271 659 271T695 272T707 272Q721 272 721 263Q721 261 719 249Q714 230 709 228Q706 227 694 227Q674 227 653 224Q646 221 643 215T629 164Q620 131 614 108Q589 6 586 3Q584 1 581 1Q571 1 553 21T530 52Q530 53 528 52T522 47Q448 -22 322 -22Q201 -22 126 55T50 252Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1063.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2119.6,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2508.6,0)\"><path data-c=\"1D449\" d=\"M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3277.6,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3722.2,0)\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4486.2,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>中，给定一对变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.915ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 4824.2 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(389,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1241,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1685.7,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2448.7,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3115.4,0)\"><path data-c=\"2208\" d=\"M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4060.2,0)\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g></g></g></svg></mjx-container>，则变量集合<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>相对于<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.42ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 2837.7 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(389,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1241,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1685.7,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2448.7,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>满足后门准则，当且仅当<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>的任一元素均不是<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>的后继节点，并且<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>阻断了所有的在<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>和<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>之间且指向<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>的路径。</p>\n<hr>\n<p>如果变量集合<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>满足后门准则，那么<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>对<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>的因果效应如下推出：</p>\n<script type=\"math/tex; mode=display\">\nP(Y=y|do(X=x)) = \\sum_z P(Y=y|X=x,Z=z)P(Z=z)</script><ul>\n<li>“后门”是指那些连接<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>和<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>，既指向<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>又指向<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>的羊肠小道，如<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"13.064ex\" height=\"1.595ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 5774.1 705\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1129.8,0)\"><path data-c=\"2190\" d=\"M944 261T944 250T929 230H165Q167 228 182 216T211 189T244 152T277 96T303 25Q308 7 308 0Q308 -11 288 -11Q281 -11 278 -11T272 -7T267 2T263 21Q245 94 195 151T73 236Q58 242 55 247Q55 254 59 257T73 264Q121 283 158 314T215 375T247 434T264 480L267 497Q269 503 270 505T275 509T288 511Q308 511 308 500Q308 493 303 475Q293 438 278 406T246 352T215 315T185 287T165 270H929Q944 261 944 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2407.6,0)\"><path data-c=\"1D44A\" d=\"M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3733.3,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(5011.1,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container></li>\n<li>“后门”的存在使得<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>和<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>是相关的，但这种关系不一定是因果的</li>\n<li>满足后门准则的变量不能是<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>的后代，否则<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>会因果作用于这类变量，而这类变量又会继续影响<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>1。</li>\n<li>满足后门准则的变量必须是在逻辑图中可见的，而不能是不可观测的协变量(confounders)!</li>\n</ul>\n<h2 id=\"前门准则\"><a href=\"#前门准则\" class=\"headerlink\" title=\"前门准则\"></a>前门准则</h2><ul>\n<li>仍然假设试图探究 <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"7.173ex\" height=\"1.57ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 3170.6 694\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1129.8,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2407.6,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>的因果效应</li>\n<li>后门准则的一大要求是，满足后门准则的变量在逻辑图中是可见的。问题在于，这一条件不一定能时时刻刻都成立。<ul>\n<li>例如：<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.735ex\" height=\"1.595ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 767 705\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D448\" d=\"M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z\"></path></g></g></g></svg></mjx-container>为协变量(confounders)，并且<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"12.428ex\" height=\"1.595ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 5493.1 705\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1129.8,0)\"><path data-c=\"2190\" d=\"M944 261T944 250T929 230H165Q167 228 182 216T211 189T244 152T277 96T303 25Q308 7 308 0Q308 -11 288 -11Q281 -11 278 -11T272 -7T267 2T263 21Q245 94 195 151T73 236Q58 242 55 247Q55 254 59 257T73 264Q121 283 158 314T215 375T247 434T264 480L267 497Q269 503 270 505T275 509T288 511Q308 511 308 500Q308 493 303 475Q293 438 278 406T246 352T215 315T185 287T165 270H929Q944 261 944 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2407.6,0)\"><path data-c=\"1D448\" d=\"M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3452.3,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4730.1,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>。即便这是<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>的唯一的“后门”，由于<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.735ex\" height=\"1.595ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 767 705\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D448\" d=\"M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z\"></path></g></g></g></svg></mjx-container>不可观测，因此<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.735ex\" height=\"1.595ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 767 705\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D448\" d=\"M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z\"></path></g></g></g></svg></mjx-container>不能满足后门准则。</li>\n</ul>\n</li>\n<li>前门准则所解决的正是这样的问题！</li>\n</ul>\n<hr>\n<p><strong>定义：前门准则（The Front-Door Criterion）</strong>：给定一个变量集合<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>，<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>相对于变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.42ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 2837.7 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(389,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1241,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1685.7,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2448.7,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>满足前门准则，当且仅当<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>同时满足以下3个条件：</p>\n<ol>\n<li><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>中断（intercept）所有从<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>到<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>的有向边；</li>\n<li>不存在关于<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.33ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 2797.7 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(389,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1241,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1685.7,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2408.7,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>的后门；</li>\n<li>所有关于<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.128ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 2708.7 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(389,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1112,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1556.7,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2319.7,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>的后门均被<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>阻断。</li>\n</ol>\n<hr>\n<p>如果<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>满足前门路径，并且<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.96ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 4844.2 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(751,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1140,0)\"><path data-c=\"1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1712,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2156.7,0)\"><path data-c=\"1D467\" d=\"M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2621.7,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3288.4,0)\"><path data-c=\"3E\" d=\"M84 520Q84 528 88 533T96 539L99 540Q106 540 253 471T544 334L687 265Q694 260 694 250T687 235Q685 233 395 96L107 -40H101Q83 -38 83 -20Q83 -19 83 -17Q82 -10 98 -1Q117 9 248 71Q326 108 378 132L626 250L378 368Q90 504 86 509Q84 513 84 520Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(4344.2,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g></g></g></svg></mjx-container>，那么<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"7.173ex\" height=\"1.57ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 3170.6 694\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1129.8,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2407.6,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>的因果效应是可识别的，并且可按照如下方式计算：</p>\n<script type=\"math/tex; mode=display\">\nP(y|do(x)) = \\sum_{z}P(z|x)\\sum_{x'}P(y|x',z)P(x')</script><p>其推导原理如下：</p>\n<ul>\n<li>由条件2可知，由于不存在<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.33ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 2797.7 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(389,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1241,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1685.7,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2408.7,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>的后门，因此：</li>\n</ul>\n<script type=\"math/tex; mode=display\">\nP(Z=z|do(X=x)) = P(Z=z|X=x)</script><ul>\n<li><p>由条件1可知，<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.881ex\" height=\"1.57ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 3041.6 694\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1000.8,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2278.6,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container> 。因此可以使用后门准则计算 <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.881ex\" height=\"1.57ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 3041.6 694\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1000.8,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2278.6,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>的因果效应（书上p68式3.13少写了<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"9.698ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 4286.6 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(751,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1140,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2269.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3325.6,0)\"><path data-c=\"1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3897.6,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>）：</p>\n<script type=\"math/tex; mode=display\">\nP(Y=y|do(Z=z)) = \\sum_{x}P(Y=y|Z=z,X=x)P(X=x)</script></li>\n<li><p>接下来考虑到<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>对<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>的整体因果效应。如果<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>被自然赋予（do-操作）了值<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.052ex\" height=\"1.025ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 465 453\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D467\" d=\"M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z\"></path></g></g></g></svg></mjx-container>，那么<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>的取值为<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.464ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.109ex\" height=\"1.464ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 490 647\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D466\" d=\"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g></g></g></svg></mjx-container>的概率为<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"19.679ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 8698.1 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(751,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1140,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2180.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3236.6,0)\"><path data-c=\"1D466\" d=\"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3726.6,0) translate(0 -0.5)\"><path data-c=\"7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4004.6,0)\"><path data-c=\"1D451\" d=\"M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4524.6,0)\"><path data-c=\"1D45C\" d=\"M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(5009.6,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(5398.6,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6399.3,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(7455.1,0)\"><path data-c=\"1D467\" d=\"M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(7920.1,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(8309.1,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>。对于<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>的每一个取值<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.052ex\" height=\"1.025ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 465 453\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D467\" d=\"M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z\"></path></g></g></g></svg></mjx-container>，在<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>被自然赋予（do-操作）了值<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.294ex\" height=\"1.025ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 572 453\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></g></g></g></svg></mjx-container>时，其取值概率为<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20.066ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 8869.1 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(751,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1140,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2140.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3196.6,0)\"><path data-c=\"1D467\" d=\"M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3661.6,0) translate(0 -0.5)\"><path data-c=\"7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3939.6,0)\"><path data-c=\"1D451\" d=\"M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4459.6,0)\"><path data-c=\"1D45C\" d=\"M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4944.6,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(5333.6,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6463.3,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(7519.1,0)\"><path data-c=\"1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(8091.1,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(8480.1,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>。那么<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"7.173ex\" height=\"1.57ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 3170.6 694\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1129.8,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2407.6,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>的整体因果效应为</p>\n<script type=\"math/tex; mode=display\">\nP(Y=y|do(X=x)) = \\sum_{z}P(Y=y|do(Z=z))P(Z=z|do(X=x))\\\\\n= \\sum_{z}\\sum_{x'}P(Y=y|Z=z,X=x')P(X=x')P(Z=z|X=x)\\\\\n= \\sum_{z}P(z|x)\\sum_{x'}P(y|x',z)P(x')</script></li>\n</ul>\n<h2 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h2><ol>\n<li>Judea Pearl, Madlyn Glymour, Nicholas P.Jewell.Causal Inference in Statistics: A Primer.2016.WILEY</li>\n</ol>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: decodeURI(window.location.pathname),\n            distractionFreeMode: true // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>"},{"title":"近期概况（毕业）","mathjax":true,"codeblock":{"enable":true,"show_result":true},"date":"2022-07-11T03:35:49.000Z","_content":"\n毕业季的种种回顾。\n\n<!--more-->\n\n没想到距离上一次发Blog已经将近两个月了呀。\n\n这两个月以来，为毕业手续四处奔波。毕业论文的撰写、修改、答辩；离校手续单的项目一个一个地盖章；打包行李，搬宿舍；与朋友们的道别。许多事件，都成为了“最后一次”。如，最后一次刷本科校园卡；最后一次用宿舍洗衣机；最后一次和某某某吃饭（也许是最后一次吧）。当这些事情一一做完，终于意识到自己要毕业了。\n\n祝大家毕业前程似锦！\n\n无论成败，朝阳一样地洒在每个人身上。\n\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: document.title+document.date,\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","source":"_posts/2022-07-11-recent.md","raw":"---\ntitle: 近期概况（毕业）\nmathjax: true\ncodeblock:\n  enable: true\n  show_result: true\ndate: 2022-07-11 11:35:49\ntags:\ncategories:\n---\n\n毕业季的种种回顾。\n\n<!--more-->\n\n没想到距离上一次发Blog已经将近两个月了呀。\n\n这两个月以来，为毕业手续四处奔波。毕业论文的撰写、修改、答辩；离校手续单的项目一个一个地盖章；打包行李，搬宿舍；与朋友们的道别。许多事件，都成为了“最后一次”。如，最后一次刷本科校园卡；最后一次用宿舍洗衣机；最后一次和某某某吃饭（也许是最后一次吧）。当这些事情一一做完，终于意识到自己要毕业了。\n\n祝大家毕业前程似锦！\n\n无论成败，朝阳一样地洒在每个人身上。\n\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: document.title+document.date,\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","slug":"2022-07-11-recent","published":1,"updated":"2022-08-19T08:56:23.025Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cludw9n9w001s9wv98tvvglvr","content":"<p>毕业季的种种回顾。</p>\n<span id=\"more\"></span>\n<p>没想到距离上一次发Blog已经将近两个月了呀。</p>\n<p>这两个月以来，为毕业手续四处奔波。毕业论文的撰写、修改、答辩；离校手续单的项目一个一个地盖章；打包行李，搬宿舍；与朋友们的道别。许多事件，都成为了“最后一次”。如，最后一次刷本科校园卡；最后一次用宿舍洗衣机；最后一次和某某某吃饭（也许是最后一次吧）。当这些事情一一做完，终于意识到自己要毕业了。</p>\n<p>祝大家毕业前程似锦！</p>\n<p>无论成败，朝阳一样地洒在每个人身上。</p>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: document.title+document.date,\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","site":{"data":{}},"length":535,"excerpt":"<p>毕业季的种种回顾。</p>","more":"<p>没想到距离上一次发Blog已经将近两个月了呀。</p>\n<p>这两个月以来，为毕业手续四处奔波。毕业论文的撰写、修改、答辩；离校手续单的项目一个一个地盖章；打包行李，搬宿舍；与朋友们的道别。许多事件，都成为了“最后一次”。如，最后一次刷本科校园卡；最后一次用宿舍洗衣机；最后一次和某某某吃饭（也许是最后一次吧）。当这些事情一一做完，终于意识到自己要毕业了。</p>\n<p>祝大家毕业前程似锦！</p>\n<p>无论成败，朝阳一样地洒在每个人身上。</p>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: document.title+document.date,\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>"},{"title":"变分推断学习笔记.1","mathjax":true,"codeblock":{"enable":true,"show_result":true},"date":"2022-08-19T08:13:47.000Z","_content":"变分推断的基本概念、证据下界（ELBO）。\n<!--more-->\n\n### 背景\n- 变分推断（Variational Inference, VI）主要用于解决大数据场景下的隐变量后验分布估计问题（在数据量较小时，可以使用MCMC方法）。给定一个数据集中的观测值$X$和隐变量$Z$，隐变量$Z$会影响观测值$X$的取值，即$Z\\to X$。将$Z$和$X$当作随机变量，我们希望求得对$Z$的后验分布$p(Z|X)$的估计，记作$q(Z)$。\n- 变分推断的本质是选取一个恰当的分布族$\\mathcal{L}$，从该分布族中选取一个最好的$q(Z)$，使得$q(Z)$与$p(Z|X)$尽可能接近。\n\n### 两个分布函数的距离度量\n- VI中使用KL散度（Kullback & Leibler divergence）度量$q(Z)$与$p(Z|X)$的相似性，即\n\n$$\nKL(q(Z)||p(Z|X)) = E_Z\\left[\\log\\frac{q(Z)}{p(Z|X)}\\right] \n$$\n\n- 那么最优的后验分布估计为：\n  \n$$\nq^*(Z) = {\\arg\\min}_{q(Z)\\in\\mathcal{L}}KL(q(Z)||p(Z|X))\n$$\n\n#### 证据下界（ELBO）的引入\n- 然而上式中的$p(Z|X)$是难以计算的：\n  \n$$\np(Z|X) = \\frac{p(Z,X)}{p(X)}=\\frac{p(Z,X)}{\\int_{-\\infty}^{+\\infty}p(X|Z)p(Z)dZ}\n$$\n\n- 计算难点主要在于观测变量的边缘分布$p(X)$（也被称作**证据(evidence)**）。如果隐变量维度很高，那么计算开销将非常大。为此，需要在$KL(q(Z)||p(Z|X))$动一些手脚：\n  \n$$\nKL(q(Z)||p(Z|X)) = E_Z\\left[\\log\\frac{q(Z)}{p(Z|X)}\\right]\\\\\n= E_Z[\\log q(Z)] - E_Z[\\log p(Z|X)]\\\\\n= E_Z[\\log q(Z)] - E_Z[\\log p(Z,X)] + E_Z[\\log p(X)] \\\\\n= - ELBO(q) + E_Z[\\log p(X)]\n$$\n\n- 由上面的变换可知，由于$KL(q(Z)||p(Z|X))$取期望的对象是$Z$，这对于证据$p(X)$是没有关系的！因此我们只需要计算式中$ELBO(q)$，将其最大化，即能最小化$KL(q(Z)||p(Z|X))$：\n  \n$$\nELBO(q) = E_Z[\\log p(Z,X)] - E_Z[\\log q(Z)]\n$$\n$$\nq^*(Z) = {\\arg\\max}_{q(Z)\\in\\mathcal{L}}ELBO(q)\n$$\n\n#### ELBO的性质\n- 我们对ELBO做一些变换：\n$$\nELBO(q) = E_Z[\\log p(Z,X)] - E_Z[\\log q(Z)] \\\\\n= E_Z[\\log p(X|Z)] + E_Z[\\log p(Z)] - E_Z[\\log q(Z)] \\\\\n= E_Z[\\log p(X|Z)] - KL(q(Z)||p(Z))\n$$\n- 可见ELBO由**观测变量的后验分布**和**隐变量估计分布与其先验分布的KL散度**两部分组成（注意KL散度是非对称的）。因此最大化$ELBO(q)$相当于同时做以下两件事：\n  1. 最大化**观测变量**的后验分布对数期望\n  2. 使隐变量估计分布与其先验分布尽量接近\n  - 是不是有点贝叶斯推断的感觉了？\n- ELBO 的另一个性质来源于它的名字，即证据（的）下界：\n$$\n \\log p(X) = E_Z[\\log p(X)] \\\\\n = KL(q(Z)||p(Z|X)) + ELBO(q) \\\\\n \\geq ELBO(q)\n$$\n- 关键点在于$KL(\\cdot)\\geq 0$。VI的目标是最大化ELBO，而ELBO最大不会超过$\\log p(X)$。个人认为这一结论说明，观测数据本身质量好坏决定了模型的拟合效果。因此数据在VI（乃至机器学习）中扮演极端重要的角色。\n\n### 补充：$KL(\\cdot)\\geq 0$ 的证明\n- 对于任意的两个概率密度函数$p(x)$和$q(x)$，\n  $$\nKL(q(x)||p(x)) = E_{q(x)}\\left[\\log \\frac{q(x)}{p(x)}\\right]\n  $$\n- 证明的核心在于对log函数（凹函数）使用Jensen不等式。证明如下：\n$$\n E_{q(x)}\\left[\\log \\frac{q(x)}{p(x)}\\right] = - E_{q(x)}\\left[\\log \\frac{p(x)}{q(x)}\\right]\n$$\n$$\n\\geq -\\log E_{q(x)}\\left[\\frac{p(x)}{q(x)}\\right]\\quad\\text{(Jensen 不等式)}\n$$\n$$\n= -\\log\\int_{-\\infty}^{+\\infty}\\frac{p(x)}{q(x)}\\cdot q(x) dx\n$$\n$$\n= -\\log\\int_{-\\infty}^{+\\infty}\\frac{p(x)}{q(x)}\\cdot q(x) dx\n$$\n$$\n= -\\log\\int_{-\\infty}^{+\\infty}p(x)dx\n$$\n$$\n= 0  \\quad\\text{(概率密度函数的归一化性质)}\n$$\n\n### 参考文献\n[1] David M. Blei, Alp Kucukelbir, & Jon D. McAuliffe (2016). Variational Inference: A Review for Statisticians. CoRR, abs/1601.00670.\n\n\n  \n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: document.title+document.date,\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","source":"_posts/2022-08-19-vi.md","raw":"---\ntitle: 变分推断学习笔记.1\nmathjax: true\ncodeblock:\n  enable: true\n  show_result: true\ndate: 2022-08-19 16:13:47\ntags:\ncategories:\n---\n变分推断的基本概念、证据下界（ELBO）。\n<!--more-->\n\n### 背景\n- 变分推断（Variational Inference, VI）主要用于解决大数据场景下的隐变量后验分布估计问题（在数据量较小时，可以使用MCMC方法）。给定一个数据集中的观测值$X$和隐变量$Z$，隐变量$Z$会影响观测值$X$的取值，即$Z\\to X$。将$Z$和$X$当作随机变量，我们希望求得对$Z$的后验分布$p(Z|X)$的估计，记作$q(Z)$。\n- 变分推断的本质是选取一个恰当的分布族$\\mathcal{L}$，从该分布族中选取一个最好的$q(Z)$，使得$q(Z)$与$p(Z|X)$尽可能接近。\n\n### 两个分布函数的距离度量\n- VI中使用KL散度（Kullback & Leibler divergence）度量$q(Z)$与$p(Z|X)$的相似性，即\n\n$$\nKL(q(Z)||p(Z|X)) = E_Z\\left[\\log\\frac{q(Z)}{p(Z|X)}\\right] \n$$\n\n- 那么最优的后验分布估计为：\n  \n$$\nq^*(Z) = {\\arg\\min}_{q(Z)\\in\\mathcal{L}}KL(q(Z)||p(Z|X))\n$$\n\n#### 证据下界（ELBO）的引入\n- 然而上式中的$p(Z|X)$是难以计算的：\n  \n$$\np(Z|X) = \\frac{p(Z,X)}{p(X)}=\\frac{p(Z,X)}{\\int_{-\\infty}^{+\\infty}p(X|Z)p(Z)dZ}\n$$\n\n- 计算难点主要在于观测变量的边缘分布$p(X)$（也被称作**证据(evidence)**）。如果隐变量维度很高，那么计算开销将非常大。为此，需要在$KL(q(Z)||p(Z|X))$动一些手脚：\n  \n$$\nKL(q(Z)||p(Z|X)) = E_Z\\left[\\log\\frac{q(Z)}{p(Z|X)}\\right]\\\\\n= E_Z[\\log q(Z)] - E_Z[\\log p(Z|X)]\\\\\n= E_Z[\\log q(Z)] - E_Z[\\log p(Z,X)] + E_Z[\\log p(X)] \\\\\n= - ELBO(q) + E_Z[\\log p(X)]\n$$\n\n- 由上面的变换可知，由于$KL(q(Z)||p(Z|X))$取期望的对象是$Z$，这对于证据$p(X)$是没有关系的！因此我们只需要计算式中$ELBO(q)$，将其最大化，即能最小化$KL(q(Z)||p(Z|X))$：\n  \n$$\nELBO(q) = E_Z[\\log p(Z,X)] - E_Z[\\log q(Z)]\n$$\n$$\nq^*(Z) = {\\arg\\max}_{q(Z)\\in\\mathcal{L}}ELBO(q)\n$$\n\n#### ELBO的性质\n- 我们对ELBO做一些变换：\n$$\nELBO(q) = E_Z[\\log p(Z,X)] - E_Z[\\log q(Z)] \\\\\n= E_Z[\\log p(X|Z)] + E_Z[\\log p(Z)] - E_Z[\\log q(Z)] \\\\\n= E_Z[\\log p(X|Z)] - KL(q(Z)||p(Z))\n$$\n- 可见ELBO由**观测变量的后验分布**和**隐变量估计分布与其先验分布的KL散度**两部分组成（注意KL散度是非对称的）。因此最大化$ELBO(q)$相当于同时做以下两件事：\n  1. 最大化**观测变量**的后验分布对数期望\n  2. 使隐变量估计分布与其先验分布尽量接近\n  - 是不是有点贝叶斯推断的感觉了？\n- ELBO 的另一个性质来源于它的名字，即证据（的）下界：\n$$\n \\log p(X) = E_Z[\\log p(X)] \\\\\n = KL(q(Z)||p(Z|X)) + ELBO(q) \\\\\n \\geq ELBO(q)\n$$\n- 关键点在于$KL(\\cdot)\\geq 0$。VI的目标是最大化ELBO，而ELBO最大不会超过$\\log p(X)$。个人认为这一结论说明，观测数据本身质量好坏决定了模型的拟合效果。因此数据在VI（乃至机器学习）中扮演极端重要的角色。\n\n### 补充：$KL(\\cdot)\\geq 0$ 的证明\n- 对于任意的两个概率密度函数$p(x)$和$q(x)$，\n  $$\nKL(q(x)||p(x)) = E_{q(x)}\\left[\\log \\frac{q(x)}{p(x)}\\right]\n  $$\n- 证明的核心在于对log函数（凹函数）使用Jensen不等式。证明如下：\n$$\n E_{q(x)}\\left[\\log \\frac{q(x)}{p(x)}\\right] = - E_{q(x)}\\left[\\log \\frac{p(x)}{q(x)}\\right]\n$$\n$$\n\\geq -\\log E_{q(x)}\\left[\\frac{p(x)}{q(x)}\\right]\\quad\\text{(Jensen 不等式)}\n$$\n$$\n= -\\log\\int_{-\\infty}^{+\\infty}\\frac{p(x)}{q(x)}\\cdot q(x) dx\n$$\n$$\n= -\\log\\int_{-\\infty}^{+\\infty}\\frac{p(x)}{q(x)}\\cdot q(x) dx\n$$\n$$\n= -\\log\\int_{-\\infty}^{+\\infty}p(x)dx\n$$\n$$\n= 0  \\quad\\text{(概率密度函数的归一化性质)}\n$$\n\n### 参考文献\n[1] David M. Blei, Alp Kucukelbir, & Jon D. McAuliffe (2016). Variational Inference: A Review for Statisticians. CoRR, abs/1601.00670.\n\n\n  \n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: document.title+document.date,\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","slug":"2022-08-19-vi","published":1,"updated":"2022-09-27T07:46:20.343Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cludw9n9x001v9wv900ex6qmf","content":"<p>变分推断的基本概念、证据下界（ELBO）。<br><span id=\"more\"></span></p>\n<h3 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h3><ul>\n<li>变分推断（Variational Inference, VI）主要用于解决大数据场景下的隐变量后验分布估计问题（在数据量较小时，可以使用MCMC方法）。给定一个数据集中的观测值<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>和隐变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>，隐变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>会影响观测值<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>的取值，即<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"7.083ex\" height=\"1.57ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 3130.6 694\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1000.8,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2278.6,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>。将<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>和<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>当作随机变量，我们希望求得对<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>的后验分布<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"7.09ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 3134 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(503,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(892,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1615,0) translate(0 -0.5)\"><path data-c=\"7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1893,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2745,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>的估计，记作<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.437ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 1961 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45E\" d=\"M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(460,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(849,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1572,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>。</li>\n<li>变分推断的本质是选取一个恰当的分布族<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.561ex\" height=\"1.645ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -705 690 727\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"4C\" d=\"M62 -22T47 -22T32 -11Q32 -1 56 24T83 55Q113 96 138 172T180 320T234 473T323 609Q364 649 419 677T531 705Q559 705 578 696T604 671T615 645T618 623V611Q618 582 615 571T598 548Q581 531 558 520T518 509Q503 509 503 520Q503 523 505 536T507 560Q507 590 494 610T452 630Q423 630 410 617Q367 578 333 492T271 301T233 170Q211 123 204 112L198 103L224 102Q281 102 369 79T509 52H523Q535 64 544 87T579 128Q616 152 641 152Q656 152 656 142Q656 101 588 40T433 -22Q381 -22 289 1T156 28L141 29L131 20Q111 0 87 -11Z\"></path></g></g></g></g></svg></mjx-container>，从该分布族中选取一个最好的<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.437ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 1961 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45E\" d=\"M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(460,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(849,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1572,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>，使得<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.437ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 1961 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45E\" d=\"M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(460,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(849,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1572,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>与<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"7.09ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 3134 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(503,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(892,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1615,0) translate(0 -0.5)\"><path data-c=\"7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1893,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2745,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>尽可能接近。</li>\n</ul>\n<h3 id=\"两个分布函数的距离度量\"><a href=\"#两个分布函数的距离度量\" class=\"headerlink\" title=\"两个分布函数的距离度量\"></a>两个分布函数的距离度量</h3><ul>\n<li>VI中使用KL散度（Kullback &amp; Leibler divergence）度量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.437ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 1961 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45E\" d=\"M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(460,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(849,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1572,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>与<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"7.09ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 3134 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(503,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(892,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1615,0) translate(0 -0.5)\"><path data-c=\"7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1893,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2745,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>的相似性，即</li>\n</ul>\n<script type=\"math/tex; mode=display\">\nKL(q(Z)||p(Z|X)) = E_Z\\left[\\log\\frac{q(Z)}{p(Z|X)}\\right]</script><ul>\n<li>那么最优的后验分布估计为：</li>\n</ul>\n<script type=\"math/tex; mode=display\">\nq^*(Z) = {\\arg\\min}_{q(Z)\\in\\mathcal{L}}KL(q(Z)||p(Z|X))</script><h4 id=\"证据下界（ELBO）的引入\"><a href=\"#证据下界（ELBO）的引入\" class=\"headerlink\" title=\"证据下界（ELBO）的引入\"></a>证据下界（ELBO）的引入</h4><ul>\n<li>然而上式中的<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"7.09ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 3134 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(503,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(892,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1615,0) translate(0 -0.5)\"><path data-c=\"7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1893,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2745,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>是难以计算的：</li>\n</ul>\n<script type=\"math/tex; mode=display\">\np(Z|X) = \\frac{p(Z,X)}{p(X)}=\\frac{p(Z,X)}{\\int_{-\\infty}^{+\\infty}p(X|Z)p(Z)dZ}</script><ul>\n<li>计算难点主要在于观测变量的边缘分布<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.826ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 2133 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(503,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(892,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1744,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>（也被称作<strong>证据(evidence)</strong>）。如果隐变量维度很高，那么计算开销将非常大。为此，需要在<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"18.097ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 7999 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D43E\" d=\"M285 628Q285 635 228 637Q205 637 198 638T191 647Q191 649 193 661Q199 681 203 682Q205 683 214 683H219Q260 681 355 681Q389 681 418 681T463 682T483 682Q500 682 500 674Q500 669 497 660Q496 658 496 654T495 648T493 644T490 641T486 639T479 638T470 637T456 637Q416 636 405 634T387 623L306 305Q307 305 490 449T678 597Q692 611 692 620Q692 635 667 637Q651 637 651 648Q651 650 654 662T659 677Q662 682 676 682Q680 682 711 681T791 680Q814 680 839 681T869 682Q889 682 889 672Q889 650 881 642Q878 637 862 637Q787 632 726 586Q710 576 656 534T556 455L509 418L518 396Q527 374 546 329T581 244Q656 67 661 61Q663 59 666 57Q680 47 717 46H738Q744 38 744 37T741 19Q737 6 731 0H720Q680 3 625 3Q503 3 488 0H478Q472 6 472 9T474 27Q478 40 480 43T491 46H494Q544 46 544 71Q544 75 517 141T485 216L427 354L359 301L291 248L268 155Q245 63 245 58Q245 51 253 49T303 46H334Q340 37 340 35Q340 19 333 5Q328 0 317 0Q314 0 280 1T180 2Q118 2 85 2T49 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(889,0)\"><path data-c=\"1D43F\" d=\"M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1570,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1959,0)\"><path data-c=\"1D45E\" d=\"M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2419,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2808,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3531,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3920,0) translate(0 -0.5)\"><path data-c=\"7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4198,0) translate(0 -0.5)\"><path data-c=\"7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4476,0)\"><path data-c=\"1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4979,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(5368,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6091,0) translate(0 -0.5)\"><path data-c=\"7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(6369,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(7221,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(7610,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>动一些手脚：</li>\n</ul>\n<script type=\"math/tex; mode=display\">\nKL(q(Z)||p(Z|X)) = E_Z\\left[\\log\\frac{q(Z)}{p(Z|X)}\\right]\\\\\n= E_Z[\\log q(Z)] - E_Z[\\log p(Z|X)]\\\\\n= E_Z[\\log q(Z)] - E_Z[\\log p(Z,X)] + E_Z[\\log p(X)] \\\\\n= - ELBO(q) + E_Z[\\log p(X)]</script><ul>\n<li>由上面的变换可知，由于<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"18.097ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 7999 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D43E\" d=\"M285 628Q285 635 228 637Q205 637 198 638T191 647Q191 649 193 661Q199 681 203 682Q205 683 214 683H219Q260 681 355 681Q389 681 418 681T463 682T483 682Q500 682 500 674Q500 669 497 660Q496 658 496 654T495 648T493 644T490 641T486 639T479 638T470 637T456 637Q416 636 405 634T387 623L306 305Q307 305 490 449T678 597Q692 611 692 620Q692 635 667 637Q651 637 651 648Q651 650 654 662T659 677Q662 682 676 682Q680 682 711 681T791 680Q814 680 839 681T869 682Q889 682 889 672Q889 650 881 642Q878 637 862 637Q787 632 726 586Q710 576 656 534T556 455L509 418L518 396Q527 374 546 329T581 244Q656 67 661 61Q663 59 666 57Q680 47 717 46H738Q744 38 744 37T741 19Q737 6 731 0H720Q680 3 625 3Q503 3 488 0H478Q472 6 472 9T474 27Q478 40 480 43T491 46H494Q544 46 544 71Q544 75 517 141T485 216L427 354L359 301L291 248L268 155Q245 63 245 58Q245 51 253 49T303 46H334Q340 37 340 35Q340 19 333 5Q328 0 317 0Q314 0 280 1T180 2Q118 2 85 2T49 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(889,0)\"><path data-c=\"1D43F\" d=\"M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1570,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1959,0)\"><path data-c=\"1D45E\" d=\"M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2419,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2808,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3531,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3920,0) translate(0 -0.5)\"><path data-c=\"7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4198,0) translate(0 -0.5)\"><path data-c=\"7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4476,0)\"><path data-c=\"1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4979,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(5368,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6091,0) translate(0 -0.5)\"><path data-c=\"7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(6369,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(7221,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(7610,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>取期望的对象是<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>，这对于证据<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.826ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 2133 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(503,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(892,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1744,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>是没有关系的！因此我们只需要计算式中<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"9.514ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 4205 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(764,0)\"><path data-c=\"1D43F\" d=\"M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1445,0)\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2204,0)\"><path data-c=\"1D442\" d=\"M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2967,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3356,0)\"><path data-c=\"1D45E\" d=\"M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3816,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>，将其最大化，即能最小化<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"18.097ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 7999 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D43E\" d=\"M285 628Q285 635 228 637Q205 637 198 638T191 647Q191 649 193 661Q199 681 203 682Q205 683 214 683H219Q260 681 355 681Q389 681 418 681T463 682T483 682Q500 682 500 674Q500 669 497 660Q496 658 496 654T495 648T493 644T490 641T486 639T479 638T470 637T456 637Q416 636 405 634T387 623L306 305Q307 305 490 449T678 597Q692 611 692 620Q692 635 667 637Q651 637 651 648Q651 650 654 662T659 677Q662 682 676 682Q680 682 711 681T791 680Q814 680 839 681T869 682Q889 682 889 672Q889 650 881 642Q878 637 862 637Q787 632 726 586Q710 576 656 534T556 455L509 418L518 396Q527 374 546 329T581 244Q656 67 661 61Q663 59 666 57Q680 47 717 46H738Q744 38 744 37T741 19Q737 6 731 0H720Q680 3 625 3Q503 3 488 0H478Q472 6 472 9T474 27Q478 40 480 43T491 46H494Q544 46 544 71Q544 75 517 141T485 216L427 354L359 301L291 248L268 155Q245 63 245 58Q245 51 253 49T303 46H334Q340 37 340 35Q340 19 333 5Q328 0 317 0Q314 0 280 1T180 2Q118 2 85 2T49 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(889,0)\"><path data-c=\"1D43F\" d=\"M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1570,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1959,0)\"><path data-c=\"1D45E\" d=\"M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2419,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2808,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3531,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3920,0) translate(0 -0.5)\"><path data-c=\"7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4198,0) translate(0 -0.5)\"><path data-c=\"7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4476,0)\"><path data-c=\"1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4979,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(5368,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6091,0) translate(0 -0.5)\"><path data-c=\"7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(6369,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(7221,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(7610,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>：</li>\n</ul>\n<script type=\"math/tex; mode=display\">\nELBO(q) = E_Z[\\log p(Z,X)] - E_Z[\\log q(Z)]</script><script type=\"math/tex; mode=display\">\nq^*(Z) = {\\arg\\max}_{q(Z)\\in\\mathcal{L}}ELBO(q)</script><h4 id=\"ELBO的性质\"><a href=\"#ELBO的性质\" class=\"headerlink\" title=\"ELBO的性质\"></a>ELBO的性质</h4><ul>\n<li>我们对ELBO做一些变换：<script type=\"math/tex; mode=display\">\nELBO(q) = E_Z[\\log p(Z,X)] - E_Z[\\log q(Z)] \\\\\n= E_Z[\\log p(X|Z)] + E_Z[\\log p(Z)] - E_Z[\\log q(Z)] \\\\\n= E_Z[\\log p(X|Z)] - KL(q(Z)||p(Z))</script></li>\n<li>可见ELBO由<strong>观测变量的后验分布</strong>和<strong>隐变量估计分布与其先验分布的KL散度</strong>两部分组成（注意KL散度是非对称的）。因此最大化<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"9.514ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 4205 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(764,0)\"><path data-c=\"1D43F\" d=\"M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1445,0)\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2204,0)\"><path data-c=\"1D442\" d=\"M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2967,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3356,0)\"><path data-c=\"1D45E\" d=\"M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3816,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>相当于同时做以下两件事：<ol>\n<li>最大化<strong>观测变量</strong>的后验分布对数期望</li>\n<li>使隐变量估计分布与其先验分布尽量接近</li>\n</ol>\n<ul>\n<li>是不是有点贝叶斯推断的感觉了？</li>\n</ul>\n</li>\n<li>ELBO 的另一个性质来源于它的名字，即证据（的）下界：<script type=\"math/tex; mode=display\">\n\\log p(X) = E_Z[\\log p(X)] \\\\\n= KL(q(Z)||p(Z|X)) + ELBO(q) \\\\\n\\geq ELBO(q)</script></li>\n<li>关键点在于<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.089ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 4459.6 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D43E\" d=\"M285 628Q285 635 228 637Q205 637 198 638T191 647Q191 649 193 661Q199 681 203 682Q205 683 214 683H219Q260 681 355 681Q389 681 418 681T463 682T483 682Q500 682 500 674Q500 669 497 660Q496 658 496 654T495 648T493 644T490 641T486 639T479 638T470 637T456 637Q416 636 405 634T387 623L306 305Q307 305 490 449T678 597Q692 611 692 620Q692 635 667 637Q651 637 651 648Q651 650 654 662T659 677Q662 682 676 682Q680 682 711 681T791 680Q814 680 839 681T869 682Q889 682 889 672Q889 650 881 642Q878 637 862 637Q787 632 726 586Q710 576 656 534T556 455L509 418L518 396Q527 374 546 329T581 244Q656 67 661 61Q663 59 666 57Q680 47 717 46H738Q744 38 744 37T741 19Q737 6 731 0H720Q680 3 625 3Q503 3 488 0H478Q472 6 472 9T474 27Q478 40 480 43T491 46H494Q544 46 544 71Q544 75 517 141T485 216L427 354L359 301L291 248L268 155Q245 63 245 58Q245 51 253 49T303 46H334Q340 37 340 35Q340 19 333 5Q328 0 317 0Q314 0 280 1T180 2Q118 2 85 2T49 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(889,0)\"><path data-c=\"1D43F\" d=\"M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1570,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1959,0)\"><path data-c=\"22C5\" d=\"M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2237,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2903.8,0)\"><path data-c=\"2265\" d=\"M83 616Q83 624 89 630T99 636Q107 636 253 568T543 431T687 361Q694 356 694 346T687 331Q685 329 395 192L107 56H101Q83 58 83 76Q83 77 83 79Q82 86 98 95Q117 105 248 167Q326 204 378 228L626 346L360 472Q291 505 200 548Q112 589 98 597T83 616ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(3959.6,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g></g></g></svg></mjx-container>。VI的目标是最大化ELBO，而ELBO最大不会超过<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"8.094ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 3577.7 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"6C\" d=\"M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z\"></path><path data-c=\"6F\" d=\"M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z\" transform=\"translate(278,0)\"></path><path data-c=\"67\" d=\"M329 409Q373 453 429 453Q459 453 472 434T485 396Q485 382 476 371T449 360Q416 360 412 390Q410 404 415 411Q415 412 416 414V415Q388 412 363 393Q355 388 355 386Q355 385 359 381T368 369T379 351T388 325T392 292Q392 230 343 187T222 143Q172 143 123 171Q112 153 112 133Q112 98 138 81Q147 75 155 75T227 73Q311 72 335 67Q396 58 431 26Q470 -13 470 -72Q470 -139 392 -175Q332 -206 250 -206Q167 -206 107 -175Q29 -140 29 -75Q29 -39 50 -15T92 18L103 24Q67 55 67 108Q67 155 96 193Q52 237 52 292Q52 355 102 398T223 442Q274 442 318 416L329 409ZM299 343Q294 371 273 387T221 404Q192 404 171 388T145 343Q142 326 142 292Q142 248 149 227T179 192Q196 182 222 182Q244 182 260 189T283 207T294 227T299 242Q302 258 302 292T299 343ZM403 -75Q403 -50 389 -34T348 -11T299 -2T245 0H218Q151 0 138 -6Q118 -15 107 -34T95 -74Q95 -84 101 -97T122 -127T170 -155T250 -167Q319 -167 361 -139T403 -75Z\" transform=\"translate(778,0)\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1278,0)\"><path data-c=\"2061\" d=\"\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1444.7,0)\"><path data-c=\"1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1947.7,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2336.7,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3188.7,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>。个人认为这一结论说明，观测数据本身质量好坏决定了模型的拟合效果。因此数据在VI（乃至机器学习）中扮演极端重要的角色。</li>\n</ul>\n<h3 id=\"补充：-KL-cdot-geq-0-的证明\"><a href=\"#补充：-KL-cdot-geq-0-的证明\" class=\"headerlink\" title=\"补充：$KL(\\cdot)\\geq 0$ 的证明\"></a>补充：<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.089ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 4459.6 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D43E\" d=\"M285 628Q285 635 228 637Q205 637 198 638T191 647Q191 649 193 661Q199 681 203 682Q205 683 214 683H219Q260 681 355 681Q389 681 418 681T463 682T483 682Q500 682 500 674Q500 669 497 660Q496 658 496 654T495 648T493 644T490 641T486 639T479 638T470 637T456 637Q416 636 405 634T387 623L306 305Q307 305 490 449T678 597Q692 611 692 620Q692 635 667 637Q651 637 651 648Q651 650 654 662T659 677Q662 682 676 682Q680 682 711 681T791 680Q814 680 839 681T869 682Q889 682 889 672Q889 650 881 642Q878 637 862 637Q787 632 726 586Q710 576 656 534T556 455L509 418L518 396Q527 374 546 329T581 244Q656 67 661 61Q663 59 666 57Q680 47 717 46H738Q744 38 744 37T741 19Q737 6 731 0H720Q680 3 625 3Q503 3 488 0H478Q472 6 472 9T474 27Q478 40 480 43T491 46H494Q544 46 544 71Q544 75 517 141T485 216L427 354L359 301L291 248L268 155Q245 63 245 58Q245 51 253 49T303 46H334Q340 37 340 35Q340 19 333 5Q328 0 317 0Q314 0 280 1T180 2Q118 2 85 2T49 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(889,0)\"><path data-c=\"1D43F\" d=\"M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1570,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1959,0)\"><path data-c=\"22C5\" d=\"M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2237,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2903.8,0)\"><path data-c=\"2265\" d=\"M83 616Q83 624 89 630T99 636Q107 636 253 568T543 431T687 361Q694 356 694 346T687 331Q685 329 395 192L107 56H101Q83 58 83 76Q83 77 83 79Q82 86 98 95Q117 105 248 167Q326 204 378 228L626 346L360 472Q291 505 200 548Q112 589 98 597T83 616ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(3959.6,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g></g></g></svg></mjx-container> 的证明</h3><ul>\n<li>对于任意的两个概率密度函数<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.192ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 1853 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(503,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(892,0)\"><path data-c=\"1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1464,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>和<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.095ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 1810 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45E\" d=\"M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(460,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(849,0)\"><path data-c=\"1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1421,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>，<script type=\"math/tex; mode=display\">\nKL(q(x)||p(x)) = E_{q(x)}\\left[\\log \\frac{q(x)}{p(x)}\\right]</script></li>\n<li>证明的核心在于对log函数（凹函数）使用Jensen不等式。证明如下：<script type=\"math/tex; mode=display\">\nE_{q(x)}\\left[\\log \\frac{q(x)}{p(x)}\\right] = - E_{q(x)}\\left[\\log \\frac{p(x)}{q(x)}\\right]</script><script type=\"math/tex; mode=display\">\n\\geq -\\log E_{q(x)}\\left[\\frac{p(x)}{q(x)}\\right]\\quad\\text{(Jensen 不等式)}</script><script type=\"math/tex; mode=display\">\n= -\\log\\int_{-\\infty}^{+\\infty}\\frac{p(x)}{q(x)}\\cdot q(x) dx</script><script type=\"math/tex; mode=display\">\n= -\\log\\int_{-\\infty}^{+\\infty}\\frac{p(x)}{q(x)}\\cdot q(x) dx</script><script type=\"math/tex; mode=display\">\n= -\\log\\int_{-\\infty}^{+\\infty}p(x)dx</script><script type=\"math/tex; mode=display\">\n= 0  \\quad\\text{(概率密度函数的归一化性质)}</script></li>\n</ul>\n<h3 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h3><p>[1] David M. Blei, Alp Kucukelbir, &amp; Jon D. McAuliffe (2016). Variational Inference: A Review for Statisticians. CoRR, abs/1601.00670.</p>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: document.title+document.date,\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","site":{"data":{}},"length":2426,"excerpt":"<p>变分推断的基本概念、证据下界（ELBO）。<br>","more":"</p>\n<h3 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h3><ul>\n<li>变分推断（Variational Inference, VI）主要用于解决大数据场景下的隐变量后验分布估计问题（在数据量较小时，可以使用MCMC方法）。给定一个数据集中的观测值<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>和隐变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>，隐变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>会影响观测值<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>的取值，即<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"7.083ex\" height=\"1.57ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 3130.6 694\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1000.8,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2278.6,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>。将<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>和<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>当作随机变量，我们希望求得对<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>的后验分布<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"7.09ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 3134 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(503,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(892,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1615,0) translate(0 -0.5)\"><path data-c=\"7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1893,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2745,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>的估计，记作<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.437ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 1961 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45E\" d=\"M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(460,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(849,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1572,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>。</li>\n<li>变分推断的本质是选取一个恰当的分布族<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.561ex\" height=\"1.645ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -705 690 727\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"4C\" d=\"M62 -22T47 -22T32 -11Q32 -1 56 24T83 55Q113 96 138 172T180 320T234 473T323 609Q364 649 419 677T531 705Q559 705 578 696T604 671T615 645T618 623V611Q618 582 615 571T598 548Q581 531 558 520T518 509Q503 509 503 520Q503 523 505 536T507 560Q507 590 494 610T452 630Q423 630 410 617Q367 578 333 492T271 301T233 170Q211 123 204 112L198 103L224 102Q281 102 369 79T509 52H523Q535 64 544 87T579 128Q616 152 641 152Q656 152 656 142Q656 101 588 40T433 -22Q381 -22 289 1T156 28L141 29L131 20Q111 0 87 -11Z\"></path></g></g></g></g></svg></mjx-container>，从该分布族中选取一个最好的<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.437ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 1961 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45E\" d=\"M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(460,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(849,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1572,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>，使得<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.437ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 1961 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45E\" d=\"M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(460,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(849,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1572,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>与<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"7.09ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 3134 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(503,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(892,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1615,0) translate(0 -0.5)\"><path data-c=\"7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1893,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2745,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>尽可能接近。</li>\n</ul>\n<h3 id=\"两个分布函数的距离度量\"><a href=\"#两个分布函数的距离度量\" class=\"headerlink\" title=\"两个分布函数的距离度量\"></a>两个分布函数的距离度量</h3><ul>\n<li>VI中使用KL散度（Kullback &amp; Leibler divergence）度量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.437ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 1961 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45E\" d=\"M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(460,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(849,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1572,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>与<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"7.09ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 3134 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(503,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(892,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1615,0) translate(0 -0.5)\"><path data-c=\"7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1893,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2745,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>的相似性，即</li>\n</ul>\n<script type=\"math/tex; mode=display\">\nKL(q(Z)||p(Z|X)) = E_Z\\left[\\log\\frac{q(Z)}{p(Z|X)}\\right]</script><ul>\n<li>那么最优的后验分布估计为：</li>\n</ul>\n<script type=\"math/tex; mode=display\">\nq^*(Z) = {\\arg\\min}_{q(Z)\\in\\mathcal{L}}KL(q(Z)||p(Z|X))</script><h4 id=\"证据下界（ELBO）的引入\"><a href=\"#证据下界（ELBO）的引入\" class=\"headerlink\" title=\"证据下界（ELBO）的引入\"></a>证据下界（ELBO）的引入</h4><ul>\n<li>然而上式中的<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"7.09ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 3134 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(503,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(892,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1615,0) translate(0 -0.5)\"><path data-c=\"7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1893,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2745,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>是难以计算的：</li>\n</ul>\n<script type=\"math/tex; mode=display\">\np(Z|X) = \\frac{p(Z,X)}{p(X)}=\\frac{p(Z,X)}{\\int_{-\\infty}^{+\\infty}p(X|Z)p(Z)dZ}</script><ul>\n<li>计算难点主要在于观测变量的边缘分布<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.826ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 2133 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(503,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(892,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1744,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>（也被称作<strong>证据(evidence)</strong>）。如果隐变量维度很高，那么计算开销将非常大。为此，需要在<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"18.097ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 7999 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D43E\" d=\"M285 628Q285 635 228 637Q205 637 198 638T191 647Q191 649 193 661Q199 681 203 682Q205 683 214 683H219Q260 681 355 681Q389 681 418 681T463 682T483 682Q500 682 500 674Q500 669 497 660Q496 658 496 654T495 648T493 644T490 641T486 639T479 638T470 637T456 637Q416 636 405 634T387 623L306 305Q307 305 490 449T678 597Q692 611 692 620Q692 635 667 637Q651 637 651 648Q651 650 654 662T659 677Q662 682 676 682Q680 682 711 681T791 680Q814 680 839 681T869 682Q889 682 889 672Q889 650 881 642Q878 637 862 637Q787 632 726 586Q710 576 656 534T556 455L509 418L518 396Q527 374 546 329T581 244Q656 67 661 61Q663 59 666 57Q680 47 717 46H738Q744 38 744 37T741 19Q737 6 731 0H720Q680 3 625 3Q503 3 488 0H478Q472 6 472 9T474 27Q478 40 480 43T491 46H494Q544 46 544 71Q544 75 517 141T485 216L427 354L359 301L291 248L268 155Q245 63 245 58Q245 51 253 49T303 46H334Q340 37 340 35Q340 19 333 5Q328 0 317 0Q314 0 280 1T180 2Q118 2 85 2T49 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(889,0)\"><path data-c=\"1D43F\" d=\"M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1570,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1959,0)\"><path data-c=\"1D45E\" d=\"M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2419,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2808,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3531,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3920,0) translate(0 -0.5)\"><path data-c=\"7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4198,0) translate(0 -0.5)\"><path data-c=\"7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4476,0)\"><path data-c=\"1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4979,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(5368,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6091,0) translate(0 -0.5)\"><path data-c=\"7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(6369,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(7221,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(7610,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>动一些手脚：</li>\n</ul>\n<script type=\"math/tex; mode=display\">\nKL(q(Z)||p(Z|X)) = E_Z\\left[\\log\\frac{q(Z)}{p(Z|X)}\\right]\\\\\n= E_Z[\\log q(Z)] - E_Z[\\log p(Z|X)]\\\\\n= E_Z[\\log q(Z)] - E_Z[\\log p(Z,X)] + E_Z[\\log p(X)] \\\\\n= - ELBO(q) + E_Z[\\log p(X)]</script><ul>\n<li>由上面的变换可知，由于<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"18.097ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 7999 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D43E\" d=\"M285 628Q285 635 228 637Q205 637 198 638T191 647Q191 649 193 661Q199 681 203 682Q205 683 214 683H219Q260 681 355 681Q389 681 418 681T463 682T483 682Q500 682 500 674Q500 669 497 660Q496 658 496 654T495 648T493 644T490 641T486 639T479 638T470 637T456 637Q416 636 405 634T387 623L306 305Q307 305 490 449T678 597Q692 611 692 620Q692 635 667 637Q651 637 651 648Q651 650 654 662T659 677Q662 682 676 682Q680 682 711 681T791 680Q814 680 839 681T869 682Q889 682 889 672Q889 650 881 642Q878 637 862 637Q787 632 726 586Q710 576 656 534T556 455L509 418L518 396Q527 374 546 329T581 244Q656 67 661 61Q663 59 666 57Q680 47 717 46H738Q744 38 744 37T741 19Q737 6 731 0H720Q680 3 625 3Q503 3 488 0H478Q472 6 472 9T474 27Q478 40 480 43T491 46H494Q544 46 544 71Q544 75 517 141T485 216L427 354L359 301L291 248L268 155Q245 63 245 58Q245 51 253 49T303 46H334Q340 37 340 35Q340 19 333 5Q328 0 317 0Q314 0 280 1T180 2Q118 2 85 2T49 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(889,0)\"><path data-c=\"1D43F\" d=\"M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1570,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1959,0)\"><path data-c=\"1D45E\" d=\"M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2419,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2808,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3531,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3920,0) translate(0 -0.5)\"><path data-c=\"7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4198,0) translate(0 -0.5)\"><path data-c=\"7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4476,0)\"><path data-c=\"1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4979,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(5368,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6091,0) translate(0 -0.5)\"><path data-c=\"7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(6369,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(7221,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(7610,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>取期望的对象是<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>，这对于证据<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.826ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 2133 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(503,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(892,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1744,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>是没有关系的！因此我们只需要计算式中<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"9.514ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 4205 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(764,0)\"><path data-c=\"1D43F\" d=\"M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1445,0)\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2204,0)\"><path data-c=\"1D442\" d=\"M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2967,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3356,0)\"><path data-c=\"1D45E\" d=\"M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3816,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>，将其最大化，即能最小化<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"18.097ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 7999 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D43E\" d=\"M285 628Q285 635 228 637Q205 637 198 638T191 647Q191 649 193 661Q199 681 203 682Q205 683 214 683H219Q260 681 355 681Q389 681 418 681T463 682T483 682Q500 682 500 674Q500 669 497 660Q496 658 496 654T495 648T493 644T490 641T486 639T479 638T470 637T456 637Q416 636 405 634T387 623L306 305Q307 305 490 449T678 597Q692 611 692 620Q692 635 667 637Q651 637 651 648Q651 650 654 662T659 677Q662 682 676 682Q680 682 711 681T791 680Q814 680 839 681T869 682Q889 682 889 672Q889 650 881 642Q878 637 862 637Q787 632 726 586Q710 576 656 534T556 455L509 418L518 396Q527 374 546 329T581 244Q656 67 661 61Q663 59 666 57Q680 47 717 46H738Q744 38 744 37T741 19Q737 6 731 0H720Q680 3 625 3Q503 3 488 0H478Q472 6 472 9T474 27Q478 40 480 43T491 46H494Q544 46 544 71Q544 75 517 141T485 216L427 354L359 301L291 248L268 155Q245 63 245 58Q245 51 253 49T303 46H334Q340 37 340 35Q340 19 333 5Q328 0 317 0Q314 0 280 1T180 2Q118 2 85 2T49 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(889,0)\"><path data-c=\"1D43F\" d=\"M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1570,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1959,0)\"><path data-c=\"1D45E\" d=\"M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2419,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2808,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3531,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3920,0) translate(0 -0.5)\"><path data-c=\"7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4198,0) translate(0 -0.5)\"><path data-c=\"7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4476,0)\"><path data-c=\"1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4979,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(5368,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6091,0) translate(0 -0.5)\"><path data-c=\"7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(6369,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(7221,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(7610,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>：</li>\n</ul>\n<script type=\"math/tex; mode=display\">\nELBO(q) = E_Z[\\log p(Z,X)] - E_Z[\\log q(Z)]</script><script type=\"math/tex; mode=display\">\nq^*(Z) = {\\arg\\max}_{q(Z)\\in\\mathcal{L}}ELBO(q)</script><h4 id=\"ELBO的性质\"><a href=\"#ELBO的性质\" class=\"headerlink\" title=\"ELBO的性质\"></a>ELBO的性质</h4><ul>\n<li>我们对ELBO做一些变换：<script type=\"math/tex; mode=display\">\nELBO(q) = E_Z[\\log p(Z,X)] - E_Z[\\log q(Z)] \\\\\n= E_Z[\\log p(X|Z)] + E_Z[\\log p(Z)] - E_Z[\\log q(Z)] \\\\\n= E_Z[\\log p(X|Z)] - KL(q(Z)||p(Z))</script></li>\n<li>可见ELBO由<strong>观测变量的后验分布</strong>和<strong>隐变量估计分布与其先验分布的KL散度</strong>两部分组成（注意KL散度是非对称的）。因此最大化<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"9.514ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 4205 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(764,0)\"><path data-c=\"1D43F\" d=\"M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1445,0)\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2204,0)\"><path data-c=\"1D442\" d=\"M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2967,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3356,0)\"><path data-c=\"1D45E\" d=\"M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3816,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>相当于同时做以下两件事：<ol>\n<li>最大化<strong>观测变量</strong>的后验分布对数期望</li>\n<li>使隐变量估计分布与其先验分布尽量接近</li>\n</ol>\n<ul>\n<li>是不是有点贝叶斯推断的感觉了？</li>\n</ul>\n</li>\n<li>ELBO 的另一个性质来源于它的名字，即证据（的）下界：<script type=\"math/tex; mode=display\">\n\\log p(X) = E_Z[\\log p(X)] \\\\\n= KL(q(Z)||p(Z|X)) + ELBO(q) \\\\\n\\geq ELBO(q)</script></li>\n<li>关键点在于<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.089ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 4459.6 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D43E\" d=\"M285 628Q285 635 228 637Q205 637 198 638T191 647Q191 649 193 661Q199 681 203 682Q205 683 214 683H219Q260 681 355 681Q389 681 418 681T463 682T483 682Q500 682 500 674Q500 669 497 660Q496 658 496 654T495 648T493 644T490 641T486 639T479 638T470 637T456 637Q416 636 405 634T387 623L306 305Q307 305 490 449T678 597Q692 611 692 620Q692 635 667 637Q651 637 651 648Q651 650 654 662T659 677Q662 682 676 682Q680 682 711 681T791 680Q814 680 839 681T869 682Q889 682 889 672Q889 650 881 642Q878 637 862 637Q787 632 726 586Q710 576 656 534T556 455L509 418L518 396Q527 374 546 329T581 244Q656 67 661 61Q663 59 666 57Q680 47 717 46H738Q744 38 744 37T741 19Q737 6 731 0H720Q680 3 625 3Q503 3 488 0H478Q472 6 472 9T474 27Q478 40 480 43T491 46H494Q544 46 544 71Q544 75 517 141T485 216L427 354L359 301L291 248L268 155Q245 63 245 58Q245 51 253 49T303 46H334Q340 37 340 35Q340 19 333 5Q328 0 317 0Q314 0 280 1T180 2Q118 2 85 2T49 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(889,0)\"><path data-c=\"1D43F\" d=\"M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1570,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1959,0)\"><path data-c=\"22C5\" d=\"M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2237,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2903.8,0)\"><path data-c=\"2265\" d=\"M83 616Q83 624 89 630T99 636Q107 636 253 568T543 431T687 361Q694 356 694 346T687 331Q685 329 395 192L107 56H101Q83 58 83 76Q83 77 83 79Q82 86 98 95Q117 105 248 167Q326 204 378 228L626 346L360 472Q291 505 200 548Q112 589 98 597T83 616ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(3959.6,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g></g></g></svg></mjx-container>。VI的目标是最大化ELBO，而ELBO最大不会超过<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"8.094ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 3577.7 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"6C\" d=\"M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z\"></path><path data-c=\"6F\" d=\"M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z\" transform=\"translate(278,0)\"></path><path data-c=\"67\" d=\"M329 409Q373 453 429 453Q459 453 472 434T485 396Q485 382 476 371T449 360Q416 360 412 390Q410 404 415 411Q415 412 416 414V415Q388 412 363 393Q355 388 355 386Q355 385 359 381T368 369T379 351T388 325T392 292Q392 230 343 187T222 143Q172 143 123 171Q112 153 112 133Q112 98 138 81Q147 75 155 75T227 73Q311 72 335 67Q396 58 431 26Q470 -13 470 -72Q470 -139 392 -175Q332 -206 250 -206Q167 -206 107 -175Q29 -140 29 -75Q29 -39 50 -15T92 18L103 24Q67 55 67 108Q67 155 96 193Q52 237 52 292Q52 355 102 398T223 442Q274 442 318 416L329 409ZM299 343Q294 371 273 387T221 404Q192 404 171 388T145 343Q142 326 142 292Q142 248 149 227T179 192Q196 182 222 182Q244 182 260 189T283 207T294 227T299 242Q302 258 302 292T299 343ZM403 -75Q403 -50 389 -34T348 -11T299 -2T245 0H218Q151 0 138 -6Q118 -15 107 -34T95 -74Q95 -84 101 -97T122 -127T170 -155T250 -167Q319 -167 361 -139T403 -75Z\" transform=\"translate(778,0)\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1278,0)\"><path data-c=\"2061\" d=\"\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1444.7,0)\"><path data-c=\"1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1947.7,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2336.7,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3188.7,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>。个人认为这一结论说明，观测数据本身质量好坏决定了模型的拟合效果。因此数据在VI（乃至机器学习）中扮演极端重要的角色。</li>\n</ul>\n<h3 id=\"补充：-KL-cdot-geq-0-的证明\"><a href=\"#补充：-KL-cdot-geq-0-的证明\" class=\"headerlink\" title=\"补充：$KL(\\cdot)\\geq 0$ 的证明\"></a>补充：<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.089ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 4459.6 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D43E\" d=\"M285 628Q285 635 228 637Q205 637 198 638T191 647Q191 649 193 661Q199 681 203 682Q205 683 214 683H219Q260 681 355 681Q389 681 418 681T463 682T483 682Q500 682 500 674Q500 669 497 660Q496 658 496 654T495 648T493 644T490 641T486 639T479 638T470 637T456 637Q416 636 405 634T387 623L306 305Q307 305 490 449T678 597Q692 611 692 620Q692 635 667 637Q651 637 651 648Q651 650 654 662T659 677Q662 682 676 682Q680 682 711 681T791 680Q814 680 839 681T869 682Q889 682 889 672Q889 650 881 642Q878 637 862 637Q787 632 726 586Q710 576 656 534T556 455L509 418L518 396Q527 374 546 329T581 244Q656 67 661 61Q663 59 666 57Q680 47 717 46H738Q744 38 744 37T741 19Q737 6 731 0H720Q680 3 625 3Q503 3 488 0H478Q472 6 472 9T474 27Q478 40 480 43T491 46H494Q544 46 544 71Q544 75 517 141T485 216L427 354L359 301L291 248L268 155Q245 63 245 58Q245 51 253 49T303 46H334Q340 37 340 35Q340 19 333 5Q328 0 317 0Q314 0 280 1T180 2Q118 2 85 2T49 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(889,0)\"><path data-c=\"1D43F\" d=\"M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1570,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1959,0)\"><path data-c=\"22C5\" d=\"M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2237,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2903.8,0)\"><path data-c=\"2265\" d=\"M83 616Q83 624 89 630T99 636Q107 636 253 568T543 431T687 361Q694 356 694 346T687 331Q685 329 395 192L107 56H101Q83 58 83 76Q83 77 83 79Q82 86 98 95Q117 105 248 167Q326 204 378 228L626 346L360 472Q291 505 200 548Q112 589 98 597T83 616ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(3959.6,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g></g></g></svg></mjx-container> 的证明</h3><ul>\n<li>对于任意的两个概率密度函数<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.192ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 1853 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(503,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(892,0)\"><path data-c=\"1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1464,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>和<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.095ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 1810 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45E\" d=\"M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(460,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(849,0)\"><path data-c=\"1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1421,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>，<script type=\"math/tex; mode=display\">\nKL(q(x)||p(x)) = E_{q(x)}\\left[\\log \\frac{q(x)}{p(x)}\\right]</script></li>\n<li>证明的核心在于对log函数（凹函数）使用Jensen不等式。证明如下：<script type=\"math/tex; mode=display\">\nE_{q(x)}\\left[\\log \\frac{q(x)}{p(x)}\\right] = - E_{q(x)}\\left[\\log \\frac{p(x)}{q(x)}\\right]</script><script type=\"math/tex; mode=display\">\n\\geq -\\log E_{q(x)}\\left[\\frac{p(x)}{q(x)}\\right]\\quad\\text{(Jensen 不等式)}</script><script type=\"math/tex; mode=display\">\n= -\\log\\int_{-\\infty}^{+\\infty}\\frac{p(x)}{q(x)}\\cdot q(x) dx</script><script type=\"math/tex; mode=display\">\n= -\\log\\int_{-\\infty}^{+\\infty}\\frac{p(x)}{q(x)}\\cdot q(x) dx</script><script type=\"math/tex; mode=display\">\n= -\\log\\int_{-\\infty}^{+\\infty}p(x)dx</script><script type=\"math/tex; mode=display\">\n= 0  \\quad\\text{(概率密度函数的归一化性质)}</script></li>\n</ul>\n<h3 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h3><p>[1] David M. Blei, Alp Kucukelbir, &amp; Jon D. McAuliffe (2016). Variational Inference: A Review for Statisticians. CoRR, abs/1601.00670.</p>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: document.title+document.date,\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>"},{"title":"高级数据库系统知识点总结（Part 1）","mathjax":true,"codeblock":{"enable":true,"show_result":true},"date":"2023-02-16T12:50:55.000Z","_content":"\n基本概念；数据存储；数据表示\n\n既包含概念性知识，也包含一些方法论\n\n<!--more-->\n\n## 基本概念\n\n1. 数据库的定义：数据库是长期储存在计算机内、有组织的、可共享的大量数据的集合\n1. 数据库模式（Schema）的定义：数据库模式是数据库中全体数据的逻辑结构和特征的描述\n1. 数据库管理系统（DBMS）：计算机程序的集合，用于创建和维护数据库。\n  1. 位于OS和APP之间\n  1. 总是基于某种数据类型\n  1. 例子：MySQL, Oracle11g\n1. 数据库系统（DBS）：在计算机系统中引入了数据库后的系统，即采用了数据库技术的计算机系统\n\n## 数据存储\n主要内容：\n1. 存储器结构\n1. 磁盘块存取时间（计算）\n1. 不同存储介质的差异\n\n### 存储器结构\n1. 核心思想：层次化存储\n  1. 寄存器-内存-磁盘-磁盘阵列-磁带-...\n1. 典型的磁盘结构\n![Image](https://pic4.zhimg.com/80/v2-b12246bc3163ed1ff4534b675724d5fe.jpg)\n  1. 重要术语：盘片platter，盘面surface，磁头R/W head，磁道track，柱面cylinder，扇区sector\n\n### 磁盘块存取时间\n1. 块（Block）是OS或DBMS进行磁盘数据存取的最小逻辑单元，由若干扇区组成\n1. 块是DBMS中数据存取的最小单元（逻辑）\n1. 扇区是磁盘中数据存储的最小单元（物理）\n   \n#### 读块时间计算\n$$\n读块时间T_{all}=寻道时间S+旋转延迟R+传输时间T+其他延迟other\n$$\n1. 在真实情境中，会要求计算“最优”、“平均”、“最坏”情况下的读块时间\n2. $S$一般在10ms-40ms之间\n3. R是磁盘转动到块的第一个扇区到达磁头所需的时间. \n  1. 磁盘转速单位：RPM (Rotation / Min)\n  2. 平均时间为旋转1/2周所费的时间\n  3. e.g., 一个7200RPM的磁盘，平均旋转延迟$\\overline{R}=\\frac{60\\times 10^3 ms}{7200}\\times\\frac{1}{2}\\approx 4.17 ms$\n4. T是块的扇区及其间隙旋转通过磁头所需的时间\n   1. e.g., 磁道大约有100,000 Bytes，约10ms转一周，则每秒可从磁盘读取1000/10*100000$\\approx$10MB. 一个4KB的块传输时间小于0.5ms\n5. 其他延迟：\n   1. CPU请求IO的时间\n   2. 争用磁盘控制器时间\n   3. 征用总线和主存的时间\n   4. 典型情况：0（忽略不计）\n6. 如何读下一块：\n   1. 在同一柱面上->$R+T+other$\n   2. 不在同一柱面上->$S+R+T+other$\n\n#### 写块时间计算\n1. 如果无需校验；则与读块相同\n2. 如果需要校验，则需要加上1次旋转时间和1次块传输时间\n\n### 块修改\n1. 将块读入主存\n2. 在主存完成修改\n3. 将块重新写入磁盘\n4. 块地址=<物理设备号,柱面号,盘面号(或磁头号),扇区号>\n\n### 不同存储介质优缺点对比\n1. 传统存储器件：磁盘、磁带等\n2. 新型存储器包括：闪存、相变存储器、磁阻式存储、电阻式存储器、忆阻器等. 共同特点：__非易失性__\n   1. 优点：高存储密度、低功耗、无机械延迟、存取速度快、便携、抗震、低噪音\n   2. 缺点：读写性能不对称、读写次数有限、可靠性不高\n\n#### 闪存（Flash Memory）\n1. 读写不对称（写慢读快）\n2. 写前擦除：异位更新、块擦除操作\n3. 寿命有限：块擦除次数有限\n4. 按页读写\n5. 按块擦除\n\n#### 相变存储器（Phase Change Memory）\n1. 与传统介质和闪存的性能参数对比\n![Image](https://pic4.zhimg.com/80/v2-a21775125d3672ea507eaffb0ae9e4ce.jpg)\n\n## 数据表示\n主要内容：\n1. 数据项的表示\n2. 记录的表示\n3. 记录在块中的组织\n4. 块在文件中的组织（链表式堆文件和目录式堆文件）\n\n数据元素的表示层次：\n> 数据项->记录->块->文件\n\n### 数据项的表示\n1. 数据项本质是字节序列，表示关系数据库中元组的属性值\n2. 数据项表示方法：SQL数据类型\n   1. e.g., Integer (short)，2 bytes, 16 bits\n3. SQL中的数据项表示总结\n![Image](https://pic4.zhimg.com/80/v2-1e9d166496a767b7aaa5c67bdc4910f9.jpg)\n\n### 记录的表示\n1. 记录是数据项的集合\n2. 记录的类型\n   1. 固定格式 vs. 可变格式\n   2. 定长 vs. 变长\n\n#### 固定格式定长记录\n1. 所有记录具有相同的逻辑结构（模式）\n   1. \\# fields\n   2. Name of each field\n   3. Type of each field\n   4. Order in record\n   5. offset of each field in the record\n\n```sql\n-- SQL中固定格式定长记录的构造\nCREATE TABLE Student(\n    stid CHAR(30) PRIMARY KEY,\n    stname VARCHAR(255),\n    gender CHAR(1),\n    birthdate DATE\n)\n```\n\n#### 记录首部\n1. 在记录首部（Head）描述记录的信息\n   1. 记录类型（模式信息）\n   2. 记录长度\n   3. 时间戳（用于并发控制）\n   4. 其他信息\n2. 示例\n![Image](https://pic4.zhimg.com/80/v2-71d5257977a24feac805606191e58b2e.jpg)\n#### 可变格式记录\n1. 每个记录的格式不同\n2. 记录的格式存储于记录中\n3. 典型例子：Key-Value. Key与Value都以字节流存储，如：\n\n```c\ntypedef struct{\n    void *data; //字节流指针\n    int size; //字节流长度\n} DBT;\n\n// 数据类型没有限制\n// 应用与数据库之间不需要转换数据格式\n// 不提供key和value的内容和结构信息\n// 应用必须知道value的含义\n```\n\n4. 优点\n   1. 灵活的记录格式，适合“松散”记录，如病人的检验结果\n   2. 适合处理重复字段\n   3. 适合记录格式演变\n5. 缺点\n   1. 标记存储方式空间代价高\n   2. KV方式难以支持复杂查询\n   3. 应用负担重且事务处理等实现困难\n\n### 记录在块中的组织\n1. 定长记录：记录地址rid通常使用<块号,槽号>表示\n2. 变长记录：记录地址通过槽目录+<记录偏移量,长度>表示\n\n### 块在文件中的组织\n1. 堆文件（Heap File）\n   1. 最基本、最简单的文件结构\n   2. 记录不以任何顺序排序\n   3. 记录可能存放在物理不邻接的块上\n   4. 插入容易，但查找和删除代价高\n2. 链表式堆文件组织\n   > 首块 <-> 数据块 <-> 数据块 <-> 数据块 -> 含空闲空间的块链表\n3. 目录式堆文件组织\n   >  \\[邻接数据块阵列（首块）\\] -> \\[邻接数据块阵列\\] -> \\[邻接数据块阵列\\] -> ...\n\n### SQL Server的数据存储结构\n1. 数据存储的基本单位式是页。一页的大小是8KB\n   1. 页地址：<文件号,页号>\n   2. 数据行地址：<页地址,槽号>\n2. 扩展盘区：介于块和文件之间，一个扩展盘区是8个邻接的页（或64KB）\n3. SQL Server文件组织\n   1. 主要数据文件(.mdf)：指向数据库中文件的其他部分\n   2. 次要数据文件(.ndf)\n   3. 日志文件(.ldf)\n   4. 数据文件的起始结构：PFS页，GAM页，SGAM页\n      1. PFS：记录扩展盘区的哪些页已分配或可用，一个PFS记录约8,000页\n      2. GAM：记录已分配的扩展盘区，每个元素是一个PFS\n      3. SGAM：记录当前用作混合扩展盘区且至少有一个未使用的页\n   \n|扩展盘区的当前使用情况|GAM位设置|SGAM位设置\n|:---|:---|:---\n|可用，未使用|1|0\n|统一扩展盘区或已满的混合扩展盘区|0|0\n|有可用页的混合扩展盘区|0|1\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: document.title+document.date,\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","source":"_posts/2023-02-16-adbs01.md","raw":"---\ntitle: 高级数据库系统知识点总结（Part 1）\nmathjax: true\ncodeblock:\n  enable: true\n  show_result: true\ndate: 2023-02-16 20:50:55\ntags: 数据库\ncategories: 学习笔记\n---\n\n基本概念；数据存储；数据表示\n\n既包含概念性知识，也包含一些方法论\n\n<!--more-->\n\n## 基本概念\n\n1. 数据库的定义：数据库是长期储存在计算机内、有组织的、可共享的大量数据的集合\n1. 数据库模式（Schema）的定义：数据库模式是数据库中全体数据的逻辑结构和特征的描述\n1. 数据库管理系统（DBMS）：计算机程序的集合，用于创建和维护数据库。\n  1. 位于OS和APP之间\n  1. 总是基于某种数据类型\n  1. 例子：MySQL, Oracle11g\n1. 数据库系统（DBS）：在计算机系统中引入了数据库后的系统，即采用了数据库技术的计算机系统\n\n## 数据存储\n主要内容：\n1. 存储器结构\n1. 磁盘块存取时间（计算）\n1. 不同存储介质的差异\n\n### 存储器结构\n1. 核心思想：层次化存储\n  1. 寄存器-内存-磁盘-磁盘阵列-磁带-...\n1. 典型的磁盘结构\n![Image](https://pic4.zhimg.com/80/v2-b12246bc3163ed1ff4534b675724d5fe.jpg)\n  1. 重要术语：盘片platter，盘面surface，磁头R/W head，磁道track，柱面cylinder，扇区sector\n\n### 磁盘块存取时间\n1. 块（Block）是OS或DBMS进行磁盘数据存取的最小逻辑单元，由若干扇区组成\n1. 块是DBMS中数据存取的最小单元（逻辑）\n1. 扇区是磁盘中数据存储的最小单元（物理）\n   \n#### 读块时间计算\n$$\n读块时间T_{all}=寻道时间S+旋转延迟R+传输时间T+其他延迟other\n$$\n1. 在真实情境中，会要求计算“最优”、“平均”、“最坏”情况下的读块时间\n2. $S$一般在10ms-40ms之间\n3. R是磁盘转动到块的第一个扇区到达磁头所需的时间. \n  1. 磁盘转速单位：RPM (Rotation / Min)\n  2. 平均时间为旋转1/2周所费的时间\n  3. e.g., 一个7200RPM的磁盘，平均旋转延迟$\\overline{R}=\\frac{60\\times 10^3 ms}{7200}\\times\\frac{1}{2}\\approx 4.17 ms$\n4. T是块的扇区及其间隙旋转通过磁头所需的时间\n   1. e.g., 磁道大约有100,000 Bytes，约10ms转一周，则每秒可从磁盘读取1000/10*100000$\\approx$10MB. 一个4KB的块传输时间小于0.5ms\n5. 其他延迟：\n   1. CPU请求IO的时间\n   2. 争用磁盘控制器时间\n   3. 征用总线和主存的时间\n   4. 典型情况：0（忽略不计）\n6. 如何读下一块：\n   1. 在同一柱面上->$R+T+other$\n   2. 不在同一柱面上->$S+R+T+other$\n\n#### 写块时间计算\n1. 如果无需校验；则与读块相同\n2. 如果需要校验，则需要加上1次旋转时间和1次块传输时间\n\n### 块修改\n1. 将块读入主存\n2. 在主存完成修改\n3. 将块重新写入磁盘\n4. 块地址=<物理设备号,柱面号,盘面号(或磁头号),扇区号>\n\n### 不同存储介质优缺点对比\n1. 传统存储器件：磁盘、磁带等\n2. 新型存储器包括：闪存、相变存储器、磁阻式存储、电阻式存储器、忆阻器等. 共同特点：__非易失性__\n   1. 优点：高存储密度、低功耗、无机械延迟、存取速度快、便携、抗震、低噪音\n   2. 缺点：读写性能不对称、读写次数有限、可靠性不高\n\n#### 闪存（Flash Memory）\n1. 读写不对称（写慢读快）\n2. 写前擦除：异位更新、块擦除操作\n3. 寿命有限：块擦除次数有限\n4. 按页读写\n5. 按块擦除\n\n#### 相变存储器（Phase Change Memory）\n1. 与传统介质和闪存的性能参数对比\n![Image](https://pic4.zhimg.com/80/v2-a21775125d3672ea507eaffb0ae9e4ce.jpg)\n\n## 数据表示\n主要内容：\n1. 数据项的表示\n2. 记录的表示\n3. 记录在块中的组织\n4. 块在文件中的组织（链表式堆文件和目录式堆文件）\n\n数据元素的表示层次：\n> 数据项->记录->块->文件\n\n### 数据项的表示\n1. 数据项本质是字节序列，表示关系数据库中元组的属性值\n2. 数据项表示方法：SQL数据类型\n   1. e.g., Integer (short)，2 bytes, 16 bits\n3. SQL中的数据项表示总结\n![Image](https://pic4.zhimg.com/80/v2-1e9d166496a767b7aaa5c67bdc4910f9.jpg)\n\n### 记录的表示\n1. 记录是数据项的集合\n2. 记录的类型\n   1. 固定格式 vs. 可变格式\n   2. 定长 vs. 变长\n\n#### 固定格式定长记录\n1. 所有记录具有相同的逻辑结构（模式）\n   1. \\# fields\n   2. Name of each field\n   3. Type of each field\n   4. Order in record\n   5. offset of each field in the record\n\n```sql\n-- SQL中固定格式定长记录的构造\nCREATE TABLE Student(\n    stid CHAR(30) PRIMARY KEY,\n    stname VARCHAR(255),\n    gender CHAR(1),\n    birthdate DATE\n)\n```\n\n#### 记录首部\n1. 在记录首部（Head）描述记录的信息\n   1. 记录类型（模式信息）\n   2. 记录长度\n   3. 时间戳（用于并发控制）\n   4. 其他信息\n2. 示例\n![Image](https://pic4.zhimg.com/80/v2-71d5257977a24feac805606191e58b2e.jpg)\n#### 可变格式记录\n1. 每个记录的格式不同\n2. 记录的格式存储于记录中\n3. 典型例子：Key-Value. Key与Value都以字节流存储，如：\n\n```c\ntypedef struct{\n    void *data; //字节流指针\n    int size; //字节流长度\n} DBT;\n\n// 数据类型没有限制\n// 应用与数据库之间不需要转换数据格式\n// 不提供key和value的内容和结构信息\n// 应用必须知道value的含义\n```\n\n4. 优点\n   1. 灵活的记录格式，适合“松散”记录，如病人的检验结果\n   2. 适合处理重复字段\n   3. 适合记录格式演变\n5. 缺点\n   1. 标记存储方式空间代价高\n   2. KV方式难以支持复杂查询\n   3. 应用负担重且事务处理等实现困难\n\n### 记录在块中的组织\n1. 定长记录：记录地址rid通常使用<块号,槽号>表示\n2. 变长记录：记录地址通过槽目录+<记录偏移量,长度>表示\n\n### 块在文件中的组织\n1. 堆文件（Heap File）\n   1. 最基本、最简单的文件结构\n   2. 记录不以任何顺序排序\n   3. 记录可能存放在物理不邻接的块上\n   4. 插入容易，但查找和删除代价高\n2. 链表式堆文件组织\n   > 首块 <-> 数据块 <-> 数据块 <-> 数据块 -> 含空闲空间的块链表\n3. 目录式堆文件组织\n   >  \\[邻接数据块阵列（首块）\\] -> \\[邻接数据块阵列\\] -> \\[邻接数据块阵列\\] -> ...\n\n### SQL Server的数据存储结构\n1. 数据存储的基本单位式是页。一页的大小是8KB\n   1. 页地址：<文件号,页号>\n   2. 数据行地址：<页地址,槽号>\n2. 扩展盘区：介于块和文件之间，一个扩展盘区是8个邻接的页（或64KB）\n3. SQL Server文件组织\n   1. 主要数据文件(.mdf)：指向数据库中文件的其他部分\n   2. 次要数据文件(.ndf)\n   3. 日志文件(.ldf)\n   4. 数据文件的起始结构：PFS页，GAM页，SGAM页\n      1. PFS：记录扩展盘区的哪些页已分配或可用，一个PFS记录约8,000页\n      2. GAM：记录已分配的扩展盘区，每个元素是一个PFS\n      3. SGAM：记录当前用作混合扩展盘区且至少有一个未使用的页\n   \n|扩展盘区的当前使用情况|GAM位设置|SGAM位设置\n|:---|:---|:---\n|可用，未使用|1|0\n|统一扩展盘区或已满的混合扩展盘区|0|0\n|有可用页的混合扩展盘区|0|1\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: document.title+document.date,\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","slug":"2023-02-16-adbs01","published":1,"updated":"2023-03-19T10:08:21.520Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cludw9n9x001x9wv949wzgkbp","content":"<p>基本概念；数据存储；数据表示</p>\n<p>既包含概念性知识，也包含一些方法论</p>\n<span id=\"more\"></span>\n<h2 id=\"基本概念\"><a href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"></a>基本概念</h2><ol>\n<li>数据库的定义：数据库是长期储存在计算机内、有组织的、可共享的大量数据的集合</li>\n<li>数据库模式（Schema）的定义：数据库模式是数据库中全体数据的逻辑结构和特征的描述</li>\n<li>数据库管理系统（DBMS）：计算机程序的集合，用于创建和维护数据库。<ol>\n<li>位于OS和APP之间</li>\n<li>总是基于某种数据类型</li>\n<li>例子：MySQL, Oracle11g</li>\n</ol>\n</li>\n<li>数据库系统（DBS）：在计算机系统中引入了数据库后的系统，即采用了数据库技术的计算机系统</li>\n</ol>\n<h2 id=\"数据存储\"><a href=\"#数据存储\" class=\"headerlink\" title=\"数据存储\"></a>数据存储</h2><p>主要内容：</p>\n<ol>\n<li>存储器结构</li>\n<li>磁盘块存取时间（计算）</li>\n<li>不同存储介质的差异</li>\n</ol>\n<h3 id=\"存储器结构\"><a href=\"#存储器结构\" class=\"headerlink\" title=\"存储器结构\"></a>存储器结构</h3><ol>\n<li>核心思想：层次化存储<ol>\n<li>寄存器-内存-磁盘-磁盘阵列-磁带-…</li>\n</ol>\n</li>\n<li>典型的磁盘结构<br><img src=\"https://pic4.zhimg.com/80/v2-b12246bc3163ed1ff4534b675724d5fe.jpg\" alt=\"Image\"><ol>\n<li>重要术语：盘片platter，盘面surface，磁头R/W head，磁道track，柱面cylinder，扇区sector</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"磁盘块存取时间\"><a href=\"#磁盘块存取时间\" class=\"headerlink\" title=\"磁盘块存取时间\"></a>磁盘块存取时间</h3><ol>\n<li>块（Block）是OS或DBMS进行磁盘数据存取的最小逻辑单元，由若干扇区组成</li>\n<li>块是DBMS中数据存取的最小单元（逻辑）</li>\n<li>扇区是磁盘中数据存储的最小单元（物理）</li>\n</ol>\n<h4 id=\"读块时间计算\"><a href=\"#读块时间计算\" class=\"headerlink\" title=\"读块时间计算\"></a>读块时间计算</h4><script type=\"math/tex; mode=display\">\n读块时间T_{all}=寻道时间S+旋转延迟R+传输时间T+其他延迟other</script><ol>\n<li>在真实情境中，会要求计算“最优”、“平均”、“最坏”情况下的读块时间</li>\n<li><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.459ex\" height=\"1.645ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -705 645 727\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D446\" d=\"M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z\"></path></g></g></g></svg></mjx-container>一般在10ms-40ms之间</li>\n<li>R是磁盘转动到块的第一个扇区到达磁头所需的时间. <ol>\n<li>磁盘转速单位：RPM (Rotation / Min)</li>\n<li>平均时间为旋转1/2周所费的时间</li>\n<li>e.g., 一个7200RPM的磁盘，平均旋转延迟<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.816ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"27.676ex\" height=\"3.088ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -1004.4 12232.6 1365\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mover\"><g data-mml-node=\"mi\"><path data-c=\"1D445\" d=\"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(0,615)\"><svg width=\"759\" height=\"237\" x=\"0\" y=\"148\" viewBox=\"189.8 148 759 237\"><path data-c=\"2013\" d=\"M0 248V285H499V248H0Z\" transform=\"scale(2.277,1)\"></path></svg></g></g><g data-mml-node=\"mo\" transform=\"translate(1036.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mfrac\" transform=\"translate(2092.6,0)\"><g data-mml-node=\"mrow\" transform=\"translate(220,394) scale(0.707)\"><g data-mml-node=\"mn\"><path data-c=\"36\" d=\"M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z\"></path><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(500,0)\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1000,0)\"><path data-c=\"D7\" d=\"M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z\"></path></g><g data-mml-node=\"msup\" transform=\"translate(1778,0)\"><g data-mml-node=\"mn\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(500,0)\"></path></g><g data-mml-node=\"mn\" transform=\"translate(1033,393.1) scale(0.707)\"><path data-c=\"33\" d=\"M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z\"></path></g></g><g data-mml-node=\"mi\" transform=\"translate(3214.6,0)\"><path data-c=\"1D45A\" d=\"M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4092.6,0)\"><path data-c=\"1D460\" d=\"M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z\"></path></g></g><g data-mml-node=\"mn\" transform=\"translate(1125.6,-345) scale(0.707)\"><path data-c=\"37\" d=\"M55 458Q56 460 72 567L88 674Q88 676 108 676H128V672Q128 662 143 655T195 646T364 644H485V605L417 512Q408 500 387 472T360 435T339 403T319 367T305 330T292 284T284 230T278 162T275 80Q275 66 275 52T274 28V19Q270 2 255 -10T221 -22Q210 -22 200 -19T179 0T168 40Q168 198 265 368Q285 400 349 489L395 552H302Q128 552 119 546Q113 543 108 522T98 479L95 458V455H55V458Z\"></path><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\" transform=\"translate(500,0)\"></path><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(1000,0)\"></path><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(1500,0)\"></path></g><rect width=\"3425.5\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mo\" transform=\"translate(5980.3,0)\"><path data-c=\"D7\" d=\"M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z\"></path></g><g data-mml-node=\"mfrac\" transform=\"translate(6980.5,0)\"><g data-mml-node=\"mn\" transform=\"translate(220,394) scale(0.707)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(220,-345) scale(0.707)\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path></g><rect width=\"553.6\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mo\" transform=\"translate(8051.8,0)\"><path data-c=\"2248\" d=\"M55 319Q55 360 72 393T114 444T163 472T205 482Q207 482 213 482T223 483Q262 483 296 468T393 413L443 381Q502 346 553 346Q609 346 649 375T694 454Q694 465 698 474T708 483Q722 483 722 452Q722 386 675 338T555 289Q514 289 468 310T388 357T308 404T224 426Q164 426 125 393T83 318Q81 289 69 289Q55 289 55 319ZM55 85Q55 126 72 159T114 210T163 238T205 248Q207 248 213 248T223 249Q262 249 296 234T393 179L443 147Q502 112 553 112Q609 112 649 141T694 220Q694 249 708 249T722 217Q722 153 675 104T555 55Q514 55 468 76T388 123T308 170T224 192Q164 192 125 159T83 84Q80 55 69 55Q55 55 55 85Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(9107.6,0)\"><path data-c=\"34\" d=\"M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z\"></path><path data-c=\"2E\" d=\"M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z\" transform=\"translate(500,0)\"></path><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\" transform=\"translate(778,0)\"></path><path data-c=\"37\" d=\"M55 458Q56 460 72 567L88 674Q88 676 108 676H128V672Q128 662 143 655T195 646T364 644H485V605L417 512Q408 500 387 472T360 435T339 403T319 367T305 330T292 284T284 230T278 162T275 80Q275 66 275 52T274 28V19Q270 2 255 -10T221 -22Q210 -22 200 -19T179 0T168 40Q168 198 265 368Q285 400 349 489L395 552H302Q128 552 119 546Q113 543 108 522T98 479L95 458V455H55V458Z\" transform=\"translate(1278,0)\"></path></g><g data-mml-node=\"mi\" transform=\"translate(10885.6,0)\"><path data-c=\"1D45A\" d=\"M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(11763.6,0)\"><path data-c=\"1D460\" d=\"M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z\"></path></g></g></g></svg></mjx-container></li>\n</ol>\n</li>\n<li>T是块的扇区及其间隙旋转通过磁头所需的时间<ol>\n<li>e.g., 磁道大约有100,000 Bytes，约10ms转一周，则每秒可从磁盘读取1000/10*100000<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0.124ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.76ex\" height=\"0.968ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -483 778 428\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"2248\" d=\"M55 319Q55 360 72 393T114 444T163 472T205 482Q207 482 213 482T223 483Q262 483 296 468T393 413L443 381Q502 346 553 346Q609 346 649 375T694 454Q694 465 698 474T708 483Q722 483 722 452Q722 386 675 338T555 289Q514 289 468 310T388 357T308 404T224 426Q164 426 125 393T83 318Q81 289 69 289Q55 289 55 319ZM55 85Q55 126 72 159T114 210T163 238T205 248Q207 248 213 248T223 249Q262 249 296 234T393 179L443 147Q502 112 553 112Q609 112 649 141T694 220Q694 249 708 249T722 217Q722 153 675 104T555 55Q514 55 468 76T388 123T308 170T224 192Q164 192 125 159T83 84Q80 55 69 55Q55 55 55 85Z\"></path></g></g></g></svg></mjx-container>10MB. 一个4KB的块传输时间小于0.5ms</li>\n</ol>\n</li>\n<li>其他延迟：<ol>\n<li>CPU请求IO的时间</li>\n<li>争用磁盘控制器时间</li>\n<li>征用总线和主存的时间</li>\n<li>典型情况：0（忽略不计）</li>\n</ol>\n</li>\n<li>如何读下一块：<ol>\n<li>在同一柱面上-&gt;<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.186ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"14.133ex\" height=\"1.756ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -694 6246.9 776\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D445\" d=\"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(981.2,0)\"><path data-c=\"2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1981.4,0)\"><path data-c=\"1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2907.7,0)\"><path data-c=\"2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3907.9,0)\"><path data-c=\"1D45C\" d=\"M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4392.9,0)\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4753.9,0)\"><path data-c=\"210E\" d=\"M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(5329.9,0)\"><path data-c=\"1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(5795.9,0)\"><path data-c=\"1D45F\" d=\"M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g></g></g></svg></mjx-container></li>\n<li>不在同一柱面上-&gt;<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.186ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"18.358ex\" height=\"1.781ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -705 8114.3 787\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D446\" d=\"M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(867.2,0)\"><path data-c=\"2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1867.4,0)\"><path data-c=\"1D445\" d=\"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2848.7,0)\"><path data-c=\"2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3848.9,0)\"><path data-c=\"1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4775.1,0)\"><path data-c=\"2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(5775.3,0)\"><path data-c=\"1D45C\" d=\"M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(6260.3,0)\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(6621.3,0)\"><path data-c=\"210E\" d=\"M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(7197.3,0)\"><path data-c=\"1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(7663.3,0)\"><path data-c=\"1D45F\" d=\"M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g></g></g></svg></mjx-container></li>\n</ol>\n</li>\n</ol>\n<h4 id=\"写块时间计算\"><a href=\"#写块时间计算\" class=\"headerlink\" title=\"写块时间计算\"></a>写块时间计算</h4><ol>\n<li>如果无需校验；则与读块相同</li>\n<li>如果需要校验，则需要加上1次旋转时间和1次块传输时间</li>\n</ol>\n<h3 id=\"块修改\"><a href=\"#块修改\" class=\"headerlink\" title=\"块修改\"></a>块修改</h3><ol>\n<li>将块读入主存</li>\n<li>在主存完成修改</li>\n<li>将块重新写入磁盘</li>\n<li>块地址=&lt;物理设备号,柱面号,盘面号(或磁头号),扇区号&gt;</li>\n</ol>\n<h3 id=\"不同存储介质优缺点对比\"><a href=\"#不同存储介质优缺点对比\" class=\"headerlink\" title=\"不同存储介质优缺点对比\"></a>不同存储介质优缺点对比</h3><ol>\n<li>传统存储器件：磁盘、磁带等</li>\n<li>新型存储器包括：闪存、相变存储器、磁阻式存储、电阻式存储器、忆阻器等. 共同特点：<strong>非易失性</strong><ol>\n<li>优点：高存储密度、低功耗、无机械延迟、存取速度快、便携、抗震、低噪音</li>\n<li>缺点：读写性能不对称、读写次数有限、可靠性不高</li>\n</ol>\n</li>\n</ol>\n<h4 id=\"闪存（Flash-Memory）\"><a href=\"#闪存（Flash-Memory）\" class=\"headerlink\" title=\"闪存（Flash Memory）\"></a>闪存（Flash Memory）</h4><ol>\n<li>读写不对称（写慢读快）</li>\n<li>写前擦除：异位更新、块擦除操作</li>\n<li>寿命有限：块擦除次数有限</li>\n<li>按页读写</li>\n<li>按块擦除</li>\n</ol>\n<h4 id=\"相变存储器（Phase-Change-Memory）\"><a href=\"#相变存储器（Phase-Change-Memory）\" class=\"headerlink\" title=\"相变存储器（Phase Change Memory）\"></a>相变存储器（Phase Change Memory）</h4><ol>\n<li>与传统介质和闪存的性能参数对比<br><img src=\"https://pic4.zhimg.com/80/v2-a21775125d3672ea507eaffb0ae9e4ce.jpg\" alt=\"Image\"></li>\n</ol>\n<h2 id=\"数据表示\"><a href=\"#数据表示\" class=\"headerlink\" title=\"数据表示\"></a>数据表示</h2><p>主要内容：</p>\n<ol>\n<li>数据项的表示</li>\n<li>记录的表示</li>\n<li>记录在块中的组织</li>\n<li>块在文件中的组织（链表式堆文件和目录式堆文件）</li>\n</ol>\n<p>数据元素的表示层次：</p>\n<blockquote>\n<p>数据项-&gt;记录-&gt;块-&gt;文件</p>\n</blockquote>\n<h3 id=\"数据项的表示\"><a href=\"#数据项的表示\" class=\"headerlink\" title=\"数据项的表示\"></a>数据项的表示</h3><ol>\n<li>数据项本质是字节序列，表示关系数据库中元组的属性值</li>\n<li>数据项表示方法：SQL数据类型<ol>\n<li>e.g., Integer (short)，2 bytes, 16 bits</li>\n</ol>\n</li>\n<li>SQL中的数据项表示总结<br><img src=\"https://pic4.zhimg.com/80/v2-1e9d166496a767b7aaa5c67bdc4910f9.jpg\" alt=\"Image\"></li>\n</ol>\n<h3 id=\"记录的表示\"><a href=\"#记录的表示\" class=\"headerlink\" title=\"记录的表示\"></a>记录的表示</h3><ol>\n<li>记录是数据项的集合</li>\n<li>记录的类型<ol>\n<li>固定格式 vs. 可变格式</li>\n<li>定长 vs. 变长</li>\n</ol>\n</li>\n</ol>\n<h4 id=\"固定格式定长记录\"><a href=\"#固定格式定长记录\" class=\"headerlink\" title=\"固定格式定长记录\"></a>固定格式定长记录</h4><ol>\n<li>所有记录具有相同的逻辑结构（模式）<ol>\n<li># fields</li>\n<li>Name of each field</li>\n<li>Type of each field</li>\n<li>Order in record</li>\n<li>offset of each field in the record</li>\n</ol>\n</li>\n</ol>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- SQL中固定格式定长记录的构造</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> Student(</span><br><span class=\"line\">    stid <span class=\"type\">CHAR</span>(<span class=\"number\">30</span>) <span class=\"keyword\">PRIMARY</span> KEY,</span><br><span class=\"line\">    stname <span class=\"type\">VARCHAR</span>(<span class=\"number\">255</span>),</span><br><span class=\"line\">    gender <span class=\"type\">CHAR</span>(<span class=\"number\">1</span>),</span><br><span class=\"line\">    birthdate <span class=\"type\">DATE</span></span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n<h4 id=\"记录首部\"><a href=\"#记录首部\" class=\"headerlink\" title=\"记录首部\"></a>记录首部</h4><ol>\n<li>在记录首部（Head）描述记录的信息<ol>\n<li>记录类型（模式信息）</li>\n<li>记录长度</li>\n<li>时间戳（用于并发控制）</li>\n<li>其他信息</li>\n</ol>\n</li>\n<li>示例<br><img src=\"https://pic4.zhimg.com/80/v2-71d5257977a24feac805606191e58b2e.jpg\" alt=\"Image\"><h4 id=\"可变格式记录\"><a href=\"#可变格式记录\" class=\"headerlink\" title=\"可变格式记录\"></a>可变格式记录</h4></li>\n<li>每个记录的格式不同</li>\n<li>记录的格式存储于记录中</li>\n<li>典型例子：Key-Value. Key与Value都以字节流存储，如：</li>\n</ol>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span>{</span></span><br><span class=\"line\">    <span class=\"type\">void</span> *data; <span class=\"comment\">//字节流指针</span></span><br><span class=\"line\">    <span class=\"type\">int</span> size; <span class=\"comment\">//字节流长度</span></span><br><span class=\"line\">} DBT;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 数据类型没有限制</span></span><br><span class=\"line\"><span class=\"comment\">// 应用与数据库之间不需要转换数据格式</span></span><br><span class=\"line\"><span class=\"comment\">// 不提供key和value的内容和结构信息</span></span><br><span class=\"line\"><span class=\"comment\">// 应用必须知道value的含义</span></span><br></pre></td></tr></table></figure>\n<ol>\n<li>优点<ol>\n<li>灵活的记录格式，适合“松散”记录，如病人的检验结果</li>\n<li>适合处理重复字段</li>\n<li>适合记录格式演变</li>\n</ol>\n</li>\n<li>缺点<ol>\n<li>标记存储方式空间代价高</li>\n<li>KV方式难以支持复杂查询</li>\n<li>应用负担重且事务处理等实现困难</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"记录在块中的组织\"><a href=\"#记录在块中的组织\" class=\"headerlink\" title=\"记录在块中的组织\"></a>记录在块中的组织</h3><ol>\n<li>定长记录：记录地址rid通常使用&lt;块号,槽号&gt;表示</li>\n<li>变长记录：记录地址通过槽目录+&lt;记录偏移量,长度&gt;表示</li>\n</ol>\n<h3 id=\"块在文件中的组织\"><a href=\"#块在文件中的组织\" class=\"headerlink\" title=\"块在文件中的组织\"></a>块在文件中的组织</h3><ol>\n<li>堆文件（Heap File）<ol>\n<li>最基本、最简单的文件结构</li>\n<li>记录不以任何顺序排序</li>\n<li>记录可能存放在物理不邻接的块上</li>\n<li>插入容易，但查找和删除代价高</li>\n</ol>\n</li>\n<li>链表式堆文件组织<blockquote>\n<p>首块 &lt;-&gt; 数据块 &lt;-&gt; 数据块 &lt;-&gt; 数据块 -&gt; 含空闲空间的块链表</p>\n</blockquote>\n</li>\n<li>目录式堆文件组织<blockquote>\n<p> [邻接数据块阵列（首块）] -&gt; [邻接数据块阵列] -&gt; [邻接数据块阵列] -&gt; …</p>\n</blockquote>\n</li>\n</ol>\n<h3 id=\"SQL-Server的数据存储结构\"><a href=\"#SQL-Server的数据存储结构\" class=\"headerlink\" title=\"SQL Server的数据存储结构\"></a>SQL Server的数据存储结构</h3><ol>\n<li>数据存储的基本单位式是页。一页的大小是8KB<ol>\n<li>页地址：&lt;文件号,页号&gt;</li>\n<li>数据行地址：&lt;页地址,槽号&gt;</li>\n</ol>\n</li>\n<li>扩展盘区：介于块和文件之间，一个扩展盘区是8个邻接的页（或64KB）</li>\n<li>SQL Server文件组织<ol>\n<li>主要数据文件(.mdf)：指向数据库中文件的其他部分</li>\n<li>次要数据文件(.ndf)</li>\n<li>日志文件(.ldf)</li>\n<li>数据文件的起始结构：PFS页，GAM页，SGAM页<ol>\n<li>PFS：记录扩展盘区的哪些页已分配或可用，一个PFS记录约8,000页</li>\n<li>GAM：记录已分配的扩展盘区，每个元素是一个PFS</li>\n<li>SGAM：记录当前用作混合扩展盘区且至少有一个未使用的页</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">扩展盘区的当前使用情况</th>\n<th style=\"text-align:left\">GAM位设置</th>\n<th style=\"text-align:left\">SGAM位设置</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">可用，未使用</td>\n<td style=\"text-align:left\">1</td>\n<td style=\"text-align:left\">0</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">统一扩展盘区或已满的混合扩展盘区</td>\n<td style=\"text-align:left\">0</td>\n<td style=\"text-align:left\">0</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">有可用页的混合扩展盘区</td>\n<td style=\"text-align:left\">0</td>\n<td style=\"text-align:left\">1</td>\n</tr>\n</tbody>\n</table>\n</div>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: document.title+document.date,\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","site":{"data":{}},"length":2940,"excerpt":"<p>基本概念；数据存储；数据表示</p>\n<p>既包含概念性知识，也包含一些方法论</p>","more":"<h2 id=\"基本概念\"><a href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"></a>基本概念</h2><ol>\n<li>数据库的定义：数据库是长期储存在计算机内、有组织的、可共享的大量数据的集合</li>\n<li>数据库模式（Schema）的定义：数据库模式是数据库中全体数据的逻辑结构和特征的描述</li>\n<li>数据库管理系统（DBMS）：计算机程序的集合，用于创建和维护数据库。<ol>\n<li>位于OS和APP之间</li>\n<li>总是基于某种数据类型</li>\n<li>例子：MySQL, Oracle11g</li>\n</ol>\n</li>\n<li>数据库系统（DBS）：在计算机系统中引入了数据库后的系统，即采用了数据库技术的计算机系统</li>\n</ol>\n<h2 id=\"数据存储\"><a href=\"#数据存储\" class=\"headerlink\" title=\"数据存储\"></a>数据存储</h2><p>主要内容：</p>\n<ol>\n<li>存储器结构</li>\n<li>磁盘块存取时间（计算）</li>\n<li>不同存储介质的差异</li>\n</ol>\n<h3 id=\"存储器结构\"><a href=\"#存储器结构\" class=\"headerlink\" title=\"存储器结构\"></a>存储器结构</h3><ol>\n<li>核心思想：层次化存储<ol>\n<li>寄存器-内存-磁盘-磁盘阵列-磁带-…</li>\n</ol>\n</li>\n<li>典型的磁盘结构<br><img src=\"https://pic4.zhimg.com/80/v2-b12246bc3163ed1ff4534b675724d5fe.jpg\" alt=\"Image\"><ol>\n<li>重要术语：盘片platter，盘面surface，磁头R/W head，磁道track，柱面cylinder，扇区sector</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"磁盘块存取时间\"><a href=\"#磁盘块存取时间\" class=\"headerlink\" title=\"磁盘块存取时间\"></a>磁盘块存取时间</h3><ol>\n<li>块（Block）是OS或DBMS进行磁盘数据存取的最小逻辑单元，由若干扇区组成</li>\n<li>块是DBMS中数据存取的最小单元（逻辑）</li>\n<li>扇区是磁盘中数据存储的最小单元（物理）</li>\n</ol>\n<h4 id=\"读块时间计算\"><a href=\"#读块时间计算\" class=\"headerlink\" title=\"读块时间计算\"></a>读块时间计算</h4><script type=\"math/tex; mode=display\">\n读块时间T_{all}=寻道时间S+旋转延迟R+传输时间T+其他延迟other</script><ol>\n<li>在真实情境中，会要求计算“最优”、“平均”、“最坏”情况下的读块时间</li>\n<li><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.459ex\" height=\"1.645ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -705 645 727\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D446\" d=\"M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z\"></path></g></g></g></svg></mjx-container>一般在10ms-40ms之间</li>\n<li>R是磁盘转动到块的第一个扇区到达磁头所需的时间. <ol>\n<li>磁盘转速单位：RPM (Rotation / Min)</li>\n<li>平均时间为旋转1/2周所费的时间</li>\n<li>e.g., 一个7200RPM的磁盘，平均旋转延迟<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.816ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"27.676ex\" height=\"3.088ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -1004.4 12232.6 1365\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mover\"><g data-mml-node=\"mi\"><path data-c=\"1D445\" d=\"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(0,615)\"><svg width=\"759\" height=\"237\" x=\"0\" y=\"148\" viewBox=\"189.8 148 759 237\"><path data-c=\"2013\" d=\"M0 248V285H499V248H0Z\" transform=\"scale(2.277,1)\"></path></svg></g></g><g data-mml-node=\"mo\" transform=\"translate(1036.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mfrac\" transform=\"translate(2092.6,0)\"><g data-mml-node=\"mrow\" transform=\"translate(220,394) scale(0.707)\"><g data-mml-node=\"mn\"><path data-c=\"36\" d=\"M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z\"></path><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(500,0)\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1000,0)\"><path data-c=\"D7\" d=\"M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z\"></path></g><g data-mml-node=\"msup\" transform=\"translate(1778,0)\"><g data-mml-node=\"mn\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(500,0)\"></path></g><g data-mml-node=\"mn\" transform=\"translate(1033,393.1) scale(0.707)\"><path data-c=\"33\" d=\"M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z\"></path></g></g><g data-mml-node=\"mi\" transform=\"translate(3214.6,0)\"><path data-c=\"1D45A\" d=\"M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4092.6,0)\"><path data-c=\"1D460\" d=\"M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z\"></path></g></g><g data-mml-node=\"mn\" transform=\"translate(1125.6,-345) scale(0.707)\"><path data-c=\"37\" d=\"M55 458Q56 460 72 567L88 674Q88 676 108 676H128V672Q128 662 143 655T195 646T364 644H485V605L417 512Q408 500 387 472T360 435T339 403T319 367T305 330T292 284T284 230T278 162T275 80Q275 66 275 52T274 28V19Q270 2 255 -10T221 -22Q210 -22 200 -19T179 0T168 40Q168 198 265 368Q285 400 349 489L395 552H302Q128 552 119 546Q113 543 108 522T98 479L95 458V455H55V458Z\"></path><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\" transform=\"translate(500,0)\"></path><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(1000,0)\"></path><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(1500,0)\"></path></g><rect width=\"3425.5\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mo\" transform=\"translate(5980.3,0)\"><path data-c=\"D7\" d=\"M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z\"></path></g><g data-mml-node=\"mfrac\" transform=\"translate(6980.5,0)\"><g data-mml-node=\"mn\" transform=\"translate(220,394) scale(0.707)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(220,-345) scale(0.707)\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path></g><rect width=\"553.6\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mo\" transform=\"translate(8051.8,0)\"><path data-c=\"2248\" d=\"M55 319Q55 360 72 393T114 444T163 472T205 482Q207 482 213 482T223 483Q262 483 296 468T393 413L443 381Q502 346 553 346Q609 346 649 375T694 454Q694 465 698 474T708 483Q722 483 722 452Q722 386 675 338T555 289Q514 289 468 310T388 357T308 404T224 426Q164 426 125 393T83 318Q81 289 69 289Q55 289 55 319ZM55 85Q55 126 72 159T114 210T163 238T205 248Q207 248 213 248T223 249Q262 249 296 234T393 179L443 147Q502 112 553 112Q609 112 649 141T694 220Q694 249 708 249T722 217Q722 153 675 104T555 55Q514 55 468 76T388 123T308 170T224 192Q164 192 125 159T83 84Q80 55 69 55Q55 55 55 85Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(9107.6,0)\"><path data-c=\"34\" d=\"M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z\"></path><path data-c=\"2E\" d=\"M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z\" transform=\"translate(500,0)\"></path><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\" transform=\"translate(778,0)\"></path><path data-c=\"37\" d=\"M55 458Q56 460 72 567L88 674Q88 676 108 676H128V672Q128 662 143 655T195 646T364 644H485V605L417 512Q408 500 387 472T360 435T339 403T319 367T305 330T292 284T284 230T278 162T275 80Q275 66 275 52T274 28V19Q270 2 255 -10T221 -22Q210 -22 200 -19T179 0T168 40Q168 198 265 368Q285 400 349 489L395 552H302Q128 552 119 546Q113 543 108 522T98 479L95 458V455H55V458Z\" transform=\"translate(1278,0)\"></path></g><g data-mml-node=\"mi\" transform=\"translate(10885.6,0)\"><path data-c=\"1D45A\" d=\"M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(11763.6,0)\"><path data-c=\"1D460\" d=\"M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z\"></path></g></g></g></svg></mjx-container></li>\n</ol>\n</li>\n<li>T是块的扇区及其间隙旋转通过磁头所需的时间<ol>\n<li>e.g., 磁道大约有100,000 Bytes，约10ms转一周，则每秒可从磁盘读取1000/10*100000<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0.124ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.76ex\" height=\"0.968ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -483 778 428\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"2248\" d=\"M55 319Q55 360 72 393T114 444T163 472T205 482Q207 482 213 482T223 483Q262 483 296 468T393 413L443 381Q502 346 553 346Q609 346 649 375T694 454Q694 465 698 474T708 483Q722 483 722 452Q722 386 675 338T555 289Q514 289 468 310T388 357T308 404T224 426Q164 426 125 393T83 318Q81 289 69 289Q55 289 55 319ZM55 85Q55 126 72 159T114 210T163 238T205 248Q207 248 213 248T223 249Q262 249 296 234T393 179L443 147Q502 112 553 112Q609 112 649 141T694 220Q694 249 708 249T722 217Q722 153 675 104T555 55Q514 55 468 76T388 123T308 170T224 192Q164 192 125 159T83 84Q80 55 69 55Q55 55 55 85Z\"></path></g></g></g></svg></mjx-container>10MB. 一个4KB的块传输时间小于0.5ms</li>\n</ol>\n</li>\n<li>其他延迟：<ol>\n<li>CPU请求IO的时间</li>\n<li>争用磁盘控制器时间</li>\n<li>征用总线和主存的时间</li>\n<li>典型情况：0（忽略不计）</li>\n</ol>\n</li>\n<li>如何读下一块：<ol>\n<li>在同一柱面上-&gt;<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.186ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"14.133ex\" height=\"1.756ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -694 6246.9 776\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D445\" d=\"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(981.2,0)\"><path data-c=\"2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1981.4,0)\"><path data-c=\"1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2907.7,0)\"><path data-c=\"2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3907.9,0)\"><path data-c=\"1D45C\" d=\"M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4392.9,0)\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4753.9,0)\"><path data-c=\"210E\" d=\"M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(5329.9,0)\"><path data-c=\"1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(5795.9,0)\"><path data-c=\"1D45F\" d=\"M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g></g></g></svg></mjx-container></li>\n<li>不在同一柱面上-&gt;<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.186ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"18.358ex\" height=\"1.781ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -705 8114.3 787\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D446\" d=\"M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(867.2,0)\"><path data-c=\"2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1867.4,0)\"><path data-c=\"1D445\" d=\"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2848.7,0)\"><path data-c=\"2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3848.9,0)\"><path data-c=\"1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4775.1,0)\"><path data-c=\"2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(5775.3,0)\"><path data-c=\"1D45C\" d=\"M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(6260.3,0)\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(6621.3,0)\"><path data-c=\"210E\" d=\"M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(7197.3,0)\"><path data-c=\"1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(7663.3,0)\"><path data-c=\"1D45F\" d=\"M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g></g></g></svg></mjx-container></li>\n</ol>\n</li>\n</ol>\n<h4 id=\"写块时间计算\"><a href=\"#写块时间计算\" class=\"headerlink\" title=\"写块时间计算\"></a>写块时间计算</h4><ol>\n<li>如果无需校验；则与读块相同</li>\n<li>如果需要校验，则需要加上1次旋转时间和1次块传输时间</li>\n</ol>\n<h3 id=\"块修改\"><a href=\"#块修改\" class=\"headerlink\" title=\"块修改\"></a>块修改</h3><ol>\n<li>将块读入主存</li>\n<li>在主存完成修改</li>\n<li>将块重新写入磁盘</li>\n<li>块地址=&lt;物理设备号,柱面号,盘面号(或磁头号),扇区号&gt;</li>\n</ol>\n<h3 id=\"不同存储介质优缺点对比\"><a href=\"#不同存储介质优缺点对比\" class=\"headerlink\" title=\"不同存储介质优缺点对比\"></a>不同存储介质优缺点对比</h3><ol>\n<li>传统存储器件：磁盘、磁带等</li>\n<li>新型存储器包括：闪存、相变存储器、磁阻式存储、电阻式存储器、忆阻器等. 共同特点：<strong>非易失性</strong><ol>\n<li>优点：高存储密度、低功耗、无机械延迟、存取速度快、便携、抗震、低噪音</li>\n<li>缺点：读写性能不对称、读写次数有限、可靠性不高</li>\n</ol>\n</li>\n</ol>\n<h4 id=\"闪存（Flash-Memory）\"><a href=\"#闪存（Flash-Memory）\" class=\"headerlink\" title=\"闪存（Flash Memory）\"></a>闪存（Flash Memory）</h4><ol>\n<li>读写不对称（写慢读快）</li>\n<li>写前擦除：异位更新、块擦除操作</li>\n<li>寿命有限：块擦除次数有限</li>\n<li>按页读写</li>\n<li>按块擦除</li>\n</ol>\n<h4 id=\"相变存储器（Phase-Change-Memory）\"><a href=\"#相变存储器（Phase-Change-Memory）\" class=\"headerlink\" title=\"相变存储器（Phase Change Memory）\"></a>相变存储器（Phase Change Memory）</h4><ol>\n<li>与传统介质和闪存的性能参数对比<br><img src=\"https://pic4.zhimg.com/80/v2-a21775125d3672ea507eaffb0ae9e4ce.jpg\" alt=\"Image\"></li>\n</ol>\n<h2 id=\"数据表示\"><a href=\"#数据表示\" class=\"headerlink\" title=\"数据表示\"></a>数据表示</h2><p>主要内容：</p>\n<ol>\n<li>数据项的表示</li>\n<li>记录的表示</li>\n<li>记录在块中的组织</li>\n<li>块在文件中的组织（链表式堆文件和目录式堆文件）</li>\n</ol>\n<p>数据元素的表示层次：</p>\n<blockquote>\n<p>数据项-&gt;记录-&gt;块-&gt;文件</p>\n</blockquote>\n<h3 id=\"数据项的表示\"><a href=\"#数据项的表示\" class=\"headerlink\" title=\"数据项的表示\"></a>数据项的表示</h3><ol>\n<li>数据项本质是字节序列，表示关系数据库中元组的属性值</li>\n<li>数据项表示方法：SQL数据类型<ol>\n<li>e.g., Integer (short)，2 bytes, 16 bits</li>\n</ol>\n</li>\n<li>SQL中的数据项表示总结<br><img src=\"https://pic4.zhimg.com/80/v2-1e9d166496a767b7aaa5c67bdc4910f9.jpg\" alt=\"Image\"></li>\n</ol>\n<h3 id=\"记录的表示\"><a href=\"#记录的表示\" class=\"headerlink\" title=\"记录的表示\"></a>记录的表示</h3><ol>\n<li>记录是数据项的集合</li>\n<li>记录的类型<ol>\n<li>固定格式 vs. 可变格式</li>\n<li>定长 vs. 变长</li>\n</ol>\n</li>\n</ol>\n<h4 id=\"固定格式定长记录\"><a href=\"#固定格式定长记录\" class=\"headerlink\" title=\"固定格式定长记录\"></a>固定格式定长记录</h4><ol>\n<li>所有记录具有相同的逻辑结构（模式）<ol>\n<li># fields</li>\n<li>Name of each field</li>\n<li>Type of each field</li>\n<li>Order in record</li>\n<li>offset of each field in the record</li>\n</ol>\n</li>\n</ol>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- SQL中固定格式定长记录的构造</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> Student(</span><br><span class=\"line\">    stid <span class=\"type\">CHAR</span>(<span class=\"number\">30</span>) <span class=\"keyword\">PRIMARY</span> KEY,</span><br><span class=\"line\">    stname <span class=\"type\">VARCHAR</span>(<span class=\"number\">255</span>),</span><br><span class=\"line\">    gender <span class=\"type\">CHAR</span>(<span class=\"number\">1</span>),</span><br><span class=\"line\">    birthdate <span class=\"type\">DATE</span></span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n<h4 id=\"记录首部\"><a href=\"#记录首部\" class=\"headerlink\" title=\"记录首部\"></a>记录首部</h4><ol>\n<li>在记录首部（Head）描述记录的信息<ol>\n<li>记录类型（模式信息）</li>\n<li>记录长度</li>\n<li>时间戳（用于并发控制）</li>\n<li>其他信息</li>\n</ol>\n</li>\n<li>示例<br><img src=\"https://pic4.zhimg.com/80/v2-71d5257977a24feac805606191e58b2e.jpg\" alt=\"Image\"><h4 id=\"可变格式记录\"><a href=\"#可变格式记录\" class=\"headerlink\" title=\"可变格式记录\"></a>可变格式记录</h4></li>\n<li>每个记录的格式不同</li>\n<li>记录的格式存储于记录中</li>\n<li>典型例子：Key-Value. Key与Value都以字节流存储，如：</li>\n</ol>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span>{</span></span><br><span class=\"line\">    <span class=\"type\">void</span> *data; <span class=\"comment\">//字节流指针</span></span><br><span class=\"line\">    <span class=\"type\">int</span> size; <span class=\"comment\">//字节流长度</span></span><br><span class=\"line\">} DBT;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 数据类型没有限制</span></span><br><span class=\"line\"><span class=\"comment\">// 应用与数据库之间不需要转换数据格式</span></span><br><span class=\"line\"><span class=\"comment\">// 不提供key和value的内容和结构信息</span></span><br><span class=\"line\"><span class=\"comment\">// 应用必须知道value的含义</span></span><br></pre></td></tr></table></figure>\n<ol>\n<li>优点<ol>\n<li>灵活的记录格式，适合“松散”记录，如病人的检验结果</li>\n<li>适合处理重复字段</li>\n<li>适合记录格式演变</li>\n</ol>\n</li>\n<li>缺点<ol>\n<li>标记存储方式空间代价高</li>\n<li>KV方式难以支持复杂查询</li>\n<li>应用负担重且事务处理等实现困难</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"记录在块中的组织\"><a href=\"#记录在块中的组织\" class=\"headerlink\" title=\"记录在块中的组织\"></a>记录在块中的组织</h3><ol>\n<li>定长记录：记录地址rid通常使用&lt;块号,槽号&gt;表示</li>\n<li>变长记录：记录地址通过槽目录+&lt;记录偏移量,长度&gt;表示</li>\n</ol>\n<h3 id=\"块在文件中的组织\"><a href=\"#块在文件中的组织\" class=\"headerlink\" title=\"块在文件中的组织\"></a>块在文件中的组织</h3><ol>\n<li>堆文件（Heap File）<ol>\n<li>最基本、最简单的文件结构</li>\n<li>记录不以任何顺序排序</li>\n<li>记录可能存放在物理不邻接的块上</li>\n<li>插入容易，但查找和删除代价高</li>\n</ol>\n</li>\n<li>链表式堆文件组织<blockquote>\n<p>首块 &lt;-&gt; 数据块 &lt;-&gt; 数据块 &lt;-&gt; 数据块 -&gt; 含空闲空间的块链表</p>\n</blockquote>\n</li>\n<li>目录式堆文件组织<blockquote>\n<p> [邻接数据块阵列（首块）] -&gt; [邻接数据块阵列] -&gt; [邻接数据块阵列] -&gt; …</p>\n</blockquote>\n</li>\n</ol>\n<h3 id=\"SQL-Server的数据存储结构\"><a href=\"#SQL-Server的数据存储结构\" class=\"headerlink\" title=\"SQL Server的数据存储结构\"></a>SQL Server的数据存储结构</h3><ol>\n<li>数据存储的基本单位式是页。一页的大小是8KB<ol>\n<li>页地址：&lt;文件号,页号&gt;</li>\n<li>数据行地址：&lt;页地址,槽号&gt;</li>\n</ol>\n</li>\n<li>扩展盘区：介于块和文件之间，一个扩展盘区是8个邻接的页（或64KB）</li>\n<li>SQL Server文件组织<ol>\n<li>主要数据文件(.mdf)：指向数据库中文件的其他部分</li>\n<li>次要数据文件(.ndf)</li>\n<li>日志文件(.ldf)</li>\n<li>数据文件的起始结构：PFS页，GAM页，SGAM页<ol>\n<li>PFS：记录扩展盘区的哪些页已分配或可用，一个PFS记录约8,000页</li>\n<li>GAM：记录已分配的扩展盘区，每个元素是一个PFS</li>\n<li>SGAM：记录当前用作混合扩展盘区且至少有一个未使用的页</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">扩展盘区的当前使用情况</th>\n<th style=\"text-align:left\">GAM位设置</th>\n<th style=\"text-align:left\">SGAM位设置</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">可用，未使用</td>\n<td style=\"text-align:left\">1</td>\n<td style=\"text-align:left\">0</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">统一扩展盘区或已满的混合扩展盘区</td>\n<td style=\"text-align:left\">0</td>\n<td style=\"text-align:left\">0</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">有可用页的混合扩展盘区</td>\n<td style=\"text-align:left\">0</td>\n<td style=\"text-align:left\">1</td>\n</tr>\n</tbody>\n</table>\n</div>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: document.title+document.date,\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>"},{"title":"高级数据库系统知识点总结（Part 2）","mathjax":true,"codeblock":{"enable":true,"show_result":true},"date":"2023-02-16T14:51:25.000Z","_content":"\n缓冲区管理；索引结构\n\n<!--more-->\n\n## 缓冲区管理\n- 缓冲区由一个个frame构成，每个frame刚好可以容纳一个页\n- 缓冲区介于内存和磁盘之间，为计算机程序隐藏了“并非所有数据都存在内存”这一事实\n  \n### Frame的参数\n1. Dirty\n   > Frame中的块是否已经被修改\n2. Pin-count\n   > Frame的块的已经被请求且还未释放的计数，即当前的用户数\n3. *Others\n   > Latch: 是否加锁\n\n### 缓冲区管理过程\n1. 当请求块且块不在缓冲区时：\n   1. 选择一个用于替换的frame（空或非空）\n   2. 如果frame是dirty的，frame的内容写回磁盘\n   3. 将请求块写入被选择的frame\n   4. 将该frame的pin-count自增1，且返回其地址\n2. 当释放块时\n   1. 请求者将该frame的pin-count自减1\n   2. 请求者必须声明该块是否被修改过（用frame->dirty）\n\n### 缓冲区替换策略\n1. 理论最优：OPT算法（也称为Belady's算法）\n2. 常用：LRU, LRU-K, 2Q, Second-Chance FIFO, CLOCK\n\n#### LRU\n1. 基于**时间局部性**: 越是最近访问的，在未来被访问的概率越高\n2. 优点：\n   1. 适用于满足时间局部性的场景（多次重复请求同一页）\n   2. 选取frame的时间复杂度是O(1)\n3. 缺点：\n   1. 缓存污染：LRU + repreated sequential scans\n   2. 维护LRU链表代价昂贵：修改链表耗时\n   3. 如果访问不满足时间局部性，则性能较差\n   4. 只考虑最近一次访问，不考虑访问频率\n\n#### LRU-K\n1. 如果某个frame的访问次数达到了K次以上，则应当尽量不置换\n2. 实验表明，K并非越大越好，LRU-2性能较好\n3. 缺点：需要额外记录访问次数\n\n#### Second-Chance FIFO\n1. 所有frame组成FIFO链表，每个frame附加一个bit位，初始为0.当FO页第一次被选中置换为1，并移动到FI端。只有bit为1的FO页才被选中替换\n2. 优点：每个frame只需要1个额外bit，空间代价很低\n3. 缺点：**置换时需要移动多个元素，理论性能比LRU差。**\n\nQ: 为什么不适用OS缓冲区管理，而需要DBMS？\nA: DBMS经常能预测访问模式。可以使用更专门的缓冲区替换策略，有利于pre-fetch策略的有效使用。且DBMS需要强制写回磁盘能力，OS的缓冲写回一般通过记录写请求来实现（来自不同应用），实际的磁盘修改推迟，因此不能保证写顺序\n\n## 索引结构\n- 重要内容；B+树、散列表的概念；不同索引方式的优缺点对比，如时空复杂度、功能差异；多维索引的概念\n\n1. 密集索引\n   1. 每个记录都有一个索引项\n   2. 索引项按查找键排序\n   3. 使用密集索引的原因：记录通常比索引项要大；索引可以常驻内存；要查找键值为K的记录是否存在，不需要访问磁盘数据块\n   4. 缺点：索引占用太多空间 -> **用稀疏索引改进**\n2. 稀疏索引\n   1. 仅部分记录有索引项\n   2. 一般情况：为每个数据块的第一个记录建立索引项\n   3. 优点：节省了索引空间；对同样的记录，稀疏索引可以使用更少的索引项\n   4. 缺点：对于“是否存在键值为K的记录？”，需要访问磁盘数据块\n3. 多级索引\n   1. 好处：一级索引（直接指向记录）可能还太大而不能常驻内存；二级索引更小，可以常驻内存；减少磁盘IO次数\n   2. 磁盘IO次数计算：读索引n次IO+读入数据块1次IO. 例子：\n\n![Image](https://pic4.zhimg.com/80/v2-b670267c13ba0ff4881dda1235a312f5.jpg)\n\n   1. 适用场景：当一级索引过大而二级索引可常驻内存时有效\n   2. 缺点：二级索引进仅可用稀疏索引；一般不考虑三级以上索引（B+树更好）\n\n1. 辅助索引、倒排索引（自行查找概念）\n\n### B+树\n1. 一种树形多级索引结构\n2. 树的层数与数据大小相关，通常为3层\n3. 所有节点格式相同：n个值，n+1个指针\n4. 所有叶子节点位于同一层\n5. 叶子节点：\n   1. 个指向相邻叶节点的指针\n   2. n对指针-键值对\n   3. 至少$\\lfloor(n+1)/2\\rfloor$个指针指向键值\n\n![Image](https://pic4.zhimg.com/80/v2-876647ae2384c7c3234020315d4599f4.jpg)\n\n1. 中间节点：\n   1. n个键值划分n+1个子树\n   2. 第i个键值时第i+1个子树中的最小键值\n   3. 至少$\\lceil(n+1)/2\\rceil$个指针指向子树\n   4. 根节点至少2个指针\n\n![Image](https://pic4.zhimg.com/80/v2-508ca5f18650748386587ce722039660.jpg)\n\n1. B+树的增删改查：自查资料\n\n2. B+树的特点\n   1. 结构稳定\n   2. 支持范围查询（键的组织基于比较）\n   3. b+树更新索引代价高；额外空间代价高（因为是多维索引）\n   4. 访问索引的IO代价=树高（B+树不常驻内存）或者0（常驻内存）\n   5. 树高通常不超过3层，因此索引IO代价不超过3（总代价不超过4）. 通常情况下，根节点常驻内存，因此索引IO代价不超过2（总代价不超过3）\n   6. 例子：设块大小8KB，键2 Bytes，指针2 Bytes，则一个块可以放2048个索引项.\n\n![Image](https://pic4.zhimg.com/80/v2-017fabd4143f80805fc7da3a90d7bcdb.jpg)\n\n### 散列表\n1. 散列函数\n   1. h: 查找键（散列键）-> [0,...,B-1]\n   2. 桶：序号为0,1,...,B-1\n2. 散列索引流程\n   1. 若一个桶中仅一块，则IO次数=1\n   2. 否则由参数B决定，平均IO次数=总块数/B\n\n#### 可扩展散列表\n- 定义自查. 这里只总结优缺点\n1. 优点：大部分情况下不存在溢出块，因此当查找溢出块时，只需要查找一个存储块\n2. 缺点：桶增长速度快，可能导致内存放不下整个桶数组，影响其他保存在主存中的数据，波动较大\n\n#### 线性散列表\n- 定义自查. 这里只总结优缺点\n1. 优点：空间效率优于可扩展散列表；综合性能较好\n2. 缺点：查找性能比可扩展散列表差\n\n### B+树与散列表对比\n\n|特征\\索引结构|B+树|散列表\n|:---|:---|:---\n|结构稳定性|稳定|不稳定\n|范围查询|支持（基于序关系）|不支持\n|查找IO代价|有n层节点在磁盘中则代价为n+1|平均IO次数=总块数/桶数\n|额外空间代价|高（多级索引）|低\n|更新索引（增、删）代价|高（多级索引且涉及节点的分裂合并）|低\n\n### 多维索引\n1. 空间数据\n   1. Point\n   2. Line\n   3. Polygon\n2. 用于决策分析的多维数据\n   1. 数据——关系\n   2. 维——关系的每个属性\n3. 多维查询\n   1. 同时在数据的多个维度上进行匹配\n   2. 传统的索引只能索引一维，不适于多维数据处理\n4. 经典例子：R-Tree\n\n   \n\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: document.title+document.date,\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","source":"_posts/2023-02-16-adbs02.md","raw":"---\ntitle: 高级数据库系统知识点总结（Part 2）\nmathjax: true\ncodeblock:\n  enable: true\n  show_result: true\ndate: 2023-02-16 22:51:25\ntags: 数据库\ncategories: 学习笔记\n---\n\n缓冲区管理；索引结构\n\n<!--more-->\n\n## 缓冲区管理\n- 缓冲区由一个个frame构成，每个frame刚好可以容纳一个页\n- 缓冲区介于内存和磁盘之间，为计算机程序隐藏了“并非所有数据都存在内存”这一事实\n  \n### Frame的参数\n1. Dirty\n   > Frame中的块是否已经被修改\n2. Pin-count\n   > Frame的块的已经被请求且还未释放的计数，即当前的用户数\n3. *Others\n   > Latch: 是否加锁\n\n### 缓冲区管理过程\n1. 当请求块且块不在缓冲区时：\n   1. 选择一个用于替换的frame（空或非空）\n   2. 如果frame是dirty的，frame的内容写回磁盘\n   3. 将请求块写入被选择的frame\n   4. 将该frame的pin-count自增1，且返回其地址\n2. 当释放块时\n   1. 请求者将该frame的pin-count自减1\n   2. 请求者必须声明该块是否被修改过（用frame->dirty）\n\n### 缓冲区替换策略\n1. 理论最优：OPT算法（也称为Belady's算法）\n2. 常用：LRU, LRU-K, 2Q, Second-Chance FIFO, CLOCK\n\n#### LRU\n1. 基于**时间局部性**: 越是最近访问的，在未来被访问的概率越高\n2. 优点：\n   1. 适用于满足时间局部性的场景（多次重复请求同一页）\n   2. 选取frame的时间复杂度是O(1)\n3. 缺点：\n   1. 缓存污染：LRU + repreated sequential scans\n   2. 维护LRU链表代价昂贵：修改链表耗时\n   3. 如果访问不满足时间局部性，则性能较差\n   4. 只考虑最近一次访问，不考虑访问频率\n\n#### LRU-K\n1. 如果某个frame的访问次数达到了K次以上，则应当尽量不置换\n2. 实验表明，K并非越大越好，LRU-2性能较好\n3. 缺点：需要额外记录访问次数\n\n#### Second-Chance FIFO\n1. 所有frame组成FIFO链表，每个frame附加一个bit位，初始为0.当FO页第一次被选中置换为1，并移动到FI端。只有bit为1的FO页才被选中替换\n2. 优点：每个frame只需要1个额外bit，空间代价很低\n3. 缺点：**置换时需要移动多个元素，理论性能比LRU差。**\n\nQ: 为什么不适用OS缓冲区管理，而需要DBMS？\nA: DBMS经常能预测访问模式。可以使用更专门的缓冲区替换策略，有利于pre-fetch策略的有效使用。且DBMS需要强制写回磁盘能力，OS的缓冲写回一般通过记录写请求来实现（来自不同应用），实际的磁盘修改推迟，因此不能保证写顺序\n\n## 索引结构\n- 重要内容；B+树、散列表的概念；不同索引方式的优缺点对比，如时空复杂度、功能差异；多维索引的概念\n\n1. 密集索引\n   1. 每个记录都有一个索引项\n   2. 索引项按查找键排序\n   3. 使用密集索引的原因：记录通常比索引项要大；索引可以常驻内存；要查找键值为K的记录是否存在，不需要访问磁盘数据块\n   4. 缺点：索引占用太多空间 -> **用稀疏索引改进**\n2. 稀疏索引\n   1. 仅部分记录有索引项\n   2. 一般情况：为每个数据块的第一个记录建立索引项\n   3. 优点：节省了索引空间；对同样的记录，稀疏索引可以使用更少的索引项\n   4. 缺点：对于“是否存在键值为K的记录？”，需要访问磁盘数据块\n3. 多级索引\n   1. 好处：一级索引（直接指向记录）可能还太大而不能常驻内存；二级索引更小，可以常驻内存；减少磁盘IO次数\n   2. 磁盘IO次数计算：读索引n次IO+读入数据块1次IO. 例子：\n\n![Image](https://pic4.zhimg.com/80/v2-b670267c13ba0ff4881dda1235a312f5.jpg)\n\n   1. 适用场景：当一级索引过大而二级索引可常驻内存时有效\n   2. 缺点：二级索引进仅可用稀疏索引；一般不考虑三级以上索引（B+树更好）\n\n1. 辅助索引、倒排索引（自行查找概念）\n\n### B+树\n1. 一种树形多级索引结构\n2. 树的层数与数据大小相关，通常为3层\n3. 所有节点格式相同：n个值，n+1个指针\n4. 所有叶子节点位于同一层\n5. 叶子节点：\n   1. 个指向相邻叶节点的指针\n   2. n对指针-键值对\n   3. 至少$\\lfloor(n+1)/2\\rfloor$个指针指向键值\n\n![Image](https://pic4.zhimg.com/80/v2-876647ae2384c7c3234020315d4599f4.jpg)\n\n1. 中间节点：\n   1. n个键值划分n+1个子树\n   2. 第i个键值时第i+1个子树中的最小键值\n   3. 至少$\\lceil(n+1)/2\\rceil$个指针指向子树\n   4. 根节点至少2个指针\n\n![Image](https://pic4.zhimg.com/80/v2-508ca5f18650748386587ce722039660.jpg)\n\n1. B+树的增删改查：自查资料\n\n2. B+树的特点\n   1. 结构稳定\n   2. 支持范围查询（键的组织基于比较）\n   3. b+树更新索引代价高；额外空间代价高（因为是多维索引）\n   4. 访问索引的IO代价=树高（B+树不常驻内存）或者0（常驻内存）\n   5. 树高通常不超过3层，因此索引IO代价不超过3（总代价不超过4）. 通常情况下，根节点常驻内存，因此索引IO代价不超过2（总代价不超过3）\n   6. 例子：设块大小8KB，键2 Bytes，指针2 Bytes，则一个块可以放2048个索引项.\n\n![Image](https://pic4.zhimg.com/80/v2-017fabd4143f80805fc7da3a90d7bcdb.jpg)\n\n### 散列表\n1. 散列函数\n   1. h: 查找键（散列键）-> [0,...,B-1]\n   2. 桶：序号为0,1,...,B-1\n2. 散列索引流程\n   1. 若一个桶中仅一块，则IO次数=1\n   2. 否则由参数B决定，平均IO次数=总块数/B\n\n#### 可扩展散列表\n- 定义自查. 这里只总结优缺点\n1. 优点：大部分情况下不存在溢出块，因此当查找溢出块时，只需要查找一个存储块\n2. 缺点：桶增长速度快，可能导致内存放不下整个桶数组，影响其他保存在主存中的数据，波动较大\n\n#### 线性散列表\n- 定义自查. 这里只总结优缺点\n1. 优点：空间效率优于可扩展散列表；综合性能较好\n2. 缺点：查找性能比可扩展散列表差\n\n### B+树与散列表对比\n\n|特征\\索引结构|B+树|散列表\n|:---|:---|:---\n|结构稳定性|稳定|不稳定\n|范围查询|支持（基于序关系）|不支持\n|查找IO代价|有n层节点在磁盘中则代价为n+1|平均IO次数=总块数/桶数\n|额外空间代价|高（多级索引）|低\n|更新索引（增、删）代价|高（多级索引且涉及节点的分裂合并）|低\n\n### 多维索引\n1. 空间数据\n   1. Point\n   2. Line\n   3. Polygon\n2. 用于决策分析的多维数据\n   1. 数据——关系\n   2. 维——关系的每个属性\n3. 多维查询\n   1. 同时在数据的多个维度上进行匹配\n   2. 传统的索引只能索引一维，不适于多维数据处理\n4. 经典例子：R-Tree\n\n   \n\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: document.title+document.date,\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","slug":"2023-02-16-adbs02","published":1,"updated":"2023-03-19T10:17:01.571Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cludw9n9y00209wv9d05p190x","content":"<p>缓冲区管理；索引结构</p>\n<span id=\"more\"></span>\n<h2 id=\"缓冲区管理\"><a href=\"#缓冲区管理\" class=\"headerlink\" title=\"缓冲区管理\"></a>缓冲区管理</h2><ul>\n<li>缓冲区由一个个frame构成，每个frame刚好可以容纳一个页</li>\n<li>缓冲区介于内存和磁盘之间，为计算机程序隐藏了“并非所有数据都存在内存”这一事实</li>\n</ul>\n<h3 id=\"Frame的参数\"><a href=\"#Frame的参数\" class=\"headerlink\" title=\"Frame的参数\"></a>Frame的参数</h3><ol>\n<li>Dirty<blockquote>\n<p>Frame中的块是否已经被修改</p>\n</blockquote>\n</li>\n<li>Pin-count<blockquote>\n<p>Frame的块的已经被请求且还未释放的计数，即当前的用户数</p>\n</blockquote>\n</li>\n<li>*Others<blockquote>\n<p>Latch: 是否加锁</p>\n</blockquote>\n</li>\n</ol>\n<h3 id=\"缓冲区管理过程\"><a href=\"#缓冲区管理过程\" class=\"headerlink\" title=\"缓冲区管理过程\"></a>缓冲区管理过程</h3><ol>\n<li>当请求块且块不在缓冲区时：<ol>\n<li>选择一个用于替换的frame（空或非空）</li>\n<li>如果frame是dirty的，frame的内容写回磁盘</li>\n<li>将请求块写入被选择的frame</li>\n<li>将该frame的pin-count自增1，且返回其地址</li>\n</ol>\n</li>\n<li>当释放块时<ol>\n<li>请求者将该frame的pin-count自减1</li>\n<li>请求者必须声明该块是否被修改过（用frame-&gt;dirty）</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"缓冲区替换策略\"><a href=\"#缓冲区替换策略\" class=\"headerlink\" title=\"缓冲区替换策略\"></a>缓冲区替换策略</h3><ol>\n<li>理论最优：OPT算法（也称为Belady’s算法）</li>\n<li>常用：LRU, LRU-K, 2Q, Second-Chance FIFO, CLOCK</li>\n</ol>\n<h4 id=\"LRU\"><a href=\"#LRU\" class=\"headerlink\" title=\"LRU\"></a>LRU</h4><ol>\n<li>基于<strong>时间局部性</strong>: 越是最近访问的，在未来被访问的概率越高</li>\n<li>优点：<ol>\n<li>适用于满足时间局部性的场景（多次重复请求同一页）</li>\n<li>选取frame的时间复杂度是O(1)</li>\n</ol>\n</li>\n<li>缺点：<ol>\n<li>缓存污染：LRU + repreated sequential scans</li>\n<li>维护LRU链表代价昂贵：修改链表耗时</li>\n<li>如果访问不满足时间局部性，则性能较差</li>\n<li>只考虑最近一次访问，不考虑访问频率</li>\n</ol>\n</li>\n</ol>\n<h4 id=\"LRU-K\"><a href=\"#LRU-K\" class=\"headerlink\" title=\"LRU-K\"></a>LRU-K</h4><ol>\n<li>如果某个frame的访问次数达到了K次以上，则应当尽量不置换</li>\n<li>实验表明，K并非越大越好，LRU-2性能较好</li>\n<li>缺点：需要额外记录访问次数</li>\n</ol>\n<h4 id=\"Second-Chance-FIFO\"><a href=\"#Second-Chance-FIFO\" class=\"headerlink\" title=\"Second-Chance FIFO\"></a>Second-Chance FIFO</h4><ol>\n<li>所有frame组成FIFO链表，每个frame附加一个bit位，初始为0.当FO页第一次被选中置换为1，并移动到FI端。只有bit为1的FO页才被选中替换</li>\n<li>优点：每个frame只需要1个额外bit，空间代价很低</li>\n<li>缺点：<strong>置换时需要移动多个元素，理论性能比LRU差。</strong></li>\n</ol>\n<p>Q: 为什么不适用OS缓冲区管理，而需要DBMS？<br>A: DBMS经常能预测访问模式。可以使用更专门的缓冲区替换策略，有利于pre-fetch策略的有效使用。且DBMS需要强制写回磁盘能力，OS的缓冲写回一般通过记录写请求来实现（来自不同应用），实际的磁盘修改推迟，因此不能保证写顺序</p>\n<h2 id=\"索引结构\"><a href=\"#索引结构\" class=\"headerlink\" title=\"索引结构\"></a>索引结构</h2><ul>\n<li>重要内容；B+树、散列表的概念；不同索引方式的优缺点对比，如时空复杂度、功能差异；多维索引的概念</li>\n</ul>\n<ol>\n<li>密集索引<ol>\n<li>每个记录都有一个索引项</li>\n<li>索引项按查找键排序</li>\n<li>使用密集索引的原因：记录通常比索引项要大；索引可以常驻内存；要查找键值为K的记录是否存在，不需要访问磁盘数据块</li>\n<li>缺点：索引占用太多空间 -&gt; <strong>用稀疏索引改进</strong></li>\n</ol>\n</li>\n<li>稀疏索引<ol>\n<li>仅部分记录有索引项</li>\n<li>一般情况：为每个数据块的第一个记录建立索引项</li>\n<li>优点：节省了索引空间；对同样的记录，稀疏索引可以使用更少的索引项</li>\n<li>缺点：对于“是否存在键值为K的记录？”，需要访问磁盘数据块</li>\n</ol>\n</li>\n<li>多级索引<ol>\n<li>好处：一级索引（直接指向记录）可能还太大而不能常驻内存；二级索引更小，可以常驻内存；减少磁盘IO次数</li>\n<li>磁盘IO次数计算：读索引n次IO+读入数据块1次IO. 例子：</li>\n</ol>\n</li>\n</ol>\n<p><img src=\"https://pic4.zhimg.com/80/v2-b670267c13ba0ff4881dda1235a312f5.jpg\" alt=\"Image\"></p>\n<ol>\n<li>适用场景：当一级索引过大而二级索引可常驻内存时有效</li>\n<li>缺点：二级索引进仅可用稀疏索引；一般不考虑三级以上索引（B+树更好）</li>\n</ol>\n<ol>\n<li>辅助索引、倒排索引（自行查找概念）</li>\n</ol>\n<h3 id=\"B-树\"><a href=\"#B-树\" class=\"headerlink\" title=\"B+树\"></a>B+树</h3><ol>\n<li>一种树形多级索引结构</li>\n<li>树的层数与数据大小相关，通常为3层</li>\n<li>所有节点格式相同：n个值，n+1个指针</li>\n<li>所有叶子节点位于同一层</li>\n<li>叶子节点：<ol>\n<li>个指向相邻叶节点的指针</li>\n<li>n对指针-键值对</li>\n<li>至少<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"11.286ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 4988.4 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"230A\" d=\"M174 734Q174 735 175 737T177 740T180 744T184 747T189 749T196 750Q206 748 214 735V-210H310H373Q401 -210 411 -213T422 -230T411 -247T369 -251Q362 -251 338 -251T298 -250H190Q178 -246 174 -234V734Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(444,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(833,0)\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1655.2,0)\"><path data-c=\"2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(2655.4,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3155.4,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\" transform=\"translate(3544.4,0)\"><g data-mml-node=\"mo\"><path data-c=\"2F\" d=\"M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z\"></path></g></g><g data-mml-node=\"mn\" transform=\"translate(4044.4,0)\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4544.4,0)\"><path data-c=\"230B\" d=\"M229 734Q229 735 230 737T232 740T235 744T239 747T244 749T251 750Q262 748 269 735V-235Q266 -240 256 -249L147 -250H77Q43 -250 32 -247T21 -230T32 -213T72 -209Q79 -209 99 -209T133 -210H229V734Z\"></path></g></g></g></svg></mjx-container>个指针指向键值</li>\n</ol>\n</li>\n</ol>\n<p><img src=\"https://pic4.zhimg.com/80/v2-876647ae2384c7c3234020315d4599f4.jpg\" alt=\"Image\"></p>\n<ol>\n<li>中间节点：<ol>\n<li>n个键值划分n+1个子树</li>\n<li>第i个键值时第i+1个子树中的最小键值</li>\n<li>至少<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"11.286ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 4988.4 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"2308\" d=\"M174 734Q178 746 190 750H298H369Q400 750 411 747T422 730T411 713T372 709Q365 709 345 709T310 710H214V-235Q206 -248 196 -250Q192 -250 189 -249T184 -247T180 -244T178 -241T176 -237T174 -234V734Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(444,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(833,0)\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1655.2,0)\"><path data-c=\"2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(2655.4,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3155.4,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\" transform=\"translate(3544.4,0)\"><g data-mml-node=\"mo\"><path data-c=\"2F\" d=\"M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z\"></path></g></g><g data-mml-node=\"mn\" transform=\"translate(4044.4,0)\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4544.4,0)\"><path data-c=\"2309\" d=\"M21 717T21 730T32 746T75 750H147H256Q266 742 269 735V-235Q262 -248 251 -250Q247 -250 244 -249T239 -247T235 -244T233 -241T231 -237T229 -234V710H133Q119 710 99 710T71 709Q43 709 32 713Z\"></path></g></g></g></svg></mjx-container>个指针指向子树</li>\n<li>根节点至少2个指针</li>\n</ol>\n</li>\n</ol>\n<p><img src=\"https://pic4.zhimg.com/80/v2-508ca5f18650748386587ce722039660.jpg\" alt=\"Image\"></p>\n<ol>\n<li><p>B+树的增删改查：自查资料</p>\n</li>\n<li><p>B+树的特点</p>\n<ol>\n<li>结构稳定</li>\n<li>支持范围查询（键的组织基于比较）</li>\n<li>b+树更新索引代价高；额外空间代价高（因为是多维索引）</li>\n<li>访问索引的IO代价=树高（B+树不常驻内存）或者0（常驻内存）</li>\n<li>树高通常不超过3层，因此索引IO代价不超过3（总代价不超过4）. 通常情况下，根节点常驻内存，因此索引IO代价不超过2（总代价不超过3）</li>\n<li>例子：设块大小8KB，键2 Bytes，指针2 Bytes，则一个块可以放2048个索引项.</li>\n</ol>\n</li>\n</ol>\n<p><img src=\"https://pic4.zhimg.com/80/v2-017fabd4143f80805fc7da3a90d7bcdb.jpg\" alt=\"Image\"></p>\n<h3 id=\"散列表\"><a href=\"#散列表\" class=\"headerlink\" title=\"散列表\"></a>散列表</h3><ol>\n<li>散列函数<ol>\n<li>h: 查找键（散列键）-&gt; [0,…,B-1]</li>\n<li>桶：序号为0,1,…,B-1</li>\n</ol>\n</li>\n<li>散列索引流程<ol>\n<li>若一个桶中仅一块，则IO次数=1</li>\n<li>否则由参数B决定，平均IO次数=总块数/B</li>\n</ol>\n</li>\n</ol>\n<h4 id=\"可扩展散列表\"><a href=\"#可扩展散列表\" class=\"headerlink\" title=\"可扩展散列表\"></a>可扩展散列表</h4><ul>\n<li>定义自查. 这里只总结优缺点</li>\n</ul>\n<ol>\n<li>优点：大部分情况下不存在溢出块，因此当查找溢出块时，只需要查找一个存储块</li>\n<li>缺点：桶增长速度快，可能导致内存放不下整个桶数组，影响其他保存在主存中的数据，波动较大</li>\n</ol>\n<h4 id=\"线性散列表\"><a href=\"#线性散列表\" class=\"headerlink\" title=\"线性散列表\"></a>线性散列表</h4><ul>\n<li>定义自查. 这里只总结优缺点</li>\n</ul>\n<ol>\n<li>优点：空间效率优于可扩展散列表；综合性能较好</li>\n<li>缺点：查找性能比可扩展散列表差</li>\n</ol>\n<h3 id=\"B-树与散列表对比\"><a href=\"#B-树与散列表对比\" class=\"headerlink\" title=\"B+树与散列表对比\"></a>B+树与散列表对比</h3><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">特征\\索引结构</th>\n<th style=\"text-align:left\">B+树</th>\n<th style=\"text-align:left\">散列表</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">结构稳定性</td>\n<td style=\"text-align:left\">稳定</td>\n<td style=\"text-align:left\">不稳定</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">范围查询</td>\n<td style=\"text-align:left\">支持（基于序关系）</td>\n<td style=\"text-align:left\">不支持</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">查找IO代价</td>\n<td style=\"text-align:left\">有n层节点在磁盘中则代价为n+1</td>\n<td style=\"text-align:left\">平均IO次数=总块数/桶数</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">额外空间代价</td>\n<td style=\"text-align:left\">高（多级索引）</td>\n<td style=\"text-align:left\">低</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">更新索引（增、删）代价</td>\n<td style=\"text-align:left\">高（多级索引且涉及节点的分裂合并）</td>\n<td style=\"text-align:left\">低</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h3 id=\"多维索引\"><a href=\"#多维索引\" class=\"headerlink\" title=\"多维索引\"></a>多维索引</h3><ol>\n<li>空间数据<ol>\n<li>Point</li>\n<li>Line</li>\n<li>Polygon</li>\n</ol>\n</li>\n<li>用于决策分析的多维数据<ol>\n<li>数据——关系</li>\n<li>维——关系的每个属性</li>\n</ol>\n</li>\n<li>多维查询<ol>\n<li>同时在数据的多个维度上进行匹配</li>\n<li>传统的索引只能索引一维，不适于多维数据处理</li>\n</ol>\n</li>\n<li>经典例子：R-Tree</li>\n</ol>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: document.title+document.date,\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","site":{"data":{}},"length":2534,"excerpt":"<p>缓冲区管理；索引结构</p>","more":"<h2 id=\"缓冲区管理\"><a href=\"#缓冲区管理\" class=\"headerlink\" title=\"缓冲区管理\"></a>缓冲区管理</h2><ul>\n<li>缓冲区由一个个frame构成，每个frame刚好可以容纳一个页</li>\n<li>缓冲区介于内存和磁盘之间，为计算机程序隐藏了“并非所有数据都存在内存”这一事实</li>\n</ul>\n<h3 id=\"Frame的参数\"><a href=\"#Frame的参数\" class=\"headerlink\" title=\"Frame的参数\"></a>Frame的参数</h3><ol>\n<li>Dirty<blockquote>\n<p>Frame中的块是否已经被修改</p>\n</blockquote>\n</li>\n<li>Pin-count<blockquote>\n<p>Frame的块的已经被请求且还未释放的计数，即当前的用户数</p>\n</blockquote>\n</li>\n<li>*Others<blockquote>\n<p>Latch: 是否加锁</p>\n</blockquote>\n</li>\n</ol>\n<h3 id=\"缓冲区管理过程\"><a href=\"#缓冲区管理过程\" class=\"headerlink\" title=\"缓冲区管理过程\"></a>缓冲区管理过程</h3><ol>\n<li>当请求块且块不在缓冲区时：<ol>\n<li>选择一个用于替换的frame（空或非空）</li>\n<li>如果frame是dirty的，frame的内容写回磁盘</li>\n<li>将请求块写入被选择的frame</li>\n<li>将该frame的pin-count自增1，且返回其地址</li>\n</ol>\n</li>\n<li>当释放块时<ol>\n<li>请求者将该frame的pin-count自减1</li>\n<li>请求者必须声明该块是否被修改过（用frame-&gt;dirty）</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"缓冲区替换策略\"><a href=\"#缓冲区替换策略\" class=\"headerlink\" title=\"缓冲区替换策略\"></a>缓冲区替换策略</h3><ol>\n<li>理论最优：OPT算法（也称为Belady’s算法）</li>\n<li>常用：LRU, LRU-K, 2Q, Second-Chance FIFO, CLOCK</li>\n</ol>\n<h4 id=\"LRU\"><a href=\"#LRU\" class=\"headerlink\" title=\"LRU\"></a>LRU</h4><ol>\n<li>基于<strong>时间局部性</strong>: 越是最近访问的，在未来被访问的概率越高</li>\n<li>优点：<ol>\n<li>适用于满足时间局部性的场景（多次重复请求同一页）</li>\n<li>选取frame的时间复杂度是O(1)</li>\n</ol>\n</li>\n<li>缺点：<ol>\n<li>缓存污染：LRU + repreated sequential scans</li>\n<li>维护LRU链表代价昂贵：修改链表耗时</li>\n<li>如果访问不满足时间局部性，则性能较差</li>\n<li>只考虑最近一次访问，不考虑访问频率</li>\n</ol>\n</li>\n</ol>\n<h4 id=\"LRU-K\"><a href=\"#LRU-K\" class=\"headerlink\" title=\"LRU-K\"></a>LRU-K</h4><ol>\n<li>如果某个frame的访问次数达到了K次以上，则应当尽量不置换</li>\n<li>实验表明，K并非越大越好，LRU-2性能较好</li>\n<li>缺点：需要额外记录访问次数</li>\n</ol>\n<h4 id=\"Second-Chance-FIFO\"><a href=\"#Second-Chance-FIFO\" class=\"headerlink\" title=\"Second-Chance FIFO\"></a>Second-Chance FIFO</h4><ol>\n<li>所有frame组成FIFO链表，每个frame附加一个bit位，初始为0.当FO页第一次被选中置换为1，并移动到FI端。只有bit为1的FO页才被选中替换</li>\n<li>优点：每个frame只需要1个额外bit，空间代价很低</li>\n<li>缺点：<strong>置换时需要移动多个元素，理论性能比LRU差。</strong></li>\n</ol>\n<p>Q: 为什么不适用OS缓冲区管理，而需要DBMS？<br>A: DBMS经常能预测访问模式。可以使用更专门的缓冲区替换策略，有利于pre-fetch策略的有效使用。且DBMS需要强制写回磁盘能力，OS的缓冲写回一般通过记录写请求来实现（来自不同应用），实际的磁盘修改推迟，因此不能保证写顺序</p>\n<h2 id=\"索引结构\"><a href=\"#索引结构\" class=\"headerlink\" title=\"索引结构\"></a>索引结构</h2><ul>\n<li>重要内容；B+树、散列表的概念；不同索引方式的优缺点对比，如时空复杂度、功能差异；多维索引的概念</li>\n</ul>\n<ol>\n<li>密集索引<ol>\n<li>每个记录都有一个索引项</li>\n<li>索引项按查找键排序</li>\n<li>使用密集索引的原因：记录通常比索引项要大；索引可以常驻内存；要查找键值为K的记录是否存在，不需要访问磁盘数据块</li>\n<li>缺点：索引占用太多空间 -&gt; <strong>用稀疏索引改进</strong></li>\n</ol>\n</li>\n<li>稀疏索引<ol>\n<li>仅部分记录有索引项</li>\n<li>一般情况：为每个数据块的第一个记录建立索引项</li>\n<li>优点：节省了索引空间；对同样的记录，稀疏索引可以使用更少的索引项</li>\n<li>缺点：对于“是否存在键值为K的记录？”，需要访问磁盘数据块</li>\n</ol>\n</li>\n<li>多级索引<ol>\n<li>好处：一级索引（直接指向记录）可能还太大而不能常驻内存；二级索引更小，可以常驻内存；减少磁盘IO次数</li>\n<li>磁盘IO次数计算：读索引n次IO+读入数据块1次IO. 例子：</li>\n</ol>\n</li>\n</ol>\n<p><img src=\"https://pic4.zhimg.com/80/v2-b670267c13ba0ff4881dda1235a312f5.jpg\" alt=\"Image\"></p>\n<ol>\n<li>适用场景：当一级索引过大而二级索引可常驻内存时有效</li>\n<li>缺点：二级索引进仅可用稀疏索引；一般不考虑三级以上索引（B+树更好）</li>\n</ol>\n<ol>\n<li>辅助索引、倒排索引（自行查找概念）</li>\n</ol>\n<h3 id=\"B-树\"><a href=\"#B-树\" class=\"headerlink\" title=\"B+树\"></a>B+树</h3><ol>\n<li>一种树形多级索引结构</li>\n<li>树的层数与数据大小相关，通常为3层</li>\n<li>所有节点格式相同：n个值，n+1个指针</li>\n<li>所有叶子节点位于同一层</li>\n<li>叶子节点：<ol>\n<li>个指向相邻叶节点的指针</li>\n<li>n对指针-键值对</li>\n<li>至少<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"11.286ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 4988.4 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"230A\" d=\"M174 734Q174 735 175 737T177 740T180 744T184 747T189 749T196 750Q206 748 214 735V-210H310H373Q401 -210 411 -213T422 -230T411 -247T369 -251Q362 -251 338 -251T298 -250H190Q178 -246 174 -234V734Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(444,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(833,0)\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1655.2,0)\"><path data-c=\"2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(2655.4,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3155.4,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\" transform=\"translate(3544.4,0)\"><g data-mml-node=\"mo\"><path data-c=\"2F\" d=\"M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z\"></path></g></g><g data-mml-node=\"mn\" transform=\"translate(4044.4,0)\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4544.4,0)\"><path data-c=\"230B\" d=\"M229 734Q229 735 230 737T232 740T235 744T239 747T244 749T251 750Q262 748 269 735V-235Q266 -240 256 -249L147 -250H77Q43 -250 32 -247T21 -230T32 -213T72 -209Q79 -209 99 -209T133 -210H229V734Z\"></path></g></g></g></svg></mjx-container>个指针指向键值</li>\n</ol>\n</li>\n</ol>\n<p><img src=\"https://pic4.zhimg.com/80/v2-876647ae2384c7c3234020315d4599f4.jpg\" alt=\"Image\"></p>\n<ol>\n<li>中间节点：<ol>\n<li>n个键值划分n+1个子树</li>\n<li>第i个键值时第i+1个子树中的最小键值</li>\n<li>至少<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"11.286ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 4988.4 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"2308\" d=\"M174 734Q178 746 190 750H298H369Q400 750 411 747T422 730T411 713T372 709Q365 709 345 709T310 710H214V-235Q206 -248 196 -250Q192 -250 189 -249T184 -247T180 -244T178 -241T176 -237T174 -234V734Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(444,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(833,0)\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1655.2,0)\"><path data-c=\"2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(2655.4,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3155.4,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\" transform=\"translate(3544.4,0)\"><g data-mml-node=\"mo\"><path data-c=\"2F\" d=\"M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z\"></path></g></g><g data-mml-node=\"mn\" transform=\"translate(4044.4,0)\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4544.4,0)\"><path data-c=\"2309\" d=\"M21 717T21 730T32 746T75 750H147H256Q266 742 269 735V-235Q262 -248 251 -250Q247 -250 244 -249T239 -247T235 -244T233 -241T231 -237T229 -234V710H133Q119 710 99 710T71 709Q43 709 32 713Z\"></path></g></g></g></svg></mjx-container>个指针指向子树</li>\n<li>根节点至少2个指针</li>\n</ol>\n</li>\n</ol>\n<p><img src=\"https://pic4.zhimg.com/80/v2-508ca5f18650748386587ce722039660.jpg\" alt=\"Image\"></p>\n<ol>\n<li><p>B+树的增删改查：自查资料</p>\n</li>\n<li><p>B+树的特点</p>\n<ol>\n<li>结构稳定</li>\n<li>支持范围查询（键的组织基于比较）</li>\n<li>b+树更新索引代价高；额外空间代价高（因为是多维索引）</li>\n<li>访问索引的IO代价=树高（B+树不常驻内存）或者0（常驻内存）</li>\n<li>树高通常不超过3层，因此索引IO代价不超过3（总代价不超过4）. 通常情况下，根节点常驻内存，因此索引IO代价不超过2（总代价不超过3）</li>\n<li>例子：设块大小8KB，键2 Bytes，指针2 Bytes，则一个块可以放2048个索引项.</li>\n</ol>\n</li>\n</ol>\n<p><img src=\"https://pic4.zhimg.com/80/v2-017fabd4143f80805fc7da3a90d7bcdb.jpg\" alt=\"Image\"></p>\n<h3 id=\"散列表\"><a href=\"#散列表\" class=\"headerlink\" title=\"散列表\"></a>散列表</h3><ol>\n<li>散列函数<ol>\n<li>h: 查找键（散列键）-&gt; [0,…,B-1]</li>\n<li>桶：序号为0,1,…,B-1</li>\n</ol>\n</li>\n<li>散列索引流程<ol>\n<li>若一个桶中仅一块，则IO次数=1</li>\n<li>否则由参数B决定，平均IO次数=总块数/B</li>\n</ol>\n</li>\n</ol>\n<h4 id=\"可扩展散列表\"><a href=\"#可扩展散列表\" class=\"headerlink\" title=\"可扩展散列表\"></a>可扩展散列表</h4><ul>\n<li>定义自查. 这里只总结优缺点</li>\n</ul>\n<ol>\n<li>优点：大部分情况下不存在溢出块，因此当查找溢出块时，只需要查找一个存储块</li>\n<li>缺点：桶增长速度快，可能导致内存放不下整个桶数组，影响其他保存在主存中的数据，波动较大</li>\n</ol>\n<h4 id=\"线性散列表\"><a href=\"#线性散列表\" class=\"headerlink\" title=\"线性散列表\"></a>线性散列表</h4><ul>\n<li>定义自查. 这里只总结优缺点</li>\n</ul>\n<ol>\n<li>优点：空间效率优于可扩展散列表；综合性能较好</li>\n<li>缺点：查找性能比可扩展散列表差</li>\n</ol>\n<h3 id=\"B-树与散列表对比\"><a href=\"#B-树与散列表对比\" class=\"headerlink\" title=\"B+树与散列表对比\"></a>B+树与散列表对比</h3><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">特征\\索引结构</th>\n<th style=\"text-align:left\">B+树</th>\n<th style=\"text-align:left\">散列表</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">结构稳定性</td>\n<td style=\"text-align:left\">稳定</td>\n<td style=\"text-align:left\">不稳定</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">范围查询</td>\n<td style=\"text-align:left\">支持（基于序关系）</td>\n<td style=\"text-align:left\">不支持</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">查找IO代价</td>\n<td style=\"text-align:left\">有n层节点在磁盘中则代价为n+1</td>\n<td style=\"text-align:left\">平均IO次数=总块数/桶数</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">额外空间代价</td>\n<td style=\"text-align:left\">高（多级索引）</td>\n<td style=\"text-align:left\">低</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">更新索引（增、删）代价</td>\n<td style=\"text-align:left\">高（多级索引且涉及节点的分裂合并）</td>\n<td style=\"text-align:left\">低</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h3 id=\"多维索引\"><a href=\"#多维索引\" class=\"headerlink\" title=\"多维索引\"></a>多维索引</h3><ol>\n<li>空间数据<ol>\n<li>Point</li>\n<li>Line</li>\n<li>Polygon</li>\n</ol>\n</li>\n<li>用于决策分析的多维数据<ol>\n<li>数据——关系</li>\n<li>维——关系的每个属性</li>\n</ol>\n</li>\n<li>多维查询<ol>\n<li>同时在数据的多个维度上进行匹配</li>\n<li>传统的索引只能索引一维，不适于多维数据处理</li>\n</ol>\n</li>\n<li>经典例子：R-Tree</li>\n</ol>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: document.title+document.date,\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>"},{"title":"高级数据库系统知识点总结（Part 3）","mathjax":true,"codeblock":{"enable":true,"show_result":true},"date":"2023-02-17T08:40:58.000Z","_content":"\n查询优化、连接算法\n\n<!--more-->\n\n## 查询优化\n- 重点内容：整个查询的工作过程（逻辑优化、物理优化）；中间结果的大小估计；查询计划的IO代价计算\n\n### 工作流程\n1. 初始逻辑查询计划生成：将语法分析树转换为关系代数表达式树——逻辑查询计划（使用关系代数）\n2. 查询重写：将初始逻辑查询计划转换为优化的逻辑查询计划\n   1. 基于代数转换规则\n3. 估计中间结果大小结果大小\n\n### 查询代价估计\n1. 中间关系大小估计\n2. IO代价估计\n3. 物理查询计划生成\n其中1和2要在内存里完成（磁盘IO代价太高）\n\n#### 中间结果的大小估计\n需要用到的一些统计量，也即估计目标：\n   1. T(R)：R的元组数\n   2. S(R)：R中每个元组的大小（Bytes）\n   3. V(R,A)：R的属性A上的不同值数\n   4. B(R): 容纳R所有元组所需的块数\n   - 例子：R=\n  \n|A|B|C|D\n|:---|:---|:---|:---\n|cat|1|10|a\n|cat|1|20|b\n|dog|1|30|a\n|dog|1|40|c\n|bat|1|50|d\n\n> A: 20 byte string; B: 4 byte integer; C: 8 byte date; D: 5 byte string\n\n   - 则 T(R)=5, S(R)=37, V(R,A)=3, V(R,B)=1, V(R,C)=5, V(R,D)=4\n  \n1. W = R1 $\\times$ R2 的大小估计\n   1. T(W) = T(R1) * T(R2)\n   2. S(W) = S(R1) + S(R2)\n2. W = $\\sigma_{p}$(R) 的大小估计\n   1. S(W) = S(R)\n   2. T(W) = s * T(R). （分类讨论：=，$\\neq$，$\\leq$）\n$$\ns=\\left\\{\n\\begin{aligned}\n&\\frac{1}{V(R,z)}&, p为\\text{“}z=val\\text{”}比较时\\\\\n&1-\\frac{1}{V(R,z)}&, p为\\text{“}z\\neq val\\text{”}比较时\\\\\n&\\left. \n    \\begin{aligned}\n    &1/2 或\\\\\n    &1/3 或\\\\\n    &范围命中率f\n    \\end{aligned}\\right\\}&, p为\\text{“}\\leq,\\geq,<,>\\text{”}比较时\n\\end{aligned}\n\\right.\n$$\n3. W = R1 $\\bowtie$ R2 的大小估计. 令$X$为R1的属性集合，$Y$为R2的属性集合\n   1. 若 $X\\cap Y=\\emptyset$，则与R1$\\times$R2相同\n   2. 若 $X\\cap Y=A$，且 $V(R1,A)\\leq V(R2,A)\\Rightarrow$ R1.A上的值都在R2中, 则\n$$\nT(W)=\\frac{T(R2)}{V(R2,A)}\\times T(R1)\n$$\n   3. 一般地：\n$$\nT(W)=\\frac{T(R1)\\cdot T(R2)}{\\max\\{V(R1,A),V(R2,A)\\}}\n$$  \n   4. S(W) = S(R1) + S(R2) - S(A) （容斥原理）\n   5. V(W,A) = min{V(R1, A), V(R2, A)}（假设满足值集的包含）\n\n#### IO代价估计\n- 估计目标：指型查询计划所必须读（写）的磁盘块数目\n- 影响查询计划IO代价的因素：\n  1. 实现查询计划的逻辑操作符\n  2. 中间结果的大小\n  3. 实现逻辑操作符的物理操作. e.g., 连接操作是用索引连接还是散列连接？\n  4. 相似操作的顺序. e.g., 多关系的连接顺序\n  5. 物理操作符之家你的参数传递方式（**流水线**还是**物化**？）\n1. 流水线：多个操作同时执行，一个操作产生的元组直接通过共享内存传递给其他操作\n   1. 节省IO\n   2. 占用主存，若缓冲区出现“颠簸”则IO增加\n2. 物化：操作依次执行，并且每个操作的结果（中间关系）都写到磁盘上共其他操作存取\n   1. 通过磁盘物理进行数据传递\n   2. 节省主存空间\n- 需要的一些参数：\n  1. B(R)：R所需的块数\n  2. f(R)：每块可容纳的R的最大元组数\n  3. M：可用的内存块数\n  4. HT(i)：索引i的层数\n  5. LB(i)：索引i的叶节点所需的块数\n\n## 连接算法\n- 重点内容：每个连接算法的IO代价估计和内存开销\n1. 连接操作的实现算法 （$R1(A,C)\\bowtie R2(C,D)$）：\n   1. 嵌套循环连接\n   2. 归并连接\n   3. 索引连接\n   4. 散列连接\n\n### 连接算法的代价分析\n1. 影响连接算法代价（I/O）的因素：\n   1. 关系的元组是否在磁盘块中连续存放？\n   2. 关系是否按连接属性有序？\n   3. 连接属性上是否存在索引？\n\n#### 嵌套循环连接代价分析 \n![join-eg](join-eg.jpg)\n> 100个block用来放置R1, 1个block用来放置R2\n\n![loop-alg](loop-alg.jpg)\n\n1. 不连续存放，每个元组都需要一次单独的IO： R1 $\\bowtie$ R2 IO代价=T(R1) * (1 + T(R2)) = 50,010,000\n2. 改进的方法（略）\n3. 连续存放，设R1和R2被连续存放在块中，则 R1 $\\bowtie$ R2 IO代价=B(R1) / (M - 1) * (M - 1 + B(R2)) = B(R2)\n\n#### 归并连接代价分析\n- 沿用嵌套循环连接的例子\n1. 连续存放且有序，总IO代价=读R1代价+读R2代价=B(R1) + B(R2)=1,000+500=1,500\n2. 连续存放但无序：需要排序但内存有限. 一种排序方法：两阶段多路归并排序\n![merge-alg](merge-alg.jpg)\n   1. 每个元组在两个阶段各有一次读和写，共有4次IO. 故排序IO代价=4 * (B(R1) + B(R2))=6,000\n   2. 考虑连续存放且有序时，需要一次读。故整个流程每个元组经历五次IO，总IO代价=5 * (B(R1) + B(R2)) = 7,500\n3. Buffer block数的平方必须大于等于排序关系R的块数B(R)\n4. 归并算法的改进：将第二阶段的排序和join合并进行，省去一次读一次写，总IO代价=3 * (B(R1) + B(R2))\n   1. 要求：R1的chunk数+R2的chunk数$\\leq$M\n\n#### 索引连接代价分析\n- R1(A,C) $\\bowtie$ R2(C,D)\n> 假设R1.C存在索引\n> 假设R1.C的索引存储在内存中\n> 假设R2连续存放且无序\n\n![index-alg](index-alg.jpg)\n> raed R2: B(R2) IOs\n> probe index: no IOs\n> Read matching R1 tuples: ?\n\n- 关键问题：matching tuples 选中率p的估计\n1. 若R1.C是主键，R2.C是外键，则每个R2tuple在R1中，选中率p = 1\n2. 若 V(R1,C) < T(R1)，则每个R2 Tuple在R1中的选中率p = T(R1)/V(R1,C) = 2\n3. 总而言之，总代价估计 = B(R2) + T(R2) * p\n4. 如果R1.C上的Index不能全部放在内存（假设R1.C的一级索引占200块）:\n![index-probe](index-probe.jpg)\n   1. 总Io代价=B(R2) + T(R2) * (Probe index cost + p)\n\n#### 散列连接代价分析\n> 假设R1，R2连续存放但无序\n> 假设共有100个哈希桶\n\n![hash-alg](hash-alg.jpg)\n\n1. 第（1）步，内存块数为M，故划分为M-1个桶，每一块对应一个同。最后一块用于读入R1(R2)的一块，计算其中每个元组的h，并将元组复制到对应的块中，共产生2 * (B(R1) + B(R2))次读写\n2. 第（2）步，按块读取后归并，共产生(B(R1) + B(R2))次读写\n3. 总而言之，总IO代价=3 * (B(R1) + B(R2))\n4. 内存要求：min(B(R1), B(R2)) $\\leq$ M^2\n\n### 连接算法的对比总结\n> R1 $\\bowtie$ R2，连续存放且无序. C是公共属性\n\n> 假设 $B(R2)\\leq B(R1)$\n\n> 对于索引连接，假设索引存于内存中\n\n|算法|时间代价|内存要求|适用场景\n|:---|:---|:---|:---\n|嵌套循环连接（R2 $\\bowtie$ R1）|$B(R2) + \\frac{B(R1)B(R2)}{M-1}$|$\\geq 2$ |相对于内存较小的关系\n|归并连接|$5(B(R1)+B(R2))$|$\\geq\\sqrt{B(R1)}$ |记录有序\n|归并连接（改进后）|$3(B(R1)+B(R2))$|$\\geq\\sqrt{B(R1)+B(R2)}$|记录有序且R1.C>R2.C\n|索引连接|$B(R2) + \\frac{T(R1)T(R2)}{V(R1.C)}$| $\\geq LB(R1.C)^2$|索引存在且**有用**(太大了不行)\n|散列连接|$3(B(R1)+B(R2))$| $\\geq \\sqrt{B(R2)}$|记录无序且无索引且V(R1.C)$\\approx$V(R2.C)\n\n### 连接的左右变元选择\n- 嵌套循环连接：较小的关系作为左变元\n- 归并连接：排序之后较小的关系作为左变元首先读入内存\n- 索引连接：有索引的关系作为右变元\n- 散列连接：较小的关系作为左变元，散列后读入内存\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: document.title+document.date,\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","source":"_posts/2023-02-17-adbs03.md","raw":"---\ntitle: 高级数据库系统知识点总结（Part 3）\nmathjax: true\ncodeblock:\n  enable: true\n  show_result: true\ndate: 2023-02-17 16:40:58\ntags: 数据库\ncategories: 学习笔记\n---\n\n查询优化、连接算法\n\n<!--more-->\n\n## 查询优化\n- 重点内容：整个查询的工作过程（逻辑优化、物理优化）；中间结果的大小估计；查询计划的IO代价计算\n\n### 工作流程\n1. 初始逻辑查询计划生成：将语法分析树转换为关系代数表达式树——逻辑查询计划（使用关系代数）\n2. 查询重写：将初始逻辑查询计划转换为优化的逻辑查询计划\n   1. 基于代数转换规则\n3. 估计中间结果大小结果大小\n\n### 查询代价估计\n1. 中间关系大小估计\n2. IO代价估计\n3. 物理查询计划生成\n其中1和2要在内存里完成（磁盘IO代价太高）\n\n#### 中间结果的大小估计\n需要用到的一些统计量，也即估计目标：\n   1. T(R)：R的元组数\n   2. S(R)：R中每个元组的大小（Bytes）\n   3. V(R,A)：R的属性A上的不同值数\n   4. B(R): 容纳R所有元组所需的块数\n   - 例子：R=\n  \n|A|B|C|D\n|:---|:---|:---|:---\n|cat|1|10|a\n|cat|1|20|b\n|dog|1|30|a\n|dog|1|40|c\n|bat|1|50|d\n\n> A: 20 byte string; B: 4 byte integer; C: 8 byte date; D: 5 byte string\n\n   - 则 T(R)=5, S(R)=37, V(R,A)=3, V(R,B)=1, V(R,C)=5, V(R,D)=4\n  \n1. W = R1 $\\times$ R2 的大小估计\n   1. T(W) = T(R1) * T(R2)\n   2. S(W) = S(R1) + S(R2)\n2. W = $\\sigma_{p}$(R) 的大小估计\n   1. S(W) = S(R)\n   2. T(W) = s * T(R). （分类讨论：=，$\\neq$，$\\leq$）\n$$\ns=\\left\\{\n\\begin{aligned}\n&\\frac{1}{V(R,z)}&, p为\\text{“}z=val\\text{”}比较时\\\\\n&1-\\frac{1}{V(R,z)}&, p为\\text{“}z\\neq val\\text{”}比较时\\\\\n&\\left. \n    \\begin{aligned}\n    &1/2 或\\\\\n    &1/3 或\\\\\n    &范围命中率f\n    \\end{aligned}\\right\\}&, p为\\text{“}\\leq,\\geq,<,>\\text{”}比较时\n\\end{aligned}\n\\right.\n$$\n3. W = R1 $\\bowtie$ R2 的大小估计. 令$X$为R1的属性集合，$Y$为R2的属性集合\n   1. 若 $X\\cap Y=\\emptyset$，则与R1$\\times$R2相同\n   2. 若 $X\\cap Y=A$，且 $V(R1,A)\\leq V(R2,A)\\Rightarrow$ R1.A上的值都在R2中, 则\n$$\nT(W)=\\frac{T(R2)}{V(R2,A)}\\times T(R1)\n$$\n   3. 一般地：\n$$\nT(W)=\\frac{T(R1)\\cdot T(R2)}{\\max\\{V(R1,A),V(R2,A)\\}}\n$$  \n   4. S(W) = S(R1) + S(R2) - S(A) （容斥原理）\n   5. V(W,A) = min{V(R1, A), V(R2, A)}（假设满足值集的包含）\n\n#### IO代价估计\n- 估计目标：指型查询计划所必须读（写）的磁盘块数目\n- 影响查询计划IO代价的因素：\n  1. 实现查询计划的逻辑操作符\n  2. 中间结果的大小\n  3. 实现逻辑操作符的物理操作. e.g., 连接操作是用索引连接还是散列连接？\n  4. 相似操作的顺序. e.g., 多关系的连接顺序\n  5. 物理操作符之家你的参数传递方式（**流水线**还是**物化**？）\n1. 流水线：多个操作同时执行，一个操作产生的元组直接通过共享内存传递给其他操作\n   1. 节省IO\n   2. 占用主存，若缓冲区出现“颠簸”则IO增加\n2. 物化：操作依次执行，并且每个操作的结果（中间关系）都写到磁盘上共其他操作存取\n   1. 通过磁盘物理进行数据传递\n   2. 节省主存空间\n- 需要的一些参数：\n  1. B(R)：R所需的块数\n  2. f(R)：每块可容纳的R的最大元组数\n  3. M：可用的内存块数\n  4. HT(i)：索引i的层数\n  5. LB(i)：索引i的叶节点所需的块数\n\n## 连接算法\n- 重点内容：每个连接算法的IO代价估计和内存开销\n1. 连接操作的实现算法 （$R1(A,C)\\bowtie R2(C,D)$）：\n   1. 嵌套循环连接\n   2. 归并连接\n   3. 索引连接\n   4. 散列连接\n\n### 连接算法的代价分析\n1. 影响连接算法代价（I/O）的因素：\n   1. 关系的元组是否在磁盘块中连续存放？\n   2. 关系是否按连接属性有序？\n   3. 连接属性上是否存在索引？\n\n#### 嵌套循环连接代价分析 \n![join-eg](join-eg.jpg)\n> 100个block用来放置R1, 1个block用来放置R2\n\n![loop-alg](loop-alg.jpg)\n\n1. 不连续存放，每个元组都需要一次单独的IO： R1 $\\bowtie$ R2 IO代价=T(R1) * (1 + T(R2)) = 50,010,000\n2. 改进的方法（略）\n3. 连续存放，设R1和R2被连续存放在块中，则 R1 $\\bowtie$ R2 IO代价=B(R1) / (M - 1) * (M - 1 + B(R2)) = B(R2)\n\n#### 归并连接代价分析\n- 沿用嵌套循环连接的例子\n1. 连续存放且有序，总IO代价=读R1代价+读R2代价=B(R1) + B(R2)=1,000+500=1,500\n2. 连续存放但无序：需要排序但内存有限. 一种排序方法：两阶段多路归并排序\n![merge-alg](merge-alg.jpg)\n   1. 每个元组在两个阶段各有一次读和写，共有4次IO. 故排序IO代价=4 * (B(R1) + B(R2))=6,000\n   2. 考虑连续存放且有序时，需要一次读。故整个流程每个元组经历五次IO，总IO代价=5 * (B(R1) + B(R2)) = 7,500\n3. Buffer block数的平方必须大于等于排序关系R的块数B(R)\n4. 归并算法的改进：将第二阶段的排序和join合并进行，省去一次读一次写，总IO代价=3 * (B(R1) + B(R2))\n   1. 要求：R1的chunk数+R2的chunk数$\\leq$M\n\n#### 索引连接代价分析\n- R1(A,C) $\\bowtie$ R2(C,D)\n> 假设R1.C存在索引\n> 假设R1.C的索引存储在内存中\n> 假设R2连续存放且无序\n\n![index-alg](index-alg.jpg)\n> raed R2: B(R2) IOs\n> probe index: no IOs\n> Read matching R1 tuples: ?\n\n- 关键问题：matching tuples 选中率p的估计\n1. 若R1.C是主键，R2.C是外键，则每个R2tuple在R1中，选中率p = 1\n2. 若 V(R1,C) < T(R1)，则每个R2 Tuple在R1中的选中率p = T(R1)/V(R1,C) = 2\n3. 总而言之，总代价估计 = B(R2) + T(R2) * p\n4. 如果R1.C上的Index不能全部放在内存（假设R1.C的一级索引占200块）:\n![index-probe](index-probe.jpg)\n   1. 总Io代价=B(R2) + T(R2) * (Probe index cost + p)\n\n#### 散列连接代价分析\n> 假设R1，R2连续存放但无序\n> 假设共有100个哈希桶\n\n![hash-alg](hash-alg.jpg)\n\n1. 第（1）步，内存块数为M，故划分为M-1个桶，每一块对应一个同。最后一块用于读入R1(R2)的一块，计算其中每个元组的h，并将元组复制到对应的块中，共产生2 * (B(R1) + B(R2))次读写\n2. 第（2）步，按块读取后归并，共产生(B(R1) + B(R2))次读写\n3. 总而言之，总IO代价=3 * (B(R1) + B(R2))\n4. 内存要求：min(B(R1), B(R2)) $\\leq$ M^2\n\n### 连接算法的对比总结\n> R1 $\\bowtie$ R2，连续存放且无序. C是公共属性\n\n> 假设 $B(R2)\\leq B(R1)$\n\n> 对于索引连接，假设索引存于内存中\n\n|算法|时间代价|内存要求|适用场景\n|:---|:---|:---|:---\n|嵌套循环连接（R2 $\\bowtie$ R1）|$B(R2) + \\frac{B(R1)B(R2)}{M-1}$|$\\geq 2$ |相对于内存较小的关系\n|归并连接|$5(B(R1)+B(R2))$|$\\geq\\sqrt{B(R1)}$ |记录有序\n|归并连接（改进后）|$3(B(R1)+B(R2))$|$\\geq\\sqrt{B(R1)+B(R2)}$|记录有序且R1.C>R2.C\n|索引连接|$B(R2) + \\frac{T(R1)T(R2)}{V(R1.C)}$| $\\geq LB(R1.C)^2$|索引存在且**有用**(太大了不行)\n|散列连接|$3(B(R1)+B(R2))$| $\\geq \\sqrt{B(R2)}$|记录无序且无索引且V(R1.C)$\\approx$V(R2.C)\n\n### 连接的左右变元选择\n- 嵌套循环连接：较小的关系作为左变元\n- 归并连接：排序之后较小的关系作为左变元首先读入内存\n- 索引连接：有索引的关系作为右变元\n- 散列连接：较小的关系作为左变元，散列后读入内存\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: document.title+document.date,\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","slug":"2023-02-17-adbs03","published":1,"updated":"2023-02-17T15:56:14.175Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cludw9n9z00239wv99l5d0rxr","content":"<p>查询优化、连接算法</p>\n<span id=\"more\"></span>\n<h2 id=\"查询优化\"><a href=\"#查询优化\" class=\"headerlink\" title=\"查询优化\"></a>查询优化</h2><ul>\n<li>重点内容：整个查询的工作过程（逻辑优化、物理优化）；中间结果的大小估计；查询计划的IO代价计算</li>\n</ul>\n<h3 id=\"工作流程\"><a href=\"#工作流程\" class=\"headerlink\" title=\"工作流程\"></a>工作流程</h3><ol>\n<li>初始逻辑查询计划生成：将语法分析树转换为关系代数表达式树——逻辑查询计划（使用关系代数）</li>\n<li>查询重写：将初始逻辑查询计划转换为优化的逻辑查询计划<ol>\n<li>基于代数转换规则</li>\n</ol>\n</li>\n<li>估计中间结果大小结果大小</li>\n</ol>\n<h3 id=\"查询代价估计\"><a href=\"#查询代价估计\" class=\"headerlink\" title=\"查询代价估计\"></a>查询代价估计</h3><ol>\n<li>中间关系大小估计</li>\n<li>IO代价估计</li>\n<li>物理查询计划生成<br>其中1和2要在内存里完成（磁盘IO代价太高）</li>\n</ol>\n<h4 id=\"中间结果的大小估计\"><a href=\"#中间结果的大小估计\" class=\"headerlink\" title=\"中间结果的大小估计\"></a>中间结果的大小估计</h4><p>需要用到的一些统计量，也即估计目标：</p>\n<ol>\n<li>T(R)：R的元组数</li>\n<li>S(R)：R中每个元组的大小（Bytes）</li>\n<li>V(R,A)：R的属性A上的不同值数</li>\n<li>B(R): 容纳R所有元组所需的块数</li>\n</ol>\n<ul>\n<li>例子：R=</li>\n</ul>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">A</th>\n<th style=\"text-align:left\">B</th>\n<th style=\"text-align:left\">C</th>\n<th style=\"text-align:left\">D</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">cat</td>\n<td style=\"text-align:left\">1</td>\n<td style=\"text-align:left\">10</td>\n<td style=\"text-align:left\">a</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">cat</td>\n<td style=\"text-align:left\">1</td>\n<td style=\"text-align:left\">20</td>\n<td style=\"text-align:left\">b</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">dog</td>\n<td style=\"text-align:left\">1</td>\n<td style=\"text-align:left\">30</td>\n<td style=\"text-align:left\">a</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">dog</td>\n<td style=\"text-align:left\">1</td>\n<td style=\"text-align:left\">40</td>\n<td style=\"text-align:left\">c</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">bat</td>\n<td style=\"text-align:left\">1</td>\n<td style=\"text-align:left\">50</td>\n<td style=\"text-align:left\">d</td>\n</tr>\n</tbody>\n</table>\n</div>\n<blockquote>\n<p>A: 20 byte string; B: 4 byte integer; C: 8 byte date; D: 5 byte string</p>\n</blockquote>\n<ul>\n<li>则 T(R)=5, S(R)=37, V(R,A)=3, V(R,B)=1, V(R,C)=5, V(R,D)=4</li>\n</ul>\n<ol>\n<li>W = R1 <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0.02ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.76ex\" height=\"1.09ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -491 778 482\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"D7\" d=\"M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z\"></path></g></g></g></svg></mjx-container> R2 的大小估计<ol>\n<li>T(W) = T(R1) * T(R2)</li>\n<li>S(W) = S(R1) + S(R2)</li>\n</ol>\n</li>\n<li>W = <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.65ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.284ex\" height=\"1.625ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -431 1009.7 718.2\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D70E\" d=\"M184 -11Q116 -11 74 34T31 147Q31 247 104 333T274 430Q275 431 414 431H552Q553 430 555 429T559 427T562 425T565 422T567 420T569 416T570 412T571 407T572 401Q572 357 507 357Q500 357 490 357T476 358H416L421 348Q439 310 439 263Q439 153 359 71T184 -11ZM361 278Q361 358 276 358Q152 358 115 184Q114 180 114 178Q106 141 106 117Q106 67 131 47T188 26Q242 26 287 73Q316 103 334 153T356 233T361 278Z\"></path></g><g data-mml-node=\"TeXAtom\" transform=\"translate(604,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path></g></g></g></g></g></svg></mjx-container>(R) 的大小估计<ol>\n<li>S(W) = S(R)</li>\n<li>T(W) = s * T(R). （分类讨论：=，<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.486ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.76ex\" height=\"2.106ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 778 931\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"2260\" d=\"M166 -215T159 -215T147 -212T141 -204T139 -197Q139 -190 144 -183L306 133H70Q56 140 56 153Q56 168 72 173H327L406 327H72Q56 332 56 347Q56 360 70 367H426Q597 702 602 707Q605 716 618 716Q625 716 630 712T636 703T638 696Q638 692 471 367H707Q722 359 722 347Q722 336 708 328L451 327L371 173H708Q722 163 722 153Q722 140 707 133H351Q175 -210 170 -212Q166 -215 159 -215Z\"></path></g></g></g></svg></mjx-container>，<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.312ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.76ex\" height=\"1.751ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -636 778 774\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"2264\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"></path></g></g></g></svg></mjx-container>）<script type=\"math/tex; mode=display\">\ns=\\left\\{\n\\begin{aligned}\n&\\frac{1}{V(R,z)}&, p为\\text{“}z=val\\text{”}比较时\\\\\n&1-\\frac{1}{V(R,z)}&, p为\\text{“}z\\neq val\\text{”}比较时\\\\\n&\\left. \n\\begin{aligned}\n&1/2 或\\\\\n&1/3 或\\\\\n&范围命中率f\n\\end{aligned}\\right\\}&, p为\\text{“}\\leq,\\geq,<,>\\text{”}比较时\n\\end{aligned}\n\\right.</script></li>\n</ol>\n</li>\n<li>W = R1 <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.011ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.036ex\" height=\"1.154ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -505 900 510\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"22C8\" d=\"M833 50T833 250T832 450T659 351T487 250T658 150T832 50Q833 50 833 250ZM873 10Q866 -5 854 -5Q851 -5 845 -3L449 226L260 115Q51 -5 43 -5Q39 -5 35 -1T28 7L26 11V489Q33 505 43 505Q51 505 260 385L449 274L845 503Q851 505 853 505Q866 505 873 490V10ZM412 250L67 450Q66 450 66 250T67 50Q69 51 240 150T412 250Z\"></path></g></g></g></svg></mjx-container> R2 的大小估计. 令<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>为R1的属性集合，<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>为R2的属性集合<ol>\n<li>若 <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.186ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.317ex\" height=\"1.932ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -772 4560 854\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1074.2,0)\"><path data-c=\"2229\" d=\"M88 -21T75 -21T55 -7V200Q55 231 55 280Q56 414 60 428Q61 430 61 431Q77 500 152 549T332 598Q443 598 522 544T610 405Q611 399 611 194V-7Q604 -22 591 -22Q582 -22 572 -9L570 405Q563 433 556 449T529 485Q498 519 445 538T334 558Q251 558 179 518T96 401Q95 396 95 193V-7Q88 -21 75 -21Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1963.4,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3004.2,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4060,0)\"><path data-c=\"2205\" d=\"M331 696Q335 708 339 722T345 744T350 759T357 769T367 772Q374 772 381 767T388 754Q388 746 377 712L366 673L378 661Q460 575 460 344Q460 281 456 234T432 126T373 27Q319 -22 250 -22Q214 -22 180 -7Q168 -3 168 -4L159 -33Q148 -71 142 -75Q138 -78 132 -78Q124 -78 118 -72T111 -60Q111 -52 122 -18L133 21L125 29Q39 111 39 344Q39 596 137 675Q187 716 251 716Q265 716 278 714T296 710T315 703T331 696ZM276 676Q264 679 246 679Q196 679 159 631Q134 597 128 536T121 356Q121 234 127 174T151 80L234 366Q253 430 275 506T308 618L318 654Q318 656 294 669L276 676ZM181 42Q207 16 250 16Q291 16 324 47Q354 78 366 136T378 356Q378 470 372 528T349 616L348 613Q348 611 264 326L181 42Z\"></path></g></g></g></svg></mjx-container>，则与R1<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0.02ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.76ex\" height=\"1.09ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -491 778 482\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"D7\" d=\"M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z\"></path></g></g></g></svg></mjx-container>R2相同</li>\n<li>若 <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.186ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.882ex\" height=\"1.805ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 4810 798\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1074.2,0)\"><path data-c=\"2229\" d=\"M88 -21T75 -21T55 -7V200Q55 231 55 280Q56 414 60 428Q61 430 61 431Q77 500 152 549T332 598Q443 598 522 544T610 405Q611 399 611 194V-7Q604 -22 591 -22Q582 -22 572 -9L570 405Q563 433 556 449T529 485Q498 519 445 538T334 558Q251 558 179 518T96 401Q95 396 95 193V-7Q88 -21 75 -21Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1963.4,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3004.2,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4060,0)\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g></g></g></svg></mjx-container>，且 <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24.011ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 10612.7 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D449\" d=\"M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(769,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1158,0)\"><path data-c=\"1D445\" d=\"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(1917,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2417,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2861.7,0)\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3611.7,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4278.4,0)\"><path data-c=\"2264\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(5334.2,0)\"><path data-c=\"1D449\" d=\"M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6103.2,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(6492.2,0)\"><path data-c=\"1D445\" d=\"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(7251.2,0)\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(7751.2,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(8195.9,0)\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(8945.9,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(9612.7,0)\"><path data-c=\"21D2\" d=\"M580 514Q580 525 596 525Q601 525 604 525T609 525T613 524T615 523T617 520T619 517T622 512Q659 438 720 381T831 300T927 263Q944 258 944 250T935 239T898 228T840 204Q696 134 622 -12Q618 -21 615 -22T600 -24Q580 -24 580 -17Q580 -13 585 0Q620 69 671 123L681 133H70Q56 140 56 153Q56 168 72 173H725L735 181Q774 211 852 250Q851 251 834 259T789 283T735 319L725 327H72Q56 332 56 347Q56 360 70 367H681L671 377Q638 412 609 458T580 514Z\"></path></g></g></g></svg></mjx-container> R1.A上的值都在R2中, 则<script type=\"math/tex; mode=display\">\nT(W)=\\frac{T(R2)}{V(R2,A)}\\times T(R1)</script></li>\n<li>一般地：<script type=\"math/tex; mode=display\">\nT(W)=\\frac{T(R1)\\cdot T(R2)}{\\max\\{V(R1,A),V(R2,A)\\}}</script></li>\n<li>S(W) = S(R1) + S(R2) - S(A) （容斥原理）</li>\n<li>V(W,A) = min{V(R1, A), V(R2, A)}（假设满足值集的包含）</li>\n</ol>\n</li>\n</ol>\n<h4 id=\"IO代价估计\"><a href=\"#IO代价估计\" class=\"headerlink\" title=\"IO代价估计\"></a>IO代价估计</h4><ul>\n<li>估计目标：指型查询计划所必须读（写）的磁盘块数目</li>\n<li>影响查询计划IO代价的因素：<ol>\n<li>实现查询计划的逻辑操作符</li>\n<li>中间结果的大小</li>\n<li>实现逻辑操作符的物理操作. e.g., 连接操作是用索引连接还是散列连接？</li>\n<li>相似操作的顺序. e.g., 多关系的连接顺序</li>\n<li>物理操作符之家你的参数传递方式（<strong>流水线</strong>还是<strong>物化</strong>？）</li>\n</ol>\n</li>\n</ul>\n<ol>\n<li>流水线：多个操作同时执行，一个操作产生的元组直接通过共享内存传递给其他操作<ol>\n<li>节省IO</li>\n<li>占用主存，若缓冲区出现“颠簸”则IO增加</li>\n</ol>\n</li>\n<li>物化：操作依次执行，并且每个操作的结果（中间关系）都写到磁盘上共其他操作存取<ol>\n<li>通过磁盘物理进行数据传递</li>\n<li>节省主存空间</li>\n</ol>\n</li>\n</ol>\n<ul>\n<li>需要的一些参数：<ol>\n<li>B(R)：R所需的块数</li>\n<li>f(R)：每块可容纳的R的最大元组数</li>\n<li>M：可用的内存块数</li>\n<li>HT(i)：索引i的层数</li>\n<li>LB(i)：索引i的叶节点所需的块数</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"连接算法\"><a href=\"#连接算法\" class=\"headerlink\" title=\"连接算法\"></a>连接算法</h2><ul>\n<li>重点内容：每个连接算法的IO代价估计和内存开销</li>\n</ul>\n<ol>\n<li>连接操作的实现算法 （<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"21.531ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 9516.9 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D445\" d=\"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(759,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1259,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1648,0)\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2398,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2842.7,0)\"><path data-c=\"1D436\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3602.7,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4269.4,0)\"><path data-c=\"22C8\" d=\"M833 50T833 250T832 450T659 351T487 250T658 150T832 50Q833 50 833 250ZM873 10Q866 -5 854 -5Q851 -5 845 -3L449 226L260 115Q51 -5 43 -5Q39 -5 35 -1T28 7L26 11V489Q33 505 43 505Q51 505 260 385L449 274L845 503Q851 505 853 505Q866 505 873 490V10ZM412 250L67 450Q66 450 66 250T67 50Q69 51 240 150T412 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(5447.2,0)\"><path data-c=\"1D445\" d=\"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(6206.2,0)\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6706.2,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(7095.2,0)\"><path data-c=\"1D436\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(7855.2,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(8299.9,0)\"><path data-c=\"1D437\" d=\"M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(9127.9,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>）：<ol>\n<li>嵌套循环连接</li>\n<li>归并连接</li>\n<li>索引连接</li>\n<li>散列连接</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"连接算法的代价分析\"><a href=\"#连接算法的代价分析\" class=\"headerlink\" title=\"连接算法的代价分析\"></a>连接算法的代价分析</h3><ol>\n<li>影响连接算法代价（I/O）的因素：<ol>\n<li>关系的元组是否在磁盘块中连续存放？</li>\n<li>关系是否按连接属性有序？</li>\n<li>连接属性上是否存在索引？</li>\n</ol>\n</li>\n</ol>\n<h4 id=\"嵌套循环连接代价分析\"><a href=\"#嵌套循环连接代价分析\" class=\"headerlink\" title=\"嵌套循环连接代价分析\"></a>嵌套循环连接代价分析</h4><p><img src=\"join-eg.jpg\" alt=\"join-eg\"></p>\n<blockquote>\n<p>100个block用来放置R1, 1个block用来放置R2</p>\n</blockquote>\n<p><img src=\"loop-alg.jpg\" alt=\"loop-alg\"></p>\n<ol>\n<li>不连续存放，每个元组都需要一次单独的IO： R1 <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.011ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.036ex\" height=\"1.154ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -505 900 510\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"22C8\" d=\"M833 50T833 250T832 450T659 351T487 250T658 150T832 50Q833 50 833 250ZM873 10Q866 -5 854 -5Q851 -5 845 -3L449 226L260 115Q51 -5 43 -5Q39 -5 35 -1T28 7L26 11V489Q33 505 43 505Q51 505 260 385L449 274L845 503Q851 505 853 505Q866 505 873 490V10ZM412 250L67 450Q66 450 66 250T67 50Q69 51 240 150T412 250Z\"></path></g></g></g></svg></mjx-container> R2 IO代价=T(R1) * (1 + T(R2)) = 50,010,000</li>\n<li>改进的方法（略）</li>\n<li>连续存放，设R1和R2被连续存放在块中，则 R1 <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.011ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.036ex\" height=\"1.154ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -505 900 510\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"22C8\" d=\"M833 50T833 250T832 450T659 351T487 250T658 150T832 50Q833 50 833 250ZM873 10Q866 -5 854 -5Q851 -5 845 -3L449 226L260 115Q51 -5 43 -5Q39 -5 35 -1T28 7L26 11V489Q33 505 43 505Q51 505 260 385L449 274L845 503Q851 505 853 505Q866 505 873 490V10ZM412 250L67 450Q66 450 66 250T67 50Q69 51 240 150T412 250Z\"></path></g></g></g></svg></mjx-container> R2 IO代价=B(R1) / (M - 1) * (M - 1 + B(R2)) = B(R2)</li>\n</ol>\n<h4 id=\"归并连接代价分析\"><a href=\"#归并连接代价分析\" class=\"headerlink\" title=\"归并连接代价分析\"></a>归并连接代价分析</h4><ul>\n<li>沿用嵌套循环连接的例子</li>\n</ul>\n<ol>\n<li>连续存放且有序，总IO代价=读R1代价+读R2代价=B(R1) + B(R2)=1,000+500=1,500</li>\n<li>连续存放但无序：需要排序但内存有限. 一种排序方法：两阶段多路归并排序<br><img src=\"merge-alg.jpg\" alt=\"merge-alg\"><ol>\n<li>每个元组在两个阶段各有一次读和写，共有4次IO. 故排序IO代价=4 * (B(R1) + B(R2))=6,000</li>\n<li>考虑连续存放且有序时，需要一次读。故整个流程每个元组经历五次IO，总IO代价=5 * (B(R1) + B(R2)) = 7,500</li>\n</ol>\n</li>\n<li>Buffer block数的平方必须大于等于排序关系R的块数B(R)</li>\n<li>归并算法的改进：将第二阶段的排序和join合并进行，省去一次读一次写，总IO代价=3 * (B(R1) + B(R2))<ol>\n<li>要求：R1的chunk数+R2的chunk数<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.312ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.76ex\" height=\"1.751ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -636 778 774\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"2264\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"></path></g></g></g></svg></mjx-container>M</li>\n</ol>\n</li>\n</ol>\n<h4 id=\"索引连接代价分析\"><a href=\"#索引连接代价分析\" class=\"headerlink\" title=\"索引连接代价分析\"></a>索引连接代价分析</h4><ul>\n<li>R1(A,C) <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.011ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.036ex\" height=\"1.154ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -505 900 510\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"22C8\" d=\"M833 50T833 250T832 450T659 351T487 250T658 150T832 50Q833 50 833 250ZM873 10Q866 -5 854 -5Q851 -5 845 -3L449 226L260 115Q51 -5 43 -5Q39 -5 35 -1T28 7L26 11V489Q33 505 43 505Q51 505 260 385L449 274L845 503Q851 505 853 505Q866 505 873 490V10ZM412 250L67 450Q66 450 66 250T67 50Q69 51 240 150T412 250Z\"></path></g></g></g></svg></mjx-container> R2(C,D)<blockquote>\n<p>假设R1.C存在索引<br>假设R1.C的索引存储在内存中<br>假设R2连续存放且无序</p>\n</blockquote>\n</li>\n</ul>\n<p><img src=\"index-alg.jpg\" alt=\"index-alg\"></p>\n<blockquote>\n<p>raed R2: B(R2) IOs<br>probe index: no IOs<br>Read matching R1 tuples: ?</p>\n</blockquote>\n<ul>\n<li>关键问题：matching tuples 选中率p的估计</li>\n</ul>\n<ol>\n<li>若R1.C是主键，R2.C是外键，则每个R2tuple在R1中，选中率p = 1</li>\n<li>若 V(R1,C) &lt; T(R1)，则每个R2 Tuple在R1中的选中率p = T(R1)/V(R1,C) = 2</li>\n<li>总而言之，总代价估计 = B(R2) + T(R2) * p</li>\n<li>如果R1.C上的Index不能全部放在内存（假设R1.C的一级索引占200块）:<br><img src=\"index-probe.jpg\" alt=\"index-probe\"><ol>\n<li>总Io代价=B(R2) + T(R2) * (Probe index cost + p)</li>\n</ol>\n</li>\n</ol>\n<h4 id=\"散列连接代价分析\"><a href=\"#散列连接代价分析\" class=\"headerlink\" title=\"散列连接代价分析\"></a>散列连接代价分析</h4><blockquote>\n<p>假设R1，R2连续存放但无序<br>假设共有100个哈希桶</p>\n</blockquote>\n<p><img src=\"hash-alg.jpg\" alt=\"hash-alg\"></p>\n<ol>\n<li>第（1）步，内存块数为M，故划分为M-1个桶，每一块对应一个同。最后一块用于读入R1(R2)的一块，计算其中每个元组的h，并将元组复制到对应的块中，共产生2 * (B(R1) + B(R2))次读写</li>\n<li>第（2）步，按块读取后归并，共产生(B(R1) + B(R2))次读写</li>\n<li>总而言之，总IO代价=3 * (B(R1) + B(R2))</li>\n<li>内存要求：min(B(R1), B(R2)) <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.312ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.76ex\" height=\"1.751ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -636 778 774\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"2264\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"></path></g></g></g></svg></mjx-container> M^2</li>\n</ol>\n<h3 id=\"连接算法的对比总结\"><a href=\"#连接算法的对比总结\" class=\"headerlink\" title=\"连接算法的对比总结\"></a>连接算法的对比总结</h3><blockquote>\n<p>R1 <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.011ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.036ex\" height=\"1.154ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -505 900 510\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"22C8\" d=\"M833 50T833 250T832 450T659 351T487 250T658 150T832 50Q833 50 833 250ZM873 10Q866 -5 854 -5Q851 -5 845 -3L449 226L260 115Q51 -5 43 -5Q39 -5 35 -1T28 7L26 11V489Q33 505 43 505Q51 505 260 385L449 274L845 503Q851 505 853 505Q866 505 873 490V10ZM412 250L67 450Q66 450 66 250T67 50Q69 51 240 150T412 250Z\"></path></g></g></g></svg></mjx-container> R2，连续存放且无序. C是公共属性</p>\n<p>假设 <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"15.669ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 6925.6 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(759,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1148,0)\"><path data-c=\"1D445\" d=\"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(1907,0)\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2407,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3073.8,0)\"><path data-c=\"2264\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4129.6,0)\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4888.6,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(5277.6,0)\"><path data-c=\"1D445\" d=\"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(6036.6,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6536.6,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container></p>\n<p>对于索引连接，假设索引存于内存中</p>\n</blockquote>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">算法</th>\n<th style=\"text-align:left\">时间代价</th>\n<th style=\"text-align:left\">内存要求</th>\n<th style=\"text-align:left\">适用场景</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">嵌套循环连接（R2 <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.011ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.036ex\" height=\"1.154ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -505 900 510\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"22C8\" d=\"M833 50T833 250T832 450T659 351T487 250T658 150T832 50Q833 50 833 250ZM873 10Q866 -5 854 -5Q851 -5 845 -3L449 226L260 115Q51 -5 43 -5Q39 -5 35 -1T28 7L26 11V489Q33 505 43 505Q51 505 260 385L449 274L845 503Q851 505 853 505Q866 505 873 490V10ZM412 250L67 450Q66 450 66 250T67 50Q69 51 240 150T412 250Z\"></path></g></g></g></svg></mjx-container> R1）</td>\n<td style=\"text-align:left\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.912ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"19.033ex\" height=\"3.281ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -1047.1 8412.6 1450.1\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(759,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1148,0)\"><path data-c=\"1D445\" d=\"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(1907,0)\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2407,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3018.2,0)\"><path data-c=\"2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mfrac\" transform=\"translate(4018.4,0)\"><g data-mml-node=\"mrow\" transform=\"translate(220,516.8) scale(0.707)\"><g data-mml-node=\"mi\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(759,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1148,0)\"><path data-c=\"1D445\" d=\"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(1907,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2407,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2796,0)\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3555,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3944,0)\"><path data-c=\"1D445\" d=\"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(4703,0)\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(5203,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g><g data-mml-node=\"mrow\" transform=\"translate(1373.6,-345) scale(0.707)\"><g data-mml-node=\"mi\"><path data-c=\"1D440\" d=\"M289 629Q289 635 232 637Q208 637 201 638T194 648Q194 649 196 659Q197 662 198 666T199 671T201 676T203 679T207 681T212 683T220 683T232 684Q238 684 262 684T307 683Q386 683 398 683T414 678Q415 674 451 396L487 117L510 154Q534 190 574 254T662 394Q837 673 839 675Q840 676 842 678T846 681L852 683H948Q965 683 988 683T1017 684Q1051 684 1051 673Q1051 668 1048 656T1045 643Q1041 637 1008 637Q968 636 957 634T939 623Q936 618 867 340T797 59Q797 55 798 54T805 50T822 48T855 46H886Q892 37 892 35Q892 19 885 5Q880 0 869 0Q864 0 828 1T736 2Q675 2 644 2T609 1Q592 1 592 11Q592 13 594 25Q598 41 602 43T625 46Q652 46 685 49Q699 52 704 61Q706 65 742 207T813 490T848 631L654 322Q458 10 453 5Q451 4 449 3Q444 0 433 0Q418 0 415 7Q413 11 374 317L335 624L267 354Q200 88 200 79Q206 46 272 46H282Q288 41 289 37T286 19Q282 3 278 1Q274 0 267 0Q265 0 255 0T221 1T157 2Q127 2 95 1T58 0Q43 0 39 2T35 11Q35 13 38 25T43 40Q45 46 65 46Q135 46 154 86Q158 92 223 354T289 629Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1051,0)\"><path data-c=\"2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(1829,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g></g><rect width=\"4154.1\" height=\"60\" x=\"120\" y=\"220\"></rect></g></g></g></svg></mjx-container></td>\n<td style=\"text-align:left\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.312ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"3.52ex\" height=\"1.819ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -666 1555.8 804\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"2265\" d=\"M83 616Q83 624 89 630T99 636Q107 636 253 568T543 431T687 361Q694 356 694 346T687 331Q685 329 395 192L107 56H101Q83 58 83 76Q83 77 83 79Q82 86 98 95Q117 105 248 167Q326 204 378 228L626 346L360 472Q291 505 200 548Q112 589 98 597T83 616ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(1055.8,0)\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path></g></g></g></svg></mjx-container></td>\n<td style=\"text-align:left\">相对于内存较小的关系</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">归并连接</td>\n<td style=\"text-align:left\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"18.309ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 8092.4 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><path data-c=\"35\" d=\"M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(500,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(889,0)\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1648,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2037,0)\"><path data-c=\"1D445\" d=\"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(2796,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3296,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3907.2,0)\"><path data-c=\"2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4907.4,0)\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(5666.4,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(6055.4,0)\"><path data-c=\"1D445\" d=\"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(6814.4,0)\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(7314.4,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(7703.4,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container></td>\n<td style=\"text-align:left\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.639ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"11.022ex\" height=\"2.851ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -977.5 4871.8 1260\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"2265\" d=\"M83 616Q83 624 89 630T99 636Q107 636 253 568T543 431T687 361Q694 356 694 346T687 331Q685 329 395 192L107 56H101Q83 58 83 76Q83 77 83 79Q82 86 98 95Q117 105 248 167Q326 204 378 228L626 346L360 472Q291 505 200 548Q112 589 98 597T83 616ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"></path></g><g data-mml-node=\"msqrt\" transform=\"translate(1055.8,0)\"><g transform=\"translate(1020,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(759,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1148,0)\"><path data-c=\"1D445\" d=\"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(1907,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2407,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(0,67.5)\"><path data-c=\"221A\" d=\"M263 249Q264 249 315 130T417 -108T470 -228L725 302Q981 837 982 839Q989 850 1001 850Q1008 850 1013 844T1020 832V826L741 243Q645 43 540 -176Q479 -303 469 -324T453 -348Q449 -350 436 -350L424 -349L315 -96Q206 156 205 156L171 130Q138 104 137 104L111 130L263 249Z\"></path></g><rect width=\"2796\" height=\"60\" x=\"1020\" y=\"857.5\"></rect></g></g></g></svg></mjx-container></td>\n<td style=\"text-align:left\">记录有序</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">归并连接（改进后）</td>\n<td style=\"text-align:left\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"18.309ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 8092.4 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><path data-c=\"33\" d=\"M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(500,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(889,0)\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1648,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2037,0)\"><path data-c=\"1D445\" d=\"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(2796,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3296,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3907.2,0)\"><path data-c=\"2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4907.4,0)\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(5666.4,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(6055.4,0)\"><path data-c=\"1D445\" d=\"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(6814.4,0)\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(7314.4,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(7703.4,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container></td>\n<td style=\"text-align:left\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.639ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20.114ex\" height=\"2.851ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -977.5 8890.2 1260\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"2265\" d=\"M83 616Q83 624 89 630T99 636Q107 636 253 568T543 431T687 361Q694 356 694 346T687 331Q685 329 395 192L107 56H101Q83 58 83 76Q83 77 83 79Q82 86 98 95Q117 105 248 167Q326 204 378 228L626 346L360 472Q291 505 200 548Q112 589 98 597T83 616ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"></path></g><g data-mml-node=\"msqrt\" transform=\"translate(1055.8,0)\"><g transform=\"translate(1020,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(759,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1148,0)\"><path data-c=\"1D445\" d=\"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(1907,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2407,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3018.2,0)\"><path data-c=\"2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4018.4,0)\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4777.4,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(5166.4,0)\"><path data-c=\"1D445\" d=\"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(5925.4,0)\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6425.4,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(0,67.5)\"><path data-c=\"221A\" d=\"M263 249Q264 249 315 130T417 -108T470 -228L725 302Q981 837 982 839Q989 850 1001 850Q1008 850 1013 844T1020 832V826L741 243Q645 43 540 -176Q479 -303 469 -324T453 -348Q449 -350 436 -350L424 -349L315 -96Q206 156 205 156L171 130Q138 104 137 104L111 130L263 249Z\"></path></g><rect width=\"6814.4\" height=\"60\" x=\"1020\" y=\"857.5\"></rect></g></g></g></svg></mjx-container></td>\n<td style=\"text-align:left\">记录有序且R1.C&gt;R2.C</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">索引连接</td>\n<td style=\"text-align:left\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -1.238ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"18.857ex\" height=\"3.607ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -1047.1 8334.8 1594.2\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(759,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1148,0)\"><path data-c=\"1D445\" d=\"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(1907,0)\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2407,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3018.2,0)\"><path data-c=\"2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mfrac\" transform=\"translate(4018.4,0)\"><g data-mml-node=\"mrow\" transform=\"translate(220,516.8) scale(0.707)\"><g data-mml-node=\"mi\"><path data-c=\"1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(704,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1093,0)\"><path data-c=\"1D445\" d=\"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(1852,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2352,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2741,0)\"><path data-c=\"1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3445,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3834,0)\"><path data-c=\"1D445\" d=\"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(4593,0)\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(5093,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g><g data-mml-node=\"mrow\" transform=\"translate(799.1,-370.3) scale(0.707)\"><g data-mml-node=\"mi\"><path data-c=\"1D449\" d=\"M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(769,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1158,0)\"><path data-c=\"1D445\" d=\"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(1917,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path data-c=\"2E\" d=\"M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z\" transform=\"translate(500,0)\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2695,0)\"><path data-c=\"1D436\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3455,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g><rect width=\"4076.4\" height=\"60\" x=\"120\" y=\"220\"></rect></g></g></g></svg></mjx-container></td>\n<td style=\"text-align:left\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"13.591ex\" height=\"2.452ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -833.9 6007.3 1083.9\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"2265\" d=\"M83 616Q83 624 89 630T99 636Q107 636 253 568T543 431T687 361Q694 356 694 346T687 331Q685 329 395 192L107 56H101Q83 58 83 76Q83 77 83 79Q82 86 98 95Q117 105 248 167Q326 204 378 228L626 346L360 472Q291 505 200 548Q112 589 98 597T83 616ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1055.8,0)\"><path data-c=\"1D43F\" d=\"M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1736.8,0)\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2495.8,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2884.8,0)\"><path data-c=\"1D445\" d=\"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(3643.8,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path data-c=\"2E\" d=\"M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z\" transform=\"translate(500,0)\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4421.8,0)\"><path data-c=\"1D436\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z\"></path></g><g data-mml-node=\"msup\" transform=\"translate(5181.8,0)\"><g data-mml-node=\"mo\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(422,363) scale(0.707)\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path></g></g></g></g></svg></mjx-container></td>\n<td style=\"text-align:left\">索引存在且<strong>有用</strong>(太大了不行)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">散列连接</td>\n<td style=\"text-align:left\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"18.309ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 8092.4 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><path data-c=\"33\" d=\"M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(500,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(889,0)\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1648,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2037,0)\"><path data-c=\"1D445\" d=\"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(2796,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3296,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3907.2,0)\"><path data-c=\"2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4907.4,0)\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(5666.4,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(6055.4,0)\"><path data-c=\"1D445\" d=\"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(6814.4,0)\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(7314.4,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(7703.4,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container></td>\n<td style=\"text-align:left\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.639ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"11.022ex\" height=\"2.851ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -977.5 4871.8 1260\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"2265\" d=\"M83 616Q83 624 89 630T99 636Q107 636 253 568T543 431T687 361Q694 356 694 346T687 331Q685 329 395 192L107 56H101Q83 58 83 76Q83 77 83 79Q82 86 98 95Q117 105 248 167Q326 204 378 228L626 346L360 472Q291 505 200 548Q112 589 98 597T83 616ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"></path></g><g data-mml-node=\"msqrt\" transform=\"translate(1055.8,0)\"><g transform=\"translate(1020,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(759,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1148,0)\"><path data-c=\"1D445\" d=\"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(1907,0)\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2407,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(0,67.5)\"><path data-c=\"221A\" d=\"M263 249Q264 249 315 130T417 -108T470 -228L725 302Q981 837 982 839Q989 850 1001 850Q1008 850 1013 844T1020 832V826L741 243Q645 43 540 -176Q479 -303 469 -324T453 -348Q449 -350 436 -350L424 -349L315 -96Q206 156 205 156L171 130Q138 104 137 104L111 130L263 249Z\"></path></g><rect width=\"2796\" height=\"60\" x=\"1020\" y=\"857.5\"></rect></g></g></g></svg></mjx-container></td>\n<td style=\"text-align:left\">记录无序且无索引且V(R1.C)<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0.124ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.76ex\" height=\"0.968ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -483 778 428\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"2248\" d=\"M55 319Q55 360 72 393T114 444T163 472T205 482Q207 482 213 482T223 483Q262 483 296 468T393 413L443 381Q502 346 553 346Q609 346 649 375T694 454Q694 465 698 474T708 483Q722 483 722 452Q722 386 675 338T555 289Q514 289 468 310T388 357T308 404T224 426Q164 426 125 393T83 318Q81 289 69 289Q55 289 55 319ZM55 85Q55 126 72 159T114 210T163 238T205 248Q207 248 213 248T223 249Q262 249 296 234T393 179L443 147Q502 112 553 112Q609 112 649 141T694 220Q694 249 708 249T722 217Q722 153 675 104T555 55Q514 55 468 76T388 123T308 170T224 192Q164 192 125 159T83 84Q80 55 69 55Q55 55 55 85Z\"></path></g></g></g></svg></mjx-container>V(R2.C)</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h3 id=\"连接的左右变元选择\"><a href=\"#连接的左右变元选择\" class=\"headerlink\" title=\"连接的左右变元选择\"></a>连接的左右变元选择</h3><ul>\n<li>嵌套循环连接：较小的关系作为左变元</li>\n<li>归并连接：排序之后较小的关系作为左变元首先读入内存</li>\n<li>索引连接：有索引的关系作为右变元</li>\n<li>散列连接：较小的关系作为左变元，散列后读入内存</li>\n</ul>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: document.title+document.date,\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","site":{"data":{}},"length":3472,"excerpt":"<p>查询优化、连接算法</p>","more":"<h2 id=\"查询优化\"><a href=\"#查询优化\" class=\"headerlink\" title=\"查询优化\"></a>查询优化</h2><ul>\n<li>重点内容：整个查询的工作过程（逻辑优化、物理优化）；中间结果的大小估计；查询计划的IO代价计算</li>\n</ul>\n<h3 id=\"工作流程\"><a href=\"#工作流程\" class=\"headerlink\" title=\"工作流程\"></a>工作流程</h3><ol>\n<li>初始逻辑查询计划生成：将语法分析树转换为关系代数表达式树——逻辑查询计划（使用关系代数）</li>\n<li>查询重写：将初始逻辑查询计划转换为优化的逻辑查询计划<ol>\n<li>基于代数转换规则</li>\n</ol>\n</li>\n<li>估计中间结果大小结果大小</li>\n</ol>\n<h3 id=\"查询代价估计\"><a href=\"#查询代价估计\" class=\"headerlink\" title=\"查询代价估计\"></a>查询代价估计</h3><ol>\n<li>中间关系大小估计</li>\n<li>IO代价估计</li>\n<li>物理查询计划生成<br>其中1和2要在内存里完成（磁盘IO代价太高）</li>\n</ol>\n<h4 id=\"中间结果的大小估计\"><a href=\"#中间结果的大小估计\" class=\"headerlink\" title=\"中间结果的大小估计\"></a>中间结果的大小估计</h4><p>需要用到的一些统计量，也即估计目标：</p>\n<ol>\n<li>T(R)：R的元组数</li>\n<li>S(R)：R中每个元组的大小（Bytes）</li>\n<li>V(R,A)：R的属性A上的不同值数</li>\n<li>B(R): 容纳R所有元组所需的块数</li>\n</ol>\n<ul>\n<li>例子：R=</li>\n</ul>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">A</th>\n<th style=\"text-align:left\">B</th>\n<th style=\"text-align:left\">C</th>\n<th style=\"text-align:left\">D</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">cat</td>\n<td style=\"text-align:left\">1</td>\n<td style=\"text-align:left\">10</td>\n<td style=\"text-align:left\">a</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">cat</td>\n<td style=\"text-align:left\">1</td>\n<td style=\"text-align:left\">20</td>\n<td style=\"text-align:left\">b</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">dog</td>\n<td style=\"text-align:left\">1</td>\n<td style=\"text-align:left\">30</td>\n<td style=\"text-align:left\">a</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">dog</td>\n<td style=\"text-align:left\">1</td>\n<td style=\"text-align:left\">40</td>\n<td style=\"text-align:left\">c</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">bat</td>\n<td style=\"text-align:left\">1</td>\n<td style=\"text-align:left\">50</td>\n<td style=\"text-align:left\">d</td>\n</tr>\n</tbody>\n</table>\n</div>\n<blockquote>\n<p>A: 20 byte string; B: 4 byte integer; C: 8 byte date; D: 5 byte string</p>\n</blockquote>\n<ul>\n<li>则 T(R)=5, S(R)=37, V(R,A)=3, V(R,B)=1, V(R,C)=5, V(R,D)=4</li>\n</ul>\n<ol>\n<li>W = R1 <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0.02ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.76ex\" height=\"1.09ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -491 778 482\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"D7\" d=\"M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z\"></path></g></g></g></svg></mjx-container> R2 的大小估计<ol>\n<li>T(W) = T(R1) * T(R2)</li>\n<li>S(W) = S(R1) + S(R2)</li>\n</ol>\n</li>\n<li>W = <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.65ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.284ex\" height=\"1.625ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -431 1009.7 718.2\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D70E\" d=\"M184 -11Q116 -11 74 34T31 147Q31 247 104 333T274 430Q275 431 414 431H552Q553 430 555 429T559 427T562 425T565 422T567 420T569 416T570 412T571 407T572 401Q572 357 507 357Q500 357 490 357T476 358H416L421 348Q439 310 439 263Q439 153 359 71T184 -11ZM361 278Q361 358 276 358Q152 358 115 184Q114 180 114 178Q106 141 106 117Q106 67 131 47T188 26Q242 26 287 73Q316 103 334 153T356 233T361 278Z\"></path></g><g data-mml-node=\"TeXAtom\" transform=\"translate(604,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path></g></g></g></g></g></svg></mjx-container>(R) 的大小估计<ol>\n<li>S(W) = S(R)</li>\n<li>T(W) = s * T(R). （分类讨论：=，<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.486ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.76ex\" height=\"2.106ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 778 931\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"2260\" d=\"M166 -215T159 -215T147 -212T141 -204T139 -197Q139 -190 144 -183L306 133H70Q56 140 56 153Q56 168 72 173H327L406 327H72Q56 332 56 347Q56 360 70 367H426Q597 702 602 707Q605 716 618 716Q625 716 630 712T636 703T638 696Q638 692 471 367H707Q722 359 722 347Q722 336 708 328L451 327L371 173H708Q722 163 722 153Q722 140 707 133H351Q175 -210 170 -212Q166 -215 159 -215Z\"></path></g></g></g></svg></mjx-container>，<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.312ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.76ex\" height=\"1.751ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -636 778 774\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"2264\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"></path></g></g></g></svg></mjx-container>）<script type=\"math/tex; mode=display\">\ns=\\left\\{\n\\begin{aligned}\n&\\frac{1}{V(R,z)}&, p为\\text{“}z=val\\text{”}比较时\\\\\n&1-\\frac{1}{V(R,z)}&, p为\\text{“}z\\neq val\\text{”}比较时\\\\\n&\\left. \n\\begin{aligned}\n&1/2 或\\\\\n&1/3 或\\\\\n&范围命中率f\n\\end{aligned}\\right\\}&, p为\\text{“}\\leq,\\geq,<,>\\text{”}比较时\n\\end{aligned}\n\\right.</script></li>\n</ol>\n</li>\n<li>W = R1 <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.011ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.036ex\" height=\"1.154ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -505 900 510\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"22C8\" d=\"M833 50T833 250T832 450T659 351T487 250T658 150T832 50Q833 50 833 250ZM873 10Q866 -5 854 -5Q851 -5 845 -3L449 226L260 115Q51 -5 43 -5Q39 -5 35 -1T28 7L26 11V489Q33 505 43 505Q51 505 260 385L449 274L845 503Q851 505 853 505Q866 505 873 490V10ZM412 250L67 450Q66 450 66 250T67 50Q69 51 240 150T412 250Z\"></path></g></g></g></svg></mjx-container> R2 的大小估计. 令<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>为R1的属性集合，<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>为R2的属性集合<ol>\n<li>若 <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.186ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.317ex\" height=\"1.932ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -772 4560 854\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1074.2,0)\"><path data-c=\"2229\" d=\"M88 -21T75 -21T55 -7V200Q55 231 55 280Q56 414 60 428Q61 430 61 431Q77 500 152 549T332 598Q443 598 522 544T610 405Q611 399 611 194V-7Q604 -22 591 -22Q582 -22 572 -9L570 405Q563 433 556 449T529 485Q498 519 445 538T334 558Q251 558 179 518T96 401Q95 396 95 193V-7Q88 -21 75 -21Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1963.4,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3004.2,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4060,0)\"><path data-c=\"2205\" d=\"M331 696Q335 708 339 722T345 744T350 759T357 769T367 772Q374 772 381 767T388 754Q388 746 377 712L366 673L378 661Q460 575 460 344Q460 281 456 234T432 126T373 27Q319 -22 250 -22Q214 -22 180 -7Q168 -3 168 -4L159 -33Q148 -71 142 -75Q138 -78 132 -78Q124 -78 118 -72T111 -60Q111 -52 122 -18L133 21L125 29Q39 111 39 344Q39 596 137 675Q187 716 251 716Q265 716 278 714T296 710T315 703T331 696ZM276 676Q264 679 246 679Q196 679 159 631Q134 597 128 536T121 356Q121 234 127 174T151 80L234 366Q253 430 275 506T308 618L318 654Q318 656 294 669L276 676ZM181 42Q207 16 250 16Q291 16 324 47Q354 78 366 136T378 356Q378 470 372 528T349 616L348 613Q348 611 264 326L181 42Z\"></path></g></g></g></svg></mjx-container>，则与R1<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0.02ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.76ex\" height=\"1.09ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -491 778 482\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"D7\" d=\"M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z\"></path></g></g></g></svg></mjx-container>R2相同</li>\n<li>若 <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.186ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.882ex\" height=\"1.805ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 4810 798\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1074.2,0)\"><path data-c=\"2229\" d=\"M88 -21T75 -21T55 -7V200Q55 231 55 280Q56 414 60 428Q61 430 61 431Q77 500 152 549T332 598Q443 598 522 544T610 405Q611 399 611 194V-7Q604 -22 591 -22Q582 -22 572 -9L570 405Q563 433 556 449T529 485Q498 519 445 538T334 558Q251 558 179 518T96 401Q95 396 95 193V-7Q88 -21 75 -21Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1963.4,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3004.2,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4060,0)\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g></g></g></svg></mjx-container>，且 <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24.011ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 10612.7 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D449\" d=\"M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(769,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1158,0)\"><path data-c=\"1D445\" d=\"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(1917,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2417,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2861.7,0)\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3611.7,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4278.4,0)\"><path data-c=\"2264\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(5334.2,0)\"><path data-c=\"1D449\" d=\"M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6103.2,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(6492.2,0)\"><path data-c=\"1D445\" d=\"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(7251.2,0)\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(7751.2,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(8195.9,0)\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(8945.9,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(9612.7,0)\"><path data-c=\"21D2\" d=\"M580 514Q580 525 596 525Q601 525 604 525T609 525T613 524T615 523T617 520T619 517T622 512Q659 438 720 381T831 300T927 263Q944 258 944 250T935 239T898 228T840 204Q696 134 622 -12Q618 -21 615 -22T600 -24Q580 -24 580 -17Q580 -13 585 0Q620 69 671 123L681 133H70Q56 140 56 153Q56 168 72 173H725L735 181Q774 211 852 250Q851 251 834 259T789 283T735 319L725 327H72Q56 332 56 347Q56 360 70 367H681L671 377Q638 412 609 458T580 514Z\"></path></g></g></g></svg></mjx-container> R1.A上的值都在R2中, 则<script type=\"math/tex; mode=display\">\nT(W)=\\frac{T(R2)}{V(R2,A)}\\times T(R1)</script></li>\n<li>一般地：<script type=\"math/tex; mode=display\">\nT(W)=\\frac{T(R1)\\cdot T(R2)}{\\max\\{V(R1,A),V(R2,A)\\}}</script></li>\n<li>S(W) = S(R1) + S(R2) - S(A) （容斥原理）</li>\n<li>V(W,A) = min{V(R1, A), V(R2, A)}（假设满足值集的包含）</li>\n</ol>\n</li>\n</ol>\n<h4 id=\"IO代价估计\"><a href=\"#IO代价估计\" class=\"headerlink\" title=\"IO代价估计\"></a>IO代价估计</h4><ul>\n<li>估计目标：指型查询计划所必须读（写）的磁盘块数目</li>\n<li>影响查询计划IO代价的因素：<ol>\n<li>实现查询计划的逻辑操作符</li>\n<li>中间结果的大小</li>\n<li>实现逻辑操作符的物理操作. e.g., 连接操作是用索引连接还是散列连接？</li>\n<li>相似操作的顺序. e.g., 多关系的连接顺序</li>\n<li>物理操作符之家你的参数传递方式（<strong>流水线</strong>还是<strong>物化</strong>？）</li>\n</ol>\n</li>\n</ul>\n<ol>\n<li>流水线：多个操作同时执行，一个操作产生的元组直接通过共享内存传递给其他操作<ol>\n<li>节省IO</li>\n<li>占用主存，若缓冲区出现“颠簸”则IO增加</li>\n</ol>\n</li>\n<li>物化：操作依次执行，并且每个操作的结果（中间关系）都写到磁盘上共其他操作存取<ol>\n<li>通过磁盘物理进行数据传递</li>\n<li>节省主存空间</li>\n</ol>\n</li>\n</ol>\n<ul>\n<li>需要的一些参数：<ol>\n<li>B(R)：R所需的块数</li>\n<li>f(R)：每块可容纳的R的最大元组数</li>\n<li>M：可用的内存块数</li>\n<li>HT(i)：索引i的层数</li>\n<li>LB(i)：索引i的叶节点所需的块数</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"连接算法\"><a href=\"#连接算法\" class=\"headerlink\" title=\"连接算法\"></a>连接算法</h2><ul>\n<li>重点内容：每个连接算法的IO代价估计和内存开销</li>\n</ul>\n<ol>\n<li>连接操作的实现算法 （<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"21.531ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 9516.9 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D445\" d=\"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(759,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1259,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1648,0)\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2398,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2842.7,0)\"><path data-c=\"1D436\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3602.7,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4269.4,0)\"><path data-c=\"22C8\" d=\"M833 50T833 250T832 450T659 351T487 250T658 150T832 50Q833 50 833 250ZM873 10Q866 -5 854 -5Q851 -5 845 -3L449 226L260 115Q51 -5 43 -5Q39 -5 35 -1T28 7L26 11V489Q33 505 43 505Q51 505 260 385L449 274L845 503Q851 505 853 505Q866 505 873 490V10ZM412 250L67 450Q66 450 66 250T67 50Q69 51 240 150T412 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(5447.2,0)\"><path data-c=\"1D445\" d=\"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(6206.2,0)\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6706.2,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(7095.2,0)\"><path data-c=\"1D436\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(7855.2,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(8299.9,0)\"><path data-c=\"1D437\" d=\"M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(9127.9,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>）：<ol>\n<li>嵌套循环连接</li>\n<li>归并连接</li>\n<li>索引连接</li>\n<li>散列连接</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"连接算法的代价分析\"><a href=\"#连接算法的代价分析\" class=\"headerlink\" title=\"连接算法的代价分析\"></a>连接算法的代价分析</h3><ol>\n<li>影响连接算法代价（I/O）的因素：<ol>\n<li>关系的元组是否在磁盘块中连续存放？</li>\n<li>关系是否按连接属性有序？</li>\n<li>连接属性上是否存在索引？</li>\n</ol>\n</li>\n</ol>\n<h4 id=\"嵌套循环连接代价分析\"><a href=\"#嵌套循环连接代价分析\" class=\"headerlink\" title=\"嵌套循环连接代价分析\"></a>嵌套循环连接代价分析</h4><p><img src=\"join-eg.jpg\" alt=\"join-eg\"></p>\n<blockquote>\n<p>100个block用来放置R1, 1个block用来放置R2</p>\n</blockquote>\n<p><img src=\"loop-alg.jpg\" alt=\"loop-alg\"></p>\n<ol>\n<li>不连续存放，每个元组都需要一次单独的IO： R1 <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.011ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.036ex\" height=\"1.154ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -505 900 510\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"22C8\" d=\"M833 50T833 250T832 450T659 351T487 250T658 150T832 50Q833 50 833 250ZM873 10Q866 -5 854 -5Q851 -5 845 -3L449 226L260 115Q51 -5 43 -5Q39 -5 35 -1T28 7L26 11V489Q33 505 43 505Q51 505 260 385L449 274L845 503Q851 505 853 505Q866 505 873 490V10ZM412 250L67 450Q66 450 66 250T67 50Q69 51 240 150T412 250Z\"></path></g></g></g></svg></mjx-container> R2 IO代价=T(R1) * (1 + T(R2)) = 50,010,000</li>\n<li>改进的方法（略）</li>\n<li>连续存放，设R1和R2被连续存放在块中，则 R1 <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.011ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.036ex\" height=\"1.154ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -505 900 510\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"22C8\" d=\"M833 50T833 250T832 450T659 351T487 250T658 150T832 50Q833 50 833 250ZM873 10Q866 -5 854 -5Q851 -5 845 -3L449 226L260 115Q51 -5 43 -5Q39 -5 35 -1T28 7L26 11V489Q33 505 43 505Q51 505 260 385L449 274L845 503Q851 505 853 505Q866 505 873 490V10ZM412 250L67 450Q66 450 66 250T67 50Q69 51 240 150T412 250Z\"></path></g></g></g></svg></mjx-container> R2 IO代价=B(R1) / (M - 1) * (M - 1 + B(R2)) = B(R2)</li>\n</ol>\n<h4 id=\"归并连接代价分析\"><a href=\"#归并连接代价分析\" class=\"headerlink\" title=\"归并连接代价分析\"></a>归并连接代价分析</h4><ul>\n<li>沿用嵌套循环连接的例子</li>\n</ul>\n<ol>\n<li>连续存放且有序，总IO代价=读R1代价+读R2代价=B(R1) + B(R2)=1,000+500=1,500</li>\n<li>连续存放但无序：需要排序但内存有限. 一种排序方法：两阶段多路归并排序<br><img src=\"merge-alg.jpg\" alt=\"merge-alg\"><ol>\n<li>每个元组在两个阶段各有一次读和写，共有4次IO. 故排序IO代价=4 * (B(R1) + B(R2))=6,000</li>\n<li>考虑连续存放且有序时，需要一次读。故整个流程每个元组经历五次IO，总IO代价=5 * (B(R1) + B(R2)) = 7,500</li>\n</ol>\n</li>\n<li>Buffer block数的平方必须大于等于排序关系R的块数B(R)</li>\n<li>归并算法的改进：将第二阶段的排序和join合并进行，省去一次读一次写，总IO代价=3 * (B(R1) + B(R2))<ol>\n<li>要求：R1的chunk数+R2的chunk数<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.312ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.76ex\" height=\"1.751ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -636 778 774\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"2264\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"></path></g></g></g></svg></mjx-container>M</li>\n</ol>\n</li>\n</ol>\n<h4 id=\"索引连接代价分析\"><a href=\"#索引连接代价分析\" class=\"headerlink\" title=\"索引连接代价分析\"></a>索引连接代价分析</h4><ul>\n<li>R1(A,C) <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.011ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.036ex\" height=\"1.154ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -505 900 510\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"22C8\" d=\"M833 50T833 250T832 450T659 351T487 250T658 150T832 50Q833 50 833 250ZM873 10Q866 -5 854 -5Q851 -5 845 -3L449 226L260 115Q51 -5 43 -5Q39 -5 35 -1T28 7L26 11V489Q33 505 43 505Q51 505 260 385L449 274L845 503Q851 505 853 505Q866 505 873 490V10ZM412 250L67 450Q66 450 66 250T67 50Q69 51 240 150T412 250Z\"></path></g></g></g></svg></mjx-container> R2(C,D)<blockquote>\n<p>假设R1.C存在索引<br>假设R1.C的索引存储在内存中<br>假设R2连续存放且无序</p>\n</blockquote>\n</li>\n</ul>\n<p><img src=\"index-alg.jpg\" alt=\"index-alg\"></p>\n<blockquote>\n<p>raed R2: B(R2) IOs<br>probe index: no IOs<br>Read matching R1 tuples: ?</p>\n</blockquote>\n<ul>\n<li>关键问题：matching tuples 选中率p的估计</li>\n</ul>\n<ol>\n<li>若R1.C是主键，R2.C是外键，则每个R2tuple在R1中，选中率p = 1</li>\n<li>若 V(R1,C) &lt; T(R1)，则每个R2 Tuple在R1中的选中率p = T(R1)/V(R1,C) = 2</li>\n<li>总而言之，总代价估计 = B(R2) + T(R2) * p</li>\n<li>如果R1.C上的Index不能全部放在内存（假设R1.C的一级索引占200块）:<br><img src=\"index-probe.jpg\" alt=\"index-probe\"><ol>\n<li>总Io代价=B(R2) + T(R2) * (Probe index cost + p)</li>\n</ol>\n</li>\n</ol>\n<h4 id=\"散列连接代价分析\"><a href=\"#散列连接代价分析\" class=\"headerlink\" title=\"散列连接代价分析\"></a>散列连接代价分析</h4><blockquote>\n<p>假设R1，R2连续存放但无序<br>假设共有100个哈希桶</p>\n</blockquote>\n<p><img src=\"hash-alg.jpg\" alt=\"hash-alg\"></p>\n<ol>\n<li>第（1）步，内存块数为M，故划分为M-1个桶，每一块对应一个同。最后一块用于读入R1(R2)的一块，计算其中每个元组的h，并将元组复制到对应的块中，共产生2 * (B(R1) + B(R2))次读写</li>\n<li>第（2）步，按块读取后归并，共产生(B(R1) + B(R2))次读写</li>\n<li>总而言之，总IO代价=3 * (B(R1) + B(R2))</li>\n<li>内存要求：min(B(R1), B(R2)) <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.312ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.76ex\" height=\"1.751ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -636 778 774\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"2264\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"></path></g></g></g></svg></mjx-container> M^2</li>\n</ol>\n<h3 id=\"连接算法的对比总结\"><a href=\"#连接算法的对比总结\" class=\"headerlink\" title=\"连接算法的对比总结\"></a>连接算法的对比总结</h3><blockquote>\n<p>R1 <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.011ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.036ex\" height=\"1.154ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -505 900 510\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"22C8\" d=\"M833 50T833 250T832 450T659 351T487 250T658 150T832 50Q833 50 833 250ZM873 10Q866 -5 854 -5Q851 -5 845 -3L449 226L260 115Q51 -5 43 -5Q39 -5 35 -1T28 7L26 11V489Q33 505 43 505Q51 505 260 385L449 274L845 503Q851 505 853 505Q866 505 873 490V10ZM412 250L67 450Q66 450 66 250T67 50Q69 51 240 150T412 250Z\"></path></g></g></g></svg></mjx-container> R2，连续存放且无序. C是公共属性</p>\n<p>假设 <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"15.669ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 6925.6 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(759,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1148,0)\"><path data-c=\"1D445\" d=\"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(1907,0)\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2407,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3073.8,0)\"><path data-c=\"2264\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4129.6,0)\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4888.6,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(5277.6,0)\"><path data-c=\"1D445\" d=\"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(6036.6,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6536.6,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container></p>\n<p>对于索引连接，假设索引存于内存中</p>\n</blockquote>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">算法</th>\n<th style=\"text-align:left\">时间代价</th>\n<th style=\"text-align:left\">内存要求</th>\n<th style=\"text-align:left\">适用场景</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">嵌套循环连接（R2 <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.011ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.036ex\" height=\"1.154ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -505 900 510\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"22C8\" d=\"M833 50T833 250T832 450T659 351T487 250T658 150T832 50Q833 50 833 250ZM873 10Q866 -5 854 -5Q851 -5 845 -3L449 226L260 115Q51 -5 43 -5Q39 -5 35 -1T28 7L26 11V489Q33 505 43 505Q51 505 260 385L449 274L845 503Q851 505 853 505Q866 505 873 490V10ZM412 250L67 450Q66 450 66 250T67 50Q69 51 240 150T412 250Z\"></path></g></g></g></svg></mjx-container> R1）</td>\n<td style=\"text-align:left\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.912ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"19.033ex\" height=\"3.281ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -1047.1 8412.6 1450.1\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(759,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1148,0)\"><path data-c=\"1D445\" d=\"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(1907,0)\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2407,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3018.2,0)\"><path data-c=\"2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mfrac\" transform=\"translate(4018.4,0)\"><g data-mml-node=\"mrow\" transform=\"translate(220,516.8) scale(0.707)\"><g data-mml-node=\"mi\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(759,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1148,0)\"><path data-c=\"1D445\" d=\"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(1907,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2407,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2796,0)\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3555,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3944,0)\"><path data-c=\"1D445\" d=\"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(4703,0)\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(5203,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g><g data-mml-node=\"mrow\" transform=\"translate(1373.6,-345) scale(0.707)\"><g data-mml-node=\"mi\"><path data-c=\"1D440\" d=\"M289 629Q289 635 232 637Q208 637 201 638T194 648Q194 649 196 659Q197 662 198 666T199 671T201 676T203 679T207 681T212 683T220 683T232 684Q238 684 262 684T307 683Q386 683 398 683T414 678Q415 674 451 396L487 117L510 154Q534 190 574 254T662 394Q837 673 839 675Q840 676 842 678T846 681L852 683H948Q965 683 988 683T1017 684Q1051 684 1051 673Q1051 668 1048 656T1045 643Q1041 637 1008 637Q968 636 957 634T939 623Q936 618 867 340T797 59Q797 55 798 54T805 50T822 48T855 46H886Q892 37 892 35Q892 19 885 5Q880 0 869 0Q864 0 828 1T736 2Q675 2 644 2T609 1Q592 1 592 11Q592 13 594 25Q598 41 602 43T625 46Q652 46 685 49Q699 52 704 61Q706 65 742 207T813 490T848 631L654 322Q458 10 453 5Q451 4 449 3Q444 0 433 0Q418 0 415 7Q413 11 374 317L335 624L267 354Q200 88 200 79Q206 46 272 46H282Q288 41 289 37T286 19Q282 3 278 1Q274 0 267 0Q265 0 255 0T221 1T157 2Q127 2 95 1T58 0Q43 0 39 2T35 11Q35 13 38 25T43 40Q45 46 65 46Q135 46 154 86Q158 92 223 354T289 629Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1051,0)\"><path data-c=\"2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(1829,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g></g><rect width=\"4154.1\" height=\"60\" x=\"120\" y=\"220\"></rect></g></g></g></svg></mjx-container></td>\n<td style=\"text-align:left\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.312ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"3.52ex\" height=\"1.819ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -666 1555.8 804\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"2265\" d=\"M83 616Q83 624 89 630T99 636Q107 636 253 568T543 431T687 361Q694 356 694 346T687 331Q685 329 395 192L107 56H101Q83 58 83 76Q83 77 83 79Q82 86 98 95Q117 105 248 167Q326 204 378 228L626 346L360 472Q291 505 200 548Q112 589 98 597T83 616ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(1055.8,0)\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path></g></g></g></svg></mjx-container></td>\n<td style=\"text-align:left\">相对于内存较小的关系</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">归并连接</td>\n<td style=\"text-align:left\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"18.309ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 8092.4 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><path data-c=\"35\" d=\"M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(500,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(889,0)\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1648,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2037,0)\"><path data-c=\"1D445\" d=\"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(2796,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3296,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3907.2,0)\"><path data-c=\"2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4907.4,0)\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(5666.4,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(6055.4,0)\"><path data-c=\"1D445\" d=\"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(6814.4,0)\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(7314.4,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(7703.4,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container></td>\n<td style=\"text-align:left\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.639ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"11.022ex\" height=\"2.851ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -977.5 4871.8 1260\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"2265\" d=\"M83 616Q83 624 89 630T99 636Q107 636 253 568T543 431T687 361Q694 356 694 346T687 331Q685 329 395 192L107 56H101Q83 58 83 76Q83 77 83 79Q82 86 98 95Q117 105 248 167Q326 204 378 228L626 346L360 472Q291 505 200 548Q112 589 98 597T83 616ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"></path></g><g data-mml-node=\"msqrt\" transform=\"translate(1055.8,0)\"><g transform=\"translate(1020,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(759,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1148,0)\"><path data-c=\"1D445\" d=\"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(1907,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2407,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(0,67.5)\"><path data-c=\"221A\" d=\"M263 249Q264 249 315 130T417 -108T470 -228L725 302Q981 837 982 839Q989 850 1001 850Q1008 850 1013 844T1020 832V826L741 243Q645 43 540 -176Q479 -303 469 -324T453 -348Q449 -350 436 -350L424 -349L315 -96Q206 156 205 156L171 130Q138 104 137 104L111 130L263 249Z\"></path></g><rect width=\"2796\" height=\"60\" x=\"1020\" y=\"857.5\"></rect></g></g></g></svg></mjx-container></td>\n<td style=\"text-align:left\">记录有序</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">归并连接（改进后）</td>\n<td style=\"text-align:left\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"18.309ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 8092.4 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><path data-c=\"33\" d=\"M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(500,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(889,0)\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1648,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2037,0)\"><path data-c=\"1D445\" d=\"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(2796,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3296,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3907.2,0)\"><path data-c=\"2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4907.4,0)\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(5666.4,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(6055.4,0)\"><path data-c=\"1D445\" d=\"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(6814.4,0)\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(7314.4,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(7703.4,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container></td>\n<td style=\"text-align:left\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.639ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20.114ex\" height=\"2.851ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -977.5 8890.2 1260\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"2265\" d=\"M83 616Q83 624 89 630T99 636Q107 636 253 568T543 431T687 361Q694 356 694 346T687 331Q685 329 395 192L107 56H101Q83 58 83 76Q83 77 83 79Q82 86 98 95Q117 105 248 167Q326 204 378 228L626 346L360 472Q291 505 200 548Q112 589 98 597T83 616ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"></path></g><g data-mml-node=\"msqrt\" transform=\"translate(1055.8,0)\"><g transform=\"translate(1020,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(759,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1148,0)\"><path data-c=\"1D445\" d=\"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(1907,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2407,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3018.2,0)\"><path data-c=\"2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4018.4,0)\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4777.4,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(5166.4,0)\"><path data-c=\"1D445\" d=\"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(5925.4,0)\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6425.4,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(0,67.5)\"><path data-c=\"221A\" d=\"M263 249Q264 249 315 130T417 -108T470 -228L725 302Q981 837 982 839Q989 850 1001 850Q1008 850 1013 844T1020 832V826L741 243Q645 43 540 -176Q479 -303 469 -324T453 -348Q449 -350 436 -350L424 -349L315 -96Q206 156 205 156L171 130Q138 104 137 104L111 130L263 249Z\"></path></g><rect width=\"6814.4\" height=\"60\" x=\"1020\" y=\"857.5\"></rect></g></g></g></svg></mjx-container></td>\n<td style=\"text-align:left\">记录有序且R1.C&gt;R2.C</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">索引连接</td>\n<td style=\"text-align:left\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -1.238ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"18.857ex\" height=\"3.607ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -1047.1 8334.8 1594.2\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(759,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1148,0)\"><path data-c=\"1D445\" d=\"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(1907,0)\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2407,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3018.2,0)\"><path data-c=\"2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mfrac\" transform=\"translate(4018.4,0)\"><g data-mml-node=\"mrow\" transform=\"translate(220,516.8) scale(0.707)\"><g data-mml-node=\"mi\"><path data-c=\"1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(704,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1093,0)\"><path data-c=\"1D445\" d=\"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(1852,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2352,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2741,0)\"><path data-c=\"1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3445,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3834,0)\"><path data-c=\"1D445\" d=\"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(4593,0)\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(5093,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g><g data-mml-node=\"mrow\" transform=\"translate(799.1,-370.3) scale(0.707)\"><g data-mml-node=\"mi\"><path data-c=\"1D449\" d=\"M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(769,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1158,0)\"><path data-c=\"1D445\" d=\"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(1917,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path data-c=\"2E\" d=\"M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z\" transform=\"translate(500,0)\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2695,0)\"><path data-c=\"1D436\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3455,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g><rect width=\"4076.4\" height=\"60\" x=\"120\" y=\"220\"></rect></g></g></g></svg></mjx-container></td>\n<td style=\"text-align:left\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"13.591ex\" height=\"2.452ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -833.9 6007.3 1083.9\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"2265\" d=\"M83 616Q83 624 89 630T99 636Q107 636 253 568T543 431T687 361Q694 356 694 346T687 331Q685 329 395 192L107 56H101Q83 58 83 76Q83 77 83 79Q82 86 98 95Q117 105 248 167Q326 204 378 228L626 346L360 472Q291 505 200 548Q112 589 98 597T83 616ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1055.8,0)\"><path data-c=\"1D43F\" d=\"M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1736.8,0)\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2495.8,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2884.8,0)\"><path data-c=\"1D445\" d=\"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(3643.8,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path data-c=\"2E\" d=\"M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z\" transform=\"translate(500,0)\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4421.8,0)\"><path data-c=\"1D436\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z\"></path></g><g data-mml-node=\"msup\" transform=\"translate(5181.8,0)\"><g data-mml-node=\"mo\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(422,363) scale(0.707)\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path></g></g></g></g></svg></mjx-container></td>\n<td style=\"text-align:left\">索引存在且<strong>有用</strong>(太大了不行)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">散列连接</td>\n<td style=\"text-align:left\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"18.309ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 8092.4 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><path data-c=\"33\" d=\"M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(500,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(889,0)\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1648,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2037,0)\"><path data-c=\"1D445\" d=\"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(2796,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3296,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3907.2,0)\"><path data-c=\"2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4907.4,0)\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(5666.4,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(6055.4,0)\"><path data-c=\"1D445\" d=\"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(6814.4,0)\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(7314.4,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(7703.4,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container></td>\n<td style=\"text-align:left\"><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.639ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"11.022ex\" height=\"2.851ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -977.5 4871.8 1260\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"2265\" d=\"M83 616Q83 624 89 630T99 636Q107 636 253 568T543 431T687 361Q694 356 694 346T687 331Q685 329 395 192L107 56H101Q83 58 83 76Q83 77 83 79Q82 86 98 95Q117 105 248 167Q326 204 378 228L626 346L360 472Q291 505 200 548Q112 589 98 597T83 616ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"></path></g><g data-mml-node=\"msqrt\" transform=\"translate(1055.8,0)\"><g transform=\"translate(1020,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(759,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1148,0)\"><path data-c=\"1D445\" d=\"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(1907,0)\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2407,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(0,67.5)\"><path data-c=\"221A\" d=\"M263 249Q264 249 315 130T417 -108T470 -228L725 302Q981 837 982 839Q989 850 1001 850Q1008 850 1013 844T1020 832V826L741 243Q645 43 540 -176Q479 -303 469 -324T453 -348Q449 -350 436 -350L424 -349L315 -96Q206 156 205 156L171 130Q138 104 137 104L111 130L263 249Z\"></path></g><rect width=\"2796\" height=\"60\" x=\"1020\" y=\"857.5\"></rect></g></g></g></svg></mjx-container></td>\n<td style=\"text-align:left\">记录无序且无索引且V(R1.C)<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0.124ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.76ex\" height=\"0.968ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -483 778 428\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"2248\" d=\"M55 319Q55 360 72 393T114 444T163 472T205 482Q207 482 213 482T223 483Q262 483 296 468T393 413L443 381Q502 346 553 346Q609 346 649 375T694 454Q694 465 698 474T708 483Q722 483 722 452Q722 386 675 338T555 289Q514 289 468 310T388 357T308 404T224 426Q164 426 125 393T83 318Q81 289 69 289Q55 289 55 319ZM55 85Q55 126 72 159T114 210T163 238T205 248Q207 248 213 248T223 249Q262 249 296 234T393 179L443 147Q502 112 553 112Q609 112 649 141T694 220Q694 249 708 249T722 217Q722 153 675 104T555 55Q514 55 468 76T388 123T308 170T224 192Q164 192 125 159T83 84Q80 55 69 55Q55 55 55 85Z\"></path></g></g></g></svg></mjx-container>V(R2.C)</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h3 id=\"连接的左右变元选择\"><a href=\"#连接的左右变元选择\" class=\"headerlink\" title=\"连接的左右变元选择\"></a>连接的左右变元选择</h3><ul>\n<li>嵌套循环连接：较小的关系作为左变元</li>\n<li>归并连接：排序之后较小的关系作为左变元首先读入内存</li>\n<li>索引连接：有索引的关系作为右变元</li>\n<li>散列连接：较小的关系作为左变元，散列后读入内存</li>\n</ul>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: document.title+document.date,\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>"},{"title":"高级数据库系统知识点总结（Part 4）","mathjax":true,"codeblock":{"enable":true,"show_result":true},"date":"2023-02-18T12:47:14.000Z","_content":"\n事务处理：故障与恢复 & 并发控制\n\n<!--more-->\n\n## 事务处理I: 故障与恢复\n重点内容：\n1. 数据库的一致性概念\n2. 事务的基本概念、ACID和原子操作\n3. Undo日志、Redo日志、Undo/Redo日志的恢复过程\n4. Checkpoint\n\n### 数据库一致性\n- 数据库一致性是指事务执行的结果必须是使得数据库从一个一致性状态转变到另一个一致性状态\n- 保证数据库一致性是指当事务完成时，必须使所有数据都具有一致的状态\n\n### 事务的基本概念、ACID和原子操作\n1. 事务：一个不可分割的操作序列，其中的操作要么读做，要么都不做\n\n#### 事务的ACID性质\n1. 原子性 Atomicity\n2. 一致性 Consistency\n3. 隔离性 Isolation\n4. 持久性 Durability\n\n#### 事务的原子操作\n1. 磁盘 <-> 内存\n   1. `input(x)`: disk block with x -> memory\n   2. `output(x)`: buffer block with x -> disk\n2. 内存 <-> 内存 (必要时，磁盘 -> 内存 <-> 内存)\n   1. `read(x,t)`: do input(x) if necessary; t <- value of x in buffer\n   2. `write(x,t)`: do input(x) if necessary; value of x in buffer <- t\n\n### Undo、Redo、Undo/Redo日志\n1. 事务日志记录了所有更新操作的具体细节\n2. 日志文件的登记严格按事务执行的时间次序\n  \n#### Undo日志规则\n1. 事务的每一个修改操作都生成一个日志记录 < T, x, old-value >\n2. WAL：先写日志，在X被写到磁盘之前，对应该修改的日志记录必须已被写到磁盘上\n3. 事务的所有修改结果都已经写入磁盘**之后**，将 < commit, T >日志记录写到磁盘上\n4. 恢复时忽略已提交事务，只撤销未提交事务\n5. 从**尾部**开始扫描日志记录< T,x,v >，如果T没有commit过或者已经abort，则：\n   1. write(x,v)\n   2. output(x)\n   3. 反向扫描结束后，对于所有未commit过的事务，写入< abort, T >\n\n#### Redo日志规则\n1. 事务的每一个修改操作都生成一个日志记录 < T, x, new-value >\n2. WAL：先写日志，在X被写到磁盘之前，对应该修改的日志记录必须已被写到磁盘上\n3. 事务的修改结果写入磁盘**之前**，将 < commit, T >日志记录写到磁盘上\n4. 从**首部**开始扫描日志记录< T,x,v >，如果T已经commit过，则\n   1. write(x,v)\n   2. output(x)\n   3. 正向扫描结束后，对于所有未commit过的事务，写入< abort, T >\n\n#### Undo vs. Redo\n|项目|Undo|Redo\n|:---|:---|:---\n|更新时间|立即更新（乐观）|延迟更新（悲观）\n|内存代价|低|高\n|恢复代价|高|低\n\n#### Undo/Redo日志规则\n1. 在x被写到磁盘之前，对应该修改的日志记录必须已被写到磁盘上（WAL）\n2. 日志中的数据修改记录：< T, x, v, w >\n   1. v: old value; w: new value\n3. 基于Undo/Redo日志的恢复\n   1. 正向扫描日志，将commit的事务放入Redo列表中，将没有结束的事务放入Undo列表\n   2. 反向扫描日志，对于< T, x, v, w >，若T在Undo列表中，则\n      1. write(x,v); output(x)\n   3. 正向扫描日志，对于< T, x, v, w >，若T在Redo列表中，则\n      1. write(x,w); output(x)\n   4. 对于Undo列表中的T，写入< abort, T >\n\n### 检查点(checkpoint)\n1. 提出背景：当系统故障发生时，必须扫描日志。需要搜索整个日志来确定undo列表和redo列表\n   1. 搜索过程太耗时\n   2. redo列表很大，使得恢复过程变得很长（所有成功commit的事务都要redo一遍；每个事务可能涉及大量值更新操作）\n2. 检查点技术保证检查点之前的所有commit操作的结果已经写回数据库，在恢复时不需要redo\n\n## 事务处理II: 并发控制\n重点内容：\n1. 可串性、冲突可串性的概念\n2. 冲突可串性的判定\n3. 锁\n4. 视图可串性\n5. 死锁\n6. 乐观并发控制技术\n\n### 并发控制面临的问题\n1. 丢失更新\n2. 脏读\n3. 不一致分析\n   1. 不可重复读\n   2. 幻读\n\n### 并发调度与可串性\n1. 调度的定义：多个事务的读写操作按时间排序的执行序列. 例如\n```\nT1: r1(A)w1(A)r1(B)w1(B)\nT2: r2(A)w2(A)r2(B)w2(B)\nSc = r1(A)w1(A)r1(B)w1(B)r2(A)w2(A)r2(B)w2(B)\n```\n   1. 调度中的每个事务的读写操作保持原来顺序\n   2. 事务调度时不考虑数据库的初始状态和事务的语义\n2. 可串化调度：如果一个调度的结果与某一串行调度执行的结果等价，则称该调度是可串化调度，否则是不可串调度\n\n### 冲突可串性\n1. 冲突操作：涉及同一个数据库元素，并且至少有一个是写操作\n   1. r1(A)<->w2(A)\n   2. w2(A)<->r1(A)\n   3. w1(A)<->w2(A)\n2. 冲突操作不可交换；不冲突操作可交换\n3. 冲突等价：称调度S1和调度S2是冲突等价的，如果S1可以通过一系列非冲突交换转换到S2.\n4. 定理：如果一个调度满足冲突可串性，则该调度是可串化调度\n\n### 优先图\n1. 优先图用于冲突可串性的判断\n2. 优先图的结构\n   1. 节点：事务\n   2. 有向边：Ti->Tj,满足Ti$>_s$Tj\n      1. 存在Ti中的操作A1和Tj中的操作A2，满足A1在A2前并且A1和A2是冲突操作\n3. 定理：给定一个调度S构造S的优先图P(S)，如果P(S)无环，则S满足冲突可串性\n\n### 视图可串性\n1. 冲突可串性过于严格，原本可串的S不一定冲突可串。视图可串解决这一问题\n2. 调度S1和S2视图等价，如果：\n   1. If in S1: wj(A)->ri(A)(中间无任何w(A)); then in S2: wj(A)->ri(A)\n   2. If in S1: ri(A) reads initial DB value; then in S2: ri(A) also reads initial DB value\n   3. IF in S1: Ti does last write on A; then in S2: Ti also does last write on A\n3. 视图可串是冲突可串的必要不充分条件\n\n### 锁机制\n1. 用途：用于实现可串化调度\n\n#### 两阶段锁（2PL）\n1. 事务在对任何数据进行读写之前，首先要获得该数据上的锁\n2. 在释放一个锁之后，事务不再获得任何锁\n3. 定理：如果一个调度S中的所有事务都是两段式事务，则该调度是可串化调度\n4. 缺点：如果事务T只是读取X，也必须加锁，而且释放锁之前其他事务无法对X进行操作，影响数据库的并发性. 解决方法：引入不同的锁：S lock, X lock, Update lock, ...\n\n#### X Lock\n1. X lock: exclusive locks, 也称写锁\n2. 只有获得X锁的事务，才能对封锁的数据进行**修改**. 其他事务不能获取X锁，也不能获取S锁\n\n#### S Lock\n1. S lock: share locks, 也称读锁\n2. 如果事务T对数据R加了S锁，则其他事务对R的X锁请求不能成功，但对R的S锁请求可以成功\n3. 当事务获得S锁后，如果要对数据R进行修改，则必须在修改前执行Upgrade(R)，将S锁升级为X锁（升变？！）\n\n#### Update lock\n1. 如果事务取得了数据R上的更新锁，则可以读R，并且可以在以后升级为X锁（上一小节的S锁的可升变版本）\n2. 单纯的S锁不能升级为R锁\n3. 如果事务持有了R上的Update lock，则其他事务不能取到R上的S锁、X锁，以及Update锁\n4. 如果事务持有了R上的S锁，则其他事务可以获取R上的Update lock\n\n#### S锁、X锁、Update锁的相容性\n> Y 表示相容；N表示不相容\n\n|T1 holds\\T2 requrests|S|X|U\n|:---|:---|:---|:---\n|S|Y|N|Y\n|X|N|N|N\n|U|N|N|N\n\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: document.title+document.date,\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","source":"_posts/2023-02-18-adbs04.md","raw":"---\ntitle: 高级数据库系统知识点总结（Part 4）\nmathjax: true\ncodeblock:\n  enable: true\n  show_result: true\ndate: 2023-02-18 20:47:14\ntags: 数据库\ncategories: 学习笔记\n---\n\n事务处理：故障与恢复 & 并发控制\n\n<!--more-->\n\n## 事务处理I: 故障与恢复\n重点内容：\n1. 数据库的一致性概念\n2. 事务的基本概念、ACID和原子操作\n3. Undo日志、Redo日志、Undo/Redo日志的恢复过程\n4. Checkpoint\n\n### 数据库一致性\n- 数据库一致性是指事务执行的结果必须是使得数据库从一个一致性状态转变到另一个一致性状态\n- 保证数据库一致性是指当事务完成时，必须使所有数据都具有一致的状态\n\n### 事务的基本概念、ACID和原子操作\n1. 事务：一个不可分割的操作序列，其中的操作要么读做，要么都不做\n\n#### 事务的ACID性质\n1. 原子性 Atomicity\n2. 一致性 Consistency\n3. 隔离性 Isolation\n4. 持久性 Durability\n\n#### 事务的原子操作\n1. 磁盘 <-> 内存\n   1. `input(x)`: disk block with x -> memory\n   2. `output(x)`: buffer block with x -> disk\n2. 内存 <-> 内存 (必要时，磁盘 -> 内存 <-> 内存)\n   1. `read(x,t)`: do input(x) if necessary; t <- value of x in buffer\n   2. `write(x,t)`: do input(x) if necessary; value of x in buffer <- t\n\n### Undo、Redo、Undo/Redo日志\n1. 事务日志记录了所有更新操作的具体细节\n2. 日志文件的登记严格按事务执行的时间次序\n  \n#### Undo日志规则\n1. 事务的每一个修改操作都生成一个日志记录 < T, x, old-value >\n2. WAL：先写日志，在X被写到磁盘之前，对应该修改的日志记录必须已被写到磁盘上\n3. 事务的所有修改结果都已经写入磁盘**之后**，将 < commit, T >日志记录写到磁盘上\n4. 恢复时忽略已提交事务，只撤销未提交事务\n5. 从**尾部**开始扫描日志记录< T,x,v >，如果T没有commit过或者已经abort，则：\n   1. write(x,v)\n   2. output(x)\n   3. 反向扫描结束后，对于所有未commit过的事务，写入< abort, T >\n\n#### Redo日志规则\n1. 事务的每一个修改操作都生成一个日志记录 < T, x, new-value >\n2. WAL：先写日志，在X被写到磁盘之前，对应该修改的日志记录必须已被写到磁盘上\n3. 事务的修改结果写入磁盘**之前**，将 < commit, T >日志记录写到磁盘上\n4. 从**首部**开始扫描日志记录< T,x,v >，如果T已经commit过，则\n   1. write(x,v)\n   2. output(x)\n   3. 正向扫描结束后，对于所有未commit过的事务，写入< abort, T >\n\n#### Undo vs. Redo\n|项目|Undo|Redo\n|:---|:---|:---\n|更新时间|立即更新（乐观）|延迟更新（悲观）\n|内存代价|低|高\n|恢复代价|高|低\n\n#### Undo/Redo日志规则\n1. 在x被写到磁盘之前，对应该修改的日志记录必须已被写到磁盘上（WAL）\n2. 日志中的数据修改记录：< T, x, v, w >\n   1. v: old value; w: new value\n3. 基于Undo/Redo日志的恢复\n   1. 正向扫描日志，将commit的事务放入Redo列表中，将没有结束的事务放入Undo列表\n   2. 反向扫描日志，对于< T, x, v, w >，若T在Undo列表中，则\n      1. write(x,v); output(x)\n   3. 正向扫描日志，对于< T, x, v, w >，若T在Redo列表中，则\n      1. write(x,w); output(x)\n   4. 对于Undo列表中的T，写入< abort, T >\n\n### 检查点(checkpoint)\n1. 提出背景：当系统故障发生时，必须扫描日志。需要搜索整个日志来确定undo列表和redo列表\n   1. 搜索过程太耗时\n   2. redo列表很大，使得恢复过程变得很长（所有成功commit的事务都要redo一遍；每个事务可能涉及大量值更新操作）\n2. 检查点技术保证检查点之前的所有commit操作的结果已经写回数据库，在恢复时不需要redo\n\n## 事务处理II: 并发控制\n重点内容：\n1. 可串性、冲突可串性的概念\n2. 冲突可串性的判定\n3. 锁\n4. 视图可串性\n5. 死锁\n6. 乐观并发控制技术\n\n### 并发控制面临的问题\n1. 丢失更新\n2. 脏读\n3. 不一致分析\n   1. 不可重复读\n   2. 幻读\n\n### 并发调度与可串性\n1. 调度的定义：多个事务的读写操作按时间排序的执行序列. 例如\n```\nT1: r1(A)w1(A)r1(B)w1(B)\nT2: r2(A)w2(A)r2(B)w2(B)\nSc = r1(A)w1(A)r1(B)w1(B)r2(A)w2(A)r2(B)w2(B)\n```\n   1. 调度中的每个事务的读写操作保持原来顺序\n   2. 事务调度时不考虑数据库的初始状态和事务的语义\n2. 可串化调度：如果一个调度的结果与某一串行调度执行的结果等价，则称该调度是可串化调度，否则是不可串调度\n\n### 冲突可串性\n1. 冲突操作：涉及同一个数据库元素，并且至少有一个是写操作\n   1. r1(A)<->w2(A)\n   2. w2(A)<->r1(A)\n   3. w1(A)<->w2(A)\n2. 冲突操作不可交换；不冲突操作可交换\n3. 冲突等价：称调度S1和调度S2是冲突等价的，如果S1可以通过一系列非冲突交换转换到S2.\n4. 定理：如果一个调度满足冲突可串性，则该调度是可串化调度\n\n### 优先图\n1. 优先图用于冲突可串性的判断\n2. 优先图的结构\n   1. 节点：事务\n   2. 有向边：Ti->Tj,满足Ti$>_s$Tj\n      1. 存在Ti中的操作A1和Tj中的操作A2，满足A1在A2前并且A1和A2是冲突操作\n3. 定理：给定一个调度S构造S的优先图P(S)，如果P(S)无环，则S满足冲突可串性\n\n### 视图可串性\n1. 冲突可串性过于严格，原本可串的S不一定冲突可串。视图可串解决这一问题\n2. 调度S1和S2视图等价，如果：\n   1. If in S1: wj(A)->ri(A)(中间无任何w(A)); then in S2: wj(A)->ri(A)\n   2. If in S1: ri(A) reads initial DB value; then in S2: ri(A) also reads initial DB value\n   3. IF in S1: Ti does last write on A; then in S2: Ti also does last write on A\n3. 视图可串是冲突可串的必要不充分条件\n\n### 锁机制\n1. 用途：用于实现可串化调度\n\n#### 两阶段锁（2PL）\n1. 事务在对任何数据进行读写之前，首先要获得该数据上的锁\n2. 在释放一个锁之后，事务不再获得任何锁\n3. 定理：如果一个调度S中的所有事务都是两段式事务，则该调度是可串化调度\n4. 缺点：如果事务T只是读取X，也必须加锁，而且释放锁之前其他事务无法对X进行操作，影响数据库的并发性. 解决方法：引入不同的锁：S lock, X lock, Update lock, ...\n\n#### X Lock\n1. X lock: exclusive locks, 也称写锁\n2. 只有获得X锁的事务，才能对封锁的数据进行**修改**. 其他事务不能获取X锁，也不能获取S锁\n\n#### S Lock\n1. S lock: share locks, 也称读锁\n2. 如果事务T对数据R加了S锁，则其他事务对R的X锁请求不能成功，但对R的S锁请求可以成功\n3. 当事务获得S锁后，如果要对数据R进行修改，则必须在修改前执行Upgrade(R)，将S锁升级为X锁（升变？！）\n\n#### Update lock\n1. 如果事务取得了数据R上的更新锁，则可以读R，并且可以在以后升级为X锁（上一小节的S锁的可升变版本）\n2. 单纯的S锁不能升级为R锁\n3. 如果事务持有了R上的Update lock，则其他事务不能取到R上的S锁、X锁，以及Update锁\n4. 如果事务持有了R上的S锁，则其他事务可以获取R上的Update lock\n\n#### S锁、X锁、Update锁的相容性\n> Y 表示相容；N表示不相容\n\n|T1 holds\\T2 requrests|S|X|U\n|:---|:---|:---|:---\n|S|Y|N|Y\n|X|N|N|N\n|U|N|N|N\n\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: document.title+document.date,\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","slug":"2023-02-18-adbs04","published":1,"updated":"2023-02-20T09:01:18.824Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cludw9n9z00279wv97bbbadzo","content":"<p>事务处理：故障与恢复 &amp; 并发控制</p>\n<span id=\"more\"></span>\n<h2 id=\"事务处理I-故障与恢复\"><a href=\"#事务处理I-故障与恢复\" class=\"headerlink\" title=\"事务处理I: 故障与恢复\"></a>事务处理I: 故障与恢复</h2><p>重点内容：</p>\n<ol>\n<li>数据库的一致性概念</li>\n<li>事务的基本概念、ACID和原子操作</li>\n<li>Undo日志、Redo日志、Undo/Redo日志的恢复过程</li>\n<li>Checkpoint</li>\n</ol>\n<h3 id=\"数据库一致性\"><a href=\"#数据库一致性\" class=\"headerlink\" title=\"数据库一致性\"></a>数据库一致性</h3><ul>\n<li>数据库一致性是指事务执行的结果必须是使得数据库从一个一致性状态转变到另一个一致性状态</li>\n<li>保证数据库一致性是指当事务完成时，必须使所有数据都具有一致的状态</li>\n</ul>\n<h3 id=\"事务的基本概念、ACID和原子操作\"><a href=\"#事务的基本概念、ACID和原子操作\" class=\"headerlink\" title=\"事务的基本概念、ACID和原子操作\"></a>事务的基本概念、ACID和原子操作</h3><ol>\n<li>事务：一个不可分割的操作序列，其中的操作要么读做，要么都不做</li>\n</ol>\n<h4 id=\"事务的ACID性质\"><a href=\"#事务的ACID性质\" class=\"headerlink\" title=\"事务的ACID性质\"></a>事务的ACID性质</h4><ol>\n<li>原子性 Atomicity</li>\n<li>一致性 Consistency</li>\n<li>隔离性 Isolation</li>\n<li>持久性 Durability</li>\n</ol>\n<h4 id=\"事务的原子操作\"><a href=\"#事务的原子操作\" class=\"headerlink\" title=\"事务的原子操作\"></a>事务的原子操作</h4><ol>\n<li>磁盘 &lt;-&gt; 内存<ol>\n<li><code>input(x)</code>: disk block with x -&gt; memory</li>\n<li><code>output(x)</code>: buffer block with x -&gt; disk</li>\n</ol>\n</li>\n<li>内存 &lt;-&gt; 内存 (必要时，磁盘 -&gt; 内存 &lt;-&gt; 内存)<ol>\n<li><code>read(x,t)</code>: do input(x) if necessary; t &lt;- value of x in buffer</li>\n<li><code>write(x,t)</code>: do input(x) if necessary; value of x in buffer &lt;- t</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"Undo、Redo、Undo-Redo日志\"><a href=\"#Undo、Redo、Undo-Redo日志\" class=\"headerlink\" title=\"Undo、Redo、Undo/Redo日志\"></a>Undo、Redo、Undo/Redo日志</h3><ol>\n<li>事务日志记录了所有更新操作的具体细节</li>\n<li>日志文件的登记严格按事务执行的时间次序</li>\n</ol>\n<h4 id=\"Undo日志规则\"><a href=\"#Undo日志规则\" class=\"headerlink\" title=\"Undo日志规则\"></a>Undo日志规则</h4><ol>\n<li>事务的每一个修改操作都生成一个日志记录 &lt; T, x, old-value &gt;</li>\n<li>WAL：先写日志，在X被写到磁盘之前，对应该修改的日志记录必须已被写到磁盘上</li>\n<li>事务的所有修改结果都已经写入磁盘<strong>之后</strong>，将 &lt; commit, T &gt;日志记录写到磁盘上</li>\n<li>恢复时忽略已提交事务，只撤销未提交事务</li>\n<li>从<strong>尾部</strong>开始扫描日志记录&lt; T,x,v &gt;，如果T没有commit过或者已经abort，则：<ol>\n<li>write(x,v)</li>\n<li>output(x)</li>\n<li>反向扫描结束后，对于所有未commit过的事务，写入&lt; abort, T &gt;</li>\n</ol>\n</li>\n</ol>\n<h4 id=\"Redo日志规则\"><a href=\"#Redo日志规则\" class=\"headerlink\" title=\"Redo日志规则\"></a>Redo日志规则</h4><ol>\n<li>事务的每一个修改操作都生成一个日志记录 &lt; T, x, new-value &gt;</li>\n<li>WAL：先写日志，在X被写到磁盘之前，对应该修改的日志记录必须已被写到磁盘上</li>\n<li>事务的修改结果写入磁盘<strong>之前</strong>，将 &lt; commit, T &gt;日志记录写到磁盘上</li>\n<li>从<strong>首部</strong>开始扫描日志记录&lt; T,x,v &gt;，如果T已经commit过，则<ol>\n<li>write(x,v)</li>\n<li>output(x)</li>\n<li>正向扫描结束后，对于所有未commit过的事务，写入&lt; abort, T &gt;</li>\n</ol>\n</li>\n</ol>\n<h4 id=\"Undo-vs-Redo\"><a href=\"#Undo-vs-Redo\" class=\"headerlink\" title=\"Undo vs. Redo\"></a>Undo vs. Redo</h4><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">项目</th>\n<th style=\"text-align:left\">Undo</th>\n<th style=\"text-align:left\">Redo</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">更新时间</td>\n<td style=\"text-align:left\">立即更新（乐观）</td>\n<td style=\"text-align:left\">延迟更新（悲观）</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">内存代价</td>\n<td style=\"text-align:left\">低</td>\n<td style=\"text-align:left\">高</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">恢复代价</td>\n<td style=\"text-align:left\">高</td>\n<td style=\"text-align:left\">低</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h4 id=\"Undo-Redo日志规则\"><a href=\"#Undo-Redo日志规则\" class=\"headerlink\" title=\"Undo/Redo日志规则\"></a>Undo/Redo日志规则</h4><ol>\n<li>在x被写到磁盘之前，对应该修改的日志记录必须已被写到磁盘上（WAL）</li>\n<li>日志中的数据修改记录：&lt; T, x, v, w &gt;<ol>\n<li>v: old value; w: new value</li>\n</ol>\n</li>\n<li>基于Undo/Redo日志的恢复<ol>\n<li>正向扫描日志，将commit的事务放入Redo列表中，将没有结束的事务放入Undo列表</li>\n<li>反向扫描日志，对于&lt; T, x, v, w &gt;，若T在Undo列表中，则<ol>\n<li>write(x,v); output(x)</li>\n</ol>\n</li>\n<li>正向扫描日志，对于&lt; T, x, v, w &gt;，若T在Redo列表中，则<ol>\n<li>write(x,w); output(x)</li>\n</ol>\n</li>\n<li>对于Undo列表中的T，写入&lt; abort, T &gt;</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"检查点-checkpoint\"><a href=\"#检查点-checkpoint\" class=\"headerlink\" title=\"检查点(checkpoint)\"></a>检查点(checkpoint)</h3><ol>\n<li>提出背景：当系统故障发生时，必须扫描日志。需要搜索整个日志来确定undo列表和redo列表<ol>\n<li>搜索过程太耗时</li>\n<li>redo列表很大，使得恢复过程变得很长（所有成功commit的事务都要redo一遍；每个事务可能涉及大量值更新操作）</li>\n</ol>\n</li>\n<li>检查点技术保证检查点之前的所有commit操作的结果已经写回数据库，在恢复时不需要redo</li>\n</ol>\n<h2 id=\"事务处理II-并发控制\"><a href=\"#事务处理II-并发控制\" class=\"headerlink\" title=\"事务处理II: 并发控制\"></a>事务处理II: 并发控制</h2><p>重点内容：</p>\n<ol>\n<li>可串性、冲突可串性的概念</li>\n<li>冲突可串性的判定</li>\n<li>锁</li>\n<li>视图可串性</li>\n<li>死锁</li>\n<li>乐观并发控制技术</li>\n</ol>\n<h3 id=\"并发控制面临的问题\"><a href=\"#并发控制面临的问题\" class=\"headerlink\" title=\"并发控制面临的问题\"></a>并发控制面临的问题</h3><ol>\n<li>丢失更新</li>\n<li>脏读</li>\n<li>不一致分析<ol>\n<li>不可重复读</li>\n<li>幻读</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"并发调度与可串性\"><a href=\"#并发调度与可串性\" class=\"headerlink\" title=\"并发调度与可串性\"></a>并发调度与可串性</h3><ol>\n<li>调度的定义：多个事务的读写操作按时间排序的执行序列. 例如<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">T1: r1(A)w1(A)r1(B)w1(B)</span><br><span class=\"line\">T2: r2(A)w2(A)r2(B)w2(B)</span><br><span class=\"line\">Sc = r1(A)w1(A)r1(B)w1(B)r2(A)w2(A)r2(B)w2(B)</span><br></pre></td></tr></table></figure>\n<ol>\n<li>调度中的每个事务的读写操作保持原来顺序</li>\n<li>事务调度时不考虑数据库的初始状态和事务的语义</li>\n</ol>\n</li>\n<li>可串化调度：如果一个调度的结果与某一串行调度执行的结果等价，则称该调度是可串化调度，否则是不可串调度</li>\n</ol>\n<h3 id=\"冲突可串性\"><a href=\"#冲突可串性\" class=\"headerlink\" title=\"冲突可串性\"></a>冲突可串性</h3><ol>\n<li>冲突操作：涉及同一个数据库元素，并且至少有一个是写操作<ol>\n<li>r1(A)&lt;-&gt;w2(A)</li>\n<li>w2(A)&lt;-&gt;r1(A)</li>\n<li>w1(A)&lt;-&gt;w2(A)</li>\n</ol>\n</li>\n<li>冲突操作不可交换；不冲突操作可交换</li>\n<li>冲突等价：称调度S1和调度S2是冲突等价的，如果S1可以通过一系列非冲突交换转换到S2.</li>\n<li>定理：如果一个调度满足冲突可串性，则该调度是可串化调度</li>\n</ol>\n<h3 id=\"优先图\"><a href=\"#优先图\" class=\"headerlink\" title=\"优先图\"></a>优先图</h3><ol>\n<li>优先图用于冲突可串性的判断</li>\n<li>优先图的结构<ol>\n<li>节点：事务</li>\n<li>有向边：Ti-&gt;Tj,满足Ti<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.355ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.698ex\" height=\"1.577ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -540 1192.6 697.1\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mo\"><path data-c=\"3E\" d=\"M84 520Q84 528 88 533T96 539L99 540Q106 540 253 471T544 334L687 265Q694 260 694 250T687 235Q685 233 395 96L107 -40H101Q83 -38 83 -20Q83 -19 83 -17Q82 -10 98 -1Q117 9 248 71Q326 108 378 132L626 250L378 368Q90 504 86 509Q84 513 84 520Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(811,-150) scale(0.707)\"><path data-c=\"1D460\" d=\"M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z\"></path></g></g></g></g></svg></mjx-container>Tj<ol>\n<li>存在Ti中的操作A1和Tj中的操作A2，满足A1在A2前并且A1和A2是冲突操作</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>定理：给定一个调度S构造S的优先图P(S)，如果P(S)无环，则S满足冲突可串性</li>\n</ol>\n<h3 id=\"视图可串性\"><a href=\"#视图可串性\" class=\"headerlink\" title=\"视图可串性\"></a>视图可串性</h3><ol>\n<li>冲突可串性过于严格，原本可串的S不一定冲突可串。视图可串解决这一问题</li>\n<li>调度S1和S2视图等价，如果：<ol>\n<li>If in S1: wj(A)-&gt;ri(A)(中间无任何w(A)); then in S2: wj(A)-&gt;ri(A)</li>\n<li>If in S1: ri(A) reads initial DB value; then in S2: ri(A) also reads initial DB value</li>\n<li>IF in S1: Ti does last write on A; then in S2: Ti also does last write on A</li>\n</ol>\n</li>\n<li>视图可串是冲突可串的必要不充分条件</li>\n</ol>\n<h3 id=\"锁机制\"><a href=\"#锁机制\" class=\"headerlink\" title=\"锁机制\"></a>锁机制</h3><ol>\n<li>用途：用于实现可串化调度</li>\n</ol>\n<h4 id=\"两阶段锁（2PL）\"><a href=\"#两阶段锁（2PL）\" class=\"headerlink\" title=\"两阶段锁（2PL）\"></a>两阶段锁（2PL）</h4><ol>\n<li>事务在对任何数据进行读写之前，首先要获得该数据上的锁</li>\n<li>在释放一个锁之后，事务不再获得任何锁</li>\n<li>定理：如果一个调度S中的所有事务都是两段式事务，则该调度是可串化调度</li>\n<li>缺点：如果事务T只是读取X，也必须加锁，而且释放锁之前其他事务无法对X进行操作，影响数据库的并发性. 解决方法：引入不同的锁：S lock, X lock, Update lock, …</li>\n</ol>\n<h4 id=\"X-Lock\"><a href=\"#X-Lock\" class=\"headerlink\" title=\"X Lock\"></a>X Lock</h4><ol>\n<li>X lock: exclusive locks, 也称写锁</li>\n<li>只有获得X锁的事务，才能对封锁的数据进行<strong>修改</strong>. 其他事务不能获取X锁，也不能获取S锁</li>\n</ol>\n<h4 id=\"S-Lock\"><a href=\"#S-Lock\" class=\"headerlink\" title=\"S Lock\"></a>S Lock</h4><ol>\n<li>S lock: share locks, 也称读锁</li>\n<li>如果事务T对数据R加了S锁，则其他事务对R的X锁请求不能成功，但对R的S锁请求可以成功</li>\n<li>当事务获得S锁后，如果要对数据R进行修改，则必须在修改前执行Upgrade(R)，将S锁升级为X锁（升变？！）</li>\n</ol>\n<h4 id=\"Update-lock\"><a href=\"#Update-lock\" class=\"headerlink\" title=\"Update lock\"></a>Update lock</h4><ol>\n<li>如果事务取得了数据R上的更新锁，则可以读R，并且可以在以后升级为X锁（上一小节的S锁的可升变版本）</li>\n<li>单纯的S锁不能升级为R锁</li>\n<li>如果事务持有了R上的Update lock，则其他事务不能取到R上的S锁、X锁，以及Update锁</li>\n<li>如果事务持有了R上的S锁，则其他事务可以获取R上的Update lock</li>\n</ol>\n<h4 id=\"S锁、X锁、Update锁的相容性\"><a href=\"#S锁、X锁、Update锁的相容性\" class=\"headerlink\" title=\"S锁、X锁、Update锁的相容性\"></a>S锁、X锁、Update锁的相容性</h4><blockquote>\n<p>Y 表示相容；N表示不相容</p>\n</blockquote>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">T1 holds\\T2 requrests</th>\n<th style=\"text-align:left\">S</th>\n<th style=\"text-align:left\">X</th>\n<th style=\"text-align:left\">U</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">S</td>\n<td style=\"text-align:left\">Y</td>\n<td style=\"text-align:left\">N</td>\n<td style=\"text-align:left\">Y</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">X</td>\n<td style=\"text-align:left\">N</td>\n<td style=\"text-align:left\">N</td>\n<td style=\"text-align:left\">N</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">U</td>\n<td style=\"text-align:left\">N</td>\n<td style=\"text-align:left\">N</td>\n<td style=\"text-align:left\">N</td>\n</tr>\n</tbody>\n</table>\n</div>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: document.title+document.date,\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","site":{"data":{}},"length":3379,"excerpt":"<p>事务处理：故障与恢复 &amp; 并发控制</p>","more":"<h2 id=\"事务处理I-故障与恢复\"><a href=\"#事务处理I-故障与恢复\" class=\"headerlink\" title=\"事务处理I: 故障与恢复\"></a>事务处理I: 故障与恢复</h2><p>重点内容：</p>\n<ol>\n<li>数据库的一致性概念</li>\n<li>事务的基本概念、ACID和原子操作</li>\n<li>Undo日志、Redo日志、Undo/Redo日志的恢复过程</li>\n<li>Checkpoint</li>\n</ol>\n<h3 id=\"数据库一致性\"><a href=\"#数据库一致性\" class=\"headerlink\" title=\"数据库一致性\"></a>数据库一致性</h3><ul>\n<li>数据库一致性是指事务执行的结果必须是使得数据库从一个一致性状态转变到另一个一致性状态</li>\n<li>保证数据库一致性是指当事务完成时，必须使所有数据都具有一致的状态</li>\n</ul>\n<h3 id=\"事务的基本概念、ACID和原子操作\"><a href=\"#事务的基本概念、ACID和原子操作\" class=\"headerlink\" title=\"事务的基本概念、ACID和原子操作\"></a>事务的基本概念、ACID和原子操作</h3><ol>\n<li>事务：一个不可分割的操作序列，其中的操作要么读做，要么都不做</li>\n</ol>\n<h4 id=\"事务的ACID性质\"><a href=\"#事务的ACID性质\" class=\"headerlink\" title=\"事务的ACID性质\"></a>事务的ACID性质</h4><ol>\n<li>原子性 Atomicity</li>\n<li>一致性 Consistency</li>\n<li>隔离性 Isolation</li>\n<li>持久性 Durability</li>\n</ol>\n<h4 id=\"事务的原子操作\"><a href=\"#事务的原子操作\" class=\"headerlink\" title=\"事务的原子操作\"></a>事务的原子操作</h4><ol>\n<li>磁盘 &lt;-&gt; 内存<ol>\n<li><code>input(x)</code>: disk block with x -&gt; memory</li>\n<li><code>output(x)</code>: buffer block with x -&gt; disk</li>\n</ol>\n</li>\n<li>内存 &lt;-&gt; 内存 (必要时，磁盘 -&gt; 内存 &lt;-&gt; 内存)<ol>\n<li><code>read(x,t)</code>: do input(x) if necessary; t &lt;- value of x in buffer</li>\n<li><code>write(x,t)</code>: do input(x) if necessary; value of x in buffer &lt;- t</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"Undo、Redo、Undo-Redo日志\"><a href=\"#Undo、Redo、Undo-Redo日志\" class=\"headerlink\" title=\"Undo、Redo、Undo/Redo日志\"></a>Undo、Redo、Undo/Redo日志</h3><ol>\n<li>事务日志记录了所有更新操作的具体细节</li>\n<li>日志文件的登记严格按事务执行的时间次序</li>\n</ol>\n<h4 id=\"Undo日志规则\"><a href=\"#Undo日志规则\" class=\"headerlink\" title=\"Undo日志规则\"></a>Undo日志规则</h4><ol>\n<li>事务的每一个修改操作都生成一个日志记录 &lt; T, x, old-value &gt;</li>\n<li>WAL：先写日志，在X被写到磁盘之前，对应该修改的日志记录必须已被写到磁盘上</li>\n<li>事务的所有修改结果都已经写入磁盘<strong>之后</strong>，将 &lt; commit, T &gt;日志记录写到磁盘上</li>\n<li>恢复时忽略已提交事务，只撤销未提交事务</li>\n<li>从<strong>尾部</strong>开始扫描日志记录&lt; T,x,v &gt;，如果T没有commit过或者已经abort，则：<ol>\n<li>write(x,v)</li>\n<li>output(x)</li>\n<li>反向扫描结束后，对于所有未commit过的事务，写入&lt; abort, T &gt;</li>\n</ol>\n</li>\n</ol>\n<h4 id=\"Redo日志规则\"><a href=\"#Redo日志规则\" class=\"headerlink\" title=\"Redo日志规则\"></a>Redo日志规则</h4><ol>\n<li>事务的每一个修改操作都生成一个日志记录 &lt; T, x, new-value &gt;</li>\n<li>WAL：先写日志，在X被写到磁盘之前，对应该修改的日志记录必须已被写到磁盘上</li>\n<li>事务的修改结果写入磁盘<strong>之前</strong>，将 &lt; commit, T &gt;日志记录写到磁盘上</li>\n<li>从<strong>首部</strong>开始扫描日志记录&lt; T,x,v &gt;，如果T已经commit过，则<ol>\n<li>write(x,v)</li>\n<li>output(x)</li>\n<li>正向扫描结束后，对于所有未commit过的事务，写入&lt; abort, T &gt;</li>\n</ol>\n</li>\n</ol>\n<h4 id=\"Undo-vs-Redo\"><a href=\"#Undo-vs-Redo\" class=\"headerlink\" title=\"Undo vs. Redo\"></a>Undo vs. Redo</h4><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">项目</th>\n<th style=\"text-align:left\">Undo</th>\n<th style=\"text-align:left\">Redo</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">更新时间</td>\n<td style=\"text-align:left\">立即更新（乐观）</td>\n<td style=\"text-align:left\">延迟更新（悲观）</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">内存代价</td>\n<td style=\"text-align:left\">低</td>\n<td style=\"text-align:left\">高</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">恢复代价</td>\n<td style=\"text-align:left\">高</td>\n<td style=\"text-align:left\">低</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h4 id=\"Undo-Redo日志规则\"><a href=\"#Undo-Redo日志规则\" class=\"headerlink\" title=\"Undo/Redo日志规则\"></a>Undo/Redo日志规则</h4><ol>\n<li>在x被写到磁盘之前，对应该修改的日志记录必须已被写到磁盘上（WAL）</li>\n<li>日志中的数据修改记录：&lt; T, x, v, w &gt;<ol>\n<li>v: old value; w: new value</li>\n</ol>\n</li>\n<li>基于Undo/Redo日志的恢复<ol>\n<li>正向扫描日志，将commit的事务放入Redo列表中，将没有结束的事务放入Undo列表</li>\n<li>反向扫描日志，对于&lt; T, x, v, w &gt;，若T在Undo列表中，则<ol>\n<li>write(x,v); output(x)</li>\n</ol>\n</li>\n<li>正向扫描日志，对于&lt; T, x, v, w &gt;，若T在Redo列表中，则<ol>\n<li>write(x,w); output(x)</li>\n</ol>\n</li>\n<li>对于Undo列表中的T，写入&lt; abort, T &gt;</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"检查点-checkpoint\"><a href=\"#检查点-checkpoint\" class=\"headerlink\" title=\"检查点(checkpoint)\"></a>检查点(checkpoint)</h3><ol>\n<li>提出背景：当系统故障发生时，必须扫描日志。需要搜索整个日志来确定undo列表和redo列表<ol>\n<li>搜索过程太耗时</li>\n<li>redo列表很大，使得恢复过程变得很长（所有成功commit的事务都要redo一遍；每个事务可能涉及大量值更新操作）</li>\n</ol>\n</li>\n<li>检查点技术保证检查点之前的所有commit操作的结果已经写回数据库，在恢复时不需要redo</li>\n</ol>\n<h2 id=\"事务处理II-并发控制\"><a href=\"#事务处理II-并发控制\" class=\"headerlink\" title=\"事务处理II: 并发控制\"></a>事务处理II: 并发控制</h2><p>重点内容：</p>\n<ol>\n<li>可串性、冲突可串性的概念</li>\n<li>冲突可串性的判定</li>\n<li>锁</li>\n<li>视图可串性</li>\n<li>死锁</li>\n<li>乐观并发控制技术</li>\n</ol>\n<h3 id=\"并发控制面临的问题\"><a href=\"#并发控制面临的问题\" class=\"headerlink\" title=\"并发控制面临的问题\"></a>并发控制面临的问题</h3><ol>\n<li>丢失更新</li>\n<li>脏读</li>\n<li>不一致分析<ol>\n<li>不可重复读</li>\n<li>幻读</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"并发调度与可串性\"><a href=\"#并发调度与可串性\" class=\"headerlink\" title=\"并发调度与可串性\"></a>并发调度与可串性</h3><ol>\n<li>调度的定义：多个事务的读写操作按时间排序的执行序列. 例如<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">T1: r1(A)w1(A)r1(B)w1(B)</span><br><span class=\"line\">T2: r2(A)w2(A)r2(B)w2(B)</span><br><span class=\"line\">Sc = r1(A)w1(A)r1(B)w1(B)r2(A)w2(A)r2(B)w2(B)</span><br></pre></td></tr></table></figure>\n<ol>\n<li>调度中的每个事务的读写操作保持原来顺序</li>\n<li>事务调度时不考虑数据库的初始状态和事务的语义</li>\n</ol>\n</li>\n<li>可串化调度：如果一个调度的结果与某一串行调度执行的结果等价，则称该调度是可串化调度，否则是不可串调度</li>\n</ol>\n<h3 id=\"冲突可串性\"><a href=\"#冲突可串性\" class=\"headerlink\" title=\"冲突可串性\"></a>冲突可串性</h3><ol>\n<li>冲突操作：涉及同一个数据库元素，并且至少有一个是写操作<ol>\n<li>r1(A)&lt;-&gt;w2(A)</li>\n<li>w2(A)&lt;-&gt;r1(A)</li>\n<li>w1(A)&lt;-&gt;w2(A)</li>\n</ol>\n</li>\n<li>冲突操作不可交换；不冲突操作可交换</li>\n<li>冲突等价：称调度S1和调度S2是冲突等价的，如果S1可以通过一系列非冲突交换转换到S2.</li>\n<li>定理：如果一个调度满足冲突可串性，则该调度是可串化调度</li>\n</ol>\n<h3 id=\"优先图\"><a href=\"#优先图\" class=\"headerlink\" title=\"优先图\"></a>优先图</h3><ol>\n<li>优先图用于冲突可串性的判断</li>\n<li>优先图的结构<ol>\n<li>节点：事务</li>\n<li>有向边：Ti-&gt;Tj,满足Ti<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.355ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.698ex\" height=\"1.577ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -540 1192.6 697.1\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mo\"><path data-c=\"3E\" d=\"M84 520Q84 528 88 533T96 539L99 540Q106 540 253 471T544 334L687 265Q694 260 694 250T687 235Q685 233 395 96L107 -40H101Q83 -38 83 -20Q83 -19 83 -17Q82 -10 98 -1Q117 9 248 71Q326 108 378 132L626 250L378 368Q90 504 86 509Q84 513 84 520Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(811,-150) scale(0.707)\"><path data-c=\"1D460\" d=\"M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z\"></path></g></g></g></g></svg></mjx-container>Tj<ol>\n<li>存在Ti中的操作A1和Tj中的操作A2，满足A1在A2前并且A1和A2是冲突操作</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>定理：给定一个调度S构造S的优先图P(S)，如果P(S)无环，则S满足冲突可串性</li>\n</ol>\n<h3 id=\"视图可串性\"><a href=\"#视图可串性\" class=\"headerlink\" title=\"视图可串性\"></a>视图可串性</h3><ol>\n<li>冲突可串性过于严格，原本可串的S不一定冲突可串。视图可串解决这一问题</li>\n<li>调度S1和S2视图等价，如果：<ol>\n<li>If in S1: wj(A)-&gt;ri(A)(中间无任何w(A)); then in S2: wj(A)-&gt;ri(A)</li>\n<li>If in S1: ri(A) reads initial DB value; then in S2: ri(A) also reads initial DB value</li>\n<li>IF in S1: Ti does last write on A; then in S2: Ti also does last write on A</li>\n</ol>\n</li>\n<li>视图可串是冲突可串的必要不充分条件</li>\n</ol>\n<h3 id=\"锁机制\"><a href=\"#锁机制\" class=\"headerlink\" title=\"锁机制\"></a>锁机制</h3><ol>\n<li>用途：用于实现可串化调度</li>\n</ol>\n<h4 id=\"两阶段锁（2PL）\"><a href=\"#两阶段锁（2PL）\" class=\"headerlink\" title=\"两阶段锁（2PL）\"></a>两阶段锁（2PL）</h4><ol>\n<li>事务在对任何数据进行读写之前，首先要获得该数据上的锁</li>\n<li>在释放一个锁之后，事务不再获得任何锁</li>\n<li>定理：如果一个调度S中的所有事务都是两段式事务，则该调度是可串化调度</li>\n<li>缺点：如果事务T只是读取X，也必须加锁，而且释放锁之前其他事务无法对X进行操作，影响数据库的并发性. 解决方法：引入不同的锁：S lock, X lock, Update lock, …</li>\n</ol>\n<h4 id=\"X-Lock\"><a href=\"#X-Lock\" class=\"headerlink\" title=\"X Lock\"></a>X Lock</h4><ol>\n<li>X lock: exclusive locks, 也称写锁</li>\n<li>只有获得X锁的事务，才能对封锁的数据进行<strong>修改</strong>. 其他事务不能获取X锁，也不能获取S锁</li>\n</ol>\n<h4 id=\"S-Lock\"><a href=\"#S-Lock\" class=\"headerlink\" title=\"S Lock\"></a>S Lock</h4><ol>\n<li>S lock: share locks, 也称读锁</li>\n<li>如果事务T对数据R加了S锁，则其他事务对R的X锁请求不能成功，但对R的S锁请求可以成功</li>\n<li>当事务获得S锁后，如果要对数据R进行修改，则必须在修改前执行Upgrade(R)，将S锁升级为X锁（升变？！）</li>\n</ol>\n<h4 id=\"Update-lock\"><a href=\"#Update-lock\" class=\"headerlink\" title=\"Update lock\"></a>Update lock</h4><ol>\n<li>如果事务取得了数据R上的更新锁，则可以读R，并且可以在以后升级为X锁（上一小节的S锁的可升变版本）</li>\n<li>单纯的S锁不能升级为R锁</li>\n<li>如果事务持有了R上的Update lock，则其他事务不能取到R上的S锁、X锁，以及Update锁</li>\n<li>如果事务持有了R上的S锁，则其他事务可以获取R上的Update lock</li>\n</ol>\n<h4 id=\"S锁、X锁、Update锁的相容性\"><a href=\"#S锁、X锁、Update锁的相容性\" class=\"headerlink\" title=\"S锁、X锁、Update锁的相容性\"></a>S锁、X锁、Update锁的相容性</h4><blockquote>\n<p>Y 表示相容；N表示不相容</p>\n</blockquote>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">T1 holds\\T2 requrests</th>\n<th style=\"text-align:left\">S</th>\n<th style=\"text-align:left\">X</th>\n<th style=\"text-align:left\">U</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">S</td>\n<td style=\"text-align:left\">Y</td>\n<td style=\"text-align:left\">N</td>\n<td style=\"text-align:left\">Y</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">X</td>\n<td style=\"text-align:left\">N</td>\n<td style=\"text-align:left\">N</td>\n<td style=\"text-align:left\">N</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">U</td>\n<td style=\"text-align:left\">N</td>\n<td style=\"text-align:left\">N</td>\n<td style=\"text-align:left\">N</td>\n</tr>\n</tbody>\n</table>\n</div>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: document.title+document.date,\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>"},{"title":"自编曲的吉他指弹·Long long ago, 20th century","mathjax":false,"codeblock":{"enable":true,"show_result":true},"date":"2023-02-21T02:02:41.000Z","_content":"\n吉他指弹改编 · long long ago, 20th century (假面骑士 Black 片尾曲)\n\n<!--more-->\n\n《假面骑士 Black》是我小时候最早看的一部假面骑士。\n\n南光太郎父母早亡，被秋月总一郎收养，和秋月信彦是异父异母的亲兄弟。日食之时，他们被父亲秋月总一郎出卖给戈尔戈姆，意图分别改造成黑日和影月，进行万年一次的对决，胜者将会成为新一任世纪王。当肉体改造完成，即将进行洗脑手术时，南光太郎逃出戈尔戈姆，秋月信彦却不幸逃脱失败。此后，黑日成为了假面骑士，影月却丢失从前的记忆，成为了无情的斗士。两人既是兄弟，也是被命运裹挟的宿敌。\n\n令我印象最深的是最后一话，黑日与影月的对决。在戈尔戈姆的基地，黑日夺取影月的撒旦剑，重创影月的腰带。影月痛苦地摇晃，应声倒地。临终之时，他终于想起他的宿敌的真名。那是他的亲兄弟，名叫南光太郎。\n\n可惜为时已晚，影月消失于山洞的崩塌之中。\n\n镜头一转，南光太郎立于山涧，手握撒旦剑，望着剑刃，沉默不语，任凭大雨淋在他身上。\n\n此时，ED响起。那便是《Long long ago, 20th century》。\n\n敌我同源，这是原作石森章太郎老师笔下假面骑士的悲哀；骨肉相残，这是黑日和影月不得不被卷入其中的命运。\n\n当时还小，没学过音乐也看不懂歌词，但是自己被这首曲子深深地触动，希望有朝一日自己能将它弹奏出来。但是很遗憾，网上找不到乐谱。恰好最近在学乐理，因此考虑着将这首曲子作为自己编曲处女作改编出来。这一作是指弹版本，和弦不难，但要突出旋律。也可以用钢琴演奏，但需要人力分配左右手。\n\n自改编乐谱（[下载链接在此](https://cslijt.github.io/LiJT-Daily/2023/02/21/2023-02-21-guitar/Long-long-ago,-20th-century.pdf)）：\n\n<br>\n{% pdf Long-long-ago,-20th-century.pdf %}\n<br>\n\n附：原曲\n<div style=\"position: relative; width: 100%; height: 0; padding-bottom: 75%;\"><iframe \nsrc=\"https://player.bilibili.com/player.html?aid=799502033&cid=306741913&page=2\" scrolling=\"no\" border=\"0\" \nframeborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\" style=\"position: absolute; width: 100%; \nheight: 100%; left: 0; top: 0;\"> </iframe></div>\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: \"2023-02-01-guitar\"+document.date,\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","source":"_posts/2023-02-21-guitar.md","raw":"---\ntitle: 自编曲的吉他指弹·Long long ago, 20th century\nmathjax: false\ncodeblock:\n  enable: true\n  show_result: true\ndate: 2023-02-21 10:02:41\ntags: 吉他, 编曲\ncategories: 音乐\n---\n\n吉他指弹改编 · long long ago, 20th century (假面骑士 Black 片尾曲)\n\n<!--more-->\n\n《假面骑士 Black》是我小时候最早看的一部假面骑士。\n\n南光太郎父母早亡，被秋月总一郎收养，和秋月信彦是异父异母的亲兄弟。日食之时，他们被父亲秋月总一郎出卖给戈尔戈姆，意图分别改造成黑日和影月，进行万年一次的对决，胜者将会成为新一任世纪王。当肉体改造完成，即将进行洗脑手术时，南光太郎逃出戈尔戈姆，秋月信彦却不幸逃脱失败。此后，黑日成为了假面骑士，影月却丢失从前的记忆，成为了无情的斗士。两人既是兄弟，也是被命运裹挟的宿敌。\n\n令我印象最深的是最后一话，黑日与影月的对决。在戈尔戈姆的基地，黑日夺取影月的撒旦剑，重创影月的腰带。影月痛苦地摇晃，应声倒地。临终之时，他终于想起他的宿敌的真名。那是他的亲兄弟，名叫南光太郎。\n\n可惜为时已晚，影月消失于山洞的崩塌之中。\n\n镜头一转，南光太郎立于山涧，手握撒旦剑，望着剑刃，沉默不语，任凭大雨淋在他身上。\n\n此时，ED响起。那便是《Long long ago, 20th century》。\n\n敌我同源，这是原作石森章太郎老师笔下假面骑士的悲哀；骨肉相残，这是黑日和影月不得不被卷入其中的命运。\n\n当时还小，没学过音乐也看不懂歌词，但是自己被这首曲子深深地触动，希望有朝一日自己能将它弹奏出来。但是很遗憾，网上找不到乐谱。恰好最近在学乐理，因此考虑着将这首曲子作为自己编曲处女作改编出来。这一作是指弹版本，和弦不难，但要突出旋律。也可以用钢琴演奏，但需要人力分配左右手。\n\n自改编乐谱（[下载链接在此](https://cslijt.github.io/LiJT-Daily/2023/02/21/2023-02-21-guitar/Long-long-ago,-20th-century.pdf)）：\n\n<br>\n{% pdf Long-long-ago,-20th-century.pdf %}\n<br>\n\n附：原曲\n<div style=\"position: relative; width: 100%; height: 0; padding-bottom: 75%;\"><iframe \nsrc=\"https://player.bilibili.com/player.html?aid=799502033&cid=306741913&page=2\" scrolling=\"no\" border=\"0\" \nframeborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\" style=\"position: absolute; width: 100%; \nheight: 100%; left: 0; top: 0;\"> </iframe></div>\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: \"2023-02-01-guitar\"+document.date,\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","slug":"2023-02-21-guitar","published":1,"updated":"2023-02-21T03:33:03.336Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cludw9na0002a9wv92duk9x6r","content":"<p>吉他指弹改编 · long long ago, 20th century (假面骑士 Black 片尾曲)</p>\n<span id=\"more\"></span>\n<p>《假面骑士 Black》是我小时候最早看的一部假面骑士。</p>\n<p>南光太郎父母早亡，被秋月总一郎收养，和秋月信彦是异父异母的亲兄弟。日食之时，他们被父亲秋月总一郎出卖给戈尔戈姆，意图分别改造成黑日和影月，进行万年一次的对决，胜者将会成为新一任世纪王。当肉体改造完成，即将进行洗脑手术时，南光太郎逃出戈尔戈姆，秋月信彦却不幸逃脱失败。此后，黑日成为了假面骑士，影月却丢失从前的记忆，成为了无情的斗士。两人既是兄弟，也是被命运裹挟的宿敌。</p>\n<p>令我印象最深的是最后一话，黑日与影月的对决。在戈尔戈姆的基地，黑日夺取影月的撒旦剑，重创影月的腰带。影月痛苦地摇晃，应声倒地。临终之时，他终于想起他的宿敌的真名。那是他的亲兄弟，名叫南光太郎。</p>\n<p>可惜为时已晚，影月消失于山洞的崩塌之中。</p>\n<p>镜头一转，南光太郎立于山涧，手握撒旦剑，望着剑刃，沉默不语，任凭大雨淋在他身上。</p>\n<p>此时，ED响起。那便是《Long long ago, 20th century》。</p>\n<p>敌我同源，这是原作石森章太郎老师笔下假面骑士的悲哀；骨肉相残，这是黑日和影月不得不被卷入其中的命运。</p>\n<p>当时还小，没学过音乐也看不懂歌词，但是自己被这首曲子深深地触动，希望有朝一日自己能将它弹奏出来。但是很遗憾，网上找不到乐谱。恰好最近在学乐理，因此考虑着将这首曲子作为自己编曲处女作改编出来。这一作是指弹版本，和弦不难，但要突出旋律。也可以用钢琴演奏，但需要人力分配左右手。</p>\n<p>自改编乐谱（<a href=\"https://cslijt.github.io/LiJT-Daily/2023/02/21/2023-02-21-guitar/Long-long-ago,-20th-century.pdf\">下载链接在此</a>）：</p>\n<p><br><br><div class=\"pdfobject-container\" data-target=\"Long-long-ago,-20th-century.pdf\" data-height=\"500px\"></div><br><br></p>\n<p>附：原曲</p>\n<div style=\"position: relative; width: 100%; height: 0; padding-bottom: 75%;\"><iframe \nsrc=\"https://player.bilibili.com/player.html?aid=799502033&cid=306741913&page=2\" scrolling=\"no\" border=\"0\" \nframeborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\" style=\"position: absolute; width: 100%; \nheight: 100%; left: 0; top: 0;\"> </iframe></div>\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: \"2023-02-01-guitar\"+document.date,\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","site":{"data":{}},"length":985,"excerpt":"<p>吉他指弹改编 · long long ago, 20th century (假面骑士 Black 片尾曲)</p>","more":"<p>《假面骑士 Black》是我小时候最早看的一部假面骑士。</p>\n<p>南光太郎父母早亡，被秋月总一郎收养，和秋月信彦是异父异母的亲兄弟。日食之时，他们被父亲秋月总一郎出卖给戈尔戈姆，意图分别改造成黑日和影月，进行万年一次的对决，胜者将会成为新一任世纪王。当肉体改造完成，即将进行洗脑手术时，南光太郎逃出戈尔戈姆，秋月信彦却不幸逃脱失败。此后，黑日成为了假面骑士，影月却丢失从前的记忆，成为了无情的斗士。两人既是兄弟，也是被命运裹挟的宿敌。</p>\n<p>令我印象最深的是最后一话，黑日与影月的对决。在戈尔戈姆的基地，黑日夺取影月的撒旦剑，重创影月的腰带。影月痛苦地摇晃，应声倒地。临终之时，他终于想起他的宿敌的真名。那是他的亲兄弟，名叫南光太郎。</p>\n<p>可惜为时已晚，影月消失于山洞的崩塌之中。</p>\n<p>镜头一转，南光太郎立于山涧，手握撒旦剑，望着剑刃，沉默不语，任凭大雨淋在他身上。</p>\n<p>此时，ED响起。那便是《Long long ago, 20th century》。</p>\n<p>敌我同源，这是原作石森章太郎老师笔下假面骑士的悲哀；骨肉相残，这是黑日和影月不得不被卷入其中的命运。</p>\n<p>当时还小，没学过音乐也看不懂歌词，但是自己被这首曲子深深地触动，希望有朝一日自己能将它弹奏出来。但是很遗憾，网上找不到乐谱。恰好最近在学乐理，因此考虑着将这首曲子作为自己编曲处女作改编出来。这一作是指弹版本，和弦不难，但要突出旋律。也可以用钢琴演奏，但需要人力分配左右手。</p>\n<p>自改编乐谱（<a href=\"https://cslijt.github.io/LiJT-Daily/2023/02/21/2023-02-21-guitar/Long-long-ago,-20th-century.pdf\">下载链接在此</a>）：</p>\n<p><br><br><div class=\"pdfobject-container\" data-target=\"Long-long-ago,-20th-century.pdf\" data-height=\"500px\"></div><br><br></p>\n<p>附：原曲</p>\n<div style=\"position: relative; width: 100%; height: 0; padding-bottom: 75%;\"><iframe \nsrc=\"https://player.bilibili.com/player.html?aid=799502033&cid=306741913&page=2\" scrolling=\"no\" border=\"0\" \nframeborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\" style=\"position: absolute; width: 100%; \nheight: 100%; left: 0; top: 0;\"> </iframe></div>\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: \"2023-02-01-guitar\"+document.date,\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>"},{"title":"Thinkpad+Win11唤醒锁频0.39GHz解决方案","mathjax":false,"codeblock":{"enable":true,"show_result":true},"date":"2023-02-25T01:49:09.000Z","_content":"电脑配置：\n- Thinkpad x13 Gen 2i\n- CPU: Intel Core i7-1165G7; RAM: 16GB\n- OS: Windows 11\n省流：修改BIOS配置，将休眠策略转到S3\n<!--more-->\n\n## 问题描述\n- 电脑在开了较多进程并且休眠一段时间（大约大于5分钟）后重新唤醒，会变得巨卡无比。此时按快捷键`Ctrl+Shift+Esc`进入任务管理器，查看硬件情况会发现CPU频率被锁定在0.39GHz。除非更改电源模式为“高性能”或重启电脑，否则锁频无法解除。然而在如此低的CPU频率下，即便是打开“设置”界面也会及其缓慢，甚至卡死，体验非常糟糕。\n\n## 解决方案\n- 在调研过一些解决方法后（如[\\[1\\]](https://www.bilibili.com/video/av893211472/?vd_source=e1706ec19d799cb1d011c5e7b290e8fa)[\\[2\\]](https://www.zhihu.com/question/335095596)），发现现有的方案大多基于电源策略调整和过热保护取消，但都不适用于我所面临的情况。但逻辑上能够推测，问题出现的原因是现有休眠策略的Bug。\n- 继续调研，发Win10及Win11的电脑大多采用[现代待机(modern standby)](https://learn.microsoft.com/zh-CN/windows-hardware/design/device-experiences/modern-standby-vs-s3)策略，而旧版本Windows常采用S3待机策略。于是尝试查看自己的待机策略：\n  1. 按快捷键`Win+R`, 在“打开”输入栏键入`cmd`，打开cmd界面\n  2. 在cmd中，输入`powercfg -a`，查看现有待机策略和可用待机策略\n  3. 事实证明我的电脑确实处于现代待机，但能够支持S3待机策略\n\n此图中，我已经将电源模式切换为S3.\n![cmd](cmd.jpg) \n\n- 于是解决方案为：\n1. 关闭电脑；重新开机时点击`F1`键进入BIOS界面（注：不同的电脑的BIOS快捷键不一致）\n2. 在BIOS中，进入Config界面，选择`Power`：\n![bios1](bios1.jpg)\n3. 在Power界面，将`Sleep State`选项由`Windows and Linux`更改为`Linux S3`：\n![bios2](bios2.jpg)\n4. 点击屏幕右下角`Save and Exit`，退出BIOS界面。\n\n- 至此，休眠锁频问题被彻底解决。\n- 虽然切换到S3后，电脑需要按开机键才能唤醒，但唤醒速度很快，也不会出现“没完全睡醒”的情况。\n- 所以说，只有夜晚保持充足睡眠，才能在白天保持充沛精力！！！\n  \n\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: document.title+document.date,\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","source":"_posts/2023-02-25-bios.md","raw":"---\ntitle: Thinkpad+Win11唤醒锁频0.39GHz解决方案\nmathjax: false\ncodeblock:\n  enable: true\n  show_result: true\ndate: 2023-02-25 09:49:09\ntags: \n  - 电脑\n  - 硬件\ncategories: 技术文档\n---\n电脑配置：\n- Thinkpad x13 Gen 2i\n- CPU: Intel Core i7-1165G7; RAM: 16GB\n- OS: Windows 11\n省流：修改BIOS配置，将休眠策略转到S3\n<!--more-->\n\n## 问题描述\n- 电脑在开了较多进程并且休眠一段时间（大约大于5分钟）后重新唤醒，会变得巨卡无比。此时按快捷键`Ctrl+Shift+Esc`进入任务管理器，查看硬件情况会发现CPU频率被锁定在0.39GHz。除非更改电源模式为“高性能”或重启电脑，否则锁频无法解除。然而在如此低的CPU频率下，即便是打开“设置”界面也会及其缓慢，甚至卡死，体验非常糟糕。\n\n## 解决方案\n- 在调研过一些解决方法后（如[\\[1\\]](https://www.bilibili.com/video/av893211472/?vd_source=e1706ec19d799cb1d011c5e7b290e8fa)[\\[2\\]](https://www.zhihu.com/question/335095596)），发现现有的方案大多基于电源策略调整和过热保护取消，但都不适用于我所面临的情况。但逻辑上能够推测，问题出现的原因是现有休眠策略的Bug。\n- 继续调研，发Win10及Win11的电脑大多采用[现代待机(modern standby)](https://learn.microsoft.com/zh-CN/windows-hardware/design/device-experiences/modern-standby-vs-s3)策略，而旧版本Windows常采用S3待机策略。于是尝试查看自己的待机策略：\n  1. 按快捷键`Win+R`, 在“打开”输入栏键入`cmd`，打开cmd界面\n  2. 在cmd中，输入`powercfg -a`，查看现有待机策略和可用待机策略\n  3. 事实证明我的电脑确实处于现代待机，但能够支持S3待机策略\n\n此图中，我已经将电源模式切换为S3.\n![cmd](cmd.jpg) \n\n- 于是解决方案为：\n1. 关闭电脑；重新开机时点击`F1`键进入BIOS界面（注：不同的电脑的BIOS快捷键不一致）\n2. 在BIOS中，进入Config界面，选择`Power`：\n![bios1](bios1.jpg)\n3. 在Power界面，将`Sleep State`选项由`Windows and Linux`更改为`Linux S3`：\n![bios2](bios2.jpg)\n4. 点击屏幕右下角`Save and Exit`，退出BIOS界面。\n\n- 至此，休眠锁频问题被彻底解决。\n- 虽然切换到S3后，电脑需要按开机键才能唤醒，但唤醒速度很快，也不会出现“没完全睡醒”的情况。\n- 所以说，只有夜晚保持充足睡眠，才能在白天保持充沛精力！！！\n  \n\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: document.title+document.date,\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","slug":"2023-02-25-bios","published":1,"updated":"2023-02-25T02:23:30.357Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cludw9na0002e9wv95t6b8y2i","content":"<p>电脑配置：</p>\n<ul>\n<li>Thinkpad x13 Gen 2i</li>\n<li>CPU: Intel Core i7-1165G7; RAM: 16GB</li>\n<li>OS: Windows 11<br>省流：修改BIOS配置，将休眠策略转到S3<span id=\"more\"></span>\n</li>\n</ul>\n<h2 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h2><ul>\n<li>电脑在开了较多进程并且休眠一段时间（大约大于5分钟）后重新唤醒，会变得巨卡无比。此时按快捷键<code>Ctrl+Shift+Esc</code>进入任务管理器，查看硬件情况会发现CPU频率被锁定在0.39GHz。除非更改电源模式为“高性能”或重启电脑，否则锁频无法解除。然而在如此低的CPU频率下，即便是打开“设置”界面也会及其缓慢，甚至卡死，体验非常糟糕。</li>\n</ul>\n<h2 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h2><ul>\n<li>在调研过一些解决方法后（如<a href=\"https://www.bilibili.com/video/av893211472/?vd_source=e1706ec19d799cb1d011c5e7b290e8fa\">[1]</a><a href=\"https://www.zhihu.com/question/335095596\">[2]</a>），发现现有的方案大多基于电源策略调整和过热保护取消，但都不适用于我所面临的情况。但逻辑上能够推测，问题出现的原因是现有休眠策略的Bug。</li>\n<li>继续调研，发Win10及Win11的电脑大多采用<a href=\"https://learn.microsoft.com/zh-CN/windows-hardware/design/device-experiences/modern-standby-vs-s3\">现代待机(modern standby)</a>策略，而旧版本Windows常采用S3待机策略。于是尝试查看自己的待机策略：<ol>\n<li>按快捷键<code>Win+R</code>, 在“打开”输入栏键入<code>cmd</code>，打开cmd界面</li>\n<li>在cmd中，输入<code>powercfg -a</code>，查看现有待机策略和可用待机策略</li>\n<li>事实证明我的电脑确实处于现代待机，但能够支持S3待机策略</li>\n</ol>\n</li>\n</ul>\n<p>此图中，我已经将电源模式切换为S3.<br><img src=\"cmd.jpg\" alt=\"cmd\"> </p>\n<ul>\n<li>于是解决方案为：</li>\n</ul>\n<ol>\n<li>关闭电脑；重新开机时点击<code>F1</code>键进入BIOS界面（注：不同的电脑的BIOS快捷键不一致）</li>\n<li>在BIOS中，进入Config界面，选择<code>Power</code>：<br><img src=\"bios1.jpg\" alt=\"bios1\"></li>\n<li>在Power界面，将<code>Sleep State</code>选项由<code>Windows and Linux</code>更改为<code>Linux S3</code>：<br><img src=\"bios2.jpg\" alt=\"bios2\"></li>\n<li>点击屏幕右下角<code>Save and Exit</code>，退出BIOS界面。</li>\n</ol>\n<ul>\n<li>至此，休眠锁频问题被彻底解决。</li>\n<li>虽然切换到S3后，电脑需要按开机键才能唤醒，但唤醒速度很快，也不会出现“没完全睡醒”的情况。</li>\n<li>所以说，只有夜晚保持充足睡眠，才能在白天保持充沛精力！！！</li>\n</ul>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: document.title+document.date,\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","site":{"data":{}},"length":1112,"excerpt":"<p>电脑配置：</p>\n<ul>\n<li>Thinkpad x13 Gen 2i</li>\n<li>CPU: Intel Core i7-1165G7; RAM: 16GB</li>\n<li>OS: Windows 11<br>省流：修改BIOS配置，将休眠策略转到S3","more":"</li>\n</ul>\n<h2 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h2><ul>\n<li>电脑在开了较多进程并且休眠一段时间（大约大于5分钟）后重新唤醒，会变得巨卡无比。此时按快捷键<code>Ctrl+Shift+Esc</code>进入任务管理器，查看硬件情况会发现CPU频率被锁定在0.39GHz。除非更改电源模式为“高性能”或重启电脑，否则锁频无法解除。然而在如此低的CPU频率下，即便是打开“设置”界面也会及其缓慢，甚至卡死，体验非常糟糕。</li>\n</ul>\n<h2 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h2><ul>\n<li>在调研过一些解决方法后（如<a href=\"https://www.bilibili.com/video/av893211472/?vd_source=e1706ec19d799cb1d011c5e7b290e8fa\">[1]</a><a href=\"https://www.zhihu.com/question/335095596\">[2]</a>），发现现有的方案大多基于电源策略调整和过热保护取消，但都不适用于我所面临的情况。但逻辑上能够推测，问题出现的原因是现有休眠策略的Bug。</li>\n<li>继续调研，发Win10及Win11的电脑大多采用<a href=\"https://learn.microsoft.com/zh-CN/windows-hardware/design/device-experiences/modern-standby-vs-s3\">现代待机(modern standby)</a>策略，而旧版本Windows常采用S3待机策略。于是尝试查看自己的待机策略：<ol>\n<li>按快捷键<code>Win+R</code>, 在“打开”输入栏键入<code>cmd</code>，打开cmd界面</li>\n<li>在cmd中，输入<code>powercfg -a</code>，查看现有待机策略和可用待机策略</li>\n<li>事实证明我的电脑确实处于现代待机，但能够支持S3待机策略</li>\n</ol>\n</li>\n</ul>\n<p>此图中，我已经将电源模式切换为S3.<br><img src=\"cmd.jpg\" alt=\"cmd\"> </p>\n<ul>\n<li>于是解决方案为：</li>\n</ul>\n<ol>\n<li>关闭电脑；重新开机时点击<code>F1</code>键进入BIOS界面（注：不同的电脑的BIOS快捷键不一致）</li>\n<li>在BIOS中，进入Config界面，选择<code>Power</code>：<br><img src=\"bios1.jpg\" alt=\"bios1\"></li>\n<li>在Power界面，将<code>Sleep State</code>选项由<code>Windows and Linux</code>更改为<code>Linux S3</code>：<br><img src=\"bios2.jpg\" alt=\"bios2\"></li>\n<li>点击屏幕右下角<code>Save and Exit</code>，退出BIOS界面。</li>\n</ol>\n<ul>\n<li>至此，休眠锁频问题被彻底解决。</li>\n<li>虽然切换到S3后，电脑需要按开机键才能唤醒，但唤醒速度很快，也不会出现“没完全睡醒”的情况。</li>\n<li>所以说，只有夜晚保持充足睡眠，才能在白天保持充沛精力！！！</li>\n</ul>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: document.title+document.date,\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>"},{"title":"菜谱：照烧肥牛卷","mathjax":false,"codeblock":{"enable":true,"show_result":true},"date":"2023-03-12T08:20:37.000Z","_content":"\n照烧肥牛卷一人食。\n\n<!--more-->\n\n### 原料\n- 新鲜肥牛卷12卷（一人份，根据个人食量而定）\n- 洋葱1/4颗\n- 大蒜1瓣\n- 胡萝卜1/3根（可选）\n- 口蘑4~6颗（可选）\n- 生抽酱油\n- 清酒（没有时用黄酒代替，个人使用黄酒）\n- 白糖/冰糖\n- 食用油\n\n### 烹饪流程\n\n#### 配菜\n1. 洋葱快速切丝，大蒜拍破\n2. 胡萝卜切丝\n3. 口蘑去掉茎部，切片\n4. 调配料汁：酱油2汤勺，酒3汤勺，冰糖3-4颗（或等量白砂糖），加少许水，少许盐，总共约有一碗的量\n\n#### 食材焯水\n1. 将水烧开，下入胡萝卜和口蘑，焯水60秒捞出\n2. 重新烧水，烧开后下肥牛卷，焯水至断生，捞出。注意可以在水中抖掉血沫\n\n#### 烧制\n1. 热锅凉油，下入洋葱和大蒜炒制，控制火候为中小火\n2. 炒至洋葱变软或大蒜出现金黄色，加入胡萝卜、口蘑，翻炒至软化\n3. 加入焯过水的肥牛卷翻炒，略微炒出肥牛卷的油脂，炒出香气\n4. 泼入料汁，大火烧开5分钟\n5. 收汁，出锅，礼成。\n\n### 要点\n1. 蔬菜类焯水可便于成熟，但不宜太久，以60秒为佳\n2. 叶子菜用盐水焯水（烧水时加一小勺盐），可保护叶绿素不被高温破坏，颜色翠绿\n3. 肉类焯水可去除异味。姜和黄酒是很好的焯水搭配\n4. 胡萝卜素不溶于水但溶于油，因此多放一点油有助于人体吸收胡萝卜素\n5. 日料里没有“勾芡”的概念，不必计较收汁后汤汁是否变粘稠。味道浓度达到要求即可（也不是不可以勾芡hhh）\n\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: document.URL+document.date,\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","source":"_posts/2023-03-12-menu.md","raw":"---\ntitle: 菜谱：照烧肥牛卷\nmathjax: false\ncodeblock:\n  enable: true\n  show_result: true\ndate: 2023-03-12 16:20:37\ntags: 美食 菜谱\ncategories: 菜谱\n---\n\n照烧肥牛卷一人食。\n\n<!--more-->\n\n### 原料\n- 新鲜肥牛卷12卷（一人份，根据个人食量而定）\n- 洋葱1/4颗\n- 大蒜1瓣\n- 胡萝卜1/3根（可选）\n- 口蘑4~6颗（可选）\n- 生抽酱油\n- 清酒（没有时用黄酒代替，个人使用黄酒）\n- 白糖/冰糖\n- 食用油\n\n### 烹饪流程\n\n#### 配菜\n1. 洋葱快速切丝，大蒜拍破\n2. 胡萝卜切丝\n3. 口蘑去掉茎部，切片\n4. 调配料汁：酱油2汤勺，酒3汤勺，冰糖3-4颗（或等量白砂糖），加少许水，少许盐，总共约有一碗的量\n\n#### 食材焯水\n1. 将水烧开，下入胡萝卜和口蘑，焯水60秒捞出\n2. 重新烧水，烧开后下肥牛卷，焯水至断生，捞出。注意可以在水中抖掉血沫\n\n#### 烧制\n1. 热锅凉油，下入洋葱和大蒜炒制，控制火候为中小火\n2. 炒至洋葱变软或大蒜出现金黄色，加入胡萝卜、口蘑，翻炒至软化\n3. 加入焯过水的肥牛卷翻炒，略微炒出肥牛卷的油脂，炒出香气\n4. 泼入料汁，大火烧开5分钟\n5. 收汁，出锅，礼成。\n\n### 要点\n1. 蔬菜类焯水可便于成熟，但不宜太久，以60秒为佳\n2. 叶子菜用盐水焯水（烧水时加一小勺盐），可保护叶绿素不被高温破坏，颜色翠绿\n3. 肉类焯水可去除异味。姜和黄酒是很好的焯水搭配\n4. 胡萝卜素不溶于水但溶于油，因此多放一点油有助于人体吸收胡萝卜素\n5. 日料里没有“勾芡”的概念，不必计较收汁后汤汁是否变粘稠。味道浓度达到要求即可（也不是不可以勾芡hhh）\n\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: document.URL+document.date,\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","slug":"2023-03-12-menu","published":1,"updated":"2023-03-19T09:04:31.710Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cludw9na1002i9wv9g1jz3743","content":"<p>照烧肥牛卷一人食。</p>\n<span id=\"more\"></span>\n<h3 id=\"原料\"><a href=\"#原料\" class=\"headerlink\" title=\"原料\"></a>原料</h3><ul>\n<li>新鲜肥牛卷12卷（一人份，根据个人食量而定）</li>\n<li>洋葱1/4颗</li>\n<li>大蒜1瓣</li>\n<li>胡萝卜1/3根（可选）</li>\n<li>口蘑4~6颗（可选）</li>\n<li>生抽酱油</li>\n<li>清酒（没有时用黄酒代替，个人使用黄酒）</li>\n<li>白糖/冰糖</li>\n<li>食用油</li>\n</ul>\n<h3 id=\"烹饪流程\"><a href=\"#烹饪流程\" class=\"headerlink\" title=\"烹饪流程\"></a>烹饪流程</h3><h4 id=\"配菜\"><a href=\"#配菜\" class=\"headerlink\" title=\"配菜\"></a>配菜</h4><ol>\n<li>洋葱快速切丝，大蒜拍破</li>\n<li>胡萝卜切丝</li>\n<li>口蘑去掉茎部，切片</li>\n<li>调配料汁：酱油2汤勺，酒3汤勺，冰糖3-4颗（或等量白砂糖），加少许水，少许盐，总共约有一碗的量</li>\n</ol>\n<h4 id=\"食材焯水\"><a href=\"#食材焯水\" class=\"headerlink\" title=\"食材焯水\"></a>食材焯水</h4><ol>\n<li>将水烧开，下入胡萝卜和口蘑，焯水60秒捞出</li>\n<li>重新烧水，烧开后下肥牛卷，焯水至断生，捞出。注意可以在水中抖掉血沫</li>\n</ol>\n<h4 id=\"烧制\"><a href=\"#烧制\" class=\"headerlink\" title=\"烧制\"></a>烧制</h4><ol>\n<li>热锅凉油，下入洋葱和大蒜炒制，控制火候为中小火</li>\n<li>炒至洋葱变软或大蒜出现金黄色，加入胡萝卜、口蘑，翻炒至软化</li>\n<li>加入焯过水的肥牛卷翻炒，略微炒出肥牛卷的油脂，炒出香气</li>\n<li>泼入料汁，大火烧开5分钟</li>\n<li>收汁，出锅，礼成。</li>\n</ol>\n<h3 id=\"要点\"><a href=\"#要点\" class=\"headerlink\" title=\"要点\"></a>要点</h3><ol>\n<li>蔬菜类焯水可便于成熟，但不宜太久，以60秒为佳</li>\n<li>叶子菜用盐水焯水（烧水时加一小勺盐），可保护叶绿素不被高温破坏，颜色翠绿</li>\n<li>肉类焯水可去除异味。姜和黄酒是很好的焯水搭配</li>\n<li>胡萝卜素不溶于水但溶于油，因此多放一点油有助于人体吸收胡萝卜素</li>\n<li>日料里没有“勾芡”的概念，不必计较收汁后汤汁是否变粘稠。味道浓度达到要求即可（也不是不可以勾芡hhh）</li>\n</ol>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: document.URL+document.date,\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","site":{"data":{}},"length":825,"excerpt":"<p>照烧肥牛卷一人食。</p>","more":"<h3 id=\"原料\"><a href=\"#原料\" class=\"headerlink\" title=\"原料\"></a>原料</h3><ul>\n<li>新鲜肥牛卷12卷（一人份，根据个人食量而定）</li>\n<li>洋葱1/4颗</li>\n<li>大蒜1瓣</li>\n<li>胡萝卜1/3根（可选）</li>\n<li>口蘑4~6颗（可选）</li>\n<li>生抽酱油</li>\n<li>清酒（没有时用黄酒代替，个人使用黄酒）</li>\n<li>白糖/冰糖</li>\n<li>食用油</li>\n</ul>\n<h3 id=\"烹饪流程\"><a href=\"#烹饪流程\" class=\"headerlink\" title=\"烹饪流程\"></a>烹饪流程</h3><h4 id=\"配菜\"><a href=\"#配菜\" class=\"headerlink\" title=\"配菜\"></a>配菜</h4><ol>\n<li>洋葱快速切丝，大蒜拍破</li>\n<li>胡萝卜切丝</li>\n<li>口蘑去掉茎部，切片</li>\n<li>调配料汁：酱油2汤勺，酒3汤勺，冰糖3-4颗（或等量白砂糖），加少许水，少许盐，总共约有一碗的量</li>\n</ol>\n<h4 id=\"食材焯水\"><a href=\"#食材焯水\" class=\"headerlink\" title=\"食材焯水\"></a>食材焯水</h4><ol>\n<li>将水烧开，下入胡萝卜和口蘑，焯水60秒捞出</li>\n<li>重新烧水，烧开后下肥牛卷，焯水至断生，捞出。注意可以在水中抖掉血沫</li>\n</ol>\n<h4 id=\"烧制\"><a href=\"#烧制\" class=\"headerlink\" title=\"烧制\"></a>烧制</h4><ol>\n<li>热锅凉油，下入洋葱和大蒜炒制，控制火候为中小火</li>\n<li>炒至洋葱变软或大蒜出现金黄色，加入胡萝卜、口蘑，翻炒至软化</li>\n<li>加入焯过水的肥牛卷翻炒，略微炒出肥牛卷的油脂，炒出香气</li>\n<li>泼入料汁，大火烧开5分钟</li>\n<li>收汁，出锅，礼成。</li>\n</ol>\n<h3 id=\"要点\"><a href=\"#要点\" class=\"headerlink\" title=\"要点\"></a>要点</h3><ol>\n<li>蔬菜类焯水可便于成熟，但不宜太久，以60秒为佳</li>\n<li>叶子菜用盐水焯水（烧水时加一小勺盐），可保护叶绿素不被高温破坏，颜色翠绿</li>\n<li>肉类焯水可去除异味。姜和黄酒是很好的焯水搭配</li>\n<li>胡萝卜素不溶于水但溶于油，因此多放一点油有助于人体吸收胡萝卜素</li>\n<li>日料里没有“勾芡”的概念，不必计较收汁后汤汁是否变粘稠。味道浓度达到要求即可（也不是不可以勾芡hhh）</li>\n</ol>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: document.URL+document.date,\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>"},{"title":"论文概述：因果学习在推荐系统中的新机遇【IJCAI'2022】","mathjax":true,"codeblock":{"enable":true,"show_result":true},"date":"2023-03-18T14:42:35.000Z","_content":"\n推荐系统与因果推断的结合是近几年来一个十分有趣的研究方向。本文提出了一种统一的推荐系统中的因果分析框架，可以将许多经典的推荐系统的研究问题归结到因果推断，并使用后者的理论进行分析。**对个人而言，读这篇论文的收获主要在于了解推荐系统中的常见因果问题，以及因果方法论。**\n<!--more-->\n\n论文链接：[On the Opportunity of Causal Learning in Recommendation Systems: Foundation, Estimation, Prediction and Challenges](https://www.ijcai.org/proceedings/2022/0787.pdf)\n\n**【目录】**\n\n- [研究简介](#研究简介)\n  - [推荐系统中的热点问题](#推荐系统中的热点问题)\n  - [现有的推荐系统+因果推断研究的不足](#现有的推荐系统因果推断研究的不足)\n  - [本文的主要贡献](#本文的主要贡献)\n- [推荐系统中的因果分析框架](#推荐系统中的因果分析框架)\n- [潜在得分、因果估计量](#潜在得分因果估计量)\n- [可恢复性：因果估计量的一致估计](#可恢复性因果估计量的一致估计)\n  - [与可恢复性相关的理论假设](#与可恢复性相关的理论假设)\n- [推荐系统中的选择偏差与混淆偏差](#推荐系统中的选择偏差与混淆偏差)\n- [将本文的因果分析框架应用于推荐任务](#将本文的因果分析框架应用于推荐任务)\n- [因果推荐的未来研究方向](#因果推荐的未来研究方向)\n\n\n## 研究简介\n近年来，基于因果推断的推荐系统 (**RS**) 已经在学术界和工业界得到了广泛关注。然而现有的工作缺乏一个统一的因果分析框架。为此，作者广泛调研了因果推断方法在推荐系统任务中的应用。随后，作者提出了一种新的因果分析框架，通过推荐系统中对于因果分析假设的违反情况归结前者中的问题类型。随后，本文形式化了推荐系统中许多现有的去偏（debiasing）和预测（prediction）任务，并且分别总结了基于统计的和基于机器学习的因果估计方法。\n\n### 推荐系统中的热点问题\n- 下列推荐系统中的研究问题均能归结到因果问题\n1. post-view click-through rate prediction (后视CTR预估)：给定用户历史行为数据，预测其点击商品概率\n2. post-click conversion rate prediction (后点击转化率预估)：给定用户历史点击数据，预测其下单商品概率\n3. uplift modeling（增量预测）：预测用户被展示广告后购买意愿的增量\n\n### 现有的推荐系统+因果推断研究的不足\n**缺乏一个统一的应用于推荐系统的因果分析框架**. 原因：\n1. 现有的RS中的因果方法，缺乏一个清晰的数学形式化表征\n   1. 研究对象是什么\n   2. 研究场景是什么\n   3. 技术点是什么\n   4. 基于什么理论假设\n2. RS数据中十分常见的**偏差(bias)**，缺乏形式化的因果领域的定义\n   1. 对于偏差本身的定义的缺乏，导致现有的**去偏（debiasing）**方面的工作难以在因果推断的框架下作分析\n\n### 本文的主要贡献\n1. 明确了如何定义、重建、估计RS中的**因果估计值(causal estimand)**\n2. 提出了一个基于**潜在得分模型（potential outcome framework，一个经典的因果推断框架）**的因果分析框架，用于将RS中的多种偏差(biases)进行分类和形式化定义\n3. 揭示了RS的去偏方法中蕴含的核心的**理论假设**，并且据此将偏差分为选择偏差（selection bias）和混淆偏差（confounding bias）\n4. 将上述因果分析框架应用于RS中的去偏及预测任务中，总结了基于统计的和基于机器学习的因果估计方法\n5. 讨论并展望了因果推荐的未来的研究方向（挖坑）\n\n## 推荐系统中的因果分析框架\n本文提出的统一的因果分析框架，其工作流程分为三步：\n1. 定义研究问题的因果估计量（明确研究对象）\n2. 讨论给定观测数据时该因果估计量的可恢复性（明确能否找到该对象的真实值）\n3. 建立模型，获得该统计量的**一致估计**（一致估计：总能获得与真实（但不可见）值相同的估计结果）\n   \n该框架如下图所示。\n\n![RS中的因果分析框架](https://pic4.zhimg.com/80/v2-071abd747c9407653a2061e2af1df079.jpg)\n\n## 潜在得分、因果估计量\n本文中使用的概念与数学符号：\n- unit（单元）: 因果推断中不可分的基本对象. 在RS中，一个unit可以是一个用户、一个商品，或者一个<用户，商品>的组合\n- $T$: 处理操作(treatment)\n- $Y$: 结果变量(outcome)，指处理操作产生的效果\n- $X$: unit的属性或者特征向量(feature embedding)\n\n---\n\n**定义1**（潜在得分）. 潜在得分$Y(t), t\\in T$是指当处理操作$T$被设为$t$后，结果变量的观测值.\n\n---\n\n**假设1**（稳定单元处理值假设，**SUTVA**）. a. 处理操作只有一个版本，且尤其产生的处理组和对应的对照组有且只有一个版本. b. 一个unit的潜在得分不受其他任何unit的处理操作影响\n\n---\n\n需要注意，**SUTVA的成立是潜在得分的良定义的必要条件**。然而SUTVA的两项，在RS均有可能被违反：\n1. RS中的位置偏差(position bias)违反了SUTVA(a): 假设unit=<用户u，商品i>，t=1表示商品被曝光，t=0表示商品不被曝光。则点击行为$Y_{u,i}(t)$不仅依赖于处理操作$T=t$，还依赖于商品被曝光时的**位置**。曝光位置越靠前，点击率越高。\n2. RS中的从众偏差(conformity bias)违反了SUTVA(b): 由于群组(group)中用户间的社交的存在，用户很可能对商品作出与其他组内用户相似的评价（人云亦云），即一个用户的评价值（潜在得分）会影响另一个用户的评价值（潜在得分）\n\n## 可恢复性：因果估计量的一致估计\n\n---\n\n**定义2**（因果估计量）. 因果估计量是处理操作、单元的特征、潜在得分的联合分布的函数，为从数据中解答研究问题提供充组的帮助\n\n---\n\n需要注意的是，因果估计量的定义是与被真实收集到的数据以及RS模型无关的。个人理解，因果估计量即因果角度的“用户兴趣”。因果估计量可以看作一种随机变量，是可以被估计的。从因果角度，我们感兴趣的是它是否能被**恢复**。后者的定义如下：\n\n---\n\n**定义3**（因果估计量的可恢复性）：给定数据生成过程的所有假设，以及处理操作、单元的特征、潜在得分的联合分布。则称因果估计量$Q$是可估计的，如果存在一个能够从所有的严格正的观测数据分布中计算它的一致估计的过程。\n\n---\n\n简而言之，如果因果估计量能够被一致估计，那么它就是可恢复的。\n\n### 与可恢复性相关的理论假设\n\n**假设2**（结果变量的一致性）. $Y(t)=\\sum_{t*\\in T}I(t*=t)Y$，对于任意$t\\in T$成立。\n\n简而言之，对于任意一个单元$m$，处理操作$t\\in T$总能产生相同的结果，即处理操作对于每个单元产生的结果是一致的\n\n**假设3**（处理操作的正可能性）$P(T=t|X=x)>0$对于任意$t,x$成立.\n\n简而言之，无论对于哪种用户，任何处理操作都有可能发生. 在RS中，曝光偏差(exposure bias)违反了这一假设：一个用户只被曝光了一部分特定的商品，因此剩下的商品的处理操作的概率为0，违反了该假设。\n\n**假设4**（条件可交换性）.$Y(t)\\bot T | X$ 对于任意 $t\\in T$成立.\n\n该假设表明，X阻断了所有T和Y之间的后门路径（如果删去用户特征X，则处理操作与结果变量是相互独立的）。\n\n**假设5**（随机采样）. $P(x,t,y)=P_O(x,t,y)$，其中$P(\\cdot)$表示总体的分布，$P_O(\\cdot)$表示观测数据的分布.\n\n假设5表明，观测数据（如观测到的用户点击数据）的分布能够代表总体的分布。\n\n## 推荐系统中的选择偏差与混淆偏差\n- 在这一节中，作者将推荐系统中常见的偏差分类为选择偏差和混淆偏差两种。按本文的逻辑，推荐系统中的任何偏差都可以归类为此二者之一。下面给出具体定义\n\n**定义4**（选择偏差，selection bias）. 选择偏差表示观测数据的分布不能代表总体数据的分布，即假设5的违反：\n\n$$\nP(x,t,y)\\neq P_O(x,t,y)\n$$\n\n例1：推荐系统模型倾向于过滤掉低评分商品，只推荐高评分商品给用户。由于从目标用户角度看到的商品分布不能代表总体分布（低评分商品看不见），因此产生了选择偏差，是为**模型选择偏差（model selection bias）**。\n\n例2：用户在打分时，更倾向于给他们喜欢的商品打分，很少给他们不喜欢的商品打分（因此被曝光却未被打分的商品，有可能是本来应该被打低分的商品），因此产生了选择偏差，是为**用户自选择偏差（user self-selection bias）**。\n\n**定义5**（混淆偏差，confounding bias）. 混淆偏差表示由于协变量（同时影响T和Y）的存在，处理操作变量T和结果变量Y存在关联。这通常会导致：\n$$\nE[Y(t)]\\neq E[Y(t)|T=t]\n$$\n\n定义5导致的结果比较绕。个人理解：由全期望公式可得，$E[Y(t)]=E_T[E[Y(t)|T=t]]$，因此可以认为$E[Y(t)]$是处理组的结果期望（所有unit的处理操作值强制设为t），而$E[Y(t)|T=t]$是总体中**被观测到**的处理操作值为$t$的样本的结果期望. 混淆偏差导致**解释变量和被解释变量的相关性不仅包含因果关系，还包含非因果关系。**\n\n例3（经典因果案例）：在一个超市中，啤酒和纸尿裤的销售量是正相关的。但如果提高啤酒的进货量和曝光率，并不能帮助提高纸尿裤的销量——因为存在同时指向二者的协变量（许多青年男性购物时喜欢买啤酒，同时买纸尿裤给家里的婴儿），而非“购买啤酒”与“购买纸尿裤”之间存在因果关系。\n\n## 将本文的因果分析框架应用于推荐任务\n- 在这一节，作者给出了处理操作结果的定义，给出了6个推荐系统场景下的因果分析框架的应用（Section 5.1-5.6），并在 5.7 总结了现有的因果去偏方法论（Causal Debiasing Methodologies）。此博客重点在于处理操作结果的定义（因为后面的案例分析均是该定义的运用），5.1-5.7节可以直接看原文。\n\n**数学符号**.令$u\\in U$表示用户，$i\\in I$表示商品，$D=U\\times I$表示全体用户-商品对的集合，$Y_{u,i}$表示用户-商品对$(u,i)$的结果变量，$T_{u,i}$表示用户-商品对$(u,i)$的处理操作变量，$X_{u,i}$表示用户-商品对$(u,i)$的特征embedding. 则处理操作结果定义如下。\n\n**定义5** 通用处理结果. 对于一般的处理操作变量定义域$T$，该结果定义如下：\n\n$$\n\\mu_t(x) = E[Y(t)|X=x],t\\in T\n$$\n\n**定义6** 二元处理结果. 对于二元处理操作变量定义域$T=\\{0,1\\}$，该结果定义如下：\n\n$$\n\\tau(x) = E[Y(1)-Y(0)|X=x]\n$$\n\n上述处理结果都是上文中提到的推荐系统中十分重要而**因果估计量**，亦即测量目标。\n\n## 因果推荐的未来研究方向\n\n在这一节，作者展望了因果推荐中潜在的有价值的研究方向，亦即可挖的坑。\n\n1. **数据融合（Data Fusion）**. 现实推荐场景中常常包含两类数据：**大型有偏数据集（来自于观测数据）**和**小型无偏数据集（来自于实验）**。这一方向的工作中心在于使用小数据集上的无偏性指导大数据集上的推荐策略，即取长补短、数据融合。\n2. **序列推荐（Sequential Recommendation）**. 这一方向的工作中心在于，将因果分析方法应用于用户购买商品行为序列中（例如购买手机和购买手机壳是否存在因果性），旨在通过此方法捕捉用户兴趣的动态变化，从而实现更加精准的推荐。\n3. **推荐系统的公平性**. 略，相关研究论文很多，可自行阅读（dblp搜索“fairness recommendation”）。\n4. **干扰行为**. 这里常指在用户社交网络中，用户会干扰/影响彼此的购买行为（人云亦云），即对上文中SUTVA假设的违反。现有的因果推荐方法对这一问题研究较少。\n     \n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: decodeURI(window.location.pathname),\n            distractionFreeMode: true // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","source":"_posts/2023-03-19-rs.md","raw":"---\ntitle: 论文概述：因果学习在推荐系统中的新机遇【IJCAI'2022】\nmathjax: true\ncodeblock:\n  enable: true\n  show_result: true\ndate: 2023-03-18 22:42:35\ntags:\ncategories:\n---\n\n推荐系统与因果推断的结合是近几年来一个十分有趣的研究方向。本文提出了一种统一的推荐系统中的因果分析框架，可以将许多经典的推荐系统的研究问题归结到因果推断，并使用后者的理论进行分析。**对个人而言，读这篇论文的收获主要在于了解推荐系统中的常见因果问题，以及因果方法论。**\n<!--more-->\n\n论文链接：[On the Opportunity of Causal Learning in Recommendation Systems: Foundation, Estimation, Prediction and Challenges](https://www.ijcai.org/proceedings/2022/0787.pdf)\n\n**【目录】**\n\n- [研究简介](#研究简介)\n  - [推荐系统中的热点问题](#推荐系统中的热点问题)\n  - [现有的推荐系统+因果推断研究的不足](#现有的推荐系统因果推断研究的不足)\n  - [本文的主要贡献](#本文的主要贡献)\n- [推荐系统中的因果分析框架](#推荐系统中的因果分析框架)\n- [潜在得分、因果估计量](#潜在得分因果估计量)\n- [可恢复性：因果估计量的一致估计](#可恢复性因果估计量的一致估计)\n  - [与可恢复性相关的理论假设](#与可恢复性相关的理论假设)\n- [推荐系统中的选择偏差与混淆偏差](#推荐系统中的选择偏差与混淆偏差)\n- [将本文的因果分析框架应用于推荐任务](#将本文的因果分析框架应用于推荐任务)\n- [因果推荐的未来研究方向](#因果推荐的未来研究方向)\n\n\n## 研究简介\n近年来，基于因果推断的推荐系统 (**RS**) 已经在学术界和工业界得到了广泛关注。然而现有的工作缺乏一个统一的因果分析框架。为此，作者广泛调研了因果推断方法在推荐系统任务中的应用。随后，作者提出了一种新的因果分析框架，通过推荐系统中对于因果分析假设的违反情况归结前者中的问题类型。随后，本文形式化了推荐系统中许多现有的去偏（debiasing）和预测（prediction）任务，并且分别总结了基于统计的和基于机器学习的因果估计方法。\n\n### 推荐系统中的热点问题\n- 下列推荐系统中的研究问题均能归结到因果问题\n1. post-view click-through rate prediction (后视CTR预估)：给定用户历史行为数据，预测其点击商品概率\n2. post-click conversion rate prediction (后点击转化率预估)：给定用户历史点击数据，预测其下单商品概率\n3. uplift modeling（增量预测）：预测用户被展示广告后购买意愿的增量\n\n### 现有的推荐系统+因果推断研究的不足\n**缺乏一个统一的应用于推荐系统的因果分析框架**. 原因：\n1. 现有的RS中的因果方法，缺乏一个清晰的数学形式化表征\n   1. 研究对象是什么\n   2. 研究场景是什么\n   3. 技术点是什么\n   4. 基于什么理论假设\n2. RS数据中十分常见的**偏差(bias)**，缺乏形式化的因果领域的定义\n   1. 对于偏差本身的定义的缺乏，导致现有的**去偏（debiasing）**方面的工作难以在因果推断的框架下作分析\n\n### 本文的主要贡献\n1. 明确了如何定义、重建、估计RS中的**因果估计值(causal estimand)**\n2. 提出了一个基于**潜在得分模型（potential outcome framework，一个经典的因果推断框架）**的因果分析框架，用于将RS中的多种偏差(biases)进行分类和形式化定义\n3. 揭示了RS的去偏方法中蕴含的核心的**理论假设**，并且据此将偏差分为选择偏差（selection bias）和混淆偏差（confounding bias）\n4. 将上述因果分析框架应用于RS中的去偏及预测任务中，总结了基于统计的和基于机器学习的因果估计方法\n5. 讨论并展望了因果推荐的未来的研究方向（挖坑）\n\n## 推荐系统中的因果分析框架\n本文提出的统一的因果分析框架，其工作流程分为三步：\n1. 定义研究问题的因果估计量（明确研究对象）\n2. 讨论给定观测数据时该因果估计量的可恢复性（明确能否找到该对象的真实值）\n3. 建立模型，获得该统计量的**一致估计**（一致估计：总能获得与真实（但不可见）值相同的估计结果）\n   \n该框架如下图所示。\n\n![RS中的因果分析框架](https://pic4.zhimg.com/80/v2-071abd747c9407653a2061e2af1df079.jpg)\n\n## 潜在得分、因果估计量\n本文中使用的概念与数学符号：\n- unit（单元）: 因果推断中不可分的基本对象. 在RS中，一个unit可以是一个用户、一个商品，或者一个<用户，商品>的组合\n- $T$: 处理操作(treatment)\n- $Y$: 结果变量(outcome)，指处理操作产生的效果\n- $X$: unit的属性或者特征向量(feature embedding)\n\n---\n\n**定义1**（潜在得分）. 潜在得分$Y(t), t\\in T$是指当处理操作$T$被设为$t$后，结果变量的观测值.\n\n---\n\n**假设1**（稳定单元处理值假设，**SUTVA**）. a. 处理操作只有一个版本，且尤其产生的处理组和对应的对照组有且只有一个版本. b. 一个unit的潜在得分不受其他任何unit的处理操作影响\n\n---\n\n需要注意，**SUTVA的成立是潜在得分的良定义的必要条件**。然而SUTVA的两项，在RS均有可能被违反：\n1. RS中的位置偏差(position bias)违反了SUTVA(a): 假设unit=<用户u，商品i>，t=1表示商品被曝光，t=0表示商品不被曝光。则点击行为$Y_{u,i}(t)$不仅依赖于处理操作$T=t$，还依赖于商品被曝光时的**位置**。曝光位置越靠前，点击率越高。\n2. RS中的从众偏差(conformity bias)违反了SUTVA(b): 由于群组(group)中用户间的社交的存在，用户很可能对商品作出与其他组内用户相似的评价（人云亦云），即一个用户的评价值（潜在得分）会影响另一个用户的评价值（潜在得分）\n\n## 可恢复性：因果估计量的一致估计\n\n---\n\n**定义2**（因果估计量）. 因果估计量是处理操作、单元的特征、潜在得分的联合分布的函数，为从数据中解答研究问题提供充组的帮助\n\n---\n\n需要注意的是，因果估计量的定义是与被真实收集到的数据以及RS模型无关的。个人理解，因果估计量即因果角度的“用户兴趣”。因果估计量可以看作一种随机变量，是可以被估计的。从因果角度，我们感兴趣的是它是否能被**恢复**。后者的定义如下：\n\n---\n\n**定义3**（因果估计量的可恢复性）：给定数据生成过程的所有假设，以及处理操作、单元的特征、潜在得分的联合分布。则称因果估计量$Q$是可估计的，如果存在一个能够从所有的严格正的观测数据分布中计算它的一致估计的过程。\n\n---\n\n简而言之，如果因果估计量能够被一致估计，那么它就是可恢复的。\n\n### 与可恢复性相关的理论假设\n\n**假设2**（结果变量的一致性）. $Y(t)=\\sum_{t*\\in T}I(t*=t)Y$，对于任意$t\\in T$成立。\n\n简而言之，对于任意一个单元$m$，处理操作$t\\in T$总能产生相同的结果，即处理操作对于每个单元产生的结果是一致的\n\n**假设3**（处理操作的正可能性）$P(T=t|X=x)>0$对于任意$t,x$成立.\n\n简而言之，无论对于哪种用户，任何处理操作都有可能发生. 在RS中，曝光偏差(exposure bias)违反了这一假设：一个用户只被曝光了一部分特定的商品，因此剩下的商品的处理操作的概率为0，违反了该假设。\n\n**假设4**（条件可交换性）.$Y(t)\\bot T | X$ 对于任意 $t\\in T$成立.\n\n该假设表明，X阻断了所有T和Y之间的后门路径（如果删去用户特征X，则处理操作与结果变量是相互独立的）。\n\n**假设5**（随机采样）. $P(x,t,y)=P_O(x,t,y)$，其中$P(\\cdot)$表示总体的分布，$P_O(\\cdot)$表示观测数据的分布.\n\n假设5表明，观测数据（如观测到的用户点击数据）的分布能够代表总体的分布。\n\n## 推荐系统中的选择偏差与混淆偏差\n- 在这一节中，作者将推荐系统中常见的偏差分类为选择偏差和混淆偏差两种。按本文的逻辑，推荐系统中的任何偏差都可以归类为此二者之一。下面给出具体定义\n\n**定义4**（选择偏差，selection bias）. 选择偏差表示观测数据的分布不能代表总体数据的分布，即假设5的违反：\n\n$$\nP(x,t,y)\\neq P_O(x,t,y)\n$$\n\n例1：推荐系统模型倾向于过滤掉低评分商品，只推荐高评分商品给用户。由于从目标用户角度看到的商品分布不能代表总体分布（低评分商品看不见），因此产生了选择偏差，是为**模型选择偏差（model selection bias）**。\n\n例2：用户在打分时，更倾向于给他们喜欢的商品打分，很少给他们不喜欢的商品打分（因此被曝光却未被打分的商品，有可能是本来应该被打低分的商品），因此产生了选择偏差，是为**用户自选择偏差（user self-selection bias）**。\n\n**定义5**（混淆偏差，confounding bias）. 混淆偏差表示由于协变量（同时影响T和Y）的存在，处理操作变量T和结果变量Y存在关联。这通常会导致：\n$$\nE[Y(t)]\\neq E[Y(t)|T=t]\n$$\n\n定义5导致的结果比较绕。个人理解：由全期望公式可得，$E[Y(t)]=E_T[E[Y(t)|T=t]]$，因此可以认为$E[Y(t)]$是处理组的结果期望（所有unit的处理操作值强制设为t），而$E[Y(t)|T=t]$是总体中**被观测到**的处理操作值为$t$的样本的结果期望. 混淆偏差导致**解释变量和被解释变量的相关性不仅包含因果关系，还包含非因果关系。**\n\n例3（经典因果案例）：在一个超市中，啤酒和纸尿裤的销售量是正相关的。但如果提高啤酒的进货量和曝光率，并不能帮助提高纸尿裤的销量——因为存在同时指向二者的协变量（许多青年男性购物时喜欢买啤酒，同时买纸尿裤给家里的婴儿），而非“购买啤酒”与“购买纸尿裤”之间存在因果关系。\n\n## 将本文的因果分析框架应用于推荐任务\n- 在这一节，作者给出了处理操作结果的定义，给出了6个推荐系统场景下的因果分析框架的应用（Section 5.1-5.6），并在 5.7 总结了现有的因果去偏方法论（Causal Debiasing Methodologies）。此博客重点在于处理操作结果的定义（因为后面的案例分析均是该定义的运用），5.1-5.7节可以直接看原文。\n\n**数学符号**.令$u\\in U$表示用户，$i\\in I$表示商品，$D=U\\times I$表示全体用户-商品对的集合，$Y_{u,i}$表示用户-商品对$(u,i)$的结果变量，$T_{u,i}$表示用户-商品对$(u,i)$的处理操作变量，$X_{u,i}$表示用户-商品对$(u,i)$的特征embedding. 则处理操作结果定义如下。\n\n**定义5** 通用处理结果. 对于一般的处理操作变量定义域$T$，该结果定义如下：\n\n$$\n\\mu_t(x) = E[Y(t)|X=x],t\\in T\n$$\n\n**定义6** 二元处理结果. 对于二元处理操作变量定义域$T=\\{0,1\\}$，该结果定义如下：\n\n$$\n\\tau(x) = E[Y(1)-Y(0)|X=x]\n$$\n\n上述处理结果都是上文中提到的推荐系统中十分重要而**因果估计量**，亦即测量目标。\n\n## 因果推荐的未来研究方向\n\n在这一节，作者展望了因果推荐中潜在的有价值的研究方向，亦即可挖的坑。\n\n1. **数据融合（Data Fusion）**. 现实推荐场景中常常包含两类数据：**大型有偏数据集（来自于观测数据）**和**小型无偏数据集（来自于实验）**。这一方向的工作中心在于使用小数据集上的无偏性指导大数据集上的推荐策略，即取长补短、数据融合。\n2. **序列推荐（Sequential Recommendation）**. 这一方向的工作中心在于，将因果分析方法应用于用户购买商品行为序列中（例如购买手机和购买手机壳是否存在因果性），旨在通过此方法捕捉用户兴趣的动态变化，从而实现更加精准的推荐。\n3. **推荐系统的公平性**. 略，相关研究论文很多，可自行阅读（dblp搜索“fairness recommendation”）。\n4. **干扰行为**. 这里常指在用户社交网络中，用户会干扰/影响彼此的购买行为（人云亦云），即对上文中SUTVA假设的违反。现有的因果推荐方法对这一问题研究较少。\n     \n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: decodeURI(window.location.pathname),\n            distractionFreeMode: true // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","slug":"2023-03-19-rs","published":1,"updated":"2023-03-21T08:32:36.628Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cludw9na2002k9wv9917a6tfg","content":"<p>推荐系统与因果推断的结合是近几年来一个十分有趣的研究方向。本文提出了一种统一的推荐系统中的因果分析框架，可以将许多经典的推荐系统的研究问题归结到因果推断，并使用后者的理论进行分析。<strong>对个人而言，读这篇论文的收获主要在于了解推荐系统中的常见因果问题，以及因果方法论。</strong><br><span id=\"more\"></span></p>\n<p>论文链接：<a href=\"https://www.ijcai.org/proceedings/2022/0787.pdf\">On the Opportunity of Causal Learning in Recommendation Systems: Foundation, Estimation, Prediction and Challenges</a></p>\n<p><strong>【目录】</strong></p>\n<ul>\n<li><a href=\"#研究简介\">研究简介</a><ul>\n<li><a href=\"#推荐系统中的热点问题\">推荐系统中的热点问题</a></li>\n<li><a href=\"#现有的推荐系统因果推断研究的不足\">现有的推荐系统+因果推断研究的不足</a></li>\n<li><a href=\"#本文的主要贡献\">本文的主要贡献</a></li>\n</ul>\n</li>\n<li><a href=\"#推荐系统中的因果分析框架\">推荐系统中的因果分析框架</a></li>\n<li><a href=\"#潜在得分因果估计量\">潜在得分、因果估计量</a></li>\n<li><a href=\"#可恢复性因果估计量的一致估计\">可恢复性：因果估计量的一致估计</a><ul>\n<li><a href=\"#与可恢复性相关的理论假设\">与可恢复性相关的理论假设</a></li>\n</ul>\n</li>\n<li><a href=\"#推荐系统中的选择偏差与混淆偏差\">推荐系统中的选择偏差与混淆偏差</a></li>\n<li><a href=\"#将本文的因果分析框架应用于推荐任务\">将本文的因果分析框架应用于推荐任务</a></li>\n<li><a href=\"#因果推荐的未来研究方向\">因果推荐的未来研究方向</a></li>\n</ul>\n<h2 id=\"研究简介\"><a href=\"#研究简介\" class=\"headerlink\" title=\"研究简介\"></a>研究简介</h2><p>近年来，基于因果推断的推荐系统 (<strong>RS</strong>) 已经在学术界和工业界得到了广泛关注。然而现有的工作缺乏一个统一的因果分析框架。为此，作者广泛调研了因果推断方法在推荐系统任务中的应用。随后，作者提出了一种新的因果分析框架，通过推荐系统中对于因果分析假设的违反情况归结前者中的问题类型。随后，本文形式化了推荐系统中许多现有的去偏（debiasing）和预测（prediction）任务，并且分别总结了基于统计的和基于机器学习的因果估计方法。</p>\n<h3 id=\"推荐系统中的热点问题\"><a href=\"#推荐系统中的热点问题\" class=\"headerlink\" title=\"推荐系统中的热点问题\"></a>推荐系统中的热点问题</h3><ul>\n<li>下列推荐系统中的研究问题均能归结到因果问题</li>\n</ul>\n<ol>\n<li>post-view click-through rate prediction (后视CTR预估)：给定用户历史行为数据，预测其点击商品概率</li>\n<li>post-click conversion rate prediction (后点击转化率预估)：给定用户历史点击数据，预测其下单商品概率</li>\n<li>uplift modeling（增量预测）：预测用户被展示广告后购买意愿的增量</li>\n</ol>\n<h3 id=\"现有的推荐系统-因果推断研究的不足\"><a href=\"#现有的推荐系统-因果推断研究的不足\" class=\"headerlink\" title=\"现有的推荐系统+因果推断研究的不足\"></a>现有的推荐系统+因果推断研究的不足</h3><p><strong>缺乏一个统一的应用于推荐系统的因果分析框架</strong>. 原因：</p>\n<ol>\n<li>现有的RS中的因果方法，缺乏一个清晰的数学形式化表征<ol>\n<li>研究对象是什么</li>\n<li>研究场景是什么</li>\n<li>技术点是什么</li>\n<li>基于什么理论假设</li>\n</ol>\n</li>\n<li>RS数据中十分常见的<strong>偏差(bias)</strong>，缺乏形式化的因果领域的定义<ol>\n<li>对于偏差本身的定义的缺乏，导致现有的<strong>去偏（debiasing）</strong>方面的工作难以在因果推断的框架下作分析</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"本文的主要贡献\"><a href=\"#本文的主要贡献\" class=\"headerlink\" title=\"本文的主要贡献\"></a>本文的主要贡献</h3><ol>\n<li>明确了如何定义、重建、估计RS中的<strong>因果估计值(causal estimand)</strong></li>\n<li>提出了一个基于<strong>潜在得分模型（potential outcome framework，一个经典的因果推断框架）</strong>的因果分析框架，用于将RS中的多种偏差(biases)进行分类和形式化定义</li>\n<li>揭示了RS的去偏方法中蕴含的核心的<strong>理论假设</strong>，并且据此将偏差分为选择偏差（selection bias）和混淆偏差（confounding bias）</li>\n<li>将上述因果分析框架应用于RS中的去偏及预测任务中，总结了基于统计的和基于机器学习的因果估计方法</li>\n<li>讨论并展望了因果推荐的未来的研究方向（挖坑）</li>\n</ol>\n<h2 id=\"推荐系统中的因果分析框架\"><a href=\"#推荐系统中的因果分析框架\" class=\"headerlink\" title=\"推荐系统中的因果分析框架\"></a>推荐系统中的因果分析框架</h2><p>本文提出的统一的因果分析框架，其工作流程分为三步：</p>\n<ol>\n<li>定义研究问题的因果估计量（明确研究对象）</li>\n<li>讨论给定观测数据时该因果估计量的可恢复性（明确能否找到该对象的真实值）</li>\n<li>建立模型，获得该统计量的<strong>一致估计</strong>（一致估计：总能获得与真实（但不可见）值相同的估计结果）</li>\n</ol>\n<p>该框架如下图所示。</p>\n<p><img src=\"https://pic4.zhimg.com/80/v2-071abd747c9407653a2061e2af1df079.jpg\" alt=\"RS中的因果分析框架\"></p>\n<h2 id=\"潜在得分、因果估计量\"><a href=\"#潜在得分、因果估计量\" class=\"headerlink\" title=\"潜在得分、因果估计量\"></a>潜在得分、因果估计量</h2><p>本文中使用的概念与数学符号：</p>\n<ul>\n<li>unit（单元）: 因果推断中不可分的基本对象. 在RS中，一个unit可以是一个用户、一个商品，或者一个&lt;用户，商品&gt;的组合</li>\n<li><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.593ex\" height=\"1.532ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -677 704 677\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></g></g></g></svg></mjx-container>: 处理操作(treatment)</li>\n<li><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>: 结果变量(outcome)，指处理操作产生的效果</li>\n<li><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>: unit的属性或者特征向量(feature embedding)</li>\n</ul>\n<hr>\n<p><strong>定义1</strong>（潜在得分）. 潜在得分<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.485ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 4634.2 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(763,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1152,0)\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1513,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1902,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2346.7,0)\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2985.4,0)\"><path data-c=\"2208\" d=\"M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3930.2,0)\"><path data-c=\"1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></g></g></g></svg></mjx-container>是指当处理操作<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.593ex\" height=\"1.532ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -677 704 677\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></g></g></g></svg></mjx-container>被设为<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"0.817ex\" height=\"1.441ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -626 361 637\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path></g></g></g></svg></mjx-container>后，结果变量的观测值.</p>\n<hr>\n<p><strong>假设1</strong>（稳定单元处理值假设，<strong>SUTVA</strong>）. a. 处理操作只有一个版本，且尤其产生的处理组和对应的对照组有且只有一个版本. b. 一个unit的潜在得分不受其他任何unit的处理操作影响</p>\n<hr>\n<p>需要注意，<strong>SUTVA的成立是潜在得分的良定义的必要条件</strong>。然而SUTVA的两项，在RS均有可能被违反：</p>\n<ol>\n<li>RS中的位置偏差(position bias)违反了SUTVA(a): 假设unit=&lt;用户u，商品i&gt;，t=1表示商品被曝光，t=0表示商品不被曝光。则点击行为<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.65ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.991ex\" height=\"2.347ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 2648 1037.2\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"TeXAtom\" transform=\"translate(614,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"1D462\" d=\"M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(572,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(850,0)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g></g><g data-mml-node=\"mo\" transform=\"translate(1509,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1898,0)\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2259,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>不仅依赖于处理操作<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.186ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.427ex\" height=\"1.717ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -677 2398.6 759\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(981.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2037.6,0)\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path></g></g></g></svg></mjx-container>，还依赖于商品被曝光时的<strong>位置</strong>。曝光位置越靠前，点击率越高。</li>\n<li>RS中的从众偏差(conformity bias)违反了SUTVA(b): 由于群组(group)中用户间的社交的存在，用户很可能对商品作出与其他组内用户相似的评价（人云亦云），即一个用户的评价值（潜在得分）会影响另一个用户的评价值（潜在得分）</li>\n</ol>\n<h2 id=\"可恢复性：因果估计量的一致估计\"><a href=\"#可恢复性：因果估计量的一致估计\" class=\"headerlink\" title=\"可恢复性：因果估计量的一致估计\"></a>可恢复性：因果估计量的一致估计</h2><hr>\n<p><strong>定义2</strong>（因果估计量）. 因果估计量是处理操作、单元的特征、潜在得分的联合分布的函数，为从数据中解答研究问题提供充组的帮助</p>\n<hr>\n<p>需要注意的是，因果估计量的定义是与被真实收集到的数据以及RS模型无关的。个人理解，因果估计量即因果角度的“用户兴趣”。因果估计量可以看作一种随机变量，是可以被估计的。从因果角度，我们感兴趣的是它是否能被<strong>恢复</strong>。后者的定义如下：</p>\n<hr>\n<p><strong>定义3</strong>（因果估计量的可恢复性）：给定数据生成过程的所有假设，以及处理操作、单元的特征、潜在得分的联合分布。则称因果估计量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.439ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.79ex\" height=\"2.032ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -704 791 898\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D444\" d=\"M399 -80Q399 -47 400 -30T402 -11V-7L387 -11Q341 -22 303 -22Q208 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435Q740 255 592 107Q529 47 461 16L444 8V3Q444 2 449 -24T470 -66T516 -82Q551 -82 583 -60T625 -3Q631 11 638 11Q647 11 649 2Q649 -6 639 -34T611 -100T557 -165T481 -194Q399 -194 399 -87V-80ZM636 468Q636 523 621 564T580 625T530 655T477 665Q429 665 379 640Q277 591 215 464T153 216Q153 110 207 59Q231 38 236 38V46Q236 86 269 120T347 155Q372 155 390 144T417 114T429 82T435 55L448 64Q512 108 557 185T619 334T636 468ZM314 18Q362 18 404 39L403 49Q399 104 366 115Q354 117 347 117Q344 117 341 117T337 118Q317 118 296 98T274 52Q274 18 314 18Z\"></path></g></g></g></svg></mjx-container>是可估计的，如果存在一个能够从所有的严格正的观测数据分布中计算它的一致估计的过程。</p>\n<hr>\n<p>简而言之，如果因果估计量能够被一致估计，那么它就是可恢复的。</p>\n<h3 id=\"与可恢复性相关的理论假设\"><a href=\"#与可恢复性相关的理论假设\" class=\"headerlink\" title=\"与可恢复性相关的理论假设\"></a>与可恢复性相关的理论假设</h3><p><strong>假设2</strong>（结果变量的一致性）. $Y(t)=\\sum_{t<em>\\in T}I(t</em>=t)Y<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.452ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.181ex\" height=\"2.149ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 4500 950\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><text data-variant=\"italic\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\" font-style=\"italic\">，</text></g><g data-mml-node=\"mi\" transform=\"translate(900,0)\"><text data-variant=\"italic\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\" font-style=\"italic\">对</text></g><g data-mml-node=\"mi\" transform=\"translate(1800,0)\"><text data-variant=\"italic\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\" font-style=\"italic\">于</text></g><g data-mml-node=\"mi\" transform=\"translate(2700,0)\"><text data-variant=\"italic\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\" font-style=\"italic\">任</text></g><g data-mml-node=\"mi\" transform=\"translate(3600,0)\"><text data-variant=\"italic\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\" font-style=\"italic\">意</text></g></g></g></svg></mjx-container>t\\in T$成立。</p>\n<p>简而言之，对于任意一个单元<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.986ex\" height=\"1.025ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 878 453\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45A\" d=\"M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g></g></g></svg></mjx-container>，处理操作<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.09ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.175ex\" height=\"1.622ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -677 2287.6 717\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(638.8,0)\"><path data-c=\"2208\" d=\"M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1583.6,0)\"><path data-c=\"1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></g></g></g></svg></mjx-container>总能产生相同的结果，即处理操作对于每个单元产生的结果是一致的</p>\n<p><strong>假设3</strong>（处理操作的正可能性）<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"19.902ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 8796.7 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(751,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1140,0)\"><path data-c=\"1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2121.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3177.6,0)\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3538.6,0) translate(0 -0.5)\"><path data-c=\"7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3816.6,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4946.3,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(6002.1,0)\"><path data-c=\"1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6574.1,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(7240.9,0)\"><path data-c=\"3E\" d=\"M84 520Q84 528 88 533T96 539L99 540Q106 540 253 471T544 334L687 265Q694 260 694 250T687 235Q685 233 395 96L107 -40H101Q83 -38 83 -20Q83 -19 83 -17Q82 -10 98 -1Q117 9 248 71Q326 108 378 132L626 250L378 368Q90 504 86 509Q84 513 84 520Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(8296.7,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g></g></g></svg></mjx-container>对于任意<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.439ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"3.117ex\" height=\"1.855ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -626 1377.7 820\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(361,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(805.7,0)\"><path data-c=\"1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></g></g></g></svg></mjx-container>成立.</p>\n<p>简而言之，无论对于哪种用户，任何处理操作都有可能发生. 在RS中，曝光偏差(exposure bias)违反了这一假设：一个用户只被曝光了一部分特定的商品，因此剩下的商品的处理操作的概率为0，违反了该假设。</p>\n<p><strong>假设4</strong>（条件可交换性）.<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.213ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 4514 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(763,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1152,0)\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1513,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1902,0)\"><path data-c=\"22A5\" d=\"M369 652Q369 653 370 655T372 658T375 662T379 665T384 667T391 668Q402 666 409 653V40H708Q723 32 723 20T708 0H71Q70 0 67 2T59 9T55 20T59 31T66 38T71 40H369V652Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2680,0)\"><path data-c=\"1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3384,0) translate(0 -0.5)\"><path data-c=\"7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3662,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container> 对于任意 <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.09ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.175ex\" height=\"1.622ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -677 2287.6 717\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(638.8,0)\"><path data-c=\"2208\" d=\"M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1583.6,0)\"><path data-c=\"1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></g></g></g></svg></mjx-container>成立.</p>\n<p>该假设表明，X阻断了所有T和Y之间的后门路径（如果删去用户特征X，则处理操作与结果变量是相互独立的）。</p>\n<p><strong>假设5</strong>（随机采样）. <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"21.561ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 9529.7 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(751,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1140,0)\"><path data-c=\"1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1712,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2156.7,0)\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2517.7,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2962.3,0)\"><path data-c=\"1D466\" d=\"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3452.3,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4119.1,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(5174.9,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(675,-150) scale(0.707)\"><path data-c=\"1D442\" d=\"M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(6439.4,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(6828.4,0)\"><path data-c=\"1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(7400.4,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(7845.1,0)\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(8206.1,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(8650.7,0)\"><path data-c=\"1D466\" d=\"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(9140.7,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>，其中<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.088ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 1807 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(751,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1140,0)\"><path data-c=\"22C5\" d=\"M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1418,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>表示总体的分布，<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.25ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 2320.5 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(675,-150) scale(0.707)\"><path data-c=\"1D442\" d=\"M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(1264.5,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1653.5,0)\"><path data-c=\"22C5\" d=\"M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1931.5,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>表示观测数据的分布.</p>\n<p>假设5表明，观测数据（如观测到的用户点击数据）的分布能够代表总体的分布。</p>\n<h2 id=\"推荐系统中的选择偏差与混淆偏差\"><a href=\"#推荐系统中的选择偏差与混淆偏差\" class=\"headerlink\" title=\"推荐系统中的选择偏差与混淆偏差\"></a>推荐系统中的选择偏差与混淆偏差</h2><ul>\n<li>在这一节中，作者将推荐系统中常见的偏差分类为选择偏差和混淆偏差两种。按本文的逻辑，推荐系统中的任何偏差都可以归类为此二者之一。下面给出具体定义</li>\n</ul>\n<p><strong>定义4</strong>（选择偏差，selection bias）. 选择偏差表示观测数据的分布不能代表总体数据的分布，即假设5的违反：</p>\n<script type=\"math/tex; mode=display\">\nP(x,t,y)\\neq P_O(x,t,y)</script><p>例1：推荐系统模型倾向于过滤掉低评分商品，只推荐高评分商品给用户。由于从目标用户角度看到的商品分布不能代表总体分布（低评分商品看不见），因此产生了选择偏差，是为<strong>模型选择偏差（model selection bias）</strong>。</p>\n<p>例2：用户在打分时，更倾向于给他们喜欢的商品打分，很少给他们不喜欢的商品打分（因此被曝光却未被打分的商品，有可能是本来应该被打低分的商品），因此产生了选择偏差，是为<strong>用户自选择偏差（user self-selection bias）</strong>。</p>\n<p><strong>定义5</strong>（混淆偏差，confounding bias）. 混淆偏差表示由于协变量（同时影响T和Y）的存在，处理操作变量T和结果变量Y存在关联。这通常会导致：</p>\n<script type=\"math/tex; mode=display\">\nE[Y(t)]\\neq E[Y(t)|T=t]</script><p>定义5导致的结果比较绕。个人理解：由全期望公式可得，<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"27.893ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 12328.9 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(764,0)\"><path data-c=\"5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1042,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1805,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2194,0)\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2555,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2944,0)\"><path data-c=\"5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3499.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(4555.6,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(771,-150) scale(0.707)\"><path data-c=\"1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(5874.4,0)\"><path data-c=\"5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(6152.4,0)\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6916.4,0)\"><path data-c=\"5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(7194.4,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(7957.4,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(8346.4,0)\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(8707.4,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(9096.4,0) translate(0 -0.5)\"><path data-c=\"7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(9374.4,0)\"><path data-c=\"1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(10356.1,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(11411.9,0)\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(11772.9,0)\"><path data-c=\"5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(12050.9,0)\"><path data-c=\"5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"></path></g></g></g></svg></mjx-container>，因此可以认为<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"7.29ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 3222 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(764,0)\"><path data-c=\"5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1042,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1805,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2194,0)\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2555,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2944,0)\"><path data-c=\"5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"></path></g></g></g></svg></mjx-container>是处理组的结果期望（所有unit的处理操作值强制设为t），而<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"13.345ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 5898.6 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(764,0)\"><path data-c=\"5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1042,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1805,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2194,0)\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2555,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2944,0) translate(0 -0.5)\"><path data-c=\"7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3222,0)\"><path data-c=\"1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4203.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(5259.6,0)\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(5620.6,0)\"><path data-c=\"5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"></path></g></g></g></svg></mjx-container>是总体中<strong>被观测到</strong>的处理操作值为<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"0.817ex\" height=\"1.441ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -626 361 637\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path></g></g></g></svg></mjx-container>的样本的结果期望. 混淆偏差导致<strong>解释变量和被解释变量的相关性不仅包含因果关系，还包含非因果关系。</strong></p>\n<p>例3（经典因果案例）：在一个超市中，啤酒和纸尿裤的销售量是正相关的。但如果提高啤酒的进货量和曝光率，并不能帮助提高纸尿裤的销量——因为存在同时指向二者的协变量（许多青年男性购物时喜欢买啤酒，同时买纸尿裤给家里的婴儿），而非“购买啤酒”与“购买纸尿裤”之间存在因果关系。</p>\n<h2 id=\"将本文的因果分析框架应用于推荐任务\"><a href=\"#将本文的因果分析框架应用于推荐任务\" class=\"headerlink\" title=\"将本文的因果分析框架应用于推荐任务\"></a>将本文的因果分析框架应用于推荐任务</h2><ul>\n<li>在这一节，作者给出了处理操作结果的定义，给出了6个推荐系统场景下的因果分析框架的应用（Section 5.1-5.6），并在 5.7 总结了现有的因果去偏方法论（Causal Debiasing Methodologies）。此博客重点在于处理操作结果的定义（因为后面的案例分析均是该定义的运用），5.1-5.7节可以直接看原文。</li>\n</ul>\n<p><strong>数学符号</strong>.令<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.09ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.795ex\" height=\"1.636ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 2561.6 723\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D462\" d=\"M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(849.8,0)\"><path data-c=\"2208\" d=\"M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1794.6,0)\"><path data-c=\"1D448\" d=\"M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z\"></path></g></g></g></svg></mjx-container>表示用户，<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.09ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.687ex\" height=\"1.636ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 2071.6 723\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(622.8,0)\"><path data-c=\"2208\" d=\"M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1567.6,0)\"><path data-c=\"1D43C\" d=\"M43 1Q26 1 26 10Q26 12 29 24Q34 43 39 45Q42 46 54 46H60Q120 46 136 53Q137 53 138 54Q143 56 149 77T198 273Q210 318 216 344Q286 624 286 626Q284 630 284 631Q274 637 213 637H193Q184 643 189 662Q193 677 195 680T209 683H213Q285 681 359 681Q481 681 487 683H497Q504 676 504 672T501 655T494 639Q491 637 471 637Q440 637 407 634Q393 631 388 623Q381 609 337 432Q326 385 315 341Q245 65 245 59Q245 52 255 50T307 46H339Q345 38 345 37T342 19Q338 6 332 0H316Q279 2 179 2Q143 2 113 2T65 2T43 1Z\"></path></g></g></g></svg></mjx-container>表示商品，<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.186ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.532ex\" height=\"1.731ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 4655 765\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D437\" d=\"M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1105.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2161.6,0)\"><path data-c=\"1D448\" d=\"M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3150.8,0)\"><path data-c=\"D7\" d=\"M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4151,0)\"><path data-c=\"1D43C\" d=\"M43 1Q26 1 26 10Q26 12 29 24Q34 43 39 45Q42 46 54 46H60Q120 46 136 53Q137 53 138 54Q143 56 149 77T198 273Q210 318 216 344Q286 624 286 626Q284 630 284 631Q274 637 213 637H193Q184 643 189 662Q193 677 195 680T209 683H213Q285 681 359 681Q481 681 487 683H497Q504 676 504 672T501 655T494 639Q491 637 471 637Q440 637 407 634Q393 631 388 623Q381 609 337 432Q326 385 315 341Q245 65 245 59Q245 52 255 50T307 46H339Q345 38 345 37T342 19Q338 6 332 0H316Q279 2 179 2Q143 2 113 2T65 2T43 1Z\"></path></g></g></g></svg></mjx-container>表示全体用户-商品对的集合，<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.65ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"3.414ex\" height=\"2.195ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 1509 970.2\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"TeXAtom\" transform=\"translate(614,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"1D462\" d=\"M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(572,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(850,0)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g></g></g></g></svg></mjx-container>表示用户-商品对<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.841ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 2139.7 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(389,0)\"><path data-c=\"1D462\" d=\"M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(961,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1405.7,0)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1750.7,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>的结果变量，<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.65ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"3.421ex\" height=\"2.181ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -677 1512 964.2\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></g><g data-mml-node=\"TeXAtom\" transform=\"translate(617,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"1D462\" d=\"M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(572,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(850,0)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g></g></g></g></svg></mjx-container>表示用户-商品对<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.841ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 2139.7 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(389,0)\"><path data-c=\"1D462\" d=\"M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(961,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1405.7,0)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1750.7,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>的处理操作变量，<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.65ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"3.973ex\" height=\"2.195ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 1756 970.2\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"TeXAtom\" transform=\"translate(861,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"1D462\" d=\"M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(572,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(850,0)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g></g></g></g></svg></mjx-container>表示用户-商品对<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.841ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 2139.7 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(389,0)\"><path data-c=\"1D462\" d=\"M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(961,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1405.7,0)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1750.7,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>的特征embedding. 则处理操作结果定义如下。</p>\n<p><strong>定义5</strong> 通用处理结果. 对于一般的处理操作变量定义域<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.593ex\" height=\"1.532ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -677 704 677\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></g></g></g></svg></mjx-container>，该结果定义如下：</p>\n<script type=\"math/tex; mode=display\">\n\\mu_t(x) = E[Y(t)|X=x],t\\in T</script><p><strong>定义6</strong> 二元处理结果. 对于二元处理操作变量定义域<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.141ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 4482.2 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(981.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2037.6,0)\"><path data-c=\"7B\" d=\"M434 -231Q434 -244 428 -250H410Q281 -250 230 -184Q225 -177 222 -172T217 -161T213 -148T211 -133T210 -111T209 -84T209 -47T209 0Q209 21 209 53Q208 142 204 153Q203 154 203 155Q189 191 153 211T82 231Q71 231 68 234T65 250T68 266T82 269Q116 269 152 289T203 345Q208 356 208 377T209 529V579Q209 634 215 656T244 698Q270 724 324 740Q361 748 377 749Q379 749 390 749T408 750H428Q434 744 434 732Q434 719 431 716Q429 713 415 713Q362 710 332 689T296 647Q291 634 291 499V417Q291 370 288 353T271 314Q240 271 184 255L170 250L184 245Q202 239 220 230T262 196T290 137Q291 131 291 1Q291 -134 296 -147Q306 -174 339 -192T415 -213Q429 -213 431 -216Q434 -219 434 -231Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(2537.6,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3037.6,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(3482.2,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3982.2,0)\"><path data-c=\"7D\" d=\"M65 731Q65 745 68 747T88 750Q171 750 216 725T279 670Q288 649 289 635T291 501Q292 362 293 357Q306 312 345 291T417 269Q428 269 431 266T434 250T431 234T417 231Q380 231 345 210T298 157Q293 143 292 121T291 -28V-79Q291 -134 285 -156T256 -198Q202 -250 89 -250Q71 -250 68 -247T65 -230Q65 -224 65 -223T66 -218T69 -214T77 -213Q91 -213 108 -210T146 -200T183 -177T207 -139Q208 -134 209 3L210 139Q223 196 280 230Q315 247 330 250Q305 257 280 270Q225 304 212 352L210 362L209 498Q208 635 207 640Q195 680 154 696T77 713Q68 713 67 716T65 731Z\"></path></g></g></g></svg></mjx-container>，该结果定义如下：</p>\n<script type=\"math/tex; mode=display\">\n\\tau(x) = E[Y(1)-Y(0)|X=x]</script><p>上述处理结果都是上文中提到的推荐系统中十分重要而<strong>因果估计量</strong>，亦即测量目标。</p>\n<h2 id=\"因果推荐的未来研究方向\"><a href=\"#因果推荐的未来研究方向\" class=\"headerlink\" title=\"因果推荐的未来研究方向\"></a>因果推荐的未来研究方向</h2><p>在这一节，作者展望了因果推荐中潜在的有价值的研究方向，亦即可挖的坑。</p>\n<ol>\n<li><strong>数据融合（Data Fusion）</strong>. 现实推荐场景中常常包含两类数据：<strong>大型有偏数据集（来自于观测数据）</strong>和<strong>小型无偏数据集（来自于实验）</strong>。这一方向的工作中心在于使用小数据集上的无偏性指导大数据集上的推荐策略，即取长补短、数据融合。</li>\n<li><strong>序列推荐（Sequential Recommendation）</strong>. 这一方向的工作中心在于，将因果分析方法应用于用户购买商品行为序列中（例如购买手机和购买手机壳是否存在因果性），旨在通过此方法捕捉用户兴趣的动态变化，从而实现更加精准的推荐。</li>\n<li><strong>推荐系统的公平性</strong>. 略，相关研究论文很多，可自行阅读（dblp搜索“fairness recommendation”）。</li>\n<li><strong>干扰行为</strong>. 这里常指在用户社交网络中，用户会干扰/影响彼此的购买行为（人云亦云），即对上文中SUTVA假设的违反。现有的因果推荐方法对这一问题研究较少。</li>\n</ol>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: decodeURI(window.location.pathname),\n            distractionFreeMode: true // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","site":{"data":{}},"length":4843,"excerpt":"<p>推荐系统与因果推断的结合是近几年来一个十分有趣的研究方向。本文提出了一种统一的推荐系统中的因果分析框架，可以将许多经典的推荐系统的研究问题归结到因果推断，并使用后者的理论进行分析。<strong>对个人而言，读这篇论文的收获主要在于了解推荐系统中的常见因果问题，以及因果方法论。</strong><br>","more":"</p>\n<p>论文链接：<a href=\"https://www.ijcai.org/proceedings/2022/0787.pdf\">On the Opportunity of Causal Learning in Recommendation Systems: Foundation, Estimation, Prediction and Challenges</a></p>\n<p><strong>【目录】</strong></p>\n<ul>\n<li><a href=\"#研究简介\">研究简介</a><ul>\n<li><a href=\"#推荐系统中的热点问题\">推荐系统中的热点问题</a></li>\n<li><a href=\"#现有的推荐系统因果推断研究的不足\">现有的推荐系统+因果推断研究的不足</a></li>\n<li><a href=\"#本文的主要贡献\">本文的主要贡献</a></li>\n</ul>\n</li>\n<li><a href=\"#推荐系统中的因果分析框架\">推荐系统中的因果分析框架</a></li>\n<li><a href=\"#潜在得分因果估计量\">潜在得分、因果估计量</a></li>\n<li><a href=\"#可恢复性因果估计量的一致估计\">可恢复性：因果估计量的一致估计</a><ul>\n<li><a href=\"#与可恢复性相关的理论假设\">与可恢复性相关的理论假设</a></li>\n</ul>\n</li>\n<li><a href=\"#推荐系统中的选择偏差与混淆偏差\">推荐系统中的选择偏差与混淆偏差</a></li>\n<li><a href=\"#将本文的因果分析框架应用于推荐任务\">将本文的因果分析框架应用于推荐任务</a></li>\n<li><a href=\"#因果推荐的未来研究方向\">因果推荐的未来研究方向</a></li>\n</ul>\n<h2 id=\"研究简介\"><a href=\"#研究简介\" class=\"headerlink\" title=\"研究简介\"></a>研究简介</h2><p>近年来，基于因果推断的推荐系统 (<strong>RS</strong>) 已经在学术界和工业界得到了广泛关注。然而现有的工作缺乏一个统一的因果分析框架。为此，作者广泛调研了因果推断方法在推荐系统任务中的应用。随后，作者提出了一种新的因果分析框架，通过推荐系统中对于因果分析假设的违反情况归结前者中的问题类型。随后，本文形式化了推荐系统中许多现有的去偏（debiasing）和预测（prediction）任务，并且分别总结了基于统计的和基于机器学习的因果估计方法。</p>\n<h3 id=\"推荐系统中的热点问题\"><a href=\"#推荐系统中的热点问题\" class=\"headerlink\" title=\"推荐系统中的热点问题\"></a>推荐系统中的热点问题</h3><ul>\n<li>下列推荐系统中的研究问题均能归结到因果问题</li>\n</ul>\n<ol>\n<li>post-view click-through rate prediction (后视CTR预估)：给定用户历史行为数据，预测其点击商品概率</li>\n<li>post-click conversion rate prediction (后点击转化率预估)：给定用户历史点击数据，预测其下单商品概率</li>\n<li>uplift modeling（增量预测）：预测用户被展示广告后购买意愿的增量</li>\n</ol>\n<h3 id=\"现有的推荐系统-因果推断研究的不足\"><a href=\"#现有的推荐系统-因果推断研究的不足\" class=\"headerlink\" title=\"现有的推荐系统+因果推断研究的不足\"></a>现有的推荐系统+因果推断研究的不足</h3><p><strong>缺乏一个统一的应用于推荐系统的因果分析框架</strong>. 原因：</p>\n<ol>\n<li>现有的RS中的因果方法，缺乏一个清晰的数学形式化表征<ol>\n<li>研究对象是什么</li>\n<li>研究场景是什么</li>\n<li>技术点是什么</li>\n<li>基于什么理论假设</li>\n</ol>\n</li>\n<li>RS数据中十分常见的<strong>偏差(bias)</strong>，缺乏形式化的因果领域的定义<ol>\n<li>对于偏差本身的定义的缺乏，导致现有的<strong>去偏（debiasing）</strong>方面的工作难以在因果推断的框架下作分析</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"本文的主要贡献\"><a href=\"#本文的主要贡献\" class=\"headerlink\" title=\"本文的主要贡献\"></a>本文的主要贡献</h3><ol>\n<li>明确了如何定义、重建、估计RS中的<strong>因果估计值(causal estimand)</strong></li>\n<li>提出了一个基于<strong>潜在得分模型（potential outcome framework，一个经典的因果推断框架）</strong>的因果分析框架，用于将RS中的多种偏差(biases)进行分类和形式化定义</li>\n<li>揭示了RS的去偏方法中蕴含的核心的<strong>理论假设</strong>，并且据此将偏差分为选择偏差（selection bias）和混淆偏差（confounding bias）</li>\n<li>将上述因果分析框架应用于RS中的去偏及预测任务中，总结了基于统计的和基于机器学习的因果估计方法</li>\n<li>讨论并展望了因果推荐的未来的研究方向（挖坑）</li>\n</ol>\n<h2 id=\"推荐系统中的因果分析框架\"><a href=\"#推荐系统中的因果分析框架\" class=\"headerlink\" title=\"推荐系统中的因果分析框架\"></a>推荐系统中的因果分析框架</h2><p>本文提出的统一的因果分析框架，其工作流程分为三步：</p>\n<ol>\n<li>定义研究问题的因果估计量（明确研究对象）</li>\n<li>讨论给定观测数据时该因果估计量的可恢复性（明确能否找到该对象的真实值）</li>\n<li>建立模型，获得该统计量的<strong>一致估计</strong>（一致估计：总能获得与真实（但不可见）值相同的估计结果）</li>\n</ol>\n<p>该框架如下图所示。</p>\n<p><img src=\"https://pic4.zhimg.com/80/v2-071abd747c9407653a2061e2af1df079.jpg\" alt=\"RS中的因果分析框架\"></p>\n<h2 id=\"潜在得分、因果估计量\"><a href=\"#潜在得分、因果估计量\" class=\"headerlink\" title=\"潜在得分、因果估计量\"></a>潜在得分、因果估计量</h2><p>本文中使用的概念与数学符号：</p>\n<ul>\n<li>unit（单元）: 因果推断中不可分的基本对象. 在RS中，一个unit可以是一个用户、一个商品，或者一个&lt;用户，商品&gt;的组合</li>\n<li><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.593ex\" height=\"1.532ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -677 704 677\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></g></g></g></svg></mjx-container>: 处理操作(treatment)</li>\n<li><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>: 结果变量(outcome)，指处理操作产生的效果</li>\n<li><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>: unit的属性或者特征向量(feature embedding)</li>\n</ul>\n<hr>\n<p><strong>定义1</strong>（潜在得分）. 潜在得分<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.485ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 4634.2 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(763,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1152,0)\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1513,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1902,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2346.7,0)\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2985.4,0)\"><path data-c=\"2208\" d=\"M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3930.2,0)\"><path data-c=\"1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></g></g></g></svg></mjx-container>是指当处理操作<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.593ex\" height=\"1.532ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -677 704 677\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></g></g></g></svg></mjx-container>被设为<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"0.817ex\" height=\"1.441ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -626 361 637\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path></g></g></g></svg></mjx-container>后，结果变量的观测值.</p>\n<hr>\n<p><strong>假设1</strong>（稳定单元处理值假设，<strong>SUTVA</strong>）. a. 处理操作只有一个版本，且尤其产生的处理组和对应的对照组有且只有一个版本. b. 一个unit的潜在得分不受其他任何unit的处理操作影响</p>\n<hr>\n<p>需要注意，<strong>SUTVA的成立是潜在得分的良定义的必要条件</strong>。然而SUTVA的两项，在RS均有可能被违反：</p>\n<ol>\n<li>RS中的位置偏差(position bias)违反了SUTVA(a): 假设unit=&lt;用户u，商品i&gt;，t=1表示商品被曝光，t=0表示商品不被曝光。则点击行为<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.65ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.991ex\" height=\"2.347ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 2648 1037.2\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"TeXAtom\" transform=\"translate(614,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"1D462\" d=\"M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(572,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(850,0)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g></g><g data-mml-node=\"mo\" transform=\"translate(1509,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1898,0)\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2259,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>不仅依赖于处理操作<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.186ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.427ex\" height=\"1.717ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -677 2398.6 759\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(981.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2037.6,0)\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path></g></g></g></svg></mjx-container>，还依赖于商品被曝光时的<strong>位置</strong>。曝光位置越靠前，点击率越高。</li>\n<li>RS中的从众偏差(conformity bias)违反了SUTVA(b): 由于群组(group)中用户间的社交的存在，用户很可能对商品作出与其他组内用户相似的评价（人云亦云），即一个用户的评价值（潜在得分）会影响另一个用户的评价值（潜在得分）</li>\n</ol>\n<h2 id=\"可恢复性：因果估计量的一致估计\"><a href=\"#可恢复性：因果估计量的一致估计\" class=\"headerlink\" title=\"可恢复性：因果估计量的一致估计\"></a>可恢复性：因果估计量的一致估计</h2><hr>\n<p><strong>定义2</strong>（因果估计量）. 因果估计量是处理操作、单元的特征、潜在得分的联合分布的函数，为从数据中解答研究问题提供充组的帮助</p>\n<hr>\n<p>需要注意的是，因果估计量的定义是与被真实收集到的数据以及RS模型无关的。个人理解，因果估计量即因果角度的“用户兴趣”。因果估计量可以看作一种随机变量，是可以被估计的。从因果角度，我们感兴趣的是它是否能被<strong>恢复</strong>。后者的定义如下：</p>\n<hr>\n<p><strong>定义3</strong>（因果估计量的可恢复性）：给定数据生成过程的所有假设，以及处理操作、单元的特征、潜在得分的联合分布。则称因果估计量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.439ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.79ex\" height=\"2.032ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -704 791 898\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D444\" d=\"M399 -80Q399 -47 400 -30T402 -11V-7L387 -11Q341 -22 303 -22Q208 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435Q740 255 592 107Q529 47 461 16L444 8V3Q444 2 449 -24T470 -66T516 -82Q551 -82 583 -60T625 -3Q631 11 638 11Q647 11 649 2Q649 -6 639 -34T611 -100T557 -165T481 -194Q399 -194 399 -87V-80ZM636 468Q636 523 621 564T580 625T530 655T477 665Q429 665 379 640Q277 591 215 464T153 216Q153 110 207 59Q231 38 236 38V46Q236 86 269 120T347 155Q372 155 390 144T417 114T429 82T435 55L448 64Q512 108 557 185T619 334T636 468ZM314 18Q362 18 404 39L403 49Q399 104 366 115Q354 117 347 117Q344 117 341 117T337 118Q317 118 296 98T274 52Q274 18 314 18Z\"></path></g></g></g></svg></mjx-container>是可估计的，如果存在一个能够从所有的严格正的观测数据分布中计算它的一致估计的过程。</p>\n<hr>\n<p>简而言之，如果因果估计量能够被一致估计，那么它就是可恢复的。</p>\n<h3 id=\"与可恢复性相关的理论假设\"><a href=\"#与可恢复性相关的理论假设\" class=\"headerlink\" title=\"与可恢复性相关的理论假设\"></a>与可恢复性相关的理论假设</h3><p><strong>假设2</strong>（结果变量的一致性）. $Y(t)=\\sum_{t<em>\\in T}I(t</em>=t)Y<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.452ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.181ex\" height=\"2.149ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 4500 950\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><text data-variant=\"italic\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\" font-style=\"italic\">，</text></g><g data-mml-node=\"mi\" transform=\"translate(900,0)\"><text data-variant=\"italic\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\" font-style=\"italic\">对</text></g><g data-mml-node=\"mi\" transform=\"translate(1800,0)\"><text data-variant=\"italic\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\" font-style=\"italic\">于</text></g><g data-mml-node=\"mi\" transform=\"translate(2700,0)\"><text data-variant=\"italic\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\" font-style=\"italic\">任</text></g><g data-mml-node=\"mi\" transform=\"translate(3600,0)\"><text data-variant=\"italic\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\" font-style=\"italic\">意</text></g></g></g></svg></mjx-container>t\\in T$成立。</p>\n<p>简而言之，对于任意一个单元<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.986ex\" height=\"1.025ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 878 453\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45A\" d=\"M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g></g></g></svg></mjx-container>，处理操作<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.09ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.175ex\" height=\"1.622ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -677 2287.6 717\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(638.8,0)\"><path data-c=\"2208\" d=\"M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1583.6,0)\"><path data-c=\"1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></g></g></g></svg></mjx-container>总能产生相同的结果，即处理操作对于每个单元产生的结果是一致的</p>\n<p><strong>假设3</strong>（处理操作的正可能性）<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"19.902ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 8796.7 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(751,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1140,0)\"><path data-c=\"1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2121.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3177.6,0)\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3538.6,0) translate(0 -0.5)\"><path data-c=\"7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3816.6,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4946.3,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(6002.1,0)\"><path data-c=\"1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6574.1,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(7240.9,0)\"><path data-c=\"3E\" d=\"M84 520Q84 528 88 533T96 539L99 540Q106 540 253 471T544 334L687 265Q694 260 694 250T687 235Q685 233 395 96L107 -40H101Q83 -38 83 -20Q83 -19 83 -17Q82 -10 98 -1Q117 9 248 71Q326 108 378 132L626 250L378 368Q90 504 86 509Q84 513 84 520Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(8296.7,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g></g></g></svg></mjx-container>对于任意<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.439ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"3.117ex\" height=\"1.855ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -626 1377.7 820\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(361,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(805.7,0)\"><path data-c=\"1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></g></g></g></svg></mjx-container>成立.</p>\n<p>简而言之，无论对于哪种用户，任何处理操作都有可能发生. 在RS中，曝光偏差(exposure bias)违反了这一假设：一个用户只被曝光了一部分特定的商品，因此剩下的商品的处理操作的概率为0，违反了该假设。</p>\n<p><strong>假设4</strong>（条件可交换性）.<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.213ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 4514 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(763,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1152,0)\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1513,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1902,0)\"><path data-c=\"22A5\" d=\"M369 652Q369 653 370 655T372 658T375 662T379 665T384 667T391 668Q402 666 409 653V40H708Q723 32 723 20T708 0H71Q70 0 67 2T59 9T55 20T59 31T66 38T71 40H369V652Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2680,0)\"><path data-c=\"1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3384,0) translate(0 -0.5)\"><path data-c=\"7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3662,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container> 对于任意 <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.09ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.175ex\" height=\"1.622ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -677 2287.6 717\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(638.8,0)\"><path data-c=\"2208\" d=\"M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1583.6,0)\"><path data-c=\"1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></g></g></g></svg></mjx-container>成立.</p>\n<p>该假设表明，X阻断了所有T和Y之间的后门路径（如果删去用户特征X，则处理操作与结果变量是相互独立的）。</p>\n<p><strong>假设5</strong>（随机采样）. <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"21.561ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 9529.7 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(751,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1140,0)\"><path data-c=\"1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1712,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2156.7,0)\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2517.7,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2962.3,0)\"><path data-c=\"1D466\" d=\"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3452.3,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4119.1,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(5174.9,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(675,-150) scale(0.707)\"><path data-c=\"1D442\" d=\"M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(6439.4,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(6828.4,0)\"><path data-c=\"1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(7400.4,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(7845.1,0)\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(8206.1,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(8650.7,0)\"><path data-c=\"1D466\" d=\"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(9140.7,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>，其中<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.088ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 1807 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(751,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1140,0)\"><path data-c=\"22C5\" d=\"M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1418,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>表示总体的分布，<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.25ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 2320.5 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(675,-150) scale(0.707)\"><path data-c=\"1D442\" d=\"M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(1264.5,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1653.5,0)\"><path data-c=\"22C5\" d=\"M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1931.5,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>表示观测数据的分布.</p>\n<p>假设5表明，观测数据（如观测到的用户点击数据）的分布能够代表总体的分布。</p>\n<h2 id=\"推荐系统中的选择偏差与混淆偏差\"><a href=\"#推荐系统中的选择偏差与混淆偏差\" class=\"headerlink\" title=\"推荐系统中的选择偏差与混淆偏差\"></a>推荐系统中的选择偏差与混淆偏差</h2><ul>\n<li>在这一节中，作者将推荐系统中常见的偏差分类为选择偏差和混淆偏差两种。按本文的逻辑，推荐系统中的任何偏差都可以归类为此二者之一。下面给出具体定义</li>\n</ul>\n<p><strong>定义4</strong>（选择偏差，selection bias）. 选择偏差表示观测数据的分布不能代表总体数据的分布，即假设5的违反：</p>\n<script type=\"math/tex; mode=display\">\nP(x,t,y)\\neq P_O(x,t,y)</script><p>例1：推荐系统模型倾向于过滤掉低评分商品，只推荐高评分商品给用户。由于从目标用户角度看到的商品分布不能代表总体分布（低评分商品看不见），因此产生了选择偏差，是为<strong>模型选择偏差（model selection bias）</strong>。</p>\n<p>例2：用户在打分时，更倾向于给他们喜欢的商品打分，很少给他们不喜欢的商品打分（因此被曝光却未被打分的商品，有可能是本来应该被打低分的商品），因此产生了选择偏差，是为<strong>用户自选择偏差（user self-selection bias）</strong>。</p>\n<p><strong>定义5</strong>（混淆偏差，confounding bias）. 混淆偏差表示由于协变量（同时影响T和Y）的存在，处理操作变量T和结果变量Y存在关联。这通常会导致：</p>\n<script type=\"math/tex; mode=display\">\nE[Y(t)]\\neq E[Y(t)|T=t]</script><p>定义5导致的结果比较绕。个人理解：由全期望公式可得，<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"27.893ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 12328.9 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(764,0)\"><path data-c=\"5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1042,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1805,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2194,0)\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2555,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2944,0)\"><path data-c=\"5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3499.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(4555.6,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(771,-150) scale(0.707)\"><path data-c=\"1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(5874.4,0)\"><path data-c=\"5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(6152.4,0)\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6916.4,0)\"><path data-c=\"5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(7194.4,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(7957.4,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(8346.4,0)\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(8707.4,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(9096.4,0) translate(0 -0.5)\"><path data-c=\"7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(9374.4,0)\"><path data-c=\"1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(10356.1,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(11411.9,0)\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(11772.9,0)\"><path data-c=\"5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(12050.9,0)\"><path data-c=\"5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"></path></g></g></g></svg></mjx-container>，因此可以认为<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"7.29ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 3222 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(764,0)\"><path data-c=\"5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1042,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1805,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2194,0)\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2555,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2944,0)\"><path data-c=\"5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"></path></g></g></g></svg></mjx-container>是处理组的结果期望（所有unit的处理操作值强制设为t），而<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"13.345ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 5898.6 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(764,0)\"><path data-c=\"5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1042,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1805,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2194,0)\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2555,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2944,0) translate(0 -0.5)\"><path data-c=\"7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3222,0)\"><path data-c=\"1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4203.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(5259.6,0)\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(5620.6,0)\"><path data-c=\"5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"></path></g></g></g></svg></mjx-container>是总体中<strong>被观测到</strong>的处理操作值为<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"0.817ex\" height=\"1.441ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -626 361 637\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path></g></g></g></svg></mjx-container>的样本的结果期望. 混淆偏差导致<strong>解释变量和被解释变量的相关性不仅包含因果关系，还包含非因果关系。</strong></p>\n<p>例3（经典因果案例）：在一个超市中，啤酒和纸尿裤的销售量是正相关的。但如果提高啤酒的进货量和曝光率，并不能帮助提高纸尿裤的销量——因为存在同时指向二者的协变量（许多青年男性购物时喜欢买啤酒，同时买纸尿裤给家里的婴儿），而非“购买啤酒”与“购买纸尿裤”之间存在因果关系。</p>\n<h2 id=\"将本文的因果分析框架应用于推荐任务\"><a href=\"#将本文的因果分析框架应用于推荐任务\" class=\"headerlink\" title=\"将本文的因果分析框架应用于推荐任务\"></a>将本文的因果分析框架应用于推荐任务</h2><ul>\n<li>在这一节，作者给出了处理操作结果的定义，给出了6个推荐系统场景下的因果分析框架的应用（Section 5.1-5.6），并在 5.7 总结了现有的因果去偏方法论（Causal Debiasing Methodologies）。此博客重点在于处理操作结果的定义（因为后面的案例分析均是该定义的运用），5.1-5.7节可以直接看原文。</li>\n</ul>\n<p><strong>数学符号</strong>.令<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.09ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.795ex\" height=\"1.636ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 2561.6 723\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D462\" d=\"M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(849.8,0)\"><path data-c=\"2208\" d=\"M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1794.6,0)\"><path data-c=\"1D448\" d=\"M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z\"></path></g></g></g></svg></mjx-container>表示用户，<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.09ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.687ex\" height=\"1.636ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 2071.6 723\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(622.8,0)\"><path data-c=\"2208\" d=\"M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1567.6,0)\"><path data-c=\"1D43C\" d=\"M43 1Q26 1 26 10Q26 12 29 24Q34 43 39 45Q42 46 54 46H60Q120 46 136 53Q137 53 138 54Q143 56 149 77T198 273Q210 318 216 344Q286 624 286 626Q284 630 284 631Q274 637 213 637H193Q184 643 189 662Q193 677 195 680T209 683H213Q285 681 359 681Q481 681 487 683H497Q504 676 504 672T501 655T494 639Q491 637 471 637Q440 637 407 634Q393 631 388 623Q381 609 337 432Q326 385 315 341Q245 65 245 59Q245 52 255 50T307 46H339Q345 38 345 37T342 19Q338 6 332 0H316Q279 2 179 2Q143 2 113 2T65 2T43 1Z\"></path></g></g></g></svg></mjx-container>表示商品，<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.186ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.532ex\" height=\"1.731ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 4655 765\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D437\" d=\"M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1105.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2161.6,0)\"><path data-c=\"1D448\" d=\"M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3150.8,0)\"><path data-c=\"D7\" d=\"M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4151,0)\"><path data-c=\"1D43C\" d=\"M43 1Q26 1 26 10Q26 12 29 24Q34 43 39 45Q42 46 54 46H60Q120 46 136 53Q137 53 138 54Q143 56 149 77T198 273Q210 318 216 344Q286 624 286 626Q284 630 284 631Q274 637 213 637H193Q184 643 189 662Q193 677 195 680T209 683H213Q285 681 359 681Q481 681 487 683H497Q504 676 504 672T501 655T494 639Q491 637 471 637Q440 637 407 634Q393 631 388 623Q381 609 337 432Q326 385 315 341Q245 65 245 59Q245 52 255 50T307 46H339Q345 38 345 37T342 19Q338 6 332 0H316Q279 2 179 2Q143 2 113 2T65 2T43 1Z\"></path></g></g></g></svg></mjx-container>表示全体用户-商品对的集合，<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.65ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"3.414ex\" height=\"2.195ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 1509 970.2\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"TeXAtom\" transform=\"translate(614,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"1D462\" d=\"M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(572,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(850,0)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g></g></g></g></svg></mjx-container>表示用户-商品对<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.841ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 2139.7 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(389,0)\"><path data-c=\"1D462\" d=\"M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(961,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1405.7,0)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1750.7,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>的结果变量，<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.65ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"3.421ex\" height=\"2.181ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -677 1512 964.2\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></g><g data-mml-node=\"TeXAtom\" transform=\"translate(617,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"1D462\" d=\"M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(572,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(850,0)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g></g></g></g></svg></mjx-container>表示用户-商品对<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.841ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 2139.7 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(389,0)\"><path data-c=\"1D462\" d=\"M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(961,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1405.7,0)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1750.7,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>的处理操作变量，<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.65ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"3.973ex\" height=\"2.195ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 1756 970.2\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"TeXAtom\" transform=\"translate(861,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"1D462\" d=\"M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(572,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(850,0)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g></g></g></g></svg></mjx-container>表示用户-商品对<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.841ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 2139.7 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(389,0)\"><path data-c=\"1D462\" d=\"M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(961,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1405.7,0)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1750.7,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>的特征embedding. 则处理操作结果定义如下。</p>\n<p><strong>定义5</strong> 通用处理结果. 对于一般的处理操作变量定义域<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.593ex\" height=\"1.532ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -677 704 677\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></g></g></g></svg></mjx-container>，该结果定义如下：</p>\n<script type=\"math/tex; mode=display\">\n\\mu_t(x) = E[Y(t)|X=x],t\\in T</script><p><strong>定义6</strong> 二元处理结果. 对于二元处理操作变量定义域<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.141ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 4482.2 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(981.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2037.6,0)\"><path data-c=\"7B\" d=\"M434 -231Q434 -244 428 -250H410Q281 -250 230 -184Q225 -177 222 -172T217 -161T213 -148T211 -133T210 -111T209 -84T209 -47T209 0Q209 21 209 53Q208 142 204 153Q203 154 203 155Q189 191 153 211T82 231Q71 231 68 234T65 250T68 266T82 269Q116 269 152 289T203 345Q208 356 208 377T209 529V579Q209 634 215 656T244 698Q270 724 324 740Q361 748 377 749Q379 749 390 749T408 750H428Q434 744 434 732Q434 719 431 716Q429 713 415 713Q362 710 332 689T296 647Q291 634 291 499V417Q291 370 288 353T271 314Q240 271 184 255L170 250L184 245Q202 239 220 230T262 196T290 137Q291 131 291 1Q291 -134 296 -147Q306 -174 339 -192T415 -213Q429 -213 431 -216Q434 -219 434 -231Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(2537.6,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3037.6,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(3482.2,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3982.2,0)\"><path data-c=\"7D\" d=\"M65 731Q65 745 68 747T88 750Q171 750 216 725T279 670Q288 649 289 635T291 501Q292 362 293 357Q306 312 345 291T417 269Q428 269 431 266T434 250T431 234T417 231Q380 231 345 210T298 157Q293 143 292 121T291 -28V-79Q291 -134 285 -156T256 -198Q202 -250 89 -250Q71 -250 68 -247T65 -230Q65 -224 65 -223T66 -218T69 -214T77 -213Q91 -213 108 -210T146 -200T183 -177T207 -139Q208 -134 209 3L210 139Q223 196 280 230Q315 247 330 250Q305 257 280 270Q225 304 212 352L210 362L209 498Q208 635 207 640Q195 680 154 696T77 713Q68 713 67 716T65 731Z\"></path></g></g></g></svg></mjx-container>，该结果定义如下：</p>\n<script type=\"math/tex; mode=display\">\n\\tau(x) = E[Y(1)-Y(0)|X=x]</script><p>上述处理结果都是上文中提到的推荐系统中十分重要而<strong>因果估计量</strong>，亦即测量目标。</p>\n<h2 id=\"因果推荐的未来研究方向\"><a href=\"#因果推荐的未来研究方向\" class=\"headerlink\" title=\"因果推荐的未来研究方向\"></a>因果推荐的未来研究方向</h2><p>在这一节，作者展望了因果推荐中潜在的有价值的研究方向，亦即可挖的坑。</p>\n<ol>\n<li><strong>数据融合（Data Fusion）</strong>. 现实推荐场景中常常包含两类数据：<strong>大型有偏数据集（来自于观测数据）</strong>和<strong>小型无偏数据集（来自于实验）</strong>。这一方向的工作中心在于使用小数据集上的无偏性指导大数据集上的推荐策略，即取长补短、数据融合。</li>\n<li><strong>序列推荐（Sequential Recommendation）</strong>. 这一方向的工作中心在于，将因果分析方法应用于用户购买商品行为序列中（例如购买手机和购买手机壳是否存在因果性），旨在通过此方法捕捉用户兴趣的动态变化，从而实现更加精准的推荐。</li>\n<li><strong>推荐系统的公平性</strong>. 略，相关研究论文很多，可自行阅读（dblp搜索“fairness recommendation”）。</li>\n<li><strong>干扰行为</strong>. 这里常指在用户社交网络中，用户会干扰/影响彼此的购买行为（人云亦云），即对上文中SUTVA假设的违反。现有的因果推荐方法对这一问题研究较少。</li>\n</ol>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: decodeURI(window.location.pathname),\n            distractionFreeMode: true // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>"},{"title":"变分自编码器（VAE）的本质：使用神经网络实现变分推断的计算","mathjax":true,"codeblock":{"enable":true,"show_result":true},"date":"2023-03-20T00:10:36.000Z","_content":"\n甲方的增量需求，以及神经网络上的约束条件，都可以转化成损失函数的惩罚项。———— 沃·兹基硕德\n\n变分自编码器是一种经典的深度生成模型，在图像生成、协同过滤等任务上有着重要的应用，有着举足轻重的历史地位。\n\n<!--more-->\n## 回顾：变分推断的本质\n\n书接上文。在变分推断的介绍中，我们已经明确了变分推断方法的本质：用一个简单分布拟合另一个复杂分布。并且我们已知，变分推断包含一下几个步骤：\n1. 给定观测数据$X$，计算隐变量Z的简单分布$q_\\phi(Z)$. 其中$\\phi$为分布族$q(\\cdot)$的参数，例如正态分布中的均值和方差；二项分布中的正面概率$p$.\n2. 根据观测数据$X$，计算证据下界$ELBO(q)=E_Z[\\log p(X|Z)]-KL(q_\\phi(Z)||p(Z))$.\n3. 优化简单分布族的参数$\\phi$，使得证据下界最大化. 这一步蕴含两个要素：\n   1. 最大化**观测变量**$X$的拟合值（最优重建）\n   2. 使隐变量估计简单分布与其先验分布尽可能地接近\n\n## 正题：变分自编码器的本质\n**变分自编码器的本质在于，使用神经网络建模隐变量的简单分布$q_\\phi(\\cdot)$ 和观测变量的后验概率 $p(X|Z)$ ，使用反向传播方法完成证据下界最大化的参数优化过程。**\n\n我们首先给出变分自编码器的结构图，然后介绍它具体的工作原理。\n\n![图中展示的是<简单分布族=高斯分布>的变分自编码器.Encoder和Decoder为神经网络. $P_\\phi(\\cdot)$等价于本文中的$q_\\phi(\\cdot)$](https://pic4.zhimg.com/80/v2-448d96d1d9d77ca2a01a7d85447782c7.jpg)\n\n### 变分自编码器的工作流程\n\n变分自编码器的工作流程如下：\n1. 输入观测数据$X$，使用基于神经网络的Encoder计算隐变量$Z$的分布参数（注意，计算结果不是隐变量本身，因为变分推断中隐变量是随机变量，需要从分布中采样得到）\n2. 使用重参数化技巧采样得到隐变量$Z$（例如上图中的$Z=\\mu+\\sigma\\odot\\epsilon$得到隐变量$Z$）.**重参数化技巧的内涵在于将随机变量的随机性与其分布特征解耦，从而能够实现后者的反向传播优化**.\n3. 输入隐变量$Z$，使用基于神经网络的Decoder计算重建的观测数据$\\hat{X}$\n4. 计算损失函数（即证据下界，$ELBO$），使用反向传播方法优化Encoder和Decoder.\n\n### ELBO的本质：带惩罚项的损失函数\n在上文中，我们已经说明了，证据下界$ELBO$的定义如下：\n\n$$\nELBO(q)=E_Z[\\log p(X|Z)]-KL(q_\\phi(Z)||p(Z))\n$$\n\n本质上，等式右侧的第一项，是用于**最优化重建观测变量$\\hat{X}$**的损失函数主项，可以用交叉熵、均方根误差等常见的神经网络损失函数代替；第二项是用于**使隐变量$Z$的后验分布参数尽可能接近先验分布** 的惩罚项，例如先验分布为$N(0,1)$，则该项使得Encoder生成的$Z$的期望尽可能接近0，方差尽可能接近1. 一个经典的ELBO的实现如下：\n\n$$\nL(\\Omega)=CrossEntropy(X,\\hat{X})−1/2(log\\sigma_\\phi^2−\\sigma_\\phi^2−\\mu_\\phi^2+1)\n$$\n\n其中$\\Omega$是变分自编码器的所有可优化参数，$\\mu_\\phi$和$\\sigma_\\phi^2$分别是隐变量$Z$的期望和方差. 该损失函数适用于**标准正态先验分布**.\n\n另一个适用于**标准二项先验分布**的ELBO实现如下：\n\n$$\nL(\\Omega)=CrossEntropy(X,\\hat{X})−(p_\\phi\\log p_\\phi + (1-p_\\phi)\\log(1-p_\\phi))\n$$\n\n其中$p_\\phi$是由Encoder计算的$Z=1$的概率. $Z$服从二项分布.\n\n## 参考文献\n[1] [JKRD.变分推断的本质](https://cslijt.github.io/LiJT-Daily/2022/08/19/2022-08-19-vi/)\n\n[2] David M. Blei, Alp Kucukelbir, & Jon D. McAuliffe (2016). Variational Inference: A Review for Statisticians. CoRR, abs/1601.00670.\n\n[3] DOERSCH C. Tutorial on Variational Autoencoders[J]. stat, 2016, 1050: 13.\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: decodeURI(window.location.pathname),\n            distractionFreeMode: true // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","source":"_posts/2023-03-20-vae.md","raw":"---\ntitle: 变分自编码器（VAE）的本质：使用神经网络实现变分推断的计算\nmathjax: true\ncodeblock:\n  enable: true\n  show_result: true\ndate: 2023-03-20 08:10:36\ntags: 深度学习 人工智能\ncategories: 深度学习\n---\n\n甲方的增量需求，以及神经网络上的约束条件，都可以转化成损失函数的惩罚项。———— 沃·兹基硕德\n\n变分自编码器是一种经典的深度生成模型，在图像生成、协同过滤等任务上有着重要的应用，有着举足轻重的历史地位。\n\n<!--more-->\n## 回顾：变分推断的本质\n\n书接上文。在变分推断的介绍中，我们已经明确了变分推断方法的本质：用一个简单分布拟合另一个复杂分布。并且我们已知，变分推断包含一下几个步骤：\n1. 给定观测数据$X$，计算隐变量Z的简单分布$q_\\phi(Z)$. 其中$\\phi$为分布族$q(\\cdot)$的参数，例如正态分布中的均值和方差；二项分布中的正面概率$p$.\n2. 根据观测数据$X$，计算证据下界$ELBO(q)=E_Z[\\log p(X|Z)]-KL(q_\\phi(Z)||p(Z))$.\n3. 优化简单分布族的参数$\\phi$，使得证据下界最大化. 这一步蕴含两个要素：\n   1. 最大化**观测变量**$X$的拟合值（最优重建）\n   2. 使隐变量估计简单分布与其先验分布尽可能地接近\n\n## 正题：变分自编码器的本质\n**变分自编码器的本质在于，使用神经网络建模隐变量的简单分布$q_\\phi(\\cdot)$ 和观测变量的后验概率 $p(X|Z)$ ，使用反向传播方法完成证据下界最大化的参数优化过程。**\n\n我们首先给出变分自编码器的结构图，然后介绍它具体的工作原理。\n\n![图中展示的是<简单分布族=高斯分布>的变分自编码器.Encoder和Decoder为神经网络. $P_\\phi(\\cdot)$等价于本文中的$q_\\phi(\\cdot)$](https://pic4.zhimg.com/80/v2-448d96d1d9d77ca2a01a7d85447782c7.jpg)\n\n### 变分自编码器的工作流程\n\n变分自编码器的工作流程如下：\n1. 输入观测数据$X$，使用基于神经网络的Encoder计算隐变量$Z$的分布参数（注意，计算结果不是隐变量本身，因为变分推断中隐变量是随机变量，需要从分布中采样得到）\n2. 使用重参数化技巧采样得到隐变量$Z$（例如上图中的$Z=\\mu+\\sigma\\odot\\epsilon$得到隐变量$Z$）.**重参数化技巧的内涵在于将随机变量的随机性与其分布特征解耦，从而能够实现后者的反向传播优化**.\n3. 输入隐变量$Z$，使用基于神经网络的Decoder计算重建的观测数据$\\hat{X}$\n4. 计算损失函数（即证据下界，$ELBO$），使用反向传播方法优化Encoder和Decoder.\n\n### ELBO的本质：带惩罚项的损失函数\n在上文中，我们已经说明了，证据下界$ELBO$的定义如下：\n\n$$\nELBO(q)=E_Z[\\log p(X|Z)]-KL(q_\\phi(Z)||p(Z))\n$$\n\n本质上，等式右侧的第一项，是用于**最优化重建观测变量$\\hat{X}$**的损失函数主项，可以用交叉熵、均方根误差等常见的神经网络损失函数代替；第二项是用于**使隐变量$Z$的后验分布参数尽可能接近先验分布** 的惩罚项，例如先验分布为$N(0,1)$，则该项使得Encoder生成的$Z$的期望尽可能接近0，方差尽可能接近1. 一个经典的ELBO的实现如下：\n\n$$\nL(\\Omega)=CrossEntropy(X,\\hat{X})−1/2(log\\sigma_\\phi^2−\\sigma_\\phi^2−\\mu_\\phi^2+1)\n$$\n\n其中$\\Omega$是变分自编码器的所有可优化参数，$\\mu_\\phi$和$\\sigma_\\phi^2$分别是隐变量$Z$的期望和方差. 该损失函数适用于**标准正态先验分布**.\n\n另一个适用于**标准二项先验分布**的ELBO实现如下：\n\n$$\nL(\\Omega)=CrossEntropy(X,\\hat{X})−(p_\\phi\\log p_\\phi + (1-p_\\phi)\\log(1-p_\\phi))\n$$\n\n其中$p_\\phi$是由Encoder计算的$Z=1$的概率. $Z$服从二项分布.\n\n## 参考文献\n[1] [JKRD.变分推断的本质](https://cslijt.github.io/LiJT-Daily/2022/08/19/2022-08-19-vi/)\n\n[2] David M. Blei, Alp Kucukelbir, & Jon D. McAuliffe (2016). Variational Inference: A Review for Statisticians. CoRR, abs/1601.00670.\n\n[3] DOERSCH C. Tutorial on Variational Autoencoders[J]. stat, 2016, 1050: 13.\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: decodeURI(window.location.pathname),\n            distractionFreeMode: true // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","slug":"2023-03-20-vae","published":1,"updated":"2023-03-20T03:05:44.209Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cludw9na2002n9wv9dpnb7q9i","content":"<p>甲方的增量需求，以及神经网络上的约束条件，都可以转化成损失函数的惩罚项。———— 沃·兹基硕德</p>\n<p>变分自编码器是一种经典的深度生成模型，在图像生成、协同过滤等任务上有着重要的应用，有着举足轻重的历史地位。</p>\n<span id=\"more\"></span>\n<h2 id=\"回顾：变分推断的本质\"><a href=\"#回顾：变分推断的本质\" class=\"headerlink\" title=\"回顾：变分推断的本质\"></a>回顾：变分推断的本质</h2><p>书接上文。在变分推断的介绍中，我们已经明确了变分推断方法的本质：用一个简单分布拟合另一个复杂分布。并且我们已知，变分推断包含一下几个步骤：</p>\n<ol>\n<li>给定观测数据<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>，计算隐变量Z的简单分布<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.667ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.546ex\" height=\"2.364ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 2451.4 1045\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D45E\" d=\"M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(479,-150) scale(0.707)\"><path data-c=\"1D719\" d=\"M409 688Q413 694 421 694H429H442Q448 688 448 686Q448 679 418 563Q411 535 404 504T392 458L388 442Q388 441 397 441T429 435T477 418Q521 397 550 357T579 260T548 151T471 65T374 11T279 -10H275L251 -105Q245 -128 238 -160Q230 -192 227 -198T215 -205H209Q189 -205 189 -198Q189 -193 211 -103L234 -11Q234 -10 226 -10Q221 -10 206 -8T161 6T107 36T62 89T43 171Q43 231 76 284T157 370T254 422T342 441Q347 441 348 445L378 567Q409 686 409 688ZM122 150Q122 116 134 91T167 53T203 35T237 27H244L337 404Q333 404 326 403T297 395T255 379T211 350T170 304Q152 276 137 237Q122 191 122 150ZM500 282Q500 320 484 347T444 385T405 400T381 404H378L332 217L284 29Q284 27 285 27Q293 27 317 33T357 47Q400 66 431 100T475 170T494 234T500 282Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(950.4,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1339.4,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2062.4,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>. 其中<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.464ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.348ex\" height=\"2.034ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -694 596 899\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D719\" d=\"M409 688Q413 694 421 694H429H442Q448 688 448 686Q448 679 418 563Q411 535 404 504T392 458L388 442Q388 441 397 441T429 435T477 418Q521 397 550 357T579 260T548 151T471 65T374 11T279 -10H275L251 -105Q245 -128 238 -160Q230 -192 227 -198T215 -205H209Q189 -205 189 -198Q189 -193 211 -103L234 -11Q234 -10 226 -10Q221 -10 206 -8T161 6T107 36T62 89T43 171Q43 231 76 284T157 370T254 422T342 441Q347 441 348 445L378 567Q409 686 409 688ZM122 150Q122 116 134 91T167 53T203 35T237 27H244L337 404Q333 404 326 403T297 395T255 379T211 350T170 304Q152 276 137 237Q122 191 122 150ZM500 282Q500 320 484 347T444 385T405 400T381 404H378L332 217L284 29Q284 27 285 27Q293 27 317 33T357 47Q400 66 431 100T475 170T494 234T500 282Z\"></path></g></g></g></svg></mjx-container>为分布族<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"3.43ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 1516 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45E\" d=\"M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(460,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(849,0)\"><path data-c=\"22C5\" d=\"M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1127,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>的参数，例如正态分布中的均值和方差；二项分布中的正面概率<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.439ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.138ex\" height=\"1.439ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 503 636\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path></g></g></g></svg></mjx-container>.</li>\n<li>根据观测数据<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>，计算证据下界<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.667ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"46.578ex\" height=\"2.364ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 20587.3 1045\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(764,0)\"><path data-c=\"1D43F\" d=\"M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1445,0)\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2204,0)\"><path data-c=\"1D442\" d=\"M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2967,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3356,0)\"><path data-c=\"1D45E\" d=\"M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3816,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4482.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(5538.6,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(771,-150) scale(0.707)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(6870.8,0)\"><path data-c=\"5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(7148.8,0)\"><path data-c=\"6C\" d=\"M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z\"></path><path data-c=\"6F\" d=\"M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z\" transform=\"translate(278,0)\"></path><path data-c=\"67\" d=\"M329 409Q373 453 429 453Q459 453 472 434T485 396Q485 382 476 371T449 360Q416 360 412 390Q410 404 415 411Q415 412 416 414V415Q388 412 363 393Q355 388 355 386Q355 385 359 381T368 369T379 351T388 325T392 292Q392 230 343 187T222 143Q172 143 123 171Q112 153 112 133Q112 98 138 81Q147 75 155 75T227 73Q311 72 335 67Q396 58 431 26Q470 -13 470 -72Q470 -139 392 -175Q332 -206 250 -206Q167 -206 107 -175Q29 -140 29 -75Q29 -39 50 -15T92 18L103 24Q67 55 67 108Q67 155 96 193Q52 237 52 292Q52 355 102 398T223 442Q274 442 318 416L329 409ZM299 343Q294 371 273 387T221 404Q192 404 171 388T145 343Q142 326 142 292Q142 248 149 227T179 192Q196 182 222 182Q244 182 260 189T283 207T294 227T299 242Q302 258 302 292T299 343ZM403 -75Q403 -50 389 -34T348 -11T299 -2T245 0H218Q151 0 138 -6Q118 -15 107 -34T95 -74Q95 -84 101 -97T122 -127T170 -155T250 -167Q319 -167 361 -139T403 -75Z\" transform=\"translate(778,0)\"></path></g><g data-mml-node=\"mo\" transform=\"translate(8426.8,0)\"><path data-c=\"2061\" d=\"\"></path></g><g data-mml-node=\"mi\" transform=\"translate(8593.5,0)\"><path data-c=\"1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(9096.5,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(9485.5,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(10337.5,0) translate(0 -0.5)\"><path data-c=\"7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(10615.5,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(11338.5,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(11727.5,0)\"><path data-c=\"5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(12227.7,0)\"><path data-c=\"2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(13227.9,0)\"><path data-c=\"1D43E\" d=\"M285 628Q285 635 228 637Q205 637 198 638T191 647Q191 649 193 661Q199 681 203 682Q205 683 214 683H219Q260 681 355 681Q389 681 418 681T463 682T483 682Q500 682 500 674Q500 669 497 660Q496 658 496 654T495 648T493 644T490 641T486 639T479 638T470 637T456 637Q416 636 405 634T387 623L306 305Q307 305 490 449T678 597Q692 611 692 620Q692 635 667 637Q651 637 651 648Q651 650 654 662T659 677Q662 682 676 682Q680 682 711 681T791 680Q814 680 839 681T869 682Q889 682 889 672Q889 650 881 642Q878 637 862 637Q787 632 726 586Q710 576 656 534T556 455L509 418L518 396Q527 374 546 329T581 244Q656 67 661 61Q663 59 666 57Q680 47 717 46H738Q744 38 744 37T741 19Q737 6 731 0H720Q680 3 625 3Q503 3 488 0H478Q472 6 472 9T474 27Q478 40 480 43T491 46H494Q544 46 544 71Q544 75 517 141T485 216L427 354L359 301L291 248L268 155Q245 63 245 58Q245 51 253 49T303 46H334Q340 37 340 35Q340 19 333 5Q328 0 317 0Q314 0 280 1T180 2Q118 2 85 2T49 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(14116.9,0)\"><path data-c=\"1D43F\" d=\"M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(14797.9,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(15186.9,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D45E\" d=\"M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(479,-150) scale(0.707)\"><path data-c=\"1D719\" d=\"M409 688Q413 694 421 694H429H442Q448 688 448 686Q448 679 418 563Q411 535 404 504T392 458L388 442Q388 441 397 441T429 435T477 418Q521 397 550 357T579 260T548 151T471 65T374 11T279 -10H275L251 -105Q245 -128 238 -160Q230 -192 227 -198T215 -205H209Q189 -205 189 -198Q189 -193 211 -103L234 -11Q234 -10 226 -10Q221 -10 206 -8T161 6T107 36T62 89T43 171Q43 231 76 284T157 370T254 422T342 441Q347 441 348 445L378 567Q409 686 409 688ZM122 150Q122 116 134 91T167 53T203 35T237 27H244L337 404Q333 404 326 403T297 395T255 379T211 350T170 304Q152 276 137 237Q122 191 122 150ZM500 282Q500 320 484 347T444 385T405 400T381 404H378L332 217L284 29Q284 27 285 27Q293 27 317 33T357 47Q400 66 431 100T475 170T494 234T500 282Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(16137.3,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(16526.3,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(17249.3,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(17638.3,0) translate(0 -0.5)\"><path data-c=\"7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(17916.3,0) translate(0 -0.5)\"><path data-c=\"7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(18194.3,0)\"><path data-c=\"1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(18697.3,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(19086.3,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(19809.3,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(20198.3,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>.</li>\n<li>优化简单分布族的参数<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.464ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.348ex\" height=\"2.034ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -694 596 899\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D719\" d=\"M409 688Q413 694 421 694H429H442Q448 688 448 686Q448 679 418 563Q411 535 404 504T392 458L388 442Q388 441 397 441T429 435T477 418Q521 397 550 357T579 260T548 151T471 65T374 11T279 -10H275L251 -105Q245 -128 238 -160Q230 -192 227 -198T215 -205H209Q189 -205 189 -198Q189 -193 211 -103L234 -11Q234 -10 226 -10Q221 -10 206 -8T161 6T107 36T62 89T43 171Q43 231 76 284T157 370T254 422T342 441Q347 441 348 445L378 567Q409 686 409 688ZM122 150Q122 116 134 91T167 53T203 35T237 27H244L337 404Q333 404 326 403T297 395T255 379T211 350T170 304Q152 276 137 237Q122 191 122 150ZM500 282Q500 320 484 347T444 385T405 400T381 404H378L332 217L284 29Q284 27 285 27Q293 27 317 33T357 47Q400 66 431 100T475 170T494 234T500 282Z\"></path></g></g></g></svg></mjx-container>，使得证据下界最大化. 这一步蕴含两个要素：<ol>\n<li>最大化<strong>观测变量</strong><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>的拟合值（最优重建）</li>\n<li>使隐变量估计简单分布与其先验分布尽可能地接近</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"正题：变分自编码器的本质\"><a href=\"#正题：变分自编码器的本质\" class=\"headerlink\" title=\"正题：变分自编码器的本质\"></a>正题：变分自编码器的本质</h2><p><strong>变分自编码器的本质在于，使用神经网络建模隐变量的简单分布<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.667ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.539ex\" height=\"2.364ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 2006.4 1045\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D45E\" d=\"M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(479,-150) scale(0.707)\"><path data-c=\"1D719\" d=\"M409 688Q413 694 421 694H429H442Q448 688 448 686Q448 679 418 563Q411 535 404 504T392 458L388 442Q388 441 397 441T429 435T477 418Q521 397 550 357T579 260T548 151T471 65T374 11T279 -10H275L251 -105Q245 -128 238 -160Q230 -192 227 -198T215 -205H209Q189 -205 189 -198Q189 -193 211 -103L234 -11Q234 -10 226 -10Q221 -10 206 -8T161 6T107 36T62 89T43 171Q43 231 76 284T157 370T254 422T342 441Q347 441 348 445L378 567Q409 686 409 688ZM122 150Q122 116 134 91T167 53T203 35T237 27H244L337 404Q333 404 326 403T297 395T255 379T211 350T170 304Q152 276 137 237Q122 191 122 150ZM500 282Q500 320 484 347T444 385T405 400T381 404H378L332 217L284 29Q284 27 285 27Q293 27 317 33T357 47Q400 66 431 100T475 170T494 234T500 282Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(950.4,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1339.4,0)\"><path data-c=\"22C5\" d=\"M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1617.4,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container> 和观测变量的后验概率 <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"7.09ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 3134 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(503,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(892,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1744,0) translate(0 -0.5)\"><path data-c=\"7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2022,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2745,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container> ，使用反向传播方法完成证据下界最大化的参数优化过程。</strong></p>\n<p>我们首先给出变分自编码器的结构图，然后介绍它具体的工作原理。</p>\n<p><img src=\"https://pic4.zhimg.com/80/v2-448d96d1d9d77ca2a01a7d85447782c7.jpg\" alt=\"图中展示的是<简单分布族=高斯分布>的变分自编码器.Encoder和Decoder为神经网络. $P_\\phi(\\cdot)$等价于本文中的$q_\\phi(\\cdot)$\"></p>\n<h3 id=\"变分自编码器的工作流程\"><a href=\"#变分自编码器的工作流程\" class=\"headerlink\" title=\"变分自编码器的工作流程\"></a>变分自编码器的工作流程</h3><p>变分自编码器的工作流程如下：</p>\n<ol>\n<li>输入观测数据<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>，使用基于神经网络的Encoder计算隐变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>的分布参数（注意，计算结果不是隐变量本身，因为变分推断中隐变量是随机变量，需要从分布中采样得到）</li>\n<li>使用重参数化技巧采样得到隐变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>（例如上图中的<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.489ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"13.759ex\" height=\"2.034ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 6081.4 899\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1000.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2056.6,0)\"><path data-c=\"1D707\" d=\"M58 -216Q44 -216 34 -208T23 -186Q23 -176 96 116T173 414Q186 442 219 442Q231 441 239 435T249 423T251 413Q251 401 220 279T187 142Q185 131 185 107V99Q185 26 252 26Q261 26 270 27T287 31T302 38T315 45T327 55T338 65T348 77T356 88T365 100L372 110L408 253Q444 395 448 404Q461 431 491 431Q504 431 512 424T523 412T525 402L449 84Q448 79 448 68Q448 43 455 35T476 26Q485 27 496 35Q517 55 537 131Q543 151 547 152Q549 153 557 153H561Q580 153 580 144Q580 138 575 117T555 63T523 13Q510 0 491 -8Q483 -10 467 -10Q446 -10 429 -4T402 11T385 29T376 44T374 51L368 45Q362 39 350 30T324 12T288 -4T246 -11Q199 -11 153 12L129 -85Q108 -167 104 -180T92 -202Q76 -216 58 -216Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2881.8,0)\"><path data-c=\"2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3882,0)\"><path data-c=\"1D70E\" d=\"M184 -11Q116 -11 74 34T31 147Q31 247 104 333T274 430Q275 431 414 431H552Q553 430 555 429T559 427T562 425T565 422T567 420T569 416T570 412T571 407T572 401Q572 357 507 357Q500 357 490 357T476 358H416L421 348Q439 310 439 263Q439 153 359 71T184 -11ZM361 278Q361 358 276 358Q152 358 115 184Q114 180 114 178Q106 141 106 117Q106 67 131 47T188 26Q242 26 287 73Q316 103 334 153T356 233T361 278Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4675.2,0)\"><path data-c=\"2299\" d=\"M56 250Q56 394 156 488T384 583Q530 583 626 485T722 250Q722 110 625 14T390 -83Q249 -83 153 14T56 250ZM682 250Q682 322 649 387T546 497T381 542Q272 542 184 459T95 250Q95 132 178 45T389 -42Q515 -42 598 45T682 250ZM311 250Q311 285 332 304T375 328Q376 328 382 328T392 329Q424 326 445 305T466 250Q466 217 445 195T389 172Q354 172 333 195T311 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(5675.4,0)\"><path data-c=\"1D716\" d=\"M227 -11Q149 -11 95 41T40 174Q40 262 87 322Q121 367 173 396T287 430Q289 431 329 431H367Q382 426 382 411Q382 385 341 385H325H312Q191 385 154 277L150 265H327Q340 256 340 246Q340 228 320 219H138V217Q128 187 128 143Q128 77 160 52T231 26Q258 26 284 36T326 57T343 68Q350 68 354 58T358 39Q358 36 357 35Q354 31 337 21T289 0T227 -11Z\"></path></g></g></g></svg></mjx-container>得到隐变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>）.<strong>重参数化技巧的内涵在于将随机变量的随机性与其分布特征解耦，从而能够实现后者的反向传播优化</strong>.</li>\n<li>输入隐变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>，使用基于神经网络的Decoder计算重建的观测数据<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"2.378ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -1051 852 1051\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mover\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(515.3,257) translate(-250 0)\"><path data-c=\"5E\" d=\"M112 560L249 694L257 686Q387 562 387 560L361 531Q359 532 303 581L250 627L195 580Q182 569 169 557T148 538L140 532Q138 530 125 546L112 560Z\"></path></g></g></g></g></g></svg></mjx-container></li>\n<li>计算损失函数（即证据下界，<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.713ex\" height=\"1.643ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -704 2967 726\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(764,0)\"><path data-c=\"1D43F\" d=\"M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1445,0)\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2204,0)\"><path data-c=\"1D442\" d=\"M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z\"></path></g></g></g></svg></mjx-container>），使用反向传播方法优化Encoder和Decoder.</li>\n</ol>\n<h3 id=\"ELBO的本质：带惩罚项的损失函数\"><a href=\"#ELBO的本质：带惩罚项的损失函数\" class=\"headerlink\" title=\"ELBO的本质：带惩罚项的损失函数\"></a>ELBO的本质：带惩罚项的损失函数</h3><p>在上文中，我们已经说明了，证据下界<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.713ex\" height=\"1.643ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -704 2967 726\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(764,0)\"><path data-c=\"1D43F\" d=\"M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1445,0)\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2204,0)\"><path data-c=\"1D442\" d=\"M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z\"></path></g></g></g></svg></mjx-container>的定义如下：</p>\n<script type=\"math/tex; mode=display\">\nELBO(q)=E_Z[\\log p(X|Z)]-KL(q_\\phi(Z)||p(Z))</script><p>本质上，等式右侧的第一项，是用于<strong>最优化重建观测变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"2.378ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -1051 852 1051\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mover\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(515.3,257) translate(-250 0)\"><path data-c=\"5E\" d=\"M112 560L249 694L257 686Q387 562 387 560L361 531Q359 532 303 581L250 627L195 580Q182 569 169 557T148 538L140 532Q138 530 125 546L112 560Z\"></path></g></g></g></g></g></svg></mjx-container></strong>的损失函数主项，可以用交叉熵、均方根误差等常见的神经网络损失函数代替；第二项是用于<strong>使隐变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>的后验分布参数尽可能接近先验分布</strong> 的惩罚项，例如先验分布为<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"7.038ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 3110.7 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D441\" d=\"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(888,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(1277,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1777,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(2221.7,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2721.7,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>，则该项使得Encoder生成的<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>的期望尽可能接近0，方差尽可能接近1. 一个经典的ELBO的实现如下：</p>\n<script type=\"math/tex; mode=display\">\nL(\\Omega)=CrossEntropy(X,\\hat{X})−1/2(log\\sigma_\\phi^2−\\sigma_\\phi^2−\\mu_\\phi^2+1)</script><p>其中<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.633ex\" height=\"1.593ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -704 722 704\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"3A9\" d=\"M55 454Q55 503 75 546T127 617T197 665T272 695T337 704H352Q396 704 404 703Q527 687 596 615T666 454Q666 392 635 330T559 200T499 83V80H543Q589 81 600 83T617 93Q622 102 629 135T636 172L637 177H677V175L660 89Q645 3 644 2V0H552H488Q461 0 456 3T451 20Q451 89 499 235T548 455Q548 512 530 555T483 622T424 656T361 668Q332 668 303 658T243 626T193 560T174 456Q174 380 222 233T270 20Q270 7 263 0H77V2Q76 3 61 89L44 175V177H84L85 172Q85 171 88 155T96 119T104 93Q109 86 120 84T178 80H222V83Q206 132 162 199T87 329T55 454Z\"></path></g></g></g></svg></mjx-container>是变分自编码器的所有可优化参数，<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.667ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.506ex\" height=\"1.667ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 1107.4 737\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D707\" d=\"M58 -216Q44 -216 34 -208T23 -186Q23 -176 96 116T173 414Q186 442 219 442Q231 441 239 435T249 423T251 413Q251 401 220 279T187 142Q185 131 185 107V99Q185 26 252 26Q261 26 270 27T287 31T302 38T315 45T327 55T338 65T348 77T356 88T365 100L372 110L408 253Q444 395 448 404Q461 431 491 431Q504 431 512 424T523 412T525 402L449 84Q448 79 448 68Q448 43 455 35T476 26Q485 27 496 35Q517 55 537 131Q543 151 547 152Q549 153 557 153H561Q580 153 580 144Q580 138 575 117T555 63T523 13Q510 0 491 -8Q483 -10 467 -10Q446 -10 429 -4T402 11T385 29T376 44T374 51L368 45Q362 39 350 30T324 12T288 -4T246 -11Q199 -11 153 12L129 -85Q108 -167 104 -180T92 -202Q76 -216 58 -216Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(636,-150) scale(0.707)\"><path data-c=\"1D719\" d=\"M409 688Q413 694 421 694H429H442Q448 688 448 686Q448 679 418 563Q411 535 404 504T392 458L388 442Q388 441 397 441T429 435T477 418Q521 397 550 357T579 260T548 151T471 65T374 11T279 -10H275L251 -105Q245 -128 238 -160Q230 -192 227 -198T215 -205H209Q189 -205 189 -198Q189 -193 211 -103L234 -11Q234 -10 226 -10Q221 -10 206 -8T161 6T107 36T62 89T43 171Q43 231 76 284T157 370T254 422T342 441Q347 441 348 445L378 567Q409 686 409 688ZM122 150Q122 116 134 91T167 53T203 35T237 27H244L337 404Q333 404 326 403T297 395T255 379T211 350T170 304Q152 276 137 237Q122 191 122 150ZM500 282Q500 320 484 347T444 385T405 400T381 404H378L332 217L284 29Q284 27 285 27Q293 27 317 33T357 47Q400 66 431 100T475 170T494 234T500 282Z\"></path></g></g></g></g></svg></mjx-container>和<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -1.024ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.433ex\" height=\"2.911ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -833.9 1075.4 1286.6\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msubsup\"><g data-mml-node=\"mi\"><path data-c=\"1D70E\" d=\"M184 -11Q116 -11 74 34T31 147Q31 247 104 333T274 430Q275 431 414 431H552Q553 430 555 429T559 427T562 425T565 422T567 420T569 416T570 412T571 407T572 401Q572 357 507 357Q500 357 490 357T476 358H416L421 348Q439 310 439 263Q439 153 359 71T184 -11ZM361 278Q361 358 276 358Q152 358 115 184Q114 180 114 178Q106 141 106 117Q106 67 131 47T188 26Q242 26 287 73Q316 103 334 153T356 233T361 278Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(604,363) scale(0.707)\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(604,-307.7) scale(0.707)\"><path data-c=\"1D719\" d=\"M409 688Q413 694 421 694H429H442Q448 688 448 686Q448 679 418 563Q411 535 404 504T392 458L388 442Q388 441 397 441T429 435T477 418Q521 397 550 357T579 260T548 151T471 65T374 11T279 -10H275L251 -105Q245 -128 238 -160Q230 -192 227 -198T215 -205H209Q189 -205 189 -198Q189 -193 211 -103L234 -11Q234 -10 226 -10Q221 -10 206 -8T161 6T107 36T62 89T43 171Q43 231 76 284T157 370T254 422T342 441Q347 441 348 445L378 567Q409 686 409 688ZM122 150Q122 116 134 91T167 53T203 35T237 27H244L337 404Q333 404 326 403T297 395T255 379T211 350T170 304Q152 276 137 237Q122 191 122 150ZM500 282Q500 320 484 347T444 385T405 400T381 404H378L332 217L284 29Q284 27 285 27Q293 27 317 33T357 47Q400 66 431 100T475 170T494 234T500 282Z\"></path></g></g></g></g></svg></mjx-container>分别是隐变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>的期望和方差. 该损失函数适用于<strong>标准正态先验分布</strong>.</p>\n<p>另一个适用于<strong>标准二项先验分布</strong>的ELBO实现如下：</p>\n<script type=\"math/tex; mode=display\">\nL(\\Omega)=CrossEntropy(X,\\hat{X})−(p_\\phi\\log p_\\phi + (1-p_\\phi)\\log(1-p_\\phi))</script><p>其中<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.667ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.279ex\" height=\"1.667ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 1007.4 737\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(536,-150) scale(0.707)\"><path data-c=\"1D719\" d=\"M409 688Q413 694 421 694H429H442Q448 688 448 686Q448 679 418 563Q411 535 404 504T392 458L388 442Q388 441 397 441T429 435T477 418Q521 397 550 357T579 260T548 151T471 65T374 11T279 -10H275L251 -105Q245 -128 238 -160Q230 -192 227 -198T215 -205H209Q189 -205 189 -198Q189 -193 211 -103L234 -11Q234 -10 226 -10Q221 -10 206 -8T161 6T107 36T62 89T43 171Q43 231 76 284T157 370T254 422T342 441Q347 441 348 445L378 567Q409 686 409 688ZM122 150Q122 116 134 91T167 53T203 35T237 27H244L337 404Q333 404 326 403T297 395T255 379T211 350T170 304Q152 276 137 237Q122 191 122 150ZM500 282Q500 320 484 347T444 385T405 400T381 404H378L332 217L284 29Q284 27 285 27Q293 27 317 33T357 47Q400 66 431 100T475 170T494 234T500 282Z\"></path></g></g></g></g></svg></mjx-container>是由Encoder计算的<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.186ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.784ex\" height=\"1.731ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 2556.6 765\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1000.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(2056.6,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g></g></g></svg></mjx-container>的概率. <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>服从二项分布.</p>\n<h2 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h2><p>[1] <a href=\"https://cslijt.github.io/LiJT-Daily/2022/08/19/2022-08-19-vi/\">JKRD.变分推断的本质</a></p>\n<p>[2] David M. Blei, Alp Kucukelbir, &amp; Jon D. McAuliffe (2016). Variational Inference: A Review for Statisticians. CoRR, abs/1601.00670.</p>\n<p>[3] DOERSCH C. Tutorial on Variational Autoencoders[J]. stat, 2016, 1050: 13.</p>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: decodeURI(window.location.pathname),\n            distractionFreeMode: true // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","site":{"data":{}},"length":1948,"excerpt":"<p>甲方的增量需求，以及神经网络上的约束条件，都可以转化成损失函数的惩罚项。———— 沃·兹基硕德</p>\n<p>变分自编码器是一种经典的深度生成模型，在图像生成、协同过滤等任务上有着重要的应用，有着举足轻重的历史地位。</p>","more":"<h2 id=\"回顾：变分推断的本质\"><a href=\"#回顾：变分推断的本质\" class=\"headerlink\" title=\"回顾：变分推断的本质\"></a>回顾：变分推断的本质</h2><p>书接上文。在变分推断的介绍中，我们已经明确了变分推断方法的本质：用一个简单分布拟合另一个复杂分布。并且我们已知，变分推断包含一下几个步骤：</p>\n<ol>\n<li>给定观测数据<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>，计算隐变量Z的简单分布<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.667ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.546ex\" height=\"2.364ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 2451.4 1045\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D45E\" d=\"M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(479,-150) scale(0.707)\"><path data-c=\"1D719\" d=\"M409 688Q413 694 421 694H429H442Q448 688 448 686Q448 679 418 563Q411 535 404 504T392 458L388 442Q388 441 397 441T429 435T477 418Q521 397 550 357T579 260T548 151T471 65T374 11T279 -10H275L251 -105Q245 -128 238 -160Q230 -192 227 -198T215 -205H209Q189 -205 189 -198Q189 -193 211 -103L234 -11Q234 -10 226 -10Q221 -10 206 -8T161 6T107 36T62 89T43 171Q43 231 76 284T157 370T254 422T342 441Q347 441 348 445L378 567Q409 686 409 688ZM122 150Q122 116 134 91T167 53T203 35T237 27H244L337 404Q333 404 326 403T297 395T255 379T211 350T170 304Q152 276 137 237Q122 191 122 150ZM500 282Q500 320 484 347T444 385T405 400T381 404H378L332 217L284 29Q284 27 285 27Q293 27 317 33T357 47Q400 66 431 100T475 170T494 234T500 282Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(950.4,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1339.4,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2062.4,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>. 其中<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.464ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.348ex\" height=\"2.034ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -694 596 899\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D719\" d=\"M409 688Q413 694 421 694H429H442Q448 688 448 686Q448 679 418 563Q411 535 404 504T392 458L388 442Q388 441 397 441T429 435T477 418Q521 397 550 357T579 260T548 151T471 65T374 11T279 -10H275L251 -105Q245 -128 238 -160Q230 -192 227 -198T215 -205H209Q189 -205 189 -198Q189 -193 211 -103L234 -11Q234 -10 226 -10Q221 -10 206 -8T161 6T107 36T62 89T43 171Q43 231 76 284T157 370T254 422T342 441Q347 441 348 445L378 567Q409 686 409 688ZM122 150Q122 116 134 91T167 53T203 35T237 27H244L337 404Q333 404 326 403T297 395T255 379T211 350T170 304Q152 276 137 237Q122 191 122 150ZM500 282Q500 320 484 347T444 385T405 400T381 404H378L332 217L284 29Q284 27 285 27Q293 27 317 33T357 47Q400 66 431 100T475 170T494 234T500 282Z\"></path></g></g></g></svg></mjx-container>为分布族<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"3.43ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 1516 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45E\" d=\"M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(460,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(849,0)\"><path data-c=\"22C5\" d=\"M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1127,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>的参数，例如正态分布中的均值和方差；二项分布中的正面概率<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.439ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.138ex\" height=\"1.439ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 503 636\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path></g></g></g></svg></mjx-container>.</li>\n<li>根据观测数据<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>，计算证据下界<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.667ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"46.578ex\" height=\"2.364ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 20587.3 1045\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(764,0)\"><path data-c=\"1D43F\" d=\"M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1445,0)\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2204,0)\"><path data-c=\"1D442\" d=\"M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2967,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3356,0)\"><path data-c=\"1D45E\" d=\"M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3816,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4482.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(5538.6,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(771,-150) scale(0.707)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(6870.8,0)\"><path data-c=\"5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(7148.8,0)\"><path data-c=\"6C\" d=\"M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z\"></path><path data-c=\"6F\" d=\"M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z\" transform=\"translate(278,0)\"></path><path data-c=\"67\" d=\"M329 409Q373 453 429 453Q459 453 472 434T485 396Q485 382 476 371T449 360Q416 360 412 390Q410 404 415 411Q415 412 416 414V415Q388 412 363 393Q355 388 355 386Q355 385 359 381T368 369T379 351T388 325T392 292Q392 230 343 187T222 143Q172 143 123 171Q112 153 112 133Q112 98 138 81Q147 75 155 75T227 73Q311 72 335 67Q396 58 431 26Q470 -13 470 -72Q470 -139 392 -175Q332 -206 250 -206Q167 -206 107 -175Q29 -140 29 -75Q29 -39 50 -15T92 18L103 24Q67 55 67 108Q67 155 96 193Q52 237 52 292Q52 355 102 398T223 442Q274 442 318 416L329 409ZM299 343Q294 371 273 387T221 404Q192 404 171 388T145 343Q142 326 142 292Q142 248 149 227T179 192Q196 182 222 182Q244 182 260 189T283 207T294 227T299 242Q302 258 302 292T299 343ZM403 -75Q403 -50 389 -34T348 -11T299 -2T245 0H218Q151 0 138 -6Q118 -15 107 -34T95 -74Q95 -84 101 -97T122 -127T170 -155T250 -167Q319 -167 361 -139T403 -75Z\" transform=\"translate(778,0)\"></path></g><g data-mml-node=\"mo\" transform=\"translate(8426.8,0)\"><path data-c=\"2061\" d=\"\"></path></g><g data-mml-node=\"mi\" transform=\"translate(8593.5,0)\"><path data-c=\"1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(9096.5,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(9485.5,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(10337.5,0) translate(0 -0.5)\"><path data-c=\"7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(10615.5,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(11338.5,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(11727.5,0)\"><path data-c=\"5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(12227.7,0)\"><path data-c=\"2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(13227.9,0)\"><path data-c=\"1D43E\" d=\"M285 628Q285 635 228 637Q205 637 198 638T191 647Q191 649 193 661Q199 681 203 682Q205 683 214 683H219Q260 681 355 681Q389 681 418 681T463 682T483 682Q500 682 500 674Q500 669 497 660Q496 658 496 654T495 648T493 644T490 641T486 639T479 638T470 637T456 637Q416 636 405 634T387 623L306 305Q307 305 490 449T678 597Q692 611 692 620Q692 635 667 637Q651 637 651 648Q651 650 654 662T659 677Q662 682 676 682Q680 682 711 681T791 680Q814 680 839 681T869 682Q889 682 889 672Q889 650 881 642Q878 637 862 637Q787 632 726 586Q710 576 656 534T556 455L509 418L518 396Q527 374 546 329T581 244Q656 67 661 61Q663 59 666 57Q680 47 717 46H738Q744 38 744 37T741 19Q737 6 731 0H720Q680 3 625 3Q503 3 488 0H478Q472 6 472 9T474 27Q478 40 480 43T491 46H494Q544 46 544 71Q544 75 517 141T485 216L427 354L359 301L291 248L268 155Q245 63 245 58Q245 51 253 49T303 46H334Q340 37 340 35Q340 19 333 5Q328 0 317 0Q314 0 280 1T180 2Q118 2 85 2T49 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(14116.9,0)\"><path data-c=\"1D43F\" d=\"M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(14797.9,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(15186.9,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D45E\" d=\"M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(479,-150) scale(0.707)\"><path data-c=\"1D719\" d=\"M409 688Q413 694 421 694H429H442Q448 688 448 686Q448 679 418 563Q411 535 404 504T392 458L388 442Q388 441 397 441T429 435T477 418Q521 397 550 357T579 260T548 151T471 65T374 11T279 -10H275L251 -105Q245 -128 238 -160Q230 -192 227 -198T215 -205H209Q189 -205 189 -198Q189 -193 211 -103L234 -11Q234 -10 226 -10Q221 -10 206 -8T161 6T107 36T62 89T43 171Q43 231 76 284T157 370T254 422T342 441Q347 441 348 445L378 567Q409 686 409 688ZM122 150Q122 116 134 91T167 53T203 35T237 27H244L337 404Q333 404 326 403T297 395T255 379T211 350T170 304Q152 276 137 237Q122 191 122 150ZM500 282Q500 320 484 347T444 385T405 400T381 404H378L332 217L284 29Q284 27 285 27Q293 27 317 33T357 47Q400 66 431 100T475 170T494 234T500 282Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(16137.3,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(16526.3,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(17249.3,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(17638.3,0) translate(0 -0.5)\"><path data-c=\"7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(17916.3,0) translate(0 -0.5)\"><path data-c=\"7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(18194.3,0)\"><path data-c=\"1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(18697.3,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(19086.3,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(19809.3,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(20198.3,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>.</li>\n<li>优化简单分布族的参数<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.464ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.348ex\" height=\"2.034ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -694 596 899\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D719\" d=\"M409 688Q413 694 421 694H429H442Q448 688 448 686Q448 679 418 563Q411 535 404 504T392 458L388 442Q388 441 397 441T429 435T477 418Q521 397 550 357T579 260T548 151T471 65T374 11T279 -10H275L251 -105Q245 -128 238 -160Q230 -192 227 -198T215 -205H209Q189 -205 189 -198Q189 -193 211 -103L234 -11Q234 -10 226 -10Q221 -10 206 -8T161 6T107 36T62 89T43 171Q43 231 76 284T157 370T254 422T342 441Q347 441 348 445L378 567Q409 686 409 688ZM122 150Q122 116 134 91T167 53T203 35T237 27H244L337 404Q333 404 326 403T297 395T255 379T211 350T170 304Q152 276 137 237Q122 191 122 150ZM500 282Q500 320 484 347T444 385T405 400T381 404H378L332 217L284 29Q284 27 285 27Q293 27 317 33T357 47Q400 66 431 100T475 170T494 234T500 282Z\"></path></g></g></g></svg></mjx-container>，使得证据下界最大化. 这一步蕴含两个要素：<ol>\n<li>最大化<strong>观测变量</strong><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>的拟合值（最优重建）</li>\n<li>使隐变量估计简单分布与其先验分布尽可能地接近</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"正题：变分自编码器的本质\"><a href=\"#正题：变分自编码器的本质\" class=\"headerlink\" title=\"正题：变分自编码器的本质\"></a>正题：变分自编码器的本质</h2><p><strong>变分自编码器的本质在于，使用神经网络建模隐变量的简单分布<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.667ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.539ex\" height=\"2.364ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 2006.4 1045\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D45E\" d=\"M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(479,-150) scale(0.707)\"><path data-c=\"1D719\" d=\"M409 688Q413 694 421 694H429H442Q448 688 448 686Q448 679 418 563Q411 535 404 504T392 458L388 442Q388 441 397 441T429 435T477 418Q521 397 550 357T579 260T548 151T471 65T374 11T279 -10H275L251 -105Q245 -128 238 -160Q230 -192 227 -198T215 -205H209Q189 -205 189 -198Q189 -193 211 -103L234 -11Q234 -10 226 -10Q221 -10 206 -8T161 6T107 36T62 89T43 171Q43 231 76 284T157 370T254 422T342 441Q347 441 348 445L378 567Q409 686 409 688ZM122 150Q122 116 134 91T167 53T203 35T237 27H244L337 404Q333 404 326 403T297 395T255 379T211 350T170 304Q152 276 137 237Q122 191 122 150ZM500 282Q500 320 484 347T444 385T405 400T381 404H378L332 217L284 29Q284 27 285 27Q293 27 317 33T357 47Q400 66 431 100T475 170T494 234T500 282Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(950.4,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1339.4,0)\"><path data-c=\"22C5\" d=\"M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1617.4,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container> 和观测变量的后验概率 <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"7.09ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 3134 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(503,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(892,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1744,0) translate(0 -0.5)\"><path data-c=\"7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2022,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2745,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container> ，使用反向传播方法完成证据下界最大化的参数优化过程。</strong></p>\n<p>我们首先给出变分自编码器的结构图，然后介绍它具体的工作原理。</p>\n<p><img src=\"https://pic4.zhimg.com/80/v2-448d96d1d9d77ca2a01a7d85447782c7.jpg\" alt=\"图中展示的是<简单分布族=高斯分布>的变分自编码器.Encoder和Decoder为神经网络. $P_\\phi(\\cdot)$等价于本文中的$q_\\phi(\\cdot)$\"></p>\n<h3 id=\"变分自编码器的工作流程\"><a href=\"#变分自编码器的工作流程\" class=\"headerlink\" title=\"变分自编码器的工作流程\"></a>变分自编码器的工作流程</h3><p>变分自编码器的工作流程如下：</p>\n<ol>\n<li>输入观测数据<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>，使用基于神经网络的Encoder计算隐变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>的分布参数（注意，计算结果不是隐变量本身，因为变分推断中隐变量是随机变量，需要从分布中采样得到）</li>\n<li>使用重参数化技巧采样得到隐变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>（例如上图中的<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.489ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"13.759ex\" height=\"2.034ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 6081.4 899\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1000.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2056.6,0)\"><path data-c=\"1D707\" d=\"M58 -216Q44 -216 34 -208T23 -186Q23 -176 96 116T173 414Q186 442 219 442Q231 441 239 435T249 423T251 413Q251 401 220 279T187 142Q185 131 185 107V99Q185 26 252 26Q261 26 270 27T287 31T302 38T315 45T327 55T338 65T348 77T356 88T365 100L372 110L408 253Q444 395 448 404Q461 431 491 431Q504 431 512 424T523 412T525 402L449 84Q448 79 448 68Q448 43 455 35T476 26Q485 27 496 35Q517 55 537 131Q543 151 547 152Q549 153 557 153H561Q580 153 580 144Q580 138 575 117T555 63T523 13Q510 0 491 -8Q483 -10 467 -10Q446 -10 429 -4T402 11T385 29T376 44T374 51L368 45Q362 39 350 30T324 12T288 -4T246 -11Q199 -11 153 12L129 -85Q108 -167 104 -180T92 -202Q76 -216 58 -216Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2881.8,0)\"><path data-c=\"2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3882,0)\"><path data-c=\"1D70E\" d=\"M184 -11Q116 -11 74 34T31 147Q31 247 104 333T274 430Q275 431 414 431H552Q553 430 555 429T559 427T562 425T565 422T567 420T569 416T570 412T571 407T572 401Q572 357 507 357Q500 357 490 357T476 358H416L421 348Q439 310 439 263Q439 153 359 71T184 -11ZM361 278Q361 358 276 358Q152 358 115 184Q114 180 114 178Q106 141 106 117Q106 67 131 47T188 26Q242 26 287 73Q316 103 334 153T356 233T361 278Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4675.2,0)\"><path data-c=\"2299\" d=\"M56 250Q56 394 156 488T384 583Q530 583 626 485T722 250Q722 110 625 14T390 -83Q249 -83 153 14T56 250ZM682 250Q682 322 649 387T546 497T381 542Q272 542 184 459T95 250Q95 132 178 45T389 -42Q515 -42 598 45T682 250ZM311 250Q311 285 332 304T375 328Q376 328 382 328T392 329Q424 326 445 305T466 250Q466 217 445 195T389 172Q354 172 333 195T311 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(5675.4,0)\"><path data-c=\"1D716\" d=\"M227 -11Q149 -11 95 41T40 174Q40 262 87 322Q121 367 173 396T287 430Q289 431 329 431H367Q382 426 382 411Q382 385 341 385H325H312Q191 385 154 277L150 265H327Q340 256 340 246Q340 228 320 219H138V217Q128 187 128 143Q128 77 160 52T231 26Q258 26 284 36T326 57T343 68Q350 68 354 58T358 39Q358 36 357 35Q354 31 337 21T289 0T227 -11Z\"></path></g></g></g></svg></mjx-container>得到隐变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>）.<strong>重参数化技巧的内涵在于将随机变量的随机性与其分布特征解耦，从而能够实现后者的反向传播优化</strong>.</li>\n<li>输入隐变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>，使用基于神经网络的Decoder计算重建的观测数据<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"2.378ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -1051 852 1051\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mover\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(515.3,257) translate(-250 0)\"><path data-c=\"5E\" d=\"M112 560L249 694L257 686Q387 562 387 560L361 531Q359 532 303 581L250 627L195 580Q182 569 169 557T148 538L140 532Q138 530 125 546L112 560Z\"></path></g></g></g></g></g></svg></mjx-container></li>\n<li>计算损失函数（即证据下界，<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.713ex\" height=\"1.643ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -704 2967 726\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(764,0)\"><path data-c=\"1D43F\" d=\"M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1445,0)\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2204,0)\"><path data-c=\"1D442\" d=\"M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z\"></path></g></g></g></svg></mjx-container>），使用反向传播方法优化Encoder和Decoder.</li>\n</ol>\n<h3 id=\"ELBO的本质：带惩罚项的损失函数\"><a href=\"#ELBO的本质：带惩罚项的损失函数\" class=\"headerlink\" title=\"ELBO的本质：带惩罚项的损失函数\"></a>ELBO的本质：带惩罚项的损失函数</h3><p>在上文中，我们已经说明了，证据下界<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.713ex\" height=\"1.643ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -704 2967 726\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(764,0)\"><path data-c=\"1D43F\" d=\"M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1445,0)\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2204,0)\"><path data-c=\"1D442\" d=\"M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z\"></path></g></g></g></svg></mjx-container>的定义如下：</p>\n<script type=\"math/tex; mode=display\">\nELBO(q)=E_Z[\\log p(X|Z)]-KL(q_\\phi(Z)||p(Z))</script><p>本质上，等式右侧的第一项，是用于<strong>最优化重建观测变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"2.378ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -1051 852 1051\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mover\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(515.3,257) translate(-250 0)\"><path data-c=\"5E\" d=\"M112 560L249 694L257 686Q387 562 387 560L361 531Q359 532 303 581L250 627L195 580Q182 569 169 557T148 538L140 532Q138 530 125 546L112 560Z\"></path></g></g></g></g></g></svg></mjx-container></strong>的损失函数主项，可以用交叉熵、均方根误差等常见的神经网络损失函数代替；第二项是用于<strong>使隐变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>的后验分布参数尽可能接近先验分布</strong> 的惩罚项，例如先验分布为<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"7.038ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 3110.7 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D441\" d=\"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(888,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(1277,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1777,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(2221.7,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2721.7,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>，则该项使得Encoder生成的<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>的期望尽可能接近0，方差尽可能接近1. 一个经典的ELBO的实现如下：</p>\n<script type=\"math/tex; mode=display\">\nL(\\Omega)=CrossEntropy(X,\\hat{X})−1/2(log\\sigma_\\phi^2−\\sigma_\\phi^2−\\mu_\\phi^2+1)</script><p>其中<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.633ex\" height=\"1.593ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -704 722 704\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"3A9\" d=\"M55 454Q55 503 75 546T127 617T197 665T272 695T337 704H352Q396 704 404 703Q527 687 596 615T666 454Q666 392 635 330T559 200T499 83V80H543Q589 81 600 83T617 93Q622 102 629 135T636 172L637 177H677V175L660 89Q645 3 644 2V0H552H488Q461 0 456 3T451 20Q451 89 499 235T548 455Q548 512 530 555T483 622T424 656T361 668Q332 668 303 658T243 626T193 560T174 456Q174 380 222 233T270 20Q270 7 263 0H77V2Q76 3 61 89L44 175V177H84L85 172Q85 171 88 155T96 119T104 93Q109 86 120 84T178 80H222V83Q206 132 162 199T87 329T55 454Z\"></path></g></g></g></svg></mjx-container>是变分自编码器的所有可优化参数，<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.667ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.506ex\" height=\"1.667ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 1107.4 737\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D707\" d=\"M58 -216Q44 -216 34 -208T23 -186Q23 -176 96 116T173 414Q186 442 219 442Q231 441 239 435T249 423T251 413Q251 401 220 279T187 142Q185 131 185 107V99Q185 26 252 26Q261 26 270 27T287 31T302 38T315 45T327 55T338 65T348 77T356 88T365 100L372 110L408 253Q444 395 448 404Q461 431 491 431Q504 431 512 424T523 412T525 402L449 84Q448 79 448 68Q448 43 455 35T476 26Q485 27 496 35Q517 55 537 131Q543 151 547 152Q549 153 557 153H561Q580 153 580 144Q580 138 575 117T555 63T523 13Q510 0 491 -8Q483 -10 467 -10Q446 -10 429 -4T402 11T385 29T376 44T374 51L368 45Q362 39 350 30T324 12T288 -4T246 -11Q199 -11 153 12L129 -85Q108 -167 104 -180T92 -202Q76 -216 58 -216Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(636,-150) scale(0.707)\"><path data-c=\"1D719\" d=\"M409 688Q413 694 421 694H429H442Q448 688 448 686Q448 679 418 563Q411 535 404 504T392 458L388 442Q388 441 397 441T429 435T477 418Q521 397 550 357T579 260T548 151T471 65T374 11T279 -10H275L251 -105Q245 -128 238 -160Q230 -192 227 -198T215 -205H209Q189 -205 189 -198Q189 -193 211 -103L234 -11Q234 -10 226 -10Q221 -10 206 -8T161 6T107 36T62 89T43 171Q43 231 76 284T157 370T254 422T342 441Q347 441 348 445L378 567Q409 686 409 688ZM122 150Q122 116 134 91T167 53T203 35T237 27H244L337 404Q333 404 326 403T297 395T255 379T211 350T170 304Q152 276 137 237Q122 191 122 150ZM500 282Q500 320 484 347T444 385T405 400T381 404H378L332 217L284 29Q284 27 285 27Q293 27 317 33T357 47Q400 66 431 100T475 170T494 234T500 282Z\"></path></g></g></g></g></svg></mjx-container>和<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -1.024ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.433ex\" height=\"2.911ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -833.9 1075.4 1286.6\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msubsup\"><g data-mml-node=\"mi\"><path data-c=\"1D70E\" d=\"M184 -11Q116 -11 74 34T31 147Q31 247 104 333T274 430Q275 431 414 431H552Q553 430 555 429T559 427T562 425T565 422T567 420T569 416T570 412T571 407T572 401Q572 357 507 357Q500 357 490 357T476 358H416L421 348Q439 310 439 263Q439 153 359 71T184 -11ZM361 278Q361 358 276 358Q152 358 115 184Q114 180 114 178Q106 141 106 117Q106 67 131 47T188 26Q242 26 287 73Q316 103 334 153T356 233T361 278Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(604,363) scale(0.707)\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(604,-307.7) scale(0.707)\"><path data-c=\"1D719\" d=\"M409 688Q413 694 421 694H429H442Q448 688 448 686Q448 679 418 563Q411 535 404 504T392 458L388 442Q388 441 397 441T429 435T477 418Q521 397 550 357T579 260T548 151T471 65T374 11T279 -10H275L251 -105Q245 -128 238 -160Q230 -192 227 -198T215 -205H209Q189 -205 189 -198Q189 -193 211 -103L234 -11Q234 -10 226 -10Q221 -10 206 -8T161 6T107 36T62 89T43 171Q43 231 76 284T157 370T254 422T342 441Q347 441 348 445L378 567Q409 686 409 688ZM122 150Q122 116 134 91T167 53T203 35T237 27H244L337 404Q333 404 326 403T297 395T255 379T211 350T170 304Q152 276 137 237Q122 191 122 150ZM500 282Q500 320 484 347T444 385T405 400T381 404H378L332 217L284 29Q284 27 285 27Q293 27 317 33T357 47Q400 66 431 100T475 170T494 234T500 282Z\"></path></g></g></g></g></svg></mjx-container>分别是隐变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>的期望和方差. 该损失函数适用于<strong>标准正态先验分布</strong>.</p>\n<p>另一个适用于<strong>标准二项先验分布</strong>的ELBO实现如下：</p>\n<script type=\"math/tex; mode=display\">\nL(\\Omega)=CrossEntropy(X,\\hat{X})−(p_\\phi\\log p_\\phi + (1-p_\\phi)\\log(1-p_\\phi))</script><p>其中<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.667ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.279ex\" height=\"1.667ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 1007.4 737\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(536,-150) scale(0.707)\"><path data-c=\"1D719\" d=\"M409 688Q413 694 421 694H429H442Q448 688 448 686Q448 679 418 563Q411 535 404 504T392 458L388 442Q388 441 397 441T429 435T477 418Q521 397 550 357T579 260T548 151T471 65T374 11T279 -10H275L251 -105Q245 -128 238 -160Q230 -192 227 -198T215 -205H209Q189 -205 189 -198Q189 -193 211 -103L234 -11Q234 -10 226 -10Q221 -10 206 -8T161 6T107 36T62 89T43 171Q43 231 76 284T157 370T254 422T342 441Q347 441 348 445L378 567Q409 686 409 688ZM122 150Q122 116 134 91T167 53T203 35T237 27H244L337 404Q333 404 326 403T297 395T255 379T211 350T170 304Q152 276 137 237Q122 191 122 150ZM500 282Q500 320 484 347T444 385T405 400T381 404H378L332 217L284 29Q284 27 285 27Q293 27 317 33T357 47Q400 66 431 100T475 170T494 234T500 282Z\"></path></g></g></g></g></svg></mjx-container>是由Encoder计算的<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.186ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.784ex\" height=\"1.731ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 2556.6 765\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1000.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(2056.6,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g></g></g></svg></mjx-container>的概率. <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>服从二项分布.</p>\n<h2 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h2><p>[1] <a href=\"https://cslijt.github.io/LiJT-Daily/2022/08/19/2022-08-19-vi/\">JKRD.变分推断的本质</a></p>\n<p>[2] David M. Blei, Alp Kucukelbir, &amp; Jon D. McAuliffe (2016). Variational Inference: A Review for Statisticians. CoRR, abs/1601.00670.</p>\n<p>[3] DOERSCH C. Tutorial on Variational Autoencoders[J]. stat, 2016, 1050: 13.</p>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: decodeURI(window.location.pathname),\n            distractionFreeMode: true // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>"},{"title":"Diffusion是什么：基于Diffusion的图像生成模型原理综述","mathjax":true,"codeblock":{"enable":true,"show_result":true},"date":"2023-04-04T05:02:30.000Z","_content":"\n计算机视觉领域的发展，给人们的生活带来了极大的方便和改变。随着深度学习的发展，图像生成也变得更加复杂和精细。在图像生成领域，一种基于Diffusion的新型的生成模型方法已经开始受到越来越多的关注。这种方法不同于传统的生成模型，它的训练过程是通过迭代实现的，优点在于利用了图像信息中的空间相关性，从而可以更好地增强像素之间的连贯性。本文主要介绍基于Diffusion的图像生成模型原理，以及其在实践中的应用。\n\n<!--more-->\n\n## 一、研究背景\n\n在深度学习的研究中，生成模型一直是一个重要的领域。生成模型的作用是通过对真实数据的建模来生成一些新的数据。在图像分析领域，生成模型可以用于生成与当前人工画和自然景物一致的物体，从而为视觉识别，3D打印等应用提供更好的支持。传统的生成模型主要包括自回归型和[变分自编码器型(VAE)](https://cslijt.github.io/LiJT-Daily/2023/03/20/2023-03-20-vae/)。\n\n在自回归型生成模型中，生成器是在时间步上构建的，它需要将每个时间步的输入从一个先前的状态转移到下一个状态中，并且需要保证为生成k个时间步所需的计算复杂度能够接受。因此，这个生成模型的计算效率比较低，往往需要极长的运行时间。\n\n在变分自编码器型(VAE)生成模型中，我们试图学习一个对于生成数据分布的潜在空间。然而，由于在潜在空间中的采样是随机的，因此在生成的图像中往往会产生一些缺陷和问题。\n\n## 二、原理介绍\n\n基于Diffusion的生成模型，是一种结合了自回归模型和VAE模型的主要思想的生成模型。它通过在反向传播时，将图像的空间信息转化为像素间的空间相关性来解决传统模型的问题。\n\nDiffusion模型采用过程建模，假设当前像素的状态是来自其周围像素的状态。具体的， Diffusion模型中的生成器采取的是[蒙特卡罗马尔科夫链(MCMC)](https://towardsdatascience.com/monte-carlo-markov-chain-mcmc-explained-94e3a6c8de11) 的形式。该过程中，像素状态根据一个简单的扩散过程逐渐更新，从而生成了一张新的图像。\n\n这个扩散过程被称为Diffusion过程，它的公式可以表示为：\n\n$$ x_{(t)} =x_{(t-1)} + \\sqrt{(1-\\beta^2)}\\epsilon_{(t)} +\\beta(z - x_{(t-1)}) $$\n\n其中，$ x_{(t)}$表示第$t$步之后的特征向量，在 Diffusion 过程中随机出现，$ z $是噪声向量，$\\beta$ 表示噪声的权重， $\\epsilon_{(t)}$代表了从噪声分布中提取的随机噪声。\n\n在Diffusion模型中，噪声的选择非常重要。噪声的大小和方向影响着模型的输出结果。因此，Diffusion模型需要在训练过程中调整不同的噪声方向，以找到最优的结果。\n\n## 三、实战操作：基于CLIP-Diffusion的狗狗图像生成\n基于Diffusion的图像生成模型已经在许多计算机视觉应用中得到了广泛的应用。其中，最著名的是OpenAI提出的CLIP-guided Diffusion（简称CLIP-Diffusion），它利用CLIP模型来指导Diffusion模型进行图像生成，得到了非常好的效果。除此之外，基于Diffusion的图像去噪、背景移除、图像修复等任务也有很好的应用。\n\n以CLIP-Diffusion为例，我们将介绍其基本原理和一个简单的示例。CLIP-Diffusion的主要思想是利用CLIP模型作为图像生成的指导器，在生成过程中优化噪声序列以最大化与目标描述符的相似度。下面我们将通过一个具体的图像生成实例来介绍这一过程。\n\n我们以一张狗的图片为目标图像$x$，并使用CLIP模型对其进行描述，得到一个文本描述符$h_{target}$。这里我们使用OpenAI提供的CLIP预训练模型，代码如下：\n\n```python\nimport torch\nimport clip\nimport numpy as np\nfrom PIL import Image\n\n# 加载CLIP模型和标签\nmodel, preprocess = clip.load('ViT-B/32', device='cpu')\nlabels = ['dog']\n\n# 加载目标图像，并将其转换为PyTorch Tensor\nimg = Image.open('/path/to/image.jpg')\nimg_input = preprocess(img).unsqueeze(0)\n\n# 使用CLIP模型对目标图像进行描述\nwith torch.no_grad():\n    text_input = clip.tokenize(labels).to(model.device)\n    target_features = model.encode_image(img_input)\n    target_text_features = model.encode_text(text_input)\n    h_target = torch.cat([target_features, target_text_features], dim=-1)\n```\n接下来，我们初始化一组随机噪声序列$z_0,z_1,\\ldots,z_T$，并使用Diffusion模型来优化这些噪声序列，使其生成的图片与目标描述符$h_{target}$相似度最大化：\n\n```python\nimport torch.nn.functional as F\n\nclass Diffusion(nn.Module):\n    def __init__(self, T, sigma):\n        super(Diffusion, self).__init__()\n        self.T = T\n        self.sigma = sigma\n        self.f = nn.Sequential(\n            nn.Conv2d(3, 64, 3, stride=1, padding=1),\n            nn.ReLU(inplace=True),\n            nn.Conv2d(64, 64, 3, stride=1, padding=1),\n            nn.ReLU(inplace=True),\n            nn.Conv2d(64, 3, 3, stride=1, padding=1),\n        )\n\n    def forward(self, z_0, h_target):\n        for t in range(self.T):\n            epsilon_t = torch.randn_like(z_0) * self.sigma\n            z_t = z_0.detach().requires_grad_(True)\n            x_t = self.f(z_t)\n            h_t = model.encode_image(x_t)\n            loss = -F.cosine_similarity(h_t, h_target, dim=-1).mean()\n            grad_z_t = torch.autograd.grad(loss, z_t)[0]\n            z_0 = z_t + self.sigma**2 * grad_z_t - epsilon_t\n        return x_t\n```\n\n在训练过程中，我们使用反向传播来计算噪声序列的梯度，并更新每个时间步的噪声序列。最后，根据最优噪声序列生成一张与目标描述符$h_{target}$相似度最高的图像：\n\n```python\ndiffusion = Diffusion(T=1000, sigma=0.01)\noptimizer = torch.optim.Adam(diffusion.parameters(), lr=1e-3)\n\nfor i in range(500):\n    optimizer.zero_grad()\n    x_pred = diffusion(z_0, h_target)\n    loss = -F.cosine_similarity(model.encode_image(x_pred), h_target, dim=-1).mean()\n    loss.backward()\n    optimizer.step()\n\n# 将预测图像从Tensor转换为PIL Image并展示\nimg_pred = Image.fromarray(x_pred.squeeze().numpy())\nimg_pred.show()\n```\n\n## 参考文献（带链接）\n1. [Diffusion Models: A Comprehensive Survey of Methods and Applications](https://arxiv.org/abs/2209.00796)\n2. [变分自编码器（VAE）的本质：使用神经网络实现变分推断的计算](https://cslijt.github.io/LiJT-Daily/2023/03/20/2023-03-20-vae/)\n3. [详解CLIP (二) | 简易使用CLIP-PyTorch预训练模型进行图像预测](https://zhuanlan.zhihu.com/p/524247403)\n4. [Monte Carlo Markov Chain (MCMC), Explained](https://towardsdatascience.com/monte-carlo-markov-chain-mcmc-explained-94e3a6c8de11)\n\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: decodeURI(window.location.pathname),\n            distractionFreeMode: true // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","source":"_posts/2023-04-04-diffusion.md","raw":"---\ntitle: Diffusion是什么：基于Diffusion的图像生成模型原理综述\nmathjax: true\ncodeblock:\n  enable: true\n  show_result: true\ndate: 2023-04-04 13:02:30\ntags:\ncategories:\n---\n\n计算机视觉领域的发展，给人们的生活带来了极大的方便和改变。随着深度学习的发展，图像生成也变得更加复杂和精细。在图像生成领域，一种基于Diffusion的新型的生成模型方法已经开始受到越来越多的关注。这种方法不同于传统的生成模型，它的训练过程是通过迭代实现的，优点在于利用了图像信息中的空间相关性，从而可以更好地增强像素之间的连贯性。本文主要介绍基于Diffusion的图像生成模型原理，以及其在实践中的应用。\n\n<!--more-->\n\n## 一、研究背景\n\n在深度学习的研究中，生成模型一直是一个重要的领域。生成模型的作用是通过对真实数据的建模来生成一些新的数据。在图像分析领域，生成模型可以用于生成与当前人工画和自然景物一致的物体，从而为视觉识别，3D打印等应用提供更好的支持。传统的生成模型主要包括自回归型和[变分自编码器型(VAE)](https://cslijt.github.io/LiJT-Daily/2023/03/20/2023-03-20-vae/)。\n\n在自回归型生成模型中，生成器是在时间步上构建的，它需要将每个时间步的输入从一个先前的状态转移到下一个状态中，并且需要保证为生成k个时间步所需的计算复杂度能够接受。因此，这个生成模型的计算效率比较低，往往需要极长的运行时间。\n\n在变分自编码器型(VAE)生成模型中，我们试图学习一个对于生成数据分布的潜在空间。然而，由于在潜在空间中的采样是随机的，因此在生成的图像中往往会产生一些缺陷和问题。\n\n## 二、原理介绍\n\n基于Diffusion的生成模型，是一种结合了自回归模型和VAE模型的主要思想的生成模型。它通过在反向传播时，将图像的空间信息转化为像素间的空间相关性来解决传统模型的问题。\n\nDiffusion模型采用过程建模，假设当前像素的状态是来自其周围像素的状态。具体的， Diffusion模型中的生成器采取的是[蒙特卡罗马尔科夫链(MCMC)](https://towardsdatascience.com/monte-carlo-markov-chain-mcmc-explained-94e3a6c8de11) 的形式。该过程中，像素状态根据一个简单的扩散过程逐渐更新，从而生成了一张新的图像。\n\n这个扩散过程被称为Diffusion过程，它的公式可以表示为：\n\n$$ x_{(t)} =x_{(t-1)} + \\sqrt{(1-\\beta^2)}\\epsilon_{(t)} +\\beta(z - x_{(t-1)}) $$\n\n其中，$ x_{(t)}$表示第$t$步之后的特征向量，在 Diffusion 过程中随机出现，$ z $是噪声向量，$\\beta$ 表示噪声的权重， $\\epsilon_{(t)}$代表了从噪声分布中提取的随机噪声。\n\n在Diffusion模型中，噪声的选择非常重要。噪声的大小和方向影响着模型的输出结果。因此，Diffusion模型需要在训练过程中调整不同的噪声方向，以找到最优的结果。\n\n## 三、实战操作：基于CLIP-Diffusion的狗狗图像生成\n基于Diffusion的图像生成模型已经在许多计算机视觉应用中得到了广泛的应用。其中，最著名的是OpenAI提出的CLIP-guided Diffusion（简称CLIP-Diffusion），它利用CLIP模型来指导Diffusion模型进行图像生成，得到了非常好的效果。除此之外，基于Diffusion的图像去噪、背景移除、图像修复等任务也有很好的应用。\n\n以CLIP-Diffusion为例，我们将介绍其基本原理和一个简单的示例。CLIP-Diffusion的主要思想是利用CLIP模型作为图像生成的指导器，在生成过程中优化噪声序列以最大化与目标描述符的相似度。下面我们将通过一个具体的图像生成实例来介绍这一过程。\n\n我们以一张狗的图片为目标图像$x$，并使用CLIP模型对其进行描述，得到一个文本描述符$h_{target}$。这里我们使用OpenAI提供的CLIP预训练模型，代码如下：\n\n```python\nimport torch\nimport clip\nimport numpy as np\nfrom PIL import Image\n\n# 加载CLIP模型和标签\nmodel, preprocess = clip.load('ViT-B/32', device='cpu')\nlabels = ['dog']\n\n# 加载目标图像，并将其转换为PyTorch Tensor\nimg = Image.open('/path/to/image.jpg')\nimg_input = preprocess(img).unsqueeze(0)\n\n# 使用CLIP模型对目标图像进行描述\nwith torch.no_grad():\n    text_input = clip.tokenize(labels).to(model.device)\n    target_features = model.encode_image(img_input)\n    target_text_features = model.encode_text(text_input)\n    h_target = torch.cat([target_features, target_text_features], dim=-1)\n```\n接下来，我们初始化一组随机噪声序列$z_0,z_1,\\ldots,z_T$，并使用Diffusion模型来优化这些噪声序列，使其生成的图片与目标描述符$h_{target}$相似度最大化：\n\n```python\nimport torch.nn.functional as F\n\nclass Diffusion(nn.Module):\n    def __init__(self, T, sigma):\n        super(Diffusion, self).__init__()\n        self.T = T\n        self.sigma = sigma\n        self.f = nn.Sequential(\n            nn.Conv2d(3, 64, 3, stride=1, padding=1),\n            nn.ReLU(inplace=True),\n            nn.Conv2d(64, 64, 3, stride=1, padding=1),\n            nn.ReLU(inplace=True),\n            nn.Conv2d(64, 3, 3, stride=1, padding=1),\n        )\n\n    def forward(self, z_0, h_target):\n        for t in range(self.T):\n            epsilon_t = torch.randn_like(z_0) * self.sigma\n            z_t = z_0.detach().requires_grad_(True)\n            x_t = self.f(z_t)\n            h_t = model.encode_image(x_t)\n            loss = -F.cosine_similarity(h_t, h_target, dim=-1).mean()\n            grad_z_t = torch.autograd.grad(loss, z_t)[0]\n            z_0 = z_t + self.sigma**2 * grad_z_t - epsilon_t\n        return x_t\n```\n\n在训练过程中，我们使用反向传播来计算噪声序列的梯度，并更新每个时间步的噪声序列。最后，根据最优噪声序列生成一张与目标描述符$h_{target}$相似度最高的图像：\n\n```python\ndiffusion = Diffusion(T=1000, sigma=0.01)\noptimizer = torch.optim.Adam(diffusion.parameters(), lr=1e-3)\n\nfor i in range(500):\n    optimizer.zero_grad()\n    x_pred = diffusion(z_0, h_target)\n    loss = -F.cosine_similarity(model.encode_image(x_pred), h_target, dim=-1).mean()\n    loss.backward()\n    optimizer.step()\n\n# 将预测图像从Tensor转换为PIL Image并展示\nimg_pred = Image.fromarray(x_pred.squeeze().numpy())\nimg_pred.show()\n```\n\n## 参考文献（带链接）\n1. [Diffusion Models: A Comprehensive Survey of Methods and Applications](https://arxiv.org/abs/2209.00796)\n2. [变分自编码器（VAE）的本质：使用神经网络实现变分推断的计算](https://cslijt.github.io/LiJT-Daily/2023/03/20/2023-03-20-vae/)\n3. [详解CLIP (二) | 简易使用CLIP-PyTorch预训练模型进行图像预测](https://zhuanlan.zhihu.com/p/524247403)\n4. [Monte Carlo Markov Chain (MCMC), Explained](https://towardsdatascience.com/monte-carlo-markov-chain-mcmc-explained-94e3a6c8de11)\n\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: decodeURI(window.location.pathname),\n            distractionFreeMode: true // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","slug":"2023-04-04-diffusion","published":1,"updated":"2023-04-04T05:32:40.043Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cludw9na3002r9wv974xj883p","content":"<p>计算机视觉领域的发展，给人们的生活带来了极大的方便和改变。随着深度学习的发展，图像生成也变得更加复杂和精细。在图像生成领域，一种基于Diffusion的新型的生成模型方法已经开始受到越来越多的关注。这种方法不同于传统的生成模型，它的训练过程是通过迭代实现的，优点在于利用了图像信息中的空间相关性，从而可以更好地增强像素之间的连贯性。本文主要介绍基于Diffusion的图像生成模型原理，以及其在实践中的应用。</p>\n<span id=\"more\"></span>\n<h2 id=\"一、研究背景\"><a href=\"#一、研究背景\" class=\"headerlink\" title=\"一、研究背景\"></a>一、研究背景</h2><p>在深度学习的研究中，生成模型一直是一个重要的领域。生成模型的作用是通过对真实数据的建模来生成一些新的数据。在图像分析领域，生成模型可以用于生成与当前人工画和自然景物一致的物体，从而为视觉识别，3D打印等应用提供更好的支持。传统的生成模型主要包括自回归型和<a href=\"https://cslijt.github.io/LiJT-Daily/2023/03/20/2023-03-20-vae/\">变分自编码器型(VAE)</a>。</p>\n<p>在自回归型生成模型中，生成器是在时间步上构建的，它需要将每个时间步的输入从一个先前的状态转移到下一个状态中，并且需要保证为生成k个时间步所需的计算复杂度能够接受。因此，这个生成模型的计算效率比较低，往往需要极长的运行时间。</p>\n<p>在变分自编码器型(VAE)生成模型中，我们试图学习一个对于生成数据分布的潜在空间。然而，由于在潜在空间中的采样是随机的，因此在生成的图像中往往会产生一些缺陷和问题。</p>\n<h2 id=\"二、原理介绍\"><a href=\"#二、原理介绍\" class=\"headerlink\" title=\"二、原理介绍\"></a>二、原理介绍</h2><p>基于Diffusion的生成模型，是一种结合了自回归模型和VAE模型的主要思想的生成模型。它通过在反向传播时，将图像的空间信息转化为像素间的空间相关性来解决传统模型的问题。</p>\n<p>Diffusion模型采用过程建模，假设当前像素的状态是来自其周围像素的状态。具体的， Diffusion模型中的生成器采取的是<a href=\"https://towardsdatascience.com/monte-carlo-markov-chain-mcmc-explained-94e3a6c8de11\">蒙特卡罗马尔科夫链(MCMC)</a> 的形式。该过程中，像素状态根据一个简单的扩散过程逐渐更新，从而生成了一张新的图像。</p>\n<p>这个扩散过程被称为Diffusion过程，它的公式可以表示为：</p>\n<script type=\"math/tex; mode=display\">x_{(t)} =x_{(t-1)} + \\sqrt{(1-\\beta^2)}\\epsilon_{(t)} +\\beta(z - x_{(t-1)})</script><p>其中，<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.8ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"3.304ex\" height=\"1.8ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 1460.4 795.5\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></g><g data-mml-node=\"TeXAtom\" transform=\"translate(605,-176.7) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mo\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(389,0)\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(750,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></g></g></svg></mjx-container>表示第<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"0.817ex\" height=\"1.441ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -626 361 637\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path></g></g></g></svg></mjx-container>步之后的特征向量，在 Diffusion 过程中随机出现，<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.052ex\" height=\"1.025ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 465 453\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D467\" d=\"M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z\"></path></g></g></g></svg></mjx-container>是噪声向量，<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.439ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.281ex\" height=\"2.034ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -705 566 899\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D6FD\" d=\"M29 -194Q23 -188 23 -186Q23 -183 102 134T186 465Q208 533 243 584T309 658Q365 705 429 705H431Q493 705 533 667T573 570Q573 465 469 396L482 383Q533 332 533 252Q533 139 448 65T257 -10Q227 -10 203 -2T165 17T143 40T131 59T126 65L62 -188Q60 -194 42 -194H29ZM353 431Q392 431 427 419L432 422Q436 426 439 429T449 439T461 453T472 471T484 495T493 524T501 560Q503 569 503 593Q503 611 502 616Q487 667 426 667Q384 667 347 643T286 582T247 514T224 455Q219 439 186 308T152 168Q151 163 151 147Q151 99 173 68Q204 26 260 26Q302 26 349 51T425 137Q441 171 449 214T457 279Q457 337 422 372Q380 358 347 358H337Q258 358 258 389Q258 396 261 403Q275 431 353 431Z\"></path></g></g></g></svg></mjx-container> 表示噪声的权重， <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.8ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.928ex\" height=\"1.775ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -431 1294.4 784.5\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D716\" d=\"M227 -11Q149 -11 95 41T40 174Q40 262 87 322Q121 367 173 396T287 430Q289 431 329 431H367Q382 426 382 411Q382 385 341 385H325H312Q191 385 154 277L150 265H327Q340 256 340 246Q340 228 320 219H138V217Q128 187 128 143Q128 77 160 52T231 26Q258 26 284 36T326 57T343 68Q350 68 354 58T358 39Q358 36 357 35Q354 31 337 21T289 0T227 -11Z\"></path></g><g data-mml-node=\"TeXAtom\" transform=\"translate(439,-176.7) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mo\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(389,0)\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(750,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></g></g></svg></mjx-container>代表了从噪声分布中提取的随机噪声。</p>\n<p>在Diffusion模型中，噪声的选择非常重要。噪声的大小和方向影响着模型的输出结果。因此，Diffusion模型需要在训练过程中调整不同的噪声方向，以找到最优的结果。</p>\n<h2 id=\"三、实战操作：基于CLIP-Diffusion的狗狗图像生成\"><a href=\"#三、实战操作：基于CLIP-Diffusion的狗狗图像生成\" class=\"headerlink\" title=\"三、实战操作：基于CLIP-Diffusion的狗狗图像生成\"></a>三、实战操作：基于CLIP-Diffusion的狗狗图像生成</h2><p>基于Diffusion的图像生成模型已经在许多计算机视觉应用中得到了广泛的应用。其中，最著名的是OpenAI提出的CLIP-guided Diffusion（简称CLIP-Diffusion），它利用CLIP模型来指导Diffusion模型进行图像生成，得到了非常好的效果。除此之外，基于Diffusion的图像去噪、背景移除、图像修复等任务也有很好的应用。</p>\n<p>以CLIP-Diffusion为例，我们将介绍其基本原理和一个简单的示例。CLIP-Diffusion的主要思想是利用CLIP模型作为图像生成的指导器，在生成过程中优化噪声序列以最大化与目标描述符的相似度。下面我们将通过一个具体的图像生成实例来介绍这一过程。</p>\n<p>我们以一张狗的图片为目标图像<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.294ex\" height=\"1.025ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 572 453\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></g></g></g></svg></mjx-container>，并使用CLIP模型对其进行描述，得到一个文本描述符<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.667ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.722ex\" height=\"2.237ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -694 2529.3 989\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"210E\" d=\"M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z\"></path></g><g data-mml-node=\"TeXAtom\" transform=\"translate(609,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(361,0)\"><path data-c=\"1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(890,0)\"><path data-c=\"1D45F\" d=\"M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1341,0)\"><path data-c=\"1D454\" d=\"M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1818,0)\"><path data-c=\"1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2284,0)\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path></g></g></g></g></g></svg></mjx-container>。这里我们使用OpenAI提供的CLIP预训练模型，代码如下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> torch</span><br><span class=\"line\"><span class=\"keyword\">import</span> clip</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">from</span> PIL <span class=\"keyword\">import</span> Image</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 加载CLIP模型和标签</span></span><br><span class=\"line\">model, preprocess = clip.load(<span class=\"string\">'ViT-B/32'</span>, device=<span class=\"string\">'cpu'</span>)</span><br><span class=\"line\">labels = [<span class=\"string\">'dog'</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 加载目标图像，并将其转换为PyTorch Tensor</span></span><br><span class=\"line\">img = Image.<span class=\"built_in\">open</span>(<span class=\"string\">'/path/to/image.jpg'</span>)</span><br><span class=\"line\">img_input = preprocess(img).unsqueeze(<span class=\"number\">0</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 使用CLIP模型对目标图像进行描述</span></span><br><span class=\"line\"><span class=\"keyword\">with</span> torch.no_grad():</span><br><span class=\"line\">    text_input = clip.tokenize(labels).to(model.device)</span><br><span class=\"line\">    target_features = model.encode_image(img_input)</span><br><span class=\"line\">    target_text_features = model.encode_text(text_input)</span><br><span class=\"line\">    h_target = torch.cat([target_features, target_text_features], dim=-<span class=\"number\">1</span>)</span><br></pre></td></tr></table></figure>\n<p>接下来，我们初始化一组随机噪声序列<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.439ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"12.492ex\" height=\"1.439ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 5521.6 636\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D467\" d=\"M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(498,-150) scale(0.707)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(901.6,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(1346.2,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D467\" d=\"M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(498,-150) scale(0.707)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(2247.8,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2692.4,0)\"><path data-c=\"2026\" d=\"M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60ZM525 60Q525 84 542 102T585 120Q609 120 627 104T646 61Q646 36 629 18T586 0T543 17T525 60ZM972 60Q972 84 989 102T1032 120Q1056 120 1074 104T1093 61Q1093 36 1076 18T1033 0T990 17T972 60Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4031.1,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(4475.8,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D467\" d=\"M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(498,-150) scale(0.707)\"><path data-c=\"1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></g></g></g></g></svg></mjx-container>，并使用Diffusion模型来优化这些噪声序列，使其生成的图片与目标描述符<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.667ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.722ex\" height=\"2.237ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -694 2529.3 989\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"210E\" d=\"M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z\"></path></g><g data-mml-node=\"TeXAtom\" transform=\"translate(609,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(361,0)\"><path data-c=\"1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(890,0)\"><path data-c=\"1D45F\" d=\"M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1341,0)\"><path data-c=\"1D454\" d=\"M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1818,0)\"><path data-c=\"1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2284,0)\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path></g></g></g></g></g></svg></mjx-container>相似度最大化：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> torch.nn.functional <span class=\"keyword\">as</span> F</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Diffusion</span>(nn.Module):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, T, sigma</span>):</span><br><span class=\"line\">        <span class=\"built_in\">super</span>(Diffusion, self).__init__()</span><br><span class=\"line\">        self.T = T</span><br><span class=\"line\">        self.sigma = sigma</span><br><span class=\"line\">        self.f = nn.Sequential(</span><br><span class=\"line\">            nn.Conv2d(<span class=\"number\">3</span>, <span class=\"number\">64</span>, <span class=\"number\">3</span>, stride=<span class=\"number\">1</span>, padding=<span class=\"number\">1</span>),</span><br><span class=\"line\">            nn.ReLU(inplace=<span class=\"literal\">True</span>),</span><br><span class=\"line\">            nn.Conv2d(<span class=\"number\">64</span>, <span class=\"number\">64</span>, <span class=\"number\">3</span>, stride=<span class=\"number\">1</span>, padding=<span class=\"number\">1</span>),</span><br><span class=\"line\">            nn.ReLU(inplace=<span class=\"literal\">True</span>),</span><br><span class=\"line\">            nn.Conv2d(<span class=\"number\">64</span>, <span class=\"number\">3</span>, <span class=\"number\">3</span>, stride=<span class=\"number\">1</span>, padding=<span class=\"number\">1</span>),</span><br><span class=\"line\">        )</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">forward</span>(<span class=\"params\">self, z_0, h_target</span>):</span><br><span class=\"line\">        <span class=\"keyword\">for</span> t <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(self.T):</span><br><span class=\"line\">            epsilon_t = torch.randn_like(z_0) * self.sigma</span><br><span class=\"line\">            z_t = z_0.detach().requires_grad_(<span class=\"literal\">True</span>)</span><br><span class=\"line\">            x_t = self.f(z_t)</span><br><span class=\"line\">            h_t = model.encode_image(x_t)</span><br><span class=\"line\">            loss = -F.cosine_similarity(h_t, h_target, dim=-<span class=\"number\">1</span>).mean()</span><br><span class=\"line\">            grad_z_t = torch.autograd.grad(loss, z_t)[<span class=\"number\">0</span>]</span><br><span class=\"line\">            z_0 = z_t + self.sigma**<span class=\"number\">2</span> * grad_z_t - epsilon_t</span><br><span class=\"line\">        <span class=\"keyword\">return</span> x_t</span><br></pre></td></tr></table></figure>\n<p>在训练过程中，我们使用反向传播来计算噪声序列的梯度，并更新每个时间步的噪声序列。最后，根据最优噪声序列生成一张与目标描述符<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.667ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.722ex\" height=\"2.237ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -694 2529.3 989\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"210E\" d=\"M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z\"></path></g><g data-mml-node=\"TeXAtom\" transform=\"translate(609,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(361,0)\"><path data-c=\"1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(890,0)\"><path data-c=\"1D45F\" d=\"M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1341,0)\"><path data-c=\"1D454\" d=\"M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1818,0)\"><path data-c=\"1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2284,0)\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path></g></g></g></g></g></svg></mjx-container>相似度最高的图像：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">diffusion = Diffusion(T=<span class=\"number\">1000</span>, sigma=<span class=\"number\">0.01</span>)</span><br><span class=\"line\">optimizer = torch.optim.Adam(diffusion.parameters(), lr=<span class=\"number\">1e-3</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">500</span>):</span><br><span class=\"line\">    optimizer.zero_grad()</span><br><span class=\"line\">    x_pred = diffusion(z_0, h_target)</span><br><span class=\"line\">    loss = -F.cosine_similarity(model.encode_image(x_pred), h_target, dim=-<span class=\"number\">1</span>).mean()</span><br><span class=\"line\">    loss.backward()</span><br><span class=\"line\">    optimizer.step()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将预测图像从Tensor转换为PIL Image并展示</span></span><br><span class=\"line\">img_pred = Image.fromarray(x_pred.squeeze().numpy())</span><br><span class=\"line\">img_pred.show()</span><br></pre></td></tr></table></figure>\n<h2 id=\"参考文献（带链接）\"><a href=\"#参考文献（带链接）\" class=\"headerlink\" title=\"参考文献（带链接）\"></a>参考文献（带链接）</h2><ol>\n<li><a href=\"https://arxiv.org/abs/2209.00796\">Diffusion Models: A Comprehensive Survey of Methods and Applications</a></li>\n<li><a href=\"https://cslijt.github.io/LiJT-Daily/2023/03/20/2023-03-20-vae/\">变分自编码器（VAE）的本质：使用神经网络实现变分推断的计算</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/524247403\">详解CLIP (二) | 简易使用CLIP-PyTorch预训练模型进行图像预测</a></li>\n<li><a href=\"https://towardsdatascience.com/monte-carlo-markov-chain-mcmc-explained-94e3a6c8de11\">Monte Carlo Markov Chain (MCMC), Explained</a></li>\n</ol>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: decodeURI(window.location.pathname),\n            distractionFreeMode: true // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","site":{"data":{}},"length":3743,"excerpt":"<p>计算机视觉领域的发展，给人们的生活带来了极大的方便和改变。随着深度学习的发展，图像生成也变得更加复杂和精细。在图像生成领域，一种基于Diffusion的新型的生成模型方法已经开始受到越来越多的关注。这种方法不同于传统的生成模型，它的训练过程是通过迭代实现的，优点在于利用了图像信息中的空间相关性，从而可以更好地增强像素之间的连贯性。本文主要介绍基于Diffusion的图像生成模型原理，以及其在实践中的应用。</p>","more":"<h2 id=\"一、研究背景\"><a href=\"#一、研究背景\" class=\"headerlink\" title=\"一、研究背景\"></a>一、研究背景</h2><p>在深度学习的研究中，生成模型一直是一个重要的领域。生成模型的作用是通过对真实数据的建模来生成一些新的数据。在图像分析领域，生成模型可以用于生成与当前人工画和自然景物一致的物体，从而为视觉识别，3D打印等应用提供更好的支持。传统的生成模型主要包括自回归型和<a href=\"https://cslijt.github.io/LiJT-Daily/2023/03/20/2023-03-20-vae/\">变分自编码器型(VAE)</a>。</p>\n<p>在自回归型生成模型中，生成器是在时间步上构建的，它需要将每个时间步的输入从一个先前的状态转移到下一个状态中，并且需要保证为生成k个时间步所需的计算复杂度能够接受。因此，这个生成模型的计算效率比较低，往往需要极长的运行时间。</p>\n<p>在变分自编码器型(VAE)生成模型中，我们试图学习一个对于生成数据分布的潜在空间。然而，由于在潜在空间中的采样是随机的，因此在生成的图像中往往会产生一些缺陷和问题。</p>\n<h2 id=\"二、原理介绍\"><a href=\"#二、原理介绍\" class=\"headerlink\" title=\"二、原理介绍\"></a>二、原理介绍</h2><p>基于Diffusion的生成模型，是一种结合了自回归模型和VAE模型的主要思想的生成模型。它通过在反向传播时，将图像的空间信息转化为像素间的空间相关性来解决传统模型的问题。</p>\n<p>Diffusion模型采用过程建模，假设当前像素的状态是来自其周围像素的状态。具体的， Diffusion模型中的生成器采取的是<a href=\"https://towardsdatascience.com/monte-carlo-markov-chain-mcmc-explained-94e3a6c8de11\">蒙特卡罗马尔科夫链(MCMC)</a> 的形式。该过程中，像素状态根据一个简单的扩散过程逐渐更新，从而生成了一张新的图像。</p>\n<p>这个扩散过程被称为Diffusion过程，它的公式可以表示为：</p>\n<script type=\"math/tex; mode=display\">x_{(t)} =x_{(t-1)} + \\sqrt{(1-\\beta^2)}\\epsilon_{(t)} +\\beta(z - x_{(t-1)})</script><p>其中，<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.8ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"3.304ex\" height=\"1.8ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 1460.4 795.5\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></g><g data-mml-node=\"TeXAtom\" transform=\"translate(605,-176.7) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mo\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(389,0)\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(750,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></g></g></svg></mjx-container>表示第<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"0.817ex\" height=\"1.441ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -626 361 637\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path></g></g></g></svg></mjx-container>步之后的特征向量，在 Diffusion 过程中随机出现，<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.052ex\" height=\"1.025ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 465 453\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D467\" d=\"M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z\"></path></g></g></g></svg></mjx-container>是噪声向量，<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.439ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.281ex\" height=\"2.034ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -705 566 899\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D6FD\" d=\"M29 -194Q23 -188 23 -186Q23 -183 102 134T186 465Q208 533 243 584T309 658Q365 705 429 705H431Q493 705 533 667T573 570Q573 465 469 396L482 383Q533 332 533 252Q533 139 448 65T257 -10Q227 -10 203 -2T165 17T143 40T131 59T126 65L62 -188Q60 -194 42 -194H29ZM353 431Q392 431 427 419L432 422Q436 426 439 429T449 439T461 453T472 471T484 495T493 524T501 560Q503 569 503 593Q503 611 502 616Q487 667 426 667Q384 667 347 643T286 582T247 514T224 455Q219 439 186 308T152 168Q151 163 151 147Q151 99 173 68Q204 26 260 26Q302 26 349 51T425 137Q441 171 449 214T457 279Q457 337 422 372Q380 358 347 358H337Q258 358 258 389Q258 396 261 403Q275 431 353 431Z\"></path></g></g></g></svg></mjx-container> 表示噪声的权重， <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.8ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.928ex\" height=\"1.775ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -431 1294.4 784.5\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D716\" d=\"M227 -11Q149 -11 95 41T40 174Q40 262 87 322Q121 367 173 396T287 430Q289 431 329 431H367Q382 426 382 411Q382 385 341 385H325H312Q191 385 154 277L150 265H327Q340 256 340 246Q340 228 320 219H138V217Q128 187 128 143Q128 77 160 52T231 26Q258 26 284 36T326 57T343 68Q350 68 354 58T358 39Q358 36 357 35Q354 31 337 21T289 0T227 -11Z\"></path></g><g data-mml-node=\"TeXAtom\" transform=\"translate(439,-176.7) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mo\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(389,0)\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(750,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></g></g></svg></mjx-container>代表了从噪声分布中提取的随机噪声。</p>\n<p>在Diffusion模型中，噪声的选择非常重要。噪声的大小和方向影响着模型的输出结果。因此，Diffusion模型需要在训练过程中调整不同的噪声方向，以找到最优的结果。</p>\n<h2 id=\"三、实战操作：基于CLIP-Diffusion的狗狗图像生成\"><a href=\"#三、实战操作：基于CLIP-Diffusion的狗狗图像生成\" class=\"headerlink\" title=\"三、实战操作：基于CLIP-Diffusion的狗狗图像生成\"></a>三、实战操作：基于CLIP-Diffusion的狗狗图像生成</h2><p>基于Diffusion的图像生成模型已经在许多计算机视觉应用中得到了广泛的应用。其中，最著名的是OpenAI提出的CLIP-guided Diffusion（简称CLIP-Diffusion），它利用CLIP模型来指导Diffusion模型进行图像生成，得到了非常好的效果。除此之外，基于Diffusion的图像去噪、背景移除、图像修复等任务也有很好的应用。</p>\n<p>以CLIP-Diffusion为例，我们将介绍其基本原理和一个简单的示例。CLIP-Diffusion的主要思想是利用CLIP模型作为图像生成的指导器，在生成过程中优化噪声序列以最大化与目标描述符的相似度。下面我们将通过一个具体的图像生成实例来介绍这一过程。</p>\n<p>我们以一张狗的图片为目标图像<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.294ex\" height=\"1.025ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 572 453\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></g></g></g></svg></mjx-container>，并使用CLIP模型对其进行描述，得到一个文本描述符<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.667ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.722ex\" height=\"2.237ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -694 2529.3 989\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"210E\" d=\"M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z\"></path></g><g data-mml-node=\"TeXAtom\" transform=\"translate(609,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(361,0)\"><path data-c=\"1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(890,0)\"><path data-c=\"1D45F\" d=\"M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1341,0)\"><path data-c=\"1D454\" d=\"M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1818,0)\"><path data-c=\"1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2284,0)\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path></g></g></g></g></g></svg></mjx-container>。这里我们使用OpenAI提供的CLIP预训练模型，代码如下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> torch</span><br><span class=\"line\"><span class=\"keyword\">import</span> clip</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">from</span> PIL <span class=\"keyword\">import</span> Image</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 加载CLIP模型和标签</span></span><br><span class=\"line\">model, preprocess = clip.load(<span class=\"string\">'ViT-B/32'</span>, device=<span class=\"string\">'cpu'</span>)</span><br><span class=\"line\">labels = [<span class=\"string\">'dog'</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 加载目标图像，并将其转换为PyTorch Tensor</span></span><br><span class=\"line\">img = Image.<span class=\"built_in\">open</span>(<span class=\"string\">'/path/to/image.jpg'</span>)</span><br><span class=\"line\">img_input = preprocess(img).unsqueeze(<span class=\"number\">0</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 使用CLIP模型对目标图像进行描述</span></span><br><span class=\"line\"><span class=\"keyword\">with</span> torch.no_grad():</span><br><span class=\"line\">    text_input = clip.tokenize(labels).to(model.device)</span><br><span class=\"line\">    target_features = model.encode_image(img_input)</span><br><span class=\"line\">    target_text_features = model.encode_text(text_input)</span><br><span class=\"line\">    h_target = torch.cat([target_features, target_text_features], dim=-<span class=\"number\">1</span>)</span><br></pre></td></tr></table></figure>\n<p>接下来，我们初始化一组随机噪声序列<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.439ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"12.492ex\" height=\"1.439ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 5521.6 636\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D467\" d=\"M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(498,-150) scale(0.707)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(901.6,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(1346.2,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D467\" d=\"M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(498,-150) scale(0.707)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(2247.8,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2692.4,0)\"><path data-c=\"2026\" d=\"M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60ZM525 60Q525 84 542 102T585 120Q609 120 627 104T646 61Q646 36 629 18T586 0T543 17T525 60ZM972 60Q972 84 989 102T1032 120Q1056 120 1074 104T1093 61Q1093 36 1076 18T1033 0T990 17T972 60Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4031.1,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(4475.8,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D467\" d=\"M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(498,-150) scale(0.707)\"><path data-c=\"1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></g></g></g></g></svg></mjx-container>，并使用Diffusion模型来优化这些噪声序列，使其生成的图片与目标描述符<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.667ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.722ex\" height=\"2.237ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -694 2529.3 989\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"210E\" d=\"M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z\"></path></g><g data-mml-node=\"TeXAtom\" transform=\"translate(609,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(361,0)\"><path data-c=\"1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(890,0)\"><path data-c=\"1D45F\" d=\"M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1341,0)\"><path data-c=\"1D454\" d=\"M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1818,0)\"><path data-c=\"1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2284,0)\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path></g></g></g></g></g></svg></mjx-container>相似度最大化：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> torch.nn.functional <span class=\"keyword\">as</span> F</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Diffusion</span>(nn.Module):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, T, sigma</span>):</span><br><span class=\"line\">        <span class=\"built_in\">super</span>(Diffusion, self).__init__()</span><br><span class=\"line\">        self.T = T</span><br><span class=\"line\">        self.sigma = sigma</span><br><span class=\"line\">        self.f = nn.Sequential(</span><br><span class=\"line\">            nn.Conv2d(<span class=\"number\">3</span>, <span class=\"number\">64</span>, <span class=\"number\">3</span>, stride=<span class=\"number\">1</span>, padding=<span class=\"number\">1</span>),</span><br><span class=\"line\">            nn.ReLU(inplace=<span class=\"literal\">True</span>),</span><br><span class=\"line\">            nn.Conv2d(<span class=\"number\">64</span>, <span class=\"number\">64</span>, <span class=\"number\">3</span>, stride=<span class=\"number\">1</span>, padding=<span class=\"number\">1</span>),</span><br><span class=\"line\">            nn.ReLU(inplace=<span class=\"literal\">True</span>),</span><br><span class=\"line\">            nn.Conv2d(<span class=\"number\">64</span>, <span class=\"number\">3</span>, <span class=\"number\">3</span>, stride=<span class=\"number\">1</span>, padding=<span class=\"number\">1</span>),</span><br><span class=\"line\">        )</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">forward</span>(<span class=\"params\">self, z_0, h_target</span>):</span><br><span class=\"line\">        <span class=\"keyword\">for</span> t <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(self.T):</span><br><span class=\"line\">            epsilon_t = torch.randn_like(z_0) * self.sigma</span><br><span class=\"line\">            z_t = z_0.detach().requires_grad_(<span class=\"literal\">True</span>)</span><br><span class=\"line\">            x_t = self.f(z_t)</span><br><span class=\"line\">            h_t = model.encode_image(x_t)</span><br><span class=\"line\">            loss = -F.cosine_similarity(h_t, h_target, dim=-<span class=\"number\">1</span>).mean()</span><br><span class=\"line\">            grad_z_t = torch.autograd.grad(loss, z_t)[<span class=\"number\">0</span>]</span><br><span class=\"line\">            z_0 = z_t + self.sigma**<span class=\"number\">2</span> * grad_z_t - epsilon_t</span><br><span class=\"line\">        <span class=\"keyword\">return</span> x_t</span><br></pre></td></tr></table></figure>\n<p>在训练过程中，我们使用反向传播来计算噪声序列的梯度，并更新每个时间步的噪声序列。最后，根据最优噪声序列生成一张与目标描述符<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.667ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.722ex\" height=\"2.237ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -694 2529.3 989\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"210E\" d=\"M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z\"></path></g><g data-mml-node=\"TeXAtom\" transform=\"translate(609,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(361,0)\"><path data-c=\"1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(890,0)\"><path data-c=\"1D45F\" d=\"M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1341,0)\"><path data-c=\"1D454\" d=\"M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1818,0)\"><path data-c=\"1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2284,0)\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path></g></g></g></g></g></svg></mjx-container>相似度最高的图像：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">diffusion = Diffusion(T=<span class=\"number\">1000</span>, sigma=<span class=\"number\">0.01</span>)</span><br><span class=\"line\">optimizer = torch.optim.Adam(diffusion.parameters(), lr=<span class=\"number\">1e-3</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">500</span>):</span><br><span class=\"line\">    optimizer.zero_grad()</span><br><span class=\"line\">    x_pred = diffusion(z_0, h_target)</span><br><span class=\"line\">    loss = -F.cosine_similarity(model.encode_image(x_pred), h_target, dim=-<span class=\"number\">1</span>).mean()</span><br><span class=\"line\">    loss.backward()</span><br><span class=\"line\">    optimizer.step()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将预测图像从Tensor转换为PIL Image并展示</span></span><br><span class=\"line\">img_pred = Image.fromarray(x_pred.squeeze().numpy())</span><br><span class=\"line\">img_pred.show()</span><br></pre></td></tr></table></figure>\n<h2 id=\"参考文献（带链接）\"><a href=\"#参考文献（带链接）\" class=\"headerlink\" title=\"参考文献（带链接）\"></a>参考文献（带链接）</h2><ol>\n<li><a href=\"https://arxiv.org/abs/2209.00796\">Diffusion Models: A Comprehensive Survey of Methods and Applications</a></li>\n<li><a href=\"https://cslijt.github.io/LiJT-Daily/2023/03/20/2023-03-20-vae/\">变分自编码器（VAE）的本质：使用神经网络实现变分推断的计算</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/524247403\">详解CLIP (二) | 简易使用CLIP-PyTorch预训练模型进行图像预测</a></li>\n<li><a href=\"https://towardsdatascience.com/monte-carlo-markov-chain-mcmc-explained-94e3a6c8de11\">Monte Carlo Markov Chain (MCMC), Explained</a></li>\n</ol>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: decodeURI(window.location.pathname),\n            distractionFreeMode: true // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>"},{"title":"MCMC的本质：使用马氏链建模复杂后验分布","mathjax":true,"codeblock":{"enable":true,"show_result":true},"date":"2023-04-07T03:03:53.000Z","_content":"\nMCMC（蒙特卡洛马尔可夫链）与VI（变分推断），可谓是贝叶斯推断之双雄。 —— 沃·兹基硕德\n\n<!--more-->\n\n## 背景\n### MCMC的提出动机\n- MCMC的提出，本质上是为了解决贝叶斯推断中，**复杂的后验分布难以建模的问题**。对于这一难题，变分推断的解决方案是，使用一个简单的分布族（如高斯分布）拟合该复杂分布。而MCMC的解决方案是，使用马尔科夫链去逼近这一真实的后验分布，并使用蒙特卡洛采样法从这一复杂分布中采样。MCMC本身是一个算法框架，并不拘泥于算法的实现方式。在MCMC方法中，代表算法实例包括[Metropolis-Hasting (MH)算法](https://en.wikipedia.org/wiki/Metropolis%E2%80%93Hastings_algorithm)和[Hamiltonian Monte Carlo (HMC)](https://en.wikipedia.org/wiki/Hamiltonian_Monte_Carlo)算法。\n\n### 回顾：贝叶斯推断\n- 无论是MCMC还是VI，其基本的理论框架均是贝叶斯推断，即研究如何从**隐变量的先验分布**和**观测变量关于隐变量的似然分布**，推断出**隐变量的后验分布**的问题。具体地，给定观测变量$D$和隐变量$\\theta$，贝叶斯推断基于如下的贝叶斯公式：\n$$\nP(\\theta|D) = \\frac{P(D|\\theta)P(\\theta)}{P(D)}= \\frac{P(D|\\theta)P(\\theta)}{\\int_{-\\infty}^{+\\infty}P(D|\\theta')P(\\theta')d\\theta'},\n$$\n其中$P(\\theta)$被称作**先验分布，通常是人为设定的**，$P(D|\\theta)$被称作**似然，是提前定义好的**（就是极大似然估计（MLE）中的“似然”），$P(\\theta|D)$被称作**后验分布，是需要我们推断的**，$P(D)$被称作**证据，是与隐变量无关并且难以测量的**（就是变分推断中证据下界的“证据”）。\n\n## MCMC的本质：使用马氏链建模复杂后验分布\n### 马尔科夫链的优良性质\n- MCMC的成功，依赖于马尔科夫链的**无记忆性**、**平稳性**和**细致平衡条件**。下面介绍这三个性质，并说明为什么MCMC能够有效建模隐变量的复杂后验分布：\n1. **无记忆性**：在给定当前状态下，未来的状态只与当前状态有关。\n   - 例如，假设一个由随机变量组成的链为$\\theta_1\\to\\theta_2\\to\\cdots\\to\\theta_T$，其中$\\theta_t,1\\leq t\\leq T$为该变量在时刻$t$的状态。则无记忆性可表示为：\n$$ \nP(\\theta_t|\\theta_{t-1},\\ldots,\\theta_1)=P(\\theta_t|\\theta_{t-1})\n$$\n1. **平稳性(stationarity)**：对于一个马尔科夫链，如果它满足某个条件，那么在经过充分长的时间后，它会达到一个平稳分布，即使初始状态不同，也最终会收敛到这个分布。\n   - 这一性质蕴含着，变量可以从一个随机初始状态出发，收敛到目标分布！\n2. **细节平衡条件(detailed balance sheet condition)**：为了保证MCMC算法的正确性和有效性，需要满足细节平衡条件。即，当马尔科夫链满足平稳分布时，对于任意两个状态之间的转移，从一个状态到另一个状态的概率与从另一个状态到该状态的概率之比应该等于两个状态在平稳分布上的概率之比。\n   - 具体地，假设随机变量$\\theta$的平稳分布为$p(\\theta)=\\pi(\\theta)$，马氏链的状态转移概率为$A$，则细致平衡条件可以表示为：\n$$\n\\pi(\\theta_a)\\cdot A(\\theta_a\\to \\theta_b) = \\pi(\\theta_b)\\cdot A(\\theta_b\\to \\theta_a)\n$$\n\n给定马尔科夫链的上述性质，MCMC的本质可以概括如下：\n\n> **利用马尔科夫链的平稳分布性质，可以通过构建一个符合平稳分布的马尔科夫链来生成服从该分布的样本。具体而言，MCMC方法采用一个迭代算法，在每一步中，根据当前隐变量状态利用转移概率生成一个新的隐变量状态，并以一定的概率接受这个新状态。反复进行这个过程，得到的一系列状态就是我们所需要的隐变量的样本。**\n\n### MCMC的工作流程\n\n1. 确定模型：需要建立一个概率模型，描述数据和未知参数之间的关系，即设计**似然函数**。\n2. 设计先验分布：为未知参数设定先验分布，反映对其可能取值的先验认识。尽量选择[**共轭先验分布**](https://zhuanlan.zhihu.com/p/401626004)，能够方便地进行后验推导（部分情况下，共轭先验分布难以选取，因此推导后验十分困难，这也是为什么需要MCMC）。\n3. 构建目标函数：根据贝叶斯公式，可以得到后验分布的形式（含分母，即证据$P(D)$）。为了使用MCMC方法，需要构建一个与后验分布成正比例的目标函数。\n4. 初始化状态：选择一个初始状态，即一组未知参数的值，并将其设置为马尔科夫链的起点。\n5. 进行迭代采样：采用MCMC算法，反复进行状态转移，在每一步中生成新的状态并接受或拒绝该状态。通过多次迭代，得到一串与后验分布成正比的随机样本。\n6. 分析结果：根据采样的样本，可以计算后验分布的各种统计量，如均值、方差、置信区间等。也可以通过可视化方法来呈现后验分布的特征，如直方图、密度图等。\n\n需要注意的是，MCMC方法的性能受到多个因素的影响，如初始状态的选择、采样步长的调整、马尔科夫链的收敛性等。因此，在实际应用中需要进行仔细的调参和诊断，以确保结果的可靠性和有效性。\n\n## MCMC的实例：Metropolis-Hasting算法\n- 判断一个算法是否是MCMC，其关键在于这一算法的正确性是否依赖于马氏链的**细节平衡条件**。其中，Metropolis-Hasting算法就是一个典型案例。\n\n## 参考文献\n1. https://towardsdatascience.com/monte-carlo-markov-chain-mcmc-explained-94e3a6c8de11\n2. https://zhuanlan.zhihu.com/p/411689417\n3. https://www.cnblogs.com/szqfreiburger/p/11828517.html\n4. https://en.wikipedia.org/wiki/Hamiltonian_Monte_Carlo\n5. https://en.wikipedia.org/wiki/Markov_chain_Monte_Carlo\n6. https://en.wikipedia.org/wiki/Metropolis%E2%80%93Hastings_algorithm\n7. https://zhuanlan.zhihu.com/p/401626004\n8. https://mc-stan.org/users/documentation/\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: decodeURI(window.location.pathname),\n            distractionFreeMode: true // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","source":"_posts/2023-04-07-mcmc.md","raw":"---\ntitle: MCMC的本质：使用马氏链建模复杂后验分布\nmathjax: true\ncodeblock:\n  enable: true\n  show_result: true\ndate: 2023-04-07 11:03:53\ntags: 学习笔记 贝叶斯推断\ncategories: 学习笔记\n---\n\nMCMC（蒙特卡洛马尔可夫链）与VI（变分推断），可谓是贝叶斯推断之双雄。 —— 沃·兹基硕德\n\n<!--more-->\n\n## 背景\n### MCMC的提出动机\n- MCMC的提出，本质上是为了解决贝叶斯推断中，**复杂的后验分布难以建模的问题**。对于这一难题，变分推断的解决方案是，使用一个简单的分布族（如高斯分布）拟合该复杂分布。而MCMC的解决方案是，使用马尔科夫链去逼近这一真实的后验分布，并使用蒙特卡洛采样法从这一复杂分布中采样。MCMC本身是一个算法框架，并不拘泥于算法的实现方式。在MCMC方法中，代表算法实例包括[Metropolis-Hasting (MH)算法](https://en.wikipedia.org/wiki/Metropolis%E2%80%93Hastings_algorithm)和[Hamiltonian Monte Carlo (HMC)](https://en.wikipedia.org/wiki/Hamiltonian_Monte_Carlo)算法。\n\n### 回顾：贝叶斯推断\n- 无论是MCMC还是VI，其基本的理论框架均是贝叶斯推断，即研究如何从**隐变量的先验分布**和**观测变量关于隐变量的似然分布**，推断出**隐变量的后验分布**的问题。具体地，给定观测变量$D$和隐变量$\\theta$，贝叶斯推断基于如下的贝叶斯公式：\n$$\nP(\\theta|D) = \\frac{P(D|\\theta)P(\\theta)}{P(D)}= \\frac{P(D|\\theta)P(\\theta)}{\\int_{-\\infty}^{+\\infty}P(D|\\theta')P(\\theta')d\\theta'},\n$$\n其中$P(\\theta)$被称作**先验分布，通常是人为设定的**，$P(D|\\theta)$被称作**似然，是提前定义好的**（就是极大似然估计（MLE）中的“似然”），$P(\\theta|D)$被称作**后验分布，是需要我们推断的**，$P(D)$被称作**证据，是与隐变量无关并且难以测量的**（就是变分推断中证据下界的“证据”）。\n\n## MCMC的本质：使用马氏链建模复杂后验分布\n### 马尔科夫链的优良性质\n- MCMC的成功，依赖于马尔科夫链的**无记忆性**、**平稳性**和**细致平衡条件**。下面介绍这三个性质，并说明为什么MCMC能够有效建模隐变量的复杂后验分布：\n1. **无记忆性**：在给定当前状态下，未来的状态只与当前状态有关。\n   - 例如，假设一个由随机变量组成的链为$\\theta_1\\to\\theta_2\\to\\cdots\\to\\theta_T$，其中$\\theta_t,1\\leq t\\leq T$为该变量在时刻$t$的状态。则无记忆性可表示为：\n$$ \nP(\\theta_t|\\theta_{t-1},\\ldots,\\theta_1)=P(\\theta_t|\\theta_{t-1})\n$$\n1. **平稳性(stationarity)**：对于一个马尔科夫链，如果它满足某个条件，那么在经过充分长的时间后，它会达到一个平稳分布，即使初始状态不同，也最终会收敛到这个分布。\n   - 这一性质蕴含着，变量可以从一个随机初始状态出发，收敛到目标分布！\n2. **细节平衡条件(detailed balance sheet condition)**：为了保证MCMC算法的正确性和有效性，需要满足细节平衡条件。即，当马尔科夫链满足平稳分布时，对于任意两个状态之间的转移，从一个状态到另一个状态的概率与从另一个状态到该状态的概率之比应该等于两个状态在平稳分布上的概率之比。\n   - 具体地，假设随机变量$\\theta$的平稳分布为$p(\\theta)=\\pi(\\theta)$，马氏链的状态转移概率为$A$，则细致平衡条件可以表示为：\n$$\n\\pi(\\theta_a)\\cdot A(\\theta_a\\to \\theta_b) = \\pi(\\theta_b)\\cdot A(\\theta_b\\to \\theta_a)\n$$\n\n给定马尔科夫链的上述性质，MCMC的本质可以概括如下：\n\n> **利用马尔科夫链的平稳分布性质，可以通过构建一个符合平稳分布的马尔科夫链来生成服从该分布的样本。具体而言，MCMC方法采用一个迭代算法，在每一步中，根据当前隐变量状态利用转移概率生成一个新的隐变量状态，并以一定的概率接受这个新状态。反复进行这个过程，得到的一系列状态就是我们所需要的隐变量的样本。**\n\n### MCMC的工作流程\n\n1. 确定模型：需要建立一个概率模型，描述数据和未知参数之间的关系，即设计**似然函数**。\n2. 设计先验分布：为未知参数设定先验分布，反映对其可能取值的先验认识。尽量选择[**共轭先验分布**](https://zhuanlan.zhihu.com/p/401626004)，能够方便地进行后验推导（部分情况下，共轭先验分布难以选取，因此推导后验十分困难，这也是为什么需要MCMC）。\n3. 构建目标函数：根据贝叶斯公式，可以得到后验分布的形式（含分母，即证据$P(D)$）。为了使用MCMC方法，需要构建一个与后验分布成正比例的目标函数。\n4. 初始化状态：选择一个初始状态，即一组未知参数的值，并将其设置为马尔科夫链的起点。\n5. 进行迭代采样：采用MCMC算法，反复进行状态转移，在每一步中生成新的状态并接受或拒绝该状态。通过多次迭代，得到一串与后验分布成正比的随机样本。\n6. 分析结果：根据采样的样本，可以计算后验分布的各种统计量，如均值、方差、置信区间等。也可以通过可视化方法来呈现后验分布的特征，如直方图、密度图等。\n\n需要注意的是，MCMC方法的性能受到多个因素的影响，如初始状态的选择、采样步长的调整、马尔科夫链的收敛性等。因此，在实际应用中需要进行仔细的调参和诊断，以确保结果的可靠性和有效性。\n\n## MCMC的实例：Metropolis-Hasting算法\n- 判断一个算法是否是MCMC，其关键在于这一算法的正确性是否依赖于马氏链的**细节平衡条件**。其中，Metropolis-Hasting算法就是一个典型案例。\n\n## 参考文献\n1. https://towardsdatascience.com/monte-carlo-markov-chain-mcmc-explained-94e3a6c8de11\n2. https://zhuanlan.zhihu.com/p/411689417\n3. https://www.cnblogs.com/szqfreiburger/p/11828517.html\n4. https://en.wikipedia.org/wiki/Hamiltonian_Monte_Carlo\n5. https://en.wikipedia.org/wiki/Markov_chain_Monte_Carlo\n6. https://en.wikipedia.org/wiki/Metropolis%E2%80%93Hastings_algorithm\n7. https://zhuanlan.zhihu.com/p/401626004\n8. https://mc-stan.org/users/documentation/\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: decodeURI(window.location.pathname),\n            distractionFreeMode: true // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","slug":"2023-04-07-mcmc","published":1,"updated":"2023-04-30T09:08:42.065Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cludw9na3002t9wv98y609xoq","content":"<p>MCMC（蒙特卡洛马尔可夫链）与VI（变分推断），可谓是贝叶斯推断之双雄。 —— 沃·兹基硕德</p>\n<span id=\"more\"></span>\n<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><h3 id=\"MCMC的提出动机\"><a href=\"#MCMC的提出动机\" class=\"headerlink\" title=\"MCMC的提出动机\"></a>MCMC的提出动机</h3><ul>\n<li>MCMC的提出，本质上是为了解决贝叶斯推断中，<strong>复杂的后验分布难以建模的问题</strong>。对于这一难题，变分推断的解决方案是，使用一个简单的分布族（如高斯分布）拟合该复杂分布。而MCMC的解决方案是，使用马尔科夫链去逼近这一真实的后验分布，并使用蒙特卡洛采样法从这一复杂分布中采样。MCMC本身是一个算法框架，并不拘泥于算法的实现方式。在MCMC方法中，代表算法实例包括<a href=\"https://en.wikipedia.org/wiki/Metropolis%E2%80%93Hastings_algorithm\">Metropolis-Hasting (MH)算法</a>和<a href=\"https://en.wikipedia.org/wiki/Hamiltonian_Monte_Carlo\">Hamiltonian Monte Carlo (HMC)</a>算法。</li>\n</ul>\n<h3 id=\"回顾：贝叶斯推断\"><a href=\"#回顾：贝叶斯推断\" class=\"headerlink\" title=\"回顾：贝叶斯推断\"></a>回顾：贝叶斯推断</h3><ul>\n<li>无论是MCMC还是VI，其基本的理论框架均是贝叶斯推断，即研究如何从<strong>隐变量的先验分布</strong>和<strong>观测变量关于隐变量的似然分布</strong>，推断出<strong>隐变量的后验分布</strong>的问题。具体地，给定观测变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.873ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 828 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D437\" d=\"M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z\"></path></g></g></g></svg></mjx-container>和隐变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.023ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.061ex\" height=\"1.618ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -705 469 715\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D703\" d=\"M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z\"></path></g></g></g></svg></mjx-container>，贝叶斯推断基于如下的贝叶斯公式：<script type=\"math/tex; mode=display\">\nP(\\theta|D) = \\frac{P(D|\\theta)P(\\theta)}{P(D)}= \\frac{P(D|\\theta)P(\\theta)}{\\int_{-\\infty}^{+\\infty}P(D|\\theta')P(\\theta')d\\theta'},</script>其中<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.52ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 1998 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(751,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1140,0)\"><path data-c=\"1D703\" d=\"M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1609,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>被称作<strong>先验分布，通常是人为设定的</strong>，<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"7.023ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 3104 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(751,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1140,0)\"><path data-c=\"1D437\" d=\"M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1968,0) translate(0 -0.5)\"><path data-c=\"7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2246,0)\"><path data-c=\"1D703\" d=\"M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2715,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>被称作<strong>似然，是提前定义好的</strong>（就是极大似然估计（MLE）中的“似然”），<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"7.023ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 3104 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(751,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1140,0)\"><path data-c=\"1D703\" d=\"M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1609,0) translate(0 -0.5)\"><path data-c=\"7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1887,0)\"><path data-c=\"1D437\" d=\"M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2715,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>被称作<strong>后验分布，是需要我们推断的</strong>，<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.333ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 2357 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(751,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1140,0)\"><path data-c=\"1D437\" d=\"M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1968,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>被称作<strong>证据，是与隐变量无关并且难以测量的</strong>（就是变分推断中证据下界的“证据”）。</li>\n</ul>\n<h2 id=\"MCMC的本质：使用马氏链建模复杂后验分布\"><a href=\"#MCMC的本质：使用马氏链建模复杂后验分布\" class=\"headerlink\" title=\"MCMC的本质：使用马氏链建模复杂后验分布\"></a>MCMC的本质：使用马氏链建模复杂后验分布</h2><h3 id=\"马尔科夫链的优良性质\"><a href=\"#马尔科夫链的优良性质\" class=\"headerlink\" title=\"马尔科夫链的优良性质\"></a>马尔科夫链的优良性质</h3><ul>\n<li>MCMC的成功，依赖于马尔科夫链的<strong>无记忆性</strong>、<strong>平稳性</strong>和<strong>细致平衡条件</strong>。下面介绍这三个性质，并说明为什么MCMC能够有效建模隐变量的复杂后验分布：</li>\n</ul>\n<ol>\n<li><strong>无记忆性</strong>：在给定当前状态下，未来的状态只与当前状态有关。<ul>\n<li>例如，假设一个由随机变量组成的链为<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.339ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"19.682ex\" height=\"1.934ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -705 8699.6 855\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D703\" d=\"M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(502,-150) scale(0.707)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(1183.3,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(2461.1,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D703\" d=\"M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(502,-150) scale(0.707)\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(3644.4,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4922.2,0)\"><path data-c=\"22EF\" d=\"M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250ZM525 250Q525 274 542 292T585 310Q609 310 627 294T646 251Q646 226 629 208T586 190T543 207T525 250ZM972 250Q972 274 989 292T1032 310Q1056 310 1074 294T1093 251Q1093 226 1076 208T1033 190T990 207T972 250Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6372,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(7649.8,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D703\" d=\"M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(502,-150) scale(0.707)\"><path data-c=\"1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></g></g></g></g></svg></mjx-container>，其中<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.439ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"12.407ex\" height=\"2.034ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -705 5484 899\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D703\" d=\"M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(502,-150) scale(0.707)\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(807.3,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(1251.9,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2029.7,0)\"><path data-c=\"2264\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3085.5,0)\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3724.3,0)\"><path data-c=\"2264\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4780,0)\"><path data-c=\"1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></g></g></g></svg></mjx-container>为该变量在时刻<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"0.817ex\" height=\"1.441ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -626 361 637\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path></g></g></g></svg></mjx-container>的状态。则无记忆性可表示为：<script type=\"math/tex; mode=display\">\nP(\\theta_t|\\theta_{t-1},\\ldots,\\theta_1)=P(\\theta_t|\\theta_{t-1})</script></li>\n</ul>\n</li>\n<li><strong>平稳性(stationarity)</strong>：对于一个马尔科夫链，如果它满足某个条件，那么在经过充分长的时间后，它会达到一个平稳分布，即使初始状态不同，也最终会收敛到这个分布。<ul>\n<li>这一性质蕴含着，变量可以从一个随机初始状态出发，收敛到目标分布！</li>\n</ul>\n</li>\n<li><strong>细节平衡条件(detailed balance sheet condition)</strong>：为了保证MCMC算法的正确性和有效性，需要满足细节平衡条件。即，当马尔科夫链满足平稳分布时，对于任意两个状态之间的转移，从一个状态到另一个状态的概率与从另一个状态到该状态的概率之比应该等于两个状态在平稳分布上的概率之比。<ul>\n<li>具体地，假设随机变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.023ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.061ex\" height=\"1.618ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -705 469 715\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D703\" d=\"M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z\"></path></g></g></g></svg></mjx-container>的平稳分布为<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"11.087ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 4900.6 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(503,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(892,0)\"><path data-c=\"1D703\" d=\"M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1361,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2027.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3083.6,0)\"><path data-c=\"1D70B\" d=\"M132 -11Q98 -11 98 22V33L111 61Q186 219 220 334L228 358H196Q158 358 142 355T103 336Q92 329 81 318T62 297T53 285Q51 284 38 284Q19 284 19 294Q19 300 38 329T93 391T164 429Q171 431 389 431Q549 431 553 430Q573 423 573 402Q573 371 541 360Q535 358 472 358H408L405 341Q393 269 393 222Q393 170 402 129T421 65T431 37Q431 20 417 5T381 -10Q370 -10 363 -7T347 17T331 77Q330 86 330 121Q330 170 339 226T357 318T367 358H269L268 354Q268 351 249 275T206 114T175 17Q164 -11 132 -11Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3653.6,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4042.6,0)\"><path data-c=\"1D703\" d=\"M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4511.6,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>，马氏链的状态转移概率为<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.697ex\" height=\"1.62ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 750 716\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g></g></g></svg></mjx-container>，则细致平衡条件可以表示为：<script type=\"math/tex; mode=display\">\n\\pi(\\theta_a)\\cdot A(\\theta_a\\to \\theta_b) = \\pi(\\theta_b)\\cdot A(\\theta_b\\to \\theta_a)</script></li>\n</ul>\n</li>\n</ol>\n<p>给定马尔科夫链的上述性质，MCMC的本质可以概括如下：</p>\n<blockquote>\n<p><strong>利用马尔科夫链的平稳分布性质，可以通过构建一个符合平稳分布的马尔科夫链来生成服从该分布的样本。具体而言，MCMC方法采用一个迭代算法，在每一步中，根据当前隐变量状态利用转移概率生成一个新的隐变量状态，并以一定的概率接受这个新状态。反复进行这个过程，得到的一系列状态就是我们所需要的隐变量的样本。</strong></p>\n</blockquote>\n<h3 id=\"MCMC的工作流程\"><a href=\"#MCMC的工作流程\" class=\"headerlink\" title=\"MCMC的工作流程\"></a>MCMC的工作流程</h3><ol>\n<li>确定模型：需要建立一个概率模型，描述数据和未知参数之间的关系，即设计<strong>似然函数</strong>。</li>\n<li>设计先验分布：为未知参数设定先验分布，反映对其可能取值的先验认识。尽量选择<a href=\"https://zhuanlan.zhihu.com/p/401626004\"><strong>共轭先验分布</strong></a>，能够方便地进行后验推导（部分情况下，共轭先验分布难以选取，因此推导后验十分困难，这也是为什么需要MCMC）。</li>\n<li>构建目标函数：根据贝叶斯公式，可以得到后验分布的形式（含分母，即证据<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.333ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 2357 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(751,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1140,0)\"><path data-c=\"1D437\" d=\"M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1968,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>）。为了使用MCMC方法，需要构建一个与后验分布成正比例的目标函数。</li>\n<li>初始化状态：选择一个初始状态，即一组未知参数的值，并将其设置为马尔科夫链的起点。</li>\n<li>进行迭代采样：采用MCMC算法，反复进行状态转移，在每一步中生成新的状态并接受或拒绝该状态。通过多次迭代，得到一串与后验分布成正比的随机样本。</li>\n<li>分析结果：根据采样的样本，可以计算后验分布的各种统计量，如均值、方差、置信区间等。也可以通过可视化方法来呈现后验分布的特征，如直方图、密度图等。</li>\n</ol>\n<p>需要注意的是，MCMC方法的性能受到多个因素的影响，如初始状态的选择、采样步长的调整、马尔科夫链的收敛性等。因此，在实际应用中需要进行仔细的调参和诊断，以确保结果的可靠性和有效性。</p>\n<h2 id=\"MCMC的实例：Metropolis-Hasting算法\"><a href=\"#MCMC的实例：Metropolis-Hasting算法\" class=\"headerlink\" title=\"MCMC的实例：Metropolis-Hasting算法\"></a>MCMC的实例：Metropolis-Hasting算法</h2><ul>\n<li>判断一个算法是否是MCMC，其关键在于这一算法的正确性是否依赖于马氏链的<strong>细节平衡条件</strong>。其中，Metropolis-Hasting算法就是一个典型案例。</li>\n</ul>\n<h2 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h2><ol>\n<li><a href=\"https://towardsdatascience.com/monte-carlo-markov-chain-mcmc-explained-94e3a6c8de11\">https://towardsdatascience.com/monte-carlo-markov-chain-mcmc-explained-94e3a6c8de11</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/411689417\">https://zhuanlan.zhihu.com/p/411689417</a></li>\n<li><a href=\"https://www.cnblogs.com/szqfreiburger/p/11828517.html\">https://www.cnblogs.com/szqfreiburger/p/11828517.html</a></li>\n<li><a href=\"https://en.wikipedia.org/wiki/Hamiltonian_Monte_Carlo\">https://en.wikipedia.org/wiki/Hamiltonian_Monte_Carlo</a></li>\n<li><a href=\"https://en.wikipedia.org/wiki/Markov_chain_Monte_Carlo\">https://en.wikipedia.org/wiki/Markov_chain_Monte_Carlo</a></li>\n<li><a href=\"https://en.wikipedia.org/wiki/Metropolis%E2%80%93Hastings_algorithm\">https://en.wikipedia.org/wiki/Metropolis%E2%80%93Hastings_algorithm</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/401626004\">https://zhuanlan.zhihu.com/p/401626004</a></li>\n<li><a href=\"https://mc-stan.org/users/documentation/\">https://mc-stan.org/users/documentation/</a></li>\n</ol>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: decodeURI(window.location.pathname),\n            distractionFreeMode: true // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","site":{"data":{}},"length":2949,"excerpt":"<p>MCMC（蒙特卡洛马尔可夫链）与VI（变分推断），可谓是贝叶斯推断之双雄。 —— 沃·兹基硕德</p>","more":"<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><h3 id=\"MCMC的提出动机\"><a href=\"#MCMC的提出动机\" class=\"headerlink\" title=\"MCMC的提出动机\"></a>MCMC的提出动机</h3><ul>\n<li>MCMC的提出，本质上是为了解决贝叶斯推断中，<strong>复杂的后验分布难以建模的问题</strong>。对于这一难题，变分推断的解决方案是，使用一个简单的分布族（如高斯分布）拟合该复杂分布。而MCMC的解决方案是，使用马尔科夫链去逼近这一真实的后验分布，并使用蒙特卡洛采样法从这一复杂分布中采样。MCMC本身是一个算法框架，并不拘泥于算法的实现方式。在MCMC方法中，代表算法实例包括<a href=\"https://en.wikipedia.org/wiki/Metropolis%E2%80%93Hastings_algorithm\">Metropolis-Hasting (MH)算法</a>和<a href=\"https://en.wikipedia.org/wiki/Hamiltonian_Monte_Carlo\">Hamiltonian Monte Carlo (HMC)</a>算法。</li>\n</ul>\n<h3 id=\"回顾：贝叶斯推断\"><a href=\"#回顾：贝叶斯推断\" class=\"headerlink\" title=\"回顾：贝叶斯推断\"></a>回顾：贝叶斯推断</h3><ul>\n<li>无论是MCMC还是VI，其基本的理论框架均是贝叶斯推断，即研究如何从<strong>隐变量的先验分布</strong>和<strong>观测变量关于隐变量的似然分布</strong>，推断出<strong>隐变量的后验分布</strong>的问题。具体地，给定观测变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.873ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 828 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D437\" d=\"M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z\"></path></g></g></g></svg></mjx-container>和隐变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.023ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.061ex\" height=\"1.618ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -705 469 715\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D703\" d=\"M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z\"></path></g></g></g></svg></mjx-container>，贝叶斯推断基于如下的贝叶斯公式：<script type=\"math/tex; mode=display\">\nP(\\theta|D) = \\frac{P(D|\\theta)P(\\theta)}{P(D)}= \\frac{P(D|\\theta)P(\\theta)}{\\int_{-\\infty}^{+\\infty}P(D|\\theta')P(\\theta')d\\theta'},</script>其中<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.52ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 1998 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(751,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1140,0)\"><path data-c=\"1D703\" d=\"M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1609,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>被称作<strong>先验分布，通常是人为设定的</strong>，<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"7.023ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 3104 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(751,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1140,0)\"><path data-c=\"1D437\" d=\"M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1968,0) translate(0 -0.5)\"><path data-c=\"7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2246,0)\"><path data-c=\"1D703\" d=\"M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2715,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>被称作<strong>似然，是提前定义好的</strong>（就是极大似然估计（MLE）中的“似然”），<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"7.023ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 3104 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(751,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1140,0)\"><path data-c=\"1D703\" d=\"M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1609,0) translate(0 -0.5)\"><path data-c=\"7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1887,0)\"><path data-c=\"1D437\" d=\"M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2715,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>被称作<strong>后验分布，是需要我们推断的</strong>，<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.333ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 2357 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(751,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1140,0)\"><path data-c=\"1D437\" d=\"M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1968,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>被称作<strong>证据，是与隐变量无关并且难以测量的</strong>（就是变分推断中证据下界的“证据”）。</li>\n</ul>\n<h2 id=\"MCMC的本质：使用马氏链建模复杂后验分布\"><a href=\"#MCMC的本质：使用马氏链建模复杂后验分布\" class=\"headerlink\" title=\"MCMC的本质：使用马氏链建模复杂后验分布\"></a>MCMC的本质：使用马氏链建模复杂后验分布</h2><h3 id=\"马尔科夫链的优良性质\"><a href=\"#马尔科夫链的优良性质\" class=\"headerlink\" title=\"马尔科夫链的优良性质\"></a>马尔科夫链的优良性质</h3><ul>\n<li>MCMC的成功，依赖于马尔科夫链的<strong>无记忆性</strong>、<strong>平稳性</strong>和<strong>细致平衡条件</strong>。下面介绍这三个性质，并说明为什么MCMC能够有效建模隐变量的复杂后验分布：</li>\n</ul>\n<ol>\n<li><strong>无记忆性</strong>：在给定当前状态下，未来的状态只与当前状态有关。<ul>\n<li>例如，假设一个由随机变量组成的链为<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.339ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"19.682ex\" height=\"1.934ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -705 8699.6 855\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D703\" d=\"M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(502,-150) scale(0.707)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(1183.3,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(2461.1,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D703\" d=\"M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(502,-150) scale(0.707)\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(3644.4,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4922.2,0)\"><path data-c=\"22EF\" d=\"M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250ZM525 250Q525 274 542 292T585 310Q609 310 627 294T646 251Q646 226 629 208T586 190T543 207T525 250ZM972 250Q972 274 989 292T1032 310Q1056 310 1074 294T1093 251Q1093 226 1076 208T1033 190T990 207T972 250Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6372,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(7649.8,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D703\" d=\"M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(502,-150) scale(0.707)\"><path data-c=\"1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></g></g></g></g></svg></mjx-container>，其中<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.439ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"12.407ex\" height=\"2.034ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -705 5484 899\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D703\" d=\"M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(502,-150) scale(0.707)\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(807.3,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(1251.9,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2029.7,0)\"><path data-c=\"2264\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3085.5,0)\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3724.3,0)\"><path data-c=\"2264\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4780,0)\"><path data-c=\"1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></g></g></g></svg></mjx-container>为该变量在时刻<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"0.817ex\" height=\"1.441ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -626 361 637\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path></g></g></g></svg></mjx-container>的状态。则无记忆性可表示为：<script type=\"math/tex; mode=display\">\nP(\\theta_t|\\theta_{t-1},\\ldots,\\theta_1)=P(\\theta_t|\\theta_{t-1})</script></li>\n</ul>\n</li>\n<li><strong>平稳性(stationarity)</strong>：对于一个马尔科夫链，如果它满足某个条件，那么在经过充分长的时间后，它会达到一个平稳分布，即使初始状态不同，也最终会收敛到这个分布。<ul>\n<li>这一性质蕴含着，变量可以从一个随机初始状态出发，收敛到目标分布！</li>\n</ul>\n</li>\n<li><strong>细节平衡条件(detailed balance sheet condition)</strong>：为了保证MCMC算法的正确性和有效性，需要满足细节平衡条件。即，当马尔科夫链满足平稳分布时，对于任意两个状态之间的转移，从一个状态到另一个状态的概率与从另一个状态到该状态的概率之比应该等于两个状态在平稳分布上的概率之比。<ul>\n<li>具体地，假设随机变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.023ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.061ex\" height=\"1.618ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -705 469 715\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D703\" d=\"M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z\"></path></g></g></g></svg></mjx-container>的平稳分布为<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"11.087ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 4900.6 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(503,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(892,0)\"><path data-c=\"1D703\" d=\"M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1361,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2027.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3083.6,0)\"><path data-c=\"1D70B\" d=\"M132 -11Q98 -11 98 22V33L111 61Q186 219 220 334L228 358H196Q158 358 142 355T103 336Q92 329 81 318T62 297T53 285Q51 284 38 284Q19 284 19 294Q19 300 38 329T93 391T164 429Q171 431 389 431Q549 431 553 430Q573 423 573 402Q573 371 541 360Q535 358 472 358H408L405 341Q393 269 393 222Q393 170 402 129T421 65T431 37Q431 20 417 5T381 -10Q370 -10 363 -7T347 17T331 77Q330 86 330 121Q330 170 339 226T357 318T367 358H269L268 354Q268 351 249 275T206 114T175 17Q164 -11 132 -11Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3653.6,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4042.6,0)\"><path data-c=\"1D703\" d=\"M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4511.6,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>，马氏链的状态转移概率为<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.697ex\" height=\"1.62ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 750 716\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g></g></g></svg></mjx-container>，则细致平衡条件可以表示为：<script type=\"math/tex; mode=display\">\n\\pi(\\theta_a)\\cdot A(\\theta_a\\to \\theta_b) = \\pi(\\theta_b)\\cdot A(\\theta_b\\to \\theta_a)</script></li>\n</ul>\n</li>\n</ol>\n<p>给定马尔科夫链的上述性质，MCMC的本质可以概括如下：</p>\n<blockquote>\n<p><strong>利用马尔科夫链的平稳分布性质，可以通过构建一个符合平稳分布的马尔科夫链来生成服从该分布的样本。具体而言，MCMC方法采用一个迭代算法，在每一步中，根据当前隐变量状态利用转移概率生成一个新的隐变量状态，并以一定的概率接受这个新状态。反复进行这个过程，得到的一系列状态就是我们所需要的隐变量的样本。</strong></p>\n</blockquote>\n<h3 id=\"MCMC的工作流程\"><a href=\"#MCMC的工作流程\" class=\"headerlink\" title=\"MCMC的工作流程\"></a>MCMC的工作流程</h3><ol>\n<li>确定模型：需要建立一个概率模型，描述数据和未知参数之间的关系，即设计<strong>似然函数</strong>。</li>\n<li>设计先验分布：为未知参数设定先验分布，反映对其可能取值的先验认识。尽量选择<a href=\"https://zhuanlan.zhihu.com/p/401626004\"><strong>共轭先验分布</strong></a>，能够方便地进行后验推导（部分情况下，共轭先验分布难以选取，因此推导后验十分困难，这也是为什么需要MCMC）。</li>\n<li>构建目标函数：根据贝叶斯公式，可以得到后验分布的形式（含分母，即证据<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.333ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 2357 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(751,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1140,0)\"><path data-c=\"1D437\" d=\"M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1968,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>）。为了使用MCMC方法，需要构建一个与后验分布成正比例的目标函数。</li>\n<li>初始化状态：选择一个初始状态，即一组未知参数的值，并将其设置为马尔科夫链的起点。</li>\n<li>进行迭代采样：采用MCMC算法，反复进行状态转移，在每一步中生成新的状态并接受或拒绝该状态。通过多次迭代，得到一串与后验分布成正比的随机样本。</li>\n<li>分析结果：根据采样的样本，可以计算后验分布的各种统计量，如均值、方差、置信区间等。也可以通过可视化方法来呈现后验分布的特征，如直方图、密度图等。</li>\n</ol>\n<p>需要注意的是，MCMC方法的性能受到多个因素的影响，如初始状态的选择、采样步长的调整、马尔科夫链的收敛性等。因此，在实际应用中需要进行仔细的调参和诊断，以确保结果的可靠性和有效性。</p>\n<h2 id=\"MCMC的实例：Metropolis-Hasting算法\"><a href=\"#MCMC的实例：Metropolis-Hasting算法\" class=\"headerlink\" title=\"MCMC的实例：Metropolis-Hasting算法\"></a>MCMC的实例：Metropolis-Hasting算法</h2><ul>\n<li>判断一个算法是否是MCMC，其关键在于这一算法的正确性是否依赖于马氏链的<strong>细节平衡条件</strong>。其中，Metropolis-Hasting算法就是一个典型案例。</li>\n</ul>\n<h2 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h2><ol>\n<li><a href=\"https://towardsdatascience.com/monte-carlo-markov-chain-mcmc-explained-94e3a6c8de11\">https://towardsdatascience.com/monte-carlo-markov-chain-mcmc-explained-94e3a6c8de11</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/411689417\">https://zhuanlan.zhihu.com/p/411689417</a></li>\n<li><a href=\"https://www.cnblogs.com/szqfreiburger/p/11828517.html\">https://www.cnblogs.com/szqfreiburger/p/11828517.html</a></li>\n<li><a href=\"https://en.wikipedia.org/wiki/Hamiltonian_Monte_Carlo\">https://en.wikipedia.org/wiki/Hamiltonian_Monte_Carlo</a></li>\n<li><a href=\"https://en.wikipedia.org/wiki/Markov_chain_Monte_Carlo\">https://en.wikipedia.org/wiki/Markov_chain_Monte_Carlo</a></li>\n<li><a href=\"https://en.wikipedia.org/wiki/Metropolis%E2%80%93Hastings_algorithm\">https://en.wikipedia.org/wiki/Metropolis%E2%80%93Hastings_algorithm</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/401626004\">https://zhuanlan.zhihu.com/p/401626004</a></li>\n<li><a href=\"https://mc-stan.org/users/documentation/\">https://mc-stan.org/users/documentation/</a></li>\n</ol>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: decodeURI(window.location.pathname),\n            distractionFreeMode: true // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>"},{"title":"因果推断的数据集从何而来？","mathjax":true,"codeblock":{"enable":true,"show_result":true},"date":"2023-04-30T09:13:37.000Z","_content":"\n因果推断中的数据集（尤其是反事实数据）是如何产生的？有哪些常用的数据集？\n\n<!--more-->\n## 参考文献\n1. https://cloud.tencent.com/developer/article/1837845#:~:text=%E5%9B%A0%E6%9E%9C%E6%8E%A8%E6%96%AD%E7%A0%94%E7%A9%B6%E6%89%80%E9%87%87%E7%94%A8%E7%9A%84%E8%A7%82%E5%AF%9F%E6%80%A7%E6%95%B0%E6%8D%AE%E9%9B%86%E9%80%9A%E5%B8%B8%E6%98%AF%E3%80%8C%E5%8D%8A%E5%90%88%E6%88%90%E3%80%8D%E7%9A%84%EF%BC%9A%E9%83%A8%E5%88%86%E6%95%B0%E6%8D%AE%E9%9B%86%EF%BC%88%E4%BE%8B%E5%A6%82,IHDP%EF%BC%89%E9%80%9A%E8%BF%87%E9%9A%8F%E6%9C%BA%E6%95%B0%E6%8D%AE%E9%9B%86%EF%BC%88RCT%E8%AF%95%E9%AA%8C%EF%BC%89%E7%94%9F%E6%88%90%E5%BE%97%E5%88%B0%EF%BC%8C%E9%87%87%E7%94%A8%E5%9B%BA%E5%AE%9A%E7%9A%84%E7%94%9F%E6%88%90%E8%BF%87%E7%A8%8B%EF%BC%8C%E5%B9%B6%E4%BB%8E%E4%B8%AD%E7%A7%BB%E9%99%A4%E6%9C%89%E5%81%8F%E5%AD%90%E9%9B%86%E6%9D%A5%E6%A8%A1%E6%8B%9F%E8%A7%82%E6%B5%8B%E6%95%B0%E6%8D%AE%E4%B8%AD%E7%9A%84%E9%80%89%E6%8B%A9%E5%81%8F%E5%B7%AE%EF%BC%9B%E9%83%A8%E5%88%86%E6%95%B0%E6%8D%AE%E9%9B%86%E5%88%99%E5%B0%86%E9%9A%8F%E6%9C%BA%E6%95%B0%E6%8D%AE%E9%9B%86%E4%B8%8E%E8%A7%82%E6%B5%8B%E5%AF%B9%E7%85%A7%E6%95%B0%E6%8D%AE%E9%9B%86%E7%BB%93%E5%90%88%E8%B5%B7%E6%9D%A5%E4%BB%A5%E5%88%9B%E9%80%A0%E9%80%89%E6%8B%A9%E5%81%8F%E5%B7%AE%E3%80%82\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: decodeURI(window.location.pathname),\n            distractionFreeMode: true // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","source":"_posts/2023-04-30-causal-data.md","raw":"---\ntitle: 因果推断的数据集从何而来？\nmathjax: true\ncodeblock:\n  enable: true\n  show_result: true\ndate: 2023-04-30 17:13:37\ntags: 学习笔记 因果推断\ncategories: 学习笔记\n---\n\n因果推断中的数据集（尤其是反事实数据）是如何产生的？有哪些常用的数据集？\n\n<!--more-->\n## 参考文献\n1. https://cloud.tencent.com/developer/article/1837845#:~:text=%E5%9B%A0%E6%9E%9C%E6%8E%A8%E6%96%AD%E7%A0%94%E7%A9%B6%E6%89%80%E9%87%87%E7%94%A8%E7%9A%84%E8%A7%82%E5%AF%9F%E6%80%A7%E6%95%B0%E6%8D%AE%E9%9B%86%E9%80%9A%E5%B8%B8%E6%98%AF%E3%80%8C%E5%8D%8A%E5%90%88%E6%88%90%E3%80%8D%E7%9A%84%EF%BC%9A%E9%83%A8%E5%88%86%E6%95%B0%E6%8D%AE%E9%9B%86%EF%BC%88%E4%BE%8B%E5%A6%82,IHDP%EF%BC%89%E9%80%9A%E8%BF%87%E9%9A%8F%E6%9C%BA%E6%95%B0%E6%8D%AE%E9%9B%86%EF%BC%88RCT%E8%AF%95%E9%AA%8C%EF%BC%89%E7%94%9F%E6%88%90%E5%BE%97%E5%88%B0%EF%BC%8C%E9%87%87%E7%94%A8%E5%9B%BA%E5%AE%9A%E7%9A%84%E7%94%9F%E6%88%90%E8%BF%87%E7%A8%8B%EF%BC%8C%E5%B9%B6%E4%BB%8E%E4%B8%AD%E7%A7%BB%E9%99%A4%E6%9C%89%E5%81%8F%E5%AD%90%E9%9B%86%E6%9D%A5%E6%A8%A1%E6%8B%9F%E8%A7%82%E6%B5%8B%E6%95%B0%E6%8D%AE%E4%B8%AD%E7%9A%84%E9%80%89%E6%8B%A9%E5%81%8F%E5%B7%AE%EF%BC%9B%E9%83%A8%E5%88%86%E6%95%B0%E6%8D%AE%E9%9B%86%E5%88%99%E5%B0%86%E9%9A%8F%E6%9C%BA%E6%95%B0%E6%8D%AE%E9%9B%86%E4%B8%8E%E8%A7%82%E6%B5%8B%E5%AF%B9%E7%85%A7%E6%95%B0%E6%8D%AE%E9%9B%86%E7%BB%93%E5%90%88%E8%B5%B7%E6%9D%A5%E4%BB%A5%E5%88%9B%E9%80%A0%E9%80%89%E6%8B%A9%E5%81%8F%E5%B7%AE%E3%80%82\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: decodeURI(window.location.pathname),\n            distractionFreeMode: true // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","slug":"2023-04-30-causal-data","published":1,"updated":"2023-06-10T01:57:59.811Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cludw9na4002w9wv9emlua0xi","content":"<p>因果推断中的数据集（尤其是反事实数据）是如何产生的？有哪些常用的数据集？</p>\n<span id=\"more\"></span>\n<h2 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h2><ol>\n<li><a href=\"https://cloud.tencent.com/developer/article/1837845#:~:text=%E5%9B%A0%E6%9E%9C%E6%8E%A8%E6%96%AD%E7%A0%94%E7%A9%B6%E6%89%80%E9%87%87%E7%94%A8%E7%9A%84%E8%A7%82%E5%AF%9F%E6%80%A7%E6%95%B0%E6%8D%AE%E9%9B%86%E9%80%9A%E5%B8%B8%E6%98%AF%E3%80%8C%E5%8D%8A%E5%90%88%E6%88%90%E3%80%8D%E7%9A%84%EF%BC%9A%E9%83%A8%E5%88%86%E6%95%B0%E6%8D%AE%E9%9B%86%EF%BC%88%E4%BE%8B%E5%A6%82,IHDP%EF%BC%89%E9%80%9A%E8%BF%87%E9%9A%8F%E6%9C%BA%E6%95%B0%E6%8D%AE%E9%9B%86%EF%BC%88RCT%E8%AF%95%E9%AA%8C%EF%BC%89%E7%94%9F%E6%88%90%E5%BE%97%E5%88%B0%EF%BC%8C%E9%87%87%E7%94%A8%E5%9B%BA%E5%AE%9A%E7%9A%84%E7%94%9F%E6%88%90%E8%BF%87%E7%A8%8B%EF%BC%8C%E5%B9%B6%E4%BB%8E%E4%B8%AD%E7%A7%BB%E9%99%A4%E6%9C%89%E5%81%8F%E5%AD%90%E9%9B%86%E6%9D%A5%E6%A8%A1%E6%8B%9F%E8%A7%82%E6%B5%8B%E6%95%B0%E6%8D%AE%E4%B8%AD%E7%9A%84%E9%80%89%E6%8B%A9%E5%81%8F%E5%B7%AE%EF%BC%9B%E9%83%A8%E5%88%86%E6%95%B0%E6%8D%AE%E9%9B%86%E5%88%99%E5%B0%86%E9%9A%8F%E6%9C%BA%E6%95%B0%E6%8D%AE%E9%9B%86%E4%B8%8E%E8%A7%82%E6%B5%8B%E5%AF%B9%E7%85%A7%E6%95%B0%E6%8D%AE%E9%9B%86%E7%BB%93%E5%90%88%E8%B5%B7%E6%9D%A5%E4%BB%A5%E5%88%9B%E9%80%A0%E9%80%89%E6%8B%A9%E5%81%8F%E5%B7%AE%E3%80%82\">https://cloud.tencent.com/developer/article/1837845#:~:text=%E5%9B%A0%E6%9E%9C%E6%8E%A8%E6%96%AD%E7%A0%94%E7%A9%B6%E6%89%80%E9%87%87%E7%94%A8%E7%9A%84%E8%A7%82%E5%AF%9F%E6%80%A7%E6%95%B0%E6%8D%AE%E9%9B%86%E9%80%9A%E5%B8%B8%E6%98%AF%E3%80%8C%E5%8D%8A%E5%90%88%E6%88%90%E3%80%8D%E7%9A%84%EF%BC%9A%E9%83%A8%E5%88%86%E6%95%B0%E6%8D%AE%E9%9B%86%EF%BC%88%E4%BE%8B%E5%A6%82,IHDP%EF%BC%89%E9%80%9A%E8%BF%87%E9%9A%8F%E6%9C%BA%E6%95%B0%E6%8D%AE%E9%9B%86%EF%BC%88RCT%E8%AF%95%E9%AA%8C%EF%BC%89%E7%94%9F%E6%88%90%E5%BE%97%E5%88%B0%EF%BC%8C%E9%87%87%E7%94%A8%E5%9B%BA%E5%AE%9A%E7%9A%84%E7%94%9F%E6%88%90%E8%BF%87%E7%A8%8B%EF%BC%8C%E5%B9%B6%E4%BB%8E%E4%B8%AD%E7%A7%BB%E9%99%A4%E6%9C%89%E5%81%8F%E5%AD%90%E9%9B%86%E6%9D%A5%E6%A8%A1%E6%8B%9F%E8%A7%82%E6%B5%8B%E6%95%B0%E6%8D%AE%E4%B8%AD%E7%9A%84%E9%80%89%E6%8B%A9%E5%81%8F%E5%B7%AE%EF%BC%9B%E9%83%A8%E5%88%86%E6%95%B0%E6%8D%AE%E9%9B%86%E5%88%99%E5%B0%86%E9%9A%8F%E6%9C%BA%E6%95%B0%E6%8D%AE%E9%9B%86%E4%B8%8E%E8%A7%82%E6%B5%8B%E5%AF%B9%E7%85%A7%E6%95%B0%E6%8D%AE%E9%9B%86%E7%BB%93%E5%90%88%E8%B5%B7%E6%9D%A5%E4%BB%A5%E5%88%9B%E9%80%A0%E9%80%89%E6%8B%A9%E5%81%8F%E5%B7%AE%E3%80%82</a></li>\n</ol>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: decodeURI(window.location.pathname),\n            distractionFreeMode: true // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","site":{"data":{}},"length":1486,"excerpt":"<p>因果推断中的数据集（尤其是反事实数据）是如何产生的？有哪些常用的数据集？</p>","more":"<h2 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h2><ol>\n<li><a href=\"https://cloud.tencent.com/developer/article/1837845#:~:text=%E5%9B%A0%E6%9E%9C%E6%8E%A8%E6%96%AD%E7%A0%94%E7%A9%B6%E6%89%80%E9%87%87%E7%94%A8%E7%9A%84%E8%A7%82%E5%AF%9F%E6%80%A7%E6%95%B0%E6%8D%AE%E9%9B%86%E9%80%9A%E5%B8%B8%E6%98%AF%E3%80%8C%E5%8D%8A%E5%90%88%E6%88%90%E3%80%8D%E7%9A%84%EF%BC%9A%E9%83%A8%E5%88%86%E6%95%B0%E6%8D%AE%E9%9B%86%EF%BC%88%E4%BE%8B%E5%A6%82,IHDP%EF%BC%89%E9%80%9A%E8%BF%87%E9%9A%8F%E6%9C%BA%E6%95%B0%E6%8D%AE%E9%9B%86%EF%BC%88RCT%E8%AF%95%E9%AA%8C%EF%BC%89%E7%94%9F%E6%88%90%E5%BE%97%E5%88%B0%EF%BC%8C%E9%87%87%E7%94%A8%E5%9B%BA%E5%AE%9A%E7%9A%84%E7%94%9F%E6%88%90%E8%BF%87%E7%A8%8B%EF%BC%8C%E5%B9%B6%E4%BB%8E%E4%B8%AD%E7%A7%BB%E9%99%A4%E6%9C%89%E5%81%8F%E5%AD%90%E9%9B%86%E6%9D%A5%E6%A8%A1%E6%8B%9F%E8%A7%82%E6%B5%8B%E6%95%B0%E6%8D%AE%E4%B8%AD%E7%9A%84%E9%80%89%E6%8B%A9%E5%81%8F%E5%B7%AE%EF%BC%9B%E9%83%A8%E5%88%86%E6%95%B0%E6%8D%AE%E9%9B%86%E5%88%99%E5%B0%86%E9%9A%8F%E6%9C%BA%E6%95%B0%E6%8D%AE%E9%9B%86%E4%B8%8E%E8%A7%82%E6%B5%8B%E5%AF%B9%E7%85%A7%E6%95%B0%E6%8D%AE%E9%9B%86%E7%BB%93%E5%90%88%E8%B5%B7%E6%9D%A5%E4%BB%A5%E5%88%9B%E9%80%A0%E9%80%89%E6%8B%A9%E5%81%8F%E5%B7%AE%E3%80%82\">https://cloud.tencent.com/developer/article/1837845#:~:text=%E5%9B%A0%E6%9E%9C%E6%8E%A8%E6%96%AD%E7%A0%94%E7%A9%B6%E6%89%80%E9%87%87%E7%94%A8%E7%9A%84%E8%A7%82%E5%AF%9F%E6%80%A7%E6%95%B0%E6%8D%AE%E9%9B%86%E9%80%9A%E5%B8%B8%E6%98%AF%E3%80%8C%E5%8D%8A%E5%90%88%E6%88%90%E3%80%8D%E7%9A%84%EF%BC%9A%E9%83%A8%E5%88%86%E6%95%B0%E6%8D%AE%E9%9B%86%EF%BC%88%E4%BE%8B%E5%A6%82,IHDP%EF%BC%89%E9%80%9A%E8%BF%87%E9%9A%8F%E6%9C%BA%E6%95%B0%E6%8D%AE%E9%9B%86%EF%BC%88RCT%E8%AF%95%E9%AA%8C%EF%BC%89%E7%94%9F%E6%88%90%E5%BE%97%E5%88%B0%EF%BC%8C%E9%87%87%E7%94%A8%E5%9B%BA%E5%AE%9A%E7%9A%84%E7%94%9F%E6%88%90%E8%BF%87%E7%A8%8B%EF%BC%8C%E5%B9%B6%E4%BB%8E%E4%B8%AD%E7%A7%BB%E9%99%A4%E6%9C%89%E5%81%8F%E5%AD%90%E9%9B%86%E6%9D%A5%E6%A8%A1%E6%8B%9F%E8%A7%82%E6%B5%8B%E6%95%B0%E6%8D%AE%E4%B8%AD%E7%9A%84%E9%80%89%E6%8B%A9%E5%81%8F%E5%B7%AE%EF%BC%9B%E9%83%A8%E5%88%86%E6%95%B0%E6%8D%AE%E9%9B%86%E5%88%99%E5%B0%86%E9%9A%8F%E6%9C%BA%E6%95%B0%E6%8D%AE%E9%9B%86%E4%B8%8E%E8%A7%82%E6%B5%8B%E5%AF%B9%E7%85%A7%E6%95%B0%E6%8D%AE%E9%9B%86%E7%BB%93%E5%90%88%E8%B5%B7%E6%9D%A5%E4%BB%A5%E5%88%9B%E9%80%A0%E9%80%89%E6%8B%A9%E5%81%8F%E5%B7%AE%E3%80%82</a></li>\n</ol>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: decodeURI(window.location.pathname),\n            distractionFreeMode: true // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>"},{"title":"一次美国学术会议签证经历（2023）","mathjax":false,"codeblock":{"enable":true,"show_result":true},"date":"2023-07-09T02:32:06.000Z","_content":"\n一次美国学术会议面签经历。\n\n<!--more-->\n\n## 背景\n- 2023年5月份一篇论文摘要被国际心理测量学会年会IMPS 2023接收，被邀请去现场做学术报告。刚好疫情放开，遂决定抓住这次出国交流的机会！\n\n## 签证流程\n- 学术会议的签证类型为B1（商务签）。对应的签证流程主要分为以下几步：\n1. 办护照（如果已经有护照则不需要）\n2. 填写[DS-160表](https://ceac.state.gov/genniv/)\n3. 在[美国签证官方网站](https://www.ustraveldocs.com/cn_zh/index.html)上注册登录，预约面签\n4. 准备面签材料\n5. 面签，交护照\n6. 收到带签证的护照\n\n- 我自己由于已经有一本有效护照，所以直接从第二步开始办。\n\n### 填写DS-160表\nDS-160表的填写，最重要的是信息详实。每个DS-160表都会有一个AA开头的10位号码，这个号码一定要记好，是面签时检索DS-160表的依据。\n\nDS-160表的填写需要上传一张签证照片，照片要求可上网搜索或直接问照相馆工作人员。\n\n另外，在填写完DS-160表后，不要急着点击确认，具体理由会在下一步讲。\n\n### 预约面签\n预约面签的流程是独立于DS-160表的填写的。需要注意的是，预约面签时需要填写DS-160表的AA开头的10位号码，但这并不需要你已经确认DS-160的完全填写。\n\n在填写完包括DS-160表号码的预约面签申请后，你会去选择预约面签的时间和大使馆。然而，最近疫情刚刚放开，面签特别不好约。以我自己为例，我准备7月22日出发，因此在5月初就准备预约面签。然而，此时上海和广州的B1类面签都已经排到了9月以后，只有北京和沈阳有最早7月初的面签名额... 而当时我填的第一份DS-160表，选择的面签地点是上海！并且由于已经点击了确认，所以DS-160表的面签地点无法修改。因此只能填一份新的DS-160表，选择面签地点为北京，将新表的AA开头的号码更新到我的面签预约系统中，这才解决了面签地点的问题。然后缴费（约1000 RMB），就完成了预约。\n\n### 面签材料准备\n我准备的面签材料包括：\n1. **DS-160表确认页**（必须，否则进不去大使馆）\n2. **面签预约确认页**（必须，否则进不去大使馆）\n3. **护照**（必须，否则进不去大使馆）\n4. **会议邀请信**（大概率要用）\n5. **论文首页摘要**（大概率要用）\n6. 在读证明、学校派遣信（联系导师和学校国合部解决）\n7. 行程单\n8. 个人简历\n9. 会议主席个人简介\n10. 会议介绍\n\n上述材料是我按网上攻略准备的。**面签现场用到的只有前五项**。\n\n### 面签过程\n面签预约时间是2023年7月6日（周四）9:45。我提前半个小时到，在大使馆马路对面寄存了行李（只允许带一个装着面签材料的文件袋，其他物品包括手机都不许带入使馆）。然后开始面签排队。整个面签过程历经2小时（其中约110分钟在各种排队）。排队总共有四个阶段，包括：\n1. 第一阶段：排队进入使馆（要检查DS-160表确认页、面签预约确认页、护照）\n2. 第二阶段：排队上交护照\n3. 第三阶段：排队录指纹\n4. 第四阶段：排队面签\n\n前三个阶段跟着现场志愿者的引导走即可。重点介绍第四个阶段的面签过程。\n\n#### 面签流程\n我被分配到的签证官是一位白人老哥。回忆版面签对话如下（Q表示签证官，A表示我自己）：\n\n（简单问候）\n\nQ: （用中文）你准备去美国做什么？\n\nA: （考虑到毕竟是科研人员那还是说英语以表现得专业一点吧）I am going to attend an academic conference held in U.S., the IMPS 2023.\n\nQ: （切换回英文）Do you have an invitation letter?\n\nA: Of course! (将邀请信交给签证官)\n\nQ: Are you a Ph.D student?\n\nA: No, I am a master's student. Here is my certification. (给签证官看了在读证明，他没收)\n\nQ: What is your major?\n\nA: I major in data science. (考虑到DS可能是敏感专业) But the conference itself is about educational psychology. And my research focus is educational data mining.\n\nQ: Educational psychology...(敲敲敲) OK. Can you give me your paper abstract?\n\nA: Yes, of course. Please wait a second. (翻了一会文件袋，找论文摘要到并交给签证官).\n\nQ: OK.(一顿敲) Can you briefly introduce your paper?\n\nA: Yes. (简单介绍了研究内容)\n\nQ: I see from your passport that you have been to Japan. Have you ever travelled to any other places?\n\nA: (介绍过往的出国境经历，包括时间、地点)\n\nQ: OK. Will you finish your master's study after attending this conference?\n\nA: Yes, of course.\n\nQ: (一顿敲，记录完成后) Ok, you have been approved! (递给一张蓝色的面签通过纸)\n\nA: OK, thank you!\n\n总结：态度自信诚恳、信息详实、主动递交材料。\n\n### 后续\n- （至少在北京大使馆）如果面签顺利通过，会收到这样一张蓝色的面签通过纸：\n![Image](https://pic4.zhimg.com/80/v2-02127b5b0481e16b03526c3faf549a8d.jpg)\n\n面签通过后的一个工作日（7月7日，周五），查看签证状态，已经变为\"Issued\"，比网上说的三个工作日更快：\n![Image](https://pic4.zhimg.com/80/v2-462b4e03b51cda89b644c60e2595d373.png)\n\n7月9日，查收邮件，护照已送达我所填地址所在的城市（预约面签时选择了寄递到家），坐等收护照。\n\n接下来，准备好Presentation、机票、住宿，可以收拾行李准备出发了。\n  \n## 总结\nDS-160填写不能急，看好面签地点再确认。\n\n面签预约要趁早，时间应越早越好。\n\n面签材料用心备，从容不迫 face to face。\n\n学术交流机会多，八月初七米国见 :-)\n\n\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: decodeURI(window.location.pathname),\n            distractionFreeMode: true // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","source":"_posts/2023-07-09-visa.md","raw":"---\ntitle: 一次美国学术会议签证经历（2023）\nmathjax: false\ncodeblock:\n  enable: true\n  show_result: true\ndate: 2023-07-09 10:32:06\ntags: 学术会议\ncategories: 学术会议\n---\n\n一次美国学术会议面签经历。\n\n<!--more-->\n\n## 背景\n- 2023年5月份一篇论文摘要被国际心理测量学会年会IMPS 2023接收，被邀请去现场做学术报告。刚好疫情放开，遂决定抓住这次出国交流的机会！\n\n## 签证流程\n- 学术会议的签证类型为B1（商务签）。对应的签证流程主要分为以下几步：\n1. 办护照（如果已经有护照则不需要）\n2. 填写[DS-160表](https://ceac.state.gov/genniv/)\n3. 在[美国签证官方网站](https://www.ustraveldocs.com/cn_zh/index.html)上注册登录，预约面签\n4. 准备面签材料\n5. 面签，交护照\n6. 收到带签证的护照\n\n- 我自己由于已经有一本有效护照，所以直接从第二步开始办。\n\n### 填写DS-160表\nDS-160表的填写，最重要的是信息详实。每个DS-160表都会有一个AA开头的10位号码，这个号码一定要记好，是面签时检索DS-160表的依据。\n\nDS-160表的填写需要上传一张签证照片，照片要求可上网搜索或直接问照相馆工作人员。\n\n另外，在填写完DS-160表后，不要急着点击确认，具体理由会在下一步讲。\n\n### 预约面签\n预约面签的流程是独立于DS-160表的填写的。需要注意的是，预约面签时需要填写DS-160表的AA开头的10位号码，但这并不需要你已经确认DS-160的完全填写。\n\n在填写完包括DS-160表号码的预约面签申请后，你会去选择预约面签的时间和大使馆。然而，最近疫情刚刚放开，面签特别不好约。以我自己为例，我准备7月22日出发，因此在5月初就准备预约面签。然而，此时上海和广州的B1类面签都已经排到了9月以后，只有北京和沈阳有最早7月初的面签名额... 而当时我填的第一份DS-160表，选择的面签地点是上海！并且由于已经点击了确认，所以DS-160表的面签地点无法修改。因此只能填一份新的DS-160表，选择面签地点为北京，将新表的AA开头的号码更新到我的面签预约系统中，这才解决了面签地点的问题。然后缴费（约1000 RMB），就完成了预约。\n\n### 面签材料准备\n我准备的面签材料包括：\n1. **DS-160表确认页**（必须，否则进不去大使馆）\n2. **面签预约确认页**（必须，否则进不去大使馆）\n3. **护照**（必须，否则进不去大使馆）\n4. **会议邀请信**（大概率要用）\n5. **论文首页摘要**（大概率要用）\n6. 在读证明、学校派遣信（联系导师和学校国合部解决）\n7. 行程单\n8. 个人简历\n9. 会议主席个人简介\n10. 会议介绍\n\n上述材料是我按网上攻略准备的。**面签现场用到的只有前五项**。\n\n### 面签过程\n面签预约时间是2023年7月6日（周四）9:45。我提前半个小时到，在大使馆马路对面寄存了行李（只允许带一个装着面签材料的文件袋，其他物品包括手机都不许带入使馆）。然后开始面签排队。整个面签过程历经2小时（其中约110分钟在各种排队）。排队总共有四个阶段，包括：\n1. 第一阶段：排队进入使馆（要检查DS-160表确认页、面签预约确认页、护照）\n2. 第二阶段：排队上交护照\n3. 第三阶段：排队录指纹\n4. 第四阶段：排队面签\n\n前三个阶段跟着现场志愿者的引导走即可。重点介绍第四个阶段的面签过程。\n\n#### 面签流程\n我被分配到的签证官是一位白人老哥。回忆版面签对话如下（Q表示签证官，A表示我自己）：\n\n（简单问候）\n\nQ: （用中文）你准备去美国做什么？\n\nA: （考虑到毕竟是科研人员那还是说英语以表现得专业一点吧）I am going to attend an academic conference held in U.S., the IMPS 2023.\n\nQ: （切换回英文）Do you have an invitation letter?\n\nA: Of course! (将邀请信交给签证官)\n\nQ: Are you a Ph.D student?\n\nA: No, I am a master's student. Here is my certification. (给签证官看了在读证明，他没收)\n\nQ: What is your major?\n\nA: I major in data science. (考虑到DS可能是敏感专业) But the conference itself is about educational psychology. And my research focus is educational data mining.\n\nQ: Educational psychology...(敲敲敲) OK. Can you give me your paper abstract?\n\nA: Yes, of course. Please wait a second. (翻了一会文件袋，找论文摘要到并交给签证官).\n\nQ: OK.(一顿敲) Can you briefly introduce your paper?\n\nA: Yes. (简单介绍了研究内容)\n\nQ: I see from your passport that you have been to Japan. Have you ever travelled to any other places?\n\nA: (介绍过往的出国境经历，包括时间、地点)\n\nQ: OK. Will you finish your master's study after attending this conference?\n\nA: Yes, of course.\n\nQ: (一顿敲，记录完成后) Ok, you have been approved! (递给一张蓝色的面签通过纸)\n\nA: OK, thank you!\n\n总结：态度自信诚恳、信息详实、主动递交材料。\n\n### 后续\n- （至少在北京大使馆）如果面签顺利通过，会收到这样一张蓝色的面签通过纸：\n![Image](https://pic4.zhimg.com/80/v2-02127b5b0481e16b03526c3faf549a8d.jpg)\n\n面签通过后的一个工作日（7月7日，周五），查看签证状态，已经变为\"Issued\"，比网上说的三个工作日更快：\n![Image](https://pic4.zhimg.com/80/v2-462b4e03b51cda89b644c60e2595d373.png)\n\n7月9日，查收邮件，护照已送达我所填地址所在的城市（预约面签时选择了寄递到家），坐等收护照。\n\n接下来，准备好Presentation、机票、住宿，可以收拾行李准备出发了。\n  \n## 总结\nDS-160填写不能急，看好面签地点再确认。\n\n面签预约要趁早，时间应越早越好。\n\n面签材料用心备，从容不迫 face to face。\n\n学术交流机会多，八月初七米国见 :-)\n\n\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: decodeURI(window.location.pathname),\n            distractionFreeMode: true // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","slug":"2023-07-09-visa","published":1,"updated":"2023-07-09T03:42:46.536Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cludw9na5002y9wv9gcy13k6w","content":"<p>一次美国学术会议面签经历。</p>\n<span id=\"more\"></span>\n<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><ul>\n<li>2023年5月份一篇论文摘要被国际心理测量学会年会IMPS 2023接收，被邀请去现场做学术报告。刚好疫情放开，遂决定抓住这次出国交流的机会！</li>\n</ul>\n<h2 id=\"签证流程\"><a href=\"#签证流程\" class=\"headerlink\" title=\"签证流程\"></a>签证流程</h2><ul>\n<li>学术会议的签证类型为B1（商务签）。对应的签证流程主要分为以下几步：</li>\n</ul>\n<ol>\n<li>办护照（如果已经有护照则不需要）</li>\n<li>填写<a href=\"https://ceac.state.gov/genniv/\">DS-160表</a></li>\n<li>在<a href=\"https://www.ustraveldocs.com/cn_zh/index.html\">美国签证官方网站</a>上注册登录，预约面签</li>\n<li>准备面签材料</li>\n<li>面签，交护照</li>\n<li>收到带签证的护照</li>\n</ol>\n<ul>\n<li>我自己由于已经有一本有效护照，所以直接从第二步开始办。</li>\n</ul>\n<h3 id=\"填写DS-160表\"><a href=\"#填写DS-160表\" class=\"headerlink\" title=\"填写DS-160表\"></a>填写DS-160表</h3><p>DS-160表的填写，最重要的是信息详实。每个DS-160表都会有一个AA开头的10位号码，这个号码一定要记好，是面签时检索DS-160表的依据。</p>\n<p>DS-160表的填写需要上传一张签证照片，照片要求可上网搜索或直接问照相馆工作人员。</p>\n<p>另外，在填写完DS-160表后，不要急着点击确认，具体理由会在下一步讲。</p>\n<h3 id=\"预约面签\"><a href=\"#预约面签\" class=\"headerlink\" title=\"预约面签\"></a>预约面签</h3><p>预约面签的流程是独立于DS-160表的填写的。需要注意的是，预约面签时需要填写DS-160表的AA开头的10位号码，但这并不需要你已经确认DS-160的完全填写。</p>\n<p>在填写完包括DS-160表号码的预约面签申请后，你会去选择预约面签的时间和大使馆。然而，最近疫情刚刚放开，面签特别不好约。以我自己为例，我准备7月22日出发，因此在5月初就准备预约面签。然而，此时上海和广州的B1类面签都已经排到了9月以后，只有北京和沈阳有最早7月初的面签名额… 而当时我填的第一份DS-160表，选择的面签地点是上海！并且由于已经点击了确认，所以DS-160表的面签地点无法修改。因此只能填一份新的DS-160表，选择面签地点为北京，将新表的AA开头的号码更新到我的面签预约系统中，这才解决了面签地点的问题。然后缴费（约1000 RMB），就完成了预约。</p>\n<h3 id=\"面签材料准备\"><a href=\"#面签材料准备\" class=\"headerlink\" title=\"面签材料准备\"></a>面签材料准备</h3><p>我准备的面签材料包括：</p>\n<ol>\n<li><strong>DS-160表确认页</strong>（必须，否则进不去大使馆）</li>\n<li><strong>面签预约确认页</strong>（必须，否则进不去大使馆）</li>\n<li><strong>护照</strong>（必须，否则进不去大使馆）</li>\n<li><strong>会议邀请信</strong>（大概率要用）</li>\n<li><strong>论文首页摘要</strong>（大概率要用）</li>\n<li>在读证明、学校派遣信（联系导师和学校国合部解决）</li>\n<li>行程单</li>\n<li>个人简历</li>\n<li>会议主席个人简介</li>\n<li>会议介绍</li>\n</ol>\n<p>上述材料是我按网上攻略准备的。<strong>面签现场用到的只有前五项</strong>。</p>\n<h3 id=\"面签过程\"><a href=\"#面签过程\" class=\"headerlink\" title=\"面签过程\"></a>面签过程</h3><p>面签预约时间是2023年7月6日（周四）9:45。我提前半个小时到，在大使馆马路对面寄存了行李（只允许带一个装着面签材料的文件袋，其他物品包括手机都不许带入使馆）。然后开始面签排队。整个面签过程历经2小时（其中约110分钟在各种排队）。排队总共有四个阶段，包括：</p>\n<ol>\n<li>第一阶段：排队进入使馆（要检查DS-160表确认页、面签预约确认页、护照）</li>\n<li>第二阶段：排队上交护照</li>\n<li>第三阶段：排队录指纹</li>\n<li>第四阶段：排队面签</li>\n</ol>\n<p>前三个阶段跟着现场志愿者的引导走即可。重点介绍第四个阶段的面签过程。</p>\n<h4 id=\"面签流程\"><a href=\"#面签流程\" class=\"headerlink\" title=\"面签流程\"></a>面签流程</h4><p>我被分配到的签证官是一位白人老哥。回忆版面签对话如下（Q表示签证官，A表示我自己）：</p>\n<p>（简单问候）</p>\n<p>Q: （用中文）你准备去美国做什么？</p>\n<p>A: （考虑到毕竟是科研人员那还是说英语以表现得专业一点吧）I am going to attend an academic conference held in U.S., the IMPS 2023.</p>\n<p>Q: （切换回英文）Do you have an invitation letter?</p>\n<p>A: Of course! (将邀请信交给签证官)</p>\n<p>Q: Are you a Ph.D student?</p>\n<p>A: No, I am a master’s student. Here is my certification. (给签证官看了在读证明，他没收)</p>\n<p>Q: What is your major?</p>\n<p>A: I major in data science. (考虑到DS可能是敏感专业) But the conference itself is about educational psychology. And my research focus is educational data mining.</p>\n<p>Q: Educational psychology…(敲敲敲) OK. Can you give me your paper abstract?</p>\n<p>A: Yes, of course. Please wait a second. (翻了一会文件袋，找论文摘要到并交给签证官).</p>\n<p>Q: OK.(一顿敲) Can you briefly introduce your paper?</p>\n<p>A: Yes. (简单介绍了研究内容)</p>\n<p>Q: I see from your passport that you have been to Japan. Have you ever travelled to any other places?</p>\n<p>A: (介绍过往的出国境经历，包括时间、地点)</p>\n<p>Q: OK. Will you finish your master’s study after attending this conference?</p>\n<p>A: Yes, of course.</p>\n<p>Q: (一顿敲，记录完成后) Ok, you have been approved! (递给一张蓝色的面签通过纸)</p>\n<p>A: OK, thank you!</p>\n<p>总结：态度自信诚恳、信息详实、主动递交材料。</p>\n<h3 id=\"后续\"><a href=\"#后续\" class=\"headerlink\" title=\"后续\"></a>后续</h3><ul>\n<li>（至少在北京大使馆）如果面签顺利通过，会收到这样一张蓝色的面签通过纸：<br><img src=\"https://pic4.zhimg.com/80/v2-02127b5b0481e16b03526c3faf549a8d.jpg\" alt=\"Image\"></li>\n</ul>\n<p>面签通过后的一个工作日（7月7日，周五），查看签证状态，已经变为”Issued”，比网上说的三个工作日更快：<br><img src=\"https://pic4.zhimg.com/80/v2-462b4e03b51cda89b644c60e2595d373.png\" alt=\"Image\"></p>\n<p>7月9日，查收邮件，护照已送达我所填地址所在的城市（预约面签时选择了寄递到家），坐等收护照。</p>\n<p>接下来，准备好Presentation、机票、住宿，可以收拾行李准备出发了。</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>DS-160填写不能急，看好面签地点再确认。</p>\n<p>面签预约要趁早，时间应越早越好。</p>\n<p>面签材料用心备，从容不迫 face to face。</p>\n<p>学术交流机会多，八月初七米国见 :-)</p>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: decodeURI(window.location.pathname),\n            distractionFreeMode: true // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","site":{"data":{}},"length":2633,"excerpt":"<p>一次美国学术会议面签经历。</p>","more":"<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><ul>\n<li>2023年5月份一篇论文摘要被国际心理测量学会年会IMPS 2023接收，被邀请去现场做学术报告。刚好疫情放开，遂决定抓住这次出国交流的机会！</li>\n</ul>\n<h2 id=\"签证流程\"><a href=\"#签证流程\" class=\"headerlink\" title=\"签证流程\"></a>签证流程</h2><ul>\n<li>学术会议的签证类型为B1（商务签）。对应的签证流程主要分为以下几步：</li>\n</ul>\n<ol>\n<li>办护照（如果已经有护照则不需要）</li>\n<li>填写<a href=\"https://ceac.state.gov/genniv/\">DS-160表</a></li>\n<li>在<a href=\"https://www.ustraveldocs.com/cn_zh/index.html\">美国签证官方网站</a>上注册登录，预约面签</li>\n<li>准备面签材料</li>\n<li>面签，交护照</li>\n<li>收到带签证的护照</li>\n</ol>\n<ul>\n<li>我自己由于已经有一本有效护照，所以直接从第二步开始办。</li>\n</ul>\n<h3 id=\"填写DS-160表\"><a href=\"#填写DS-160表\" class=\"headerlink\" title=\"填写DS-160表\"></a>填写DS-160表</h3><p>DS-160表的填写，最重要的是信息详实。每个DS-160表都会有一个AA开头的10位号码，这个号码一定要记好，是面签时检索DS-160表的依据。</p>\n<p>DS-160表的填写需要上传一张签证照片，照片要求可上网搜索或直接问照相馆工作人员。</p>\n<p>另外，在填写完DS-160表后，不要急着点击确认，具体理由会在下一步讲。</p>\n<h3 id=\"预约面签\"><a href=\"#预约面签\" class=\"headerlink\" title=\"预约面签\"></a>预约面签</h3><p>预约面签的流程是独立于DS-160表的填写的。需要注意的是，预约面签时需要填写DS-160表的AA开头的10位号码，但这并不需要你已经确认DS-160的完全填写。</p>\n<p>在填写完包括DS-160表号码的预约面签申请后，你会去选择预约面签的时间和大使馆。然而，最近疫情刚刚放开，面签特别不好约。以我自己为例，我准备7月22日出发，因此在5月初就准备预约面签。然而，此时上海和广州的B1类面签都已经排到了9月以后，只有北京和沈阳有最早7月初的面签名额… 而当时我填的第一份DS-160表，选择的面签地点是上海！并且由于已经点击了确认，所以DS-160表的面签地点无法修改。因此只能填一份新的DS-160表，选择面签地点为北京，将新表的AA开头的号码更新到我的面签预约系统中，这才解决了面签地点的问题。然后缴费（约1000 RMB），就完成了预约。</p>\n<h3 id=\"面签材料准备\"><a href=\"#面签材料准备\" class=\"headerlink\" title=\"面签材料准备\"></a>面签材料准备</h3><p>我准备的面签材料包括：</p>\n<ol>\n<li><strong>DS-160表确认页</strong>（必须，否则进不去大使馆）</li>\n<li><strong>面签预约确认页</strong>（必须，否则进不去大使馆）</li>\n<li><strong>护照</strong>（必须，否则进不去大使馆）</li>\n<li><strong>会议邀请信</strong>（大概率要用）</li>\n<li><strong>论文首页摘要</strong>（大概率要用）</li>\n<li>在读证明、学校派遣信（联系导师和学校国合部解决）</li>\n<li>行程单</li>\n<li>个人简历</li>\n<li>会议主席个人简介</li>\n<li>会议介绍</li>\n</ol>\n<p>上述材料是我按网上攻略准备的。<strong>面签现场用到的只有前五项</strong>。</p>\n<h3 id=\"面签过程\"><a href=\"#面签过程\" class=\"headerlink\" title=\"面签过程\"></a>面签过程</h3><p>面签预约时间是2023年7月6日（周四）9:45。我提前半个小时到，在大使馆马路对面寄存了行李（只允许带一个装着面签材料的文件袋，其他物品包括手机都不许带入使馆）。然后开始面签排队。整个面签过程历经2小时（其中约110分钟在各种排队）。排队总共有四个阶段，包括：</p>\n<ol>\n<li>第一阶段：排队进入使馆（要检查DS-160表确认页、面签预约确认页、护照）</li>\n<li>第二阶段：排队上交护照</li>\n<li>第三阶段：排队录指纹</li>\n<li>第四阶段：排队面签</li>\n</ol>\n<p>前三个阶段跟着现场志愿者的引导走即可。重点介绍第四个阶段的面签过程。</p>\n<h4 id=\"面签流程\"><a href=\"#面签流程\" class=\"headerlink\" title=\"面签流程\"></a>面签流程</h4><p>我被分配到的签证官是一位白人老哥。回忆版面签对话如下（Q表示签证官，A表示我自己）：</p>\n<p>（简单问候）</p>\n<p>Q: （用中文）你准备去美国做什么？</p>\n<p>A: （考虑到毕竟是科研人员那还是说英语以表现得专业一点吧）I am going to attend an academic conference held in U.S., the IMPS 2023.</p>\n<p>Q: （切换回英文）Do you have an invitation letter?</p>\n<p>A: Of course! (将邀请信交给签证官)</p>\n<p>Q: Are you a Ph.D student?</p>\n<p>A: No, I am a master’s student. Here is my certification. (给签证官看了在读证明，他没收)</p>\n<p>Q: What is your major?</p>\n<p>A: I major in data science. (考虑到DS可能是敏感专业) But the conference itself is about educational psychology. And my research focus is educational data mining.</p>\n<p>Q: Educational psychology…(敲敲敲) OK. Can you give me your paper abstract?</p>\n<p>A: Yes, of course. Please wait a second. (翻了一会文件袋，找论文摘要到并交给签证官).</p>\n<p>Q: OK.(一顿敲) Can you briefly introduce your paper?</p>\n<p>A: Yes. (简单介绍了研究内容)</p>\n<p>Q: I see from your passport that you have been to Japan. Have you ever travelled to any other places?</p>\n<p>A: (介绍过往的出国境经历，包括时间、地点)</p>\n<p>Q: OK. Will you finish your master’s study after attending this conference?</p>\n<p>A: Yes, of course.</p>\n<p>Q: (一顿敲，记录完成后) Ok, you have been approved! (递给一张蓝色的面签通过纸)</p>\n<p>A: OK, thank you!</p>\n<p>总结：态度自信诚恳、信息详实、主动递交材料。</p>\n<h3 id=\"后续\"><a href=\"#后续\" class=\"headerlink\" title=\"后续\"></a>后续</h3><ul>\n<li>（至少在北京大使馆）如果面签顺利通过，会收到这样一张蓝色的面签通过纸：<br><img src=\"https://pic4.zhimg.com/80/v2-02127b5b0481e16b03526c3faf549a8d.jpg\" alt=\"Image\"></li>\n</ul>\n<p>面签通过后的一个工作日（7月7日，周五），查看签证状态，已经变为”Issued”，比网上说的三个工作日更快：<br><img src=\"https://pic4.zhimg.com/80/v2-462b4e03b51cda89b644c60e2595d373.png\" alt=\"Image\"></p>\n<p>7月9日，查收邮件，护照已送达我所填地址所在的城市（预约面签时选择了寄递到家），坐等收护照。</p>\n<p>接下来，准备好Presentation、机票、住宿，可以收拾行李准备出发了。</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>DS-160填写不能急，看好面签地点再确认。</p>\n<p>面签预约要趁早，时间应越早越好。</p>\n<p>面签材料用心备，从容不迫 face to face。</p>\n<p>学术交流机会多，八月初七米国见 :-)</p>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: decodeURI(window.location.pathname),\n            distractionFreeMode: true // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>"},{"title":"A Study Note of Game Theory.1","mathjax":true,"codeblock":{"enable":true,"show_result":true},"date":"2023-06-10T01:56:45.000Z","_content":"An introduction to game theory.\n<!--more-->\n\n## Games Theory\n1. Game theory is a bag of analytical tools designed to help us understand the phenomena that we observe when decision-makers interact. \n\n## Games and Solutions\n1. A game is a description of strategic interaction that includes the constraints on the actions that the players *can* take and the players' interests, but does not specify the actions that the players *do* take.\n  1. strategic games: a model of a situation in which each player chooses his plan of action once and for all, and all players' decisions are made simultaneously\n  1. extensive games: specify the possible orders of events; each player can consider his plan of action not only at the beginning of the game but also whenever he has to make a decision\n    1. with perfect information: each player is fully informed about others' moves\n    1. without perfect information: each player is not fully informed about others' moves\n  1. coalitional games\n1. A *player* is the basic entity of all game theoretic models. A player may be interpreted as an individual or as a group of individuals making a decision.\n  1. individual players -> noncooperative\n  1. groups of players -> cooperative\n1. Mathematical notations\n  ![](notations.jpg)\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: decodeURI(window.location.pathname),\n            distractionFreeMode: true // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","source":"_posts/2023-06-10-game.md","raw":"---\ntitle: A Study Note of Game Theory.1\nmathjax: true\ncodeblock:\n  enable: true\n  show_result: true\ndate: 2023-06-10 09:56:45\ntags: 博弈论\ncategories: 学习笔记\n---\nAn introduction to game theory.\n<!--more-->\n\n## Games Theory\n1. Game theory is a bag of analytical tools designed to help us understand the phenomena that we observe when decision-makers interact. \n\n## Games and Solutions\n1. A game is a description of strategic interaction that includes the constraints on the actions that the players *can* take and the players' interests, but does not specify the actions that the players *do* take.\n  1. strategic games: a model of a situation in which each player chooses his plan of action once and for all, and all players' decisions are made simultaneously\n  1. extensive games: specify the possible orders of events; each player can consider his plan of action not only at the beginning of the game but also whenever he has to make a decision\n    1. with perfect information: each player is fully informed about others' moves\n    1. without perfect information: each player is not fully informed about others' moves\n  1. coalitional games\n1. A *player* is the basic entity of all game theoretic models. A player may be interpreted as an individual or as a group of individuals making a decision.\n  1. individual players -> noncooperative\n  1. groups of players -> cooperative\n1. Mathematical notations\n  ![](notations.jpg)\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: decodeURI(window.location.pathname),\n            distractionFreeMode: true // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","slug":"2023-06-10-game","published":1,"updated":"2023-06-10T02:22:27.065Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cludw9na500319wv99uae34lz","content":"<p>An introduction to game theory.<br><span id=\"more\"></span></p>\n<h2 id=\"Games-Theory\"><a href=\"#Games-Theory\" class=\"headerlink\" title=\"Games Theory\"></a>Games Theory</h2><ol>\n<li>Game theory is a bag of analytical tools designed to help us understand the phenomena that we observe when decision-makers interact. </li>\n</ol>\n<h2 id=\"Games-and-Solutions\"><a href=\"#Games-and-Solutions\" class=\"headerlink\" title=\"Games and Solutions\"></a>Games and Solutions</h2><ol>\n<li>A game is a description of strategic interaction that includes the constraints on the actions that the players <em>can</em> take and the players’ interests, but does not specify the actions that the players <em>do</em> take.<ol>\n<li>strategic games: a model of a situation in which each player chooses his plan of action once and for all, and all players’ decisions are made simultaneously</li>\n<li>extensive games: specify the possible orders of events; each player can consider his plan of action not only at the beginning of the game but also whenever he has to make a decision<ol>\n<li>with perfect information: each player is fully informed about others’ moves</li>\n<li>without perfect information: each player is not fully informed about others’ moves</li>\n</ol>\n</li>\n<li>coalitional games</li>\n</ol>\n</li>\n<li>A <em>player</em> is the basic entity of all game theoretic models. A player may be interpreted as an individual or as a group of individuals making a decision.<ol>\n<li>individual players -&gt; noncooperative</li>\n<li>groups of players -&gt; cooperative</li>\n</ol>\n</li>\n<li>Mathematical notations<br><img src=\"notations.jpg\" alt=\"\"></li>\n</ol>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: decodeURI(window.location.pathname),\n            distractionFreeMode: true // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","site":{"data":{}},"length":1316,"excerpt":"<p>An introduction to game theory.<br>","more":"</p>\n<h2 id=\"Games-Theory\"><a href=\"#Games-Theory\" class=\"headerlink\" title=\"Games Theory\"></a>Games Theory</h2><ol>\n<li>Game theory is a bag of analytical tools designed to help us understand the phenomena that we observe when decision-makers interact. </li>\n</ol>\n<h2 id=\"Games-and-Solutions\"><a href=\"#Games-and-Solutions\" class=\"headerlink\" title=\"Games and Solutions\"></a>Games and Solutions</h2><ol>\n<li>A game is a description of strategic interaction that includes the constraints on the actions that the players <em>can</em> take and the players’ interests, but does not specify the actions that the players <em>do</em> take.<ol>\n<li>strategic games: a model of a situation in which each player chooses his plan of action once and for all, and all players’ decisions are made simultaneously</li>\n<li>extensive games: specify the possible orders of events; each player can consider his plan of action not only at the beginning of the game but also whenever he has to make a decision<ol>\n<li>with perfect information: each player is fully informed about others’ moves</li>\n<li>without perfect information: each player is not fully informed about others’ moves</li>\n</ol>\n</li>\n<li>coalitional games</li>\n</ol>\n</li>\n<li>A <em>player</em> is the basic entity of all game theoretic models. A player may be interpreted as an individual or as a group of individuals making a decision.<ol>\n<li>individual players -&gt; noncooperative</li>\n<li>groups of players -&gt; cooperative</li>\n</ol>\n</li>\n<li>Mathematical notations<br><img src=\"notations.jpg\" alt=\"\"></li>\n</ol>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: decodeURI(window.location.pathname),\n            distractionFreeMode: true // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>"},{"title":"2023 · 新的一年 · 战士","mathjax":false,"codeblock":{"enable":true,"show_result":true},"date":"2023-01-21T14:09:49.000Z","_content":"旧的一年，新的一年。\n\n标题取自《三月的狮子》。\n<!--more-->\n\n#### 新的一年\n\n第一个不在家过的中国年。两个屏幕，一个放着春晚直播，另一个用来写博客和改论文。一瓶酸奶，两枚蜜桔，思考第三段的改法。刚刚和某人兜风回来，虽然今日小雨，路上行人渐少，但时不时能看见极漂亮的烟花，也呼吸到很清爽的空气。这边的雨不像广州那般闷热和豆大的雨滴，而是伴着微风，细细长长的雨丝，雨后还会起一层薄雾。这一场雨，仿佛是要把过去的2022年的所有阴霾和灰尘，一扫而空。\n\n疫情之下，广州花市关闭了三年，回安徽老家的路也封锁了三年。从22年10月开始，就在考虑回老家的事。但那边时常全域静默，所以一直未能成行。终于在2022年的尾巴，全国解封之后，回家的事终于提上了议程。前几天回去看望爷爷奶奶和亲戚，有的没变，有的变了很多。爷爷一如既往地硬朗，奶奶一如既往地精神，头发也一如既往地乌黑，没有很多白头发。堂哥生了小朋友，升级成为父亲，大姑升级成为奶奶，大姑父升级成为爷爷（，我也升级成为叔叔）。小朋友是如此神奇，虽然不会说话，但已经能用肢体和哭声与大人交流。他这样小只，却有着和大人同构的五官，同样的四肢，能够触摸，能够抓取。他的大脑已经开始思考，开始理解世界和学习知识。在可期的未来，他会茁壮成长，从一个小朋友长成一名大朋友。看到大家族诞生的新生命，感慨时间流逝之快，回家的心境也与以前不同。以前回老家，是以小朋友的身份。这样的自己，会收到压岁钱，会被长辈各种关爱，心里也只有纯粹的快乐。现在回老家，是以成年人的身份。这样的自己，会面临亲戚的追问（如事业、催婚），会有更多关于责任的思考。亲戚之间，应该以何种方式交往？爷爷奶奶年事已高，以后是否要常回来看看？这些都是不可回避的问题。\n\n虽然责任层面上意识到了回家的必要性（而非像小时候那样回家就是为了玩），但是心理层面却不那么恋家了。原因大致有二：其一，走的路多了，看过的风景的多了，对于回家的距离不再敏感，仿佛四海之内回家的路都一样短。从合肥到广州，打飞的只要两个小时；从米国到中国，打飞的也只要十个小时。况且，不一定以某处为家，而是四海为家。其二，有了可以一心扑上去的事情做（指读研），不再那么渴望回家和玩耍（其实上次回家写论文的体验也非常棒hhh）。因此即便身在异地，也不至于太过孤独。不过有时也会想，要是回家了也不错啊！如果在老家，有吃不完的牛羊肉和喝不完的油茶；如果在广州，或许每天都能叹叹早茶，去西华路嗦河粉，上越秀山溜个弯。\n\n在春晚的歌声、论文的复杂构思、博客的混乱思绪里，时间悄悄流过。\n\n2023，新的一年就这样悄无声息地到来了。\n\n#### 战士\n\n研究生阶段的首要任务是发论文。正如棋士是在棋盘上与对手搏杀的战士，研究者也是在未知的领域挑战研究问题的战士。熟悉研究领域（熟悉战场）；广泛调研文献，发现有价值的研究问题（寻找适合的对手）；探索解决研究问题的方法（挑战对手），这正是战斗的内容。战斗结束后，还需要将整个过程记录下来，以供人参考，是为写论文。\n\n我当前的研究领域在于教育数据挖掘，这一领域的基本思想是将数据挖掘技术与教育应用（如能力测评、试题推荐）相结合，使用数据挖掘技术解决教育应用中的痛点问题。例如，如何从受试者的答题记录中推断其认知能力（认知诊断）、如何在时间维度上追踪受试者的能力变化和答题能力（知识追踪）。自己去年在KDD'22上发表的一篇文章，挑战的研究问题是如何将知识点的依赖关系融合进认知诊断的过程中。这一领域不像理论机器学习那样在数学上硬核，也不像system方向那样在实验上硬核，但也是真真切切的、有实际落地价值的研究。希望能在这个领域能多做一些优美的、有趣的、开创性的、有价值的工作。换言之，希望能在战斗中给出扎实但不失灵活的战术。然后，将这些战斗记录下来，以飨后人。目前正在赶一篇论文，希望稳稳能中！\n\n我们的战斗还要继续，我们的战斗才刚刚开始！[经典收尾]\n\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: document.title+document.date,\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","source":"_posts/2023-1-21-new-year-warrior.md","raw":"---\ntitle: 2023 · 新的一年 · 战士\nmathjax: false\ncodeblock:\n  enable: true\n  show_result: true\ndate: 2023-01-21 22:09:49\ntags:\ncategories:\n---\n旧的一年，新的一年。\n\n标题取自《三月的狮子》。\n<!--more-->\n\n#### 新的一年\n\n第一个不在家过的中国年。两个屏幕，一个放着春晚直播，另一个用来写博客和改论文。一瓶酸奶，两枚蜜桔，思考第三段的改法。刚刚和某人兜风回来，虽然今日小雨，路上行人渐少，但时不时能看见极漂亮的烟花，也呼吸到很清爽的空气。这边的雨不像广州那般闷热和豆大的雨滴，而是伴着微风，细细长长的雨丝，雨后还会起一层薄雾。这一场雨，仿佛是要把过去的2022年的所有阴霾和灰尘，一扫而空。\n\n疫情之下，广州花市关闭了三年，回安徽老家的路也封锁了三年。从22年10月开始，就在考虑回老家的事。但那边时常全域静默，所以一直未能成行。终于在2022年的尾巴，全国解封之后，回家的事终于提上了议程。前几天回去看望爷爷奶奶和亲戚，有的没变，有的变了很多。爷爷一如既往地硬朗，奶奶一如既往地精神，头发也一如既往地乌黑，没有很多白头发。堂哥生了小朋友，升级成为父亲，大姑升级成为奶奶，大姑父升级成为爷爷（，我也升级成为叔叔）。小朋友是如此神奇，虽然不会说话，但已经能用肢体和哭声与大人交流。他这样小只，却有着和大人同构的五官，同样的四肢，能够触摸，能够抓取。他的大脑已经开始思考，开始理解世界和学习知识。在可期的未来，他会茁壮成长，从一个小朋友长成一名大朋友。看到大家族诞生的新生命，感慨时间流逝之快，回家的心境也与以前不同。以前回老家，是以小朋友的身份。这样的自己，会收到压岁钱，会被长辈各种关爱，心里也只有纯粹的快乐。现在回老家，是以成年人的身份。这样的自己，会面临亲戚的追问（如事业、催婚），会有更多关于责任的思考。亲戚之间，应该以何种方式交往？爷爷奶奶年事已高，以后是否要常回来看看？这些都是不可回避的问题。\n\n虽然责任层面上意识到了回家的必要性（而非像小时候那样回家就是为了玩），但是心理层面却不那么恋家了。原因大致有二：其一，走的路多了，看过的风景的多了，对于回家的距离不再敏感，仿佛四海之内回家的路都一样短。从合肥到广州，打飞的只要两个小时；从米国到中国，打飞的也只要十个小时。况且，不一定以某处为家，而是四海为家。其二，有了可以一心扑上去的事情做（指读研），不再那么渴望回家和玩耍（其实上次回家写论文的体验也非常棒hhh）。因此即便身在异地，也不至于太过孤独。不过有时也会想，要是回家了也不错啊！如果在老家，有吃不完的牛羊肉和喝不完的油茶；如果在广州，或许每天都能叹叹早茶，去西华路嗦河粉，上越秀山溜个弯。\n\n在春晚的歌声、论文的复杂构思、博客的混乱思绪里，时间悄悄流过。\n\n2023，新的一年就这样悄无声息地到来了。\n\n#### 战士\n\n研究生阶段的首要任务是发论文。正如棋士是在棋盘上与对手搏杀的战士，研究者也是在未知的领域挑战研究问题的战士。熟悉研究领域（熟悉战场）；广泛调研文献，发现有价值的研究问题（寻找适合的对手）；探索解决研究问题的方法（挑战对手），这正是战斗的内容。战斗结束后，还需要将整个过程记录下来，以供人参考，是为写论文。\n\n我当前的研究领域在于教育数据挖掘，这一领域的基本思想是将数据挖掘技术与教育应用（如能力测评、试题推荐）相结合，使用数据挖掘技术解决教育应用中的痛点问题。例如，如何从受试者的答题记录中推断其认知能力（认知诊断）、如何在时间维度上追踪受试者的能力变化和答题能力（知识追踪）。自己去年在KDD'22上发表的一篇文章，挑战的研究问题是如何将知识点的依赖关系融合进认知诊断的过程中。这一领域不像理论机器学习那样在数学上硬核，也不像system方向那样在实验上硬核，但也是真真切切的、有实际落地价值的研究。希望能在这个领域能多做一些优美的、有趣的、开创性的、有价值的工作。换言之，希望能在战斗中给出扎实但不失灵活的战术。然后，将这些战斗记录下来，以飨后人。目前正在赶一篇论文，希望稳稳能中！\n\n我们的战斗还要继续，我们的战斗才刚刚开始！[经典收尾]\n\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: document.title+document.date,\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","slug":"2023-1-21-new-year-warrior","published":1,"updated":"2023-01-21T15:35:33.397Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cludw9na600369wv97zfodvpv","content":"<p>旧的一年，新的一年。</p>\n<p>标题取自《三月的狮子》。<br><span id=\"more\"></span></p>\n<h4 id=\"新的一年\"><a href=\"#新的一年\" class=\"headerlink\" title=\"新的一年\"></a>新的一年</h4><p>第一个不在家过的中国年。两个屏幕，一个放着春晚直播，另一个用来写博客和改论文。一瓶酸奶，两枚蜜桔，思考第三段的改法。刚刚和某人兜风回来，虽然今日小雨，路上行人渐少，但时不时能看见极漂亮的烟花，也呼吸到很清爽的空气。这边的雨不像广州那般闷热和豆大的雨滴，而是伴着微风，细细长长的雨丝，雨后还会起一层薄雾。这一场雨，仿佛是要把过去的2022年的所有阴霾和灰尘，一扫而空。</p>\n<p>疫情之下，广州花市关闭了三年，回安徽老家的路也封锁了三年。从22年10月开始，就在考虑回老家的事。但那边时常全域静默，所以一直未能成行。终于在2022年的尾巴，全国解封之后，回家的事终于提上了议程。前几天回去看望爷爷奶奶和亲戚，有的没变，有的变了很多。爷爷一如既往地硬朗，奶奶一如既往地精神，头发也一如既往地乌黑，没有很多白头发。堂哥生了小朋友，升级成为父亲，大姑升级成为奶奶，大姑父升级成为爷爷（，我也升级成为叔叔）。小朋友是如此神奇，虽然不会说话，但已经能用肢体和哭声与大人交流。他这样小只，却有着和大人同构的五官，同样的四肢，能够触摸，能够抓取。他的大脑已经开始思考，开始理解世界和学习知识。在可期的未来，他会茁壮成长，从一个小朋友长成一名大朋友。看到大家族诞生的新生命，感慨时间流逝之快，回家的心境也与以前不同。以前回老家，是以小朋友的身份。这样的自己，会收到压岁钱，会被长辈各种关爱，心里也只有纯粹的快乐。现在回老家，是以成年人的身份。这样的自己，会面临亲戚的追问（如事业、催婚），会有更多关于责任的思考。亲戚之间，应该以何种方式交往？爷爷奶奶年事已高，以后是否要常回来看看？这些都是不可回避的问题。</p>\n<p>虽然责任层面上意识到了回家的必要性（而非像小时候那样回家就是为了玩），但是心理层面却不那么恋家了。原因大致有二：其一，走的路多了，看过的风景的多了，对于回家的距离不再敏感，仿佛四海之内回家的路都一样短。从合肥到广州，打飞的只要两个小时；从米国到中国，打飞的也只要十个小时。况且，不一定以某处为家，而是四海为家。其二，有了可以一心扑上去的事情做（指读研），不再那么渴望回家和玩耍（其实上次回家写论文的体验也非常棒hhh）。因此即便身在异地，也不至于太过孤独。不过有时也会想，要是回家了也不错啊！如果在老家，有吃不完的牛羊肉和喝不完的油茶；如果在广州，或许每天都能叹叹早茶，去西华路嗦河粉，上越秀山溜个弯。</p>\n<p>在春晚的歌声、论文的复杂构思、博客的混乱思绪里，时间悄悄流过。</p>\n<p>2023，新的一年就这样悄无声息地到来了。</p>\n<h4 id=\"战士\"><a href=\"#战士\" class=\"headerlink\" title=\"战士\"></a>战士</h4><p>研究生阶段的首要任务是发论文。正如棋士是在棋盘上与对手搏杀的战士，研究者也是在未知的领域挑战研究问题的战士。熟悉研究领域（熟悉战场）；广泛调研文献，发现有价值的研究问题（寻找适合的对手）；探索解决研究问题的方法（挑战对手），这正是战斗的内容。战斗结束后，还需要将整个过程记录下来，以供人参考，是为写论文。</p>\n<p>我当前的研究领域在于教育数据挖掘，这一领域的基本思想是将数据挖掘技术与教育应用（如能力测评、试题推荐）相结合，使用数据挖掘技术解决教育应用中的痛点问题。例如，如何从受试者的答题记录中推断其认知能力（认知诊断）、如何在时间维度上追踪受试者的能力变化和答题能力（知识追踪）。自己去年在KDD’22上发表的一篇文章，挑战的研究问题是如何将知识点的依赖关系融合进认知诊断的过程中。这一领域不像理论机器学习那样在数学上硬核，也不像system方向那样在实验上硬核，但也是真真切切的、有实际落地价值的研究。希望能在这个领域能多做一些优美的、有趣的、开创性的、有价值的工作。换言之，希望能在战斗中给出扎实但不失灵活的战术。然后，将这些战斗记录下来，以飨后人。目前正在赶一篇论文，希望稳稳能中！</p>\n<p>我们的战斗还要继续，我们的战斗才刚刚开始！[经典收尾]</p>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: document.title+document.date,\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","site":{"data":{}},"length":1915,"excerpt":"<p>旧的一年，新的一年。</p>\n<p>标题取自《三月的狮子》。<br>","more":"</p>\n<h4 id=\"新的一年\"><a href=\"#新的一年\" class=\"headerlink\" title=\"新的一年\"></a>新的一年</h4><p>第一个不在家过的中国年。两个屏幕，一个放着春晚直播，另一个用来写博客和改论文。一瓶酸奶，两枚蜜桔，思考第三段的改法。刚刚和某人兜风回来，虽然今日小雨，路上行人渐少，但时不时能看见极漂亮的烟花，也呼吸到很清爽的空气。这边的雨不像广州那般闷热和豆大的雨滴，而是伴着微风，细细长长的雨丝，雨后还会起一层薄雾。这一场雨，仿佛是要把过去的2022年的所有阴霾和灰尘，一扫而空。</p>\n<p>疫情之下，广州花市关闭了三年，回安徽老家的路也封锁了三年。从22年10月开始，就在考虑回老家的事。但那边时常全域静默，所以一直未能成行。终于在2022年的尾巴，全国解封之后，回家的事终于提上了议程。前几天回去看望爷爷奶奶和亲戚，有的没变，有的变了很多。爷爷一如既往地硬朗，奶奶一如既往地精神，头发也一如既往地乌黑，没有很多白头发。堂哥生了小朋友，升级成为父亲，大姑升级成为奶奶，大姑父升级成为爷爷（，我也升级成为叔叔）。小朋友是如此神奇，虽然不会说话，但已经能用肢体和哭声与大人交流。他这样小只，却有着和大人同构的五官，同样的四肢，能够触摸，能够抓取。他的大脑已经开始思考，开始理解世界和学习知识。在可期的未来，他会茁壮成长，从一个小朋友长成一名大朋友。看到大家族诞生的新生命，感慨时间流逝之快，回家的心境也与以前不同。以前回老家，是以小朋友的身份。这样的自己，会收到压岁钱，会被长辈各种关爱，心里也只有纯粹的快乐。现在回老家，是以成年人的身份。这样的自己，会面临亲戚的追问（如事业、催婚），会有更多关于责任的思考。亲戚之间，应该以何种方式交往？爷爷奶奶年事已高，以后是否要常回来看看？这些都是不可回避的问题。</p>\n<p>虽然责任层面上意识到了回家的必要性（而非像小时候那样回家就是为了玩），但是心理层面却不那么恋家了。原因大致有二：其一，走的路多了，看过的风景的多了，对于回家的距离不再敏感，仿佛四海之内回家的路都一样短。从合肥到广州，打飞的只要两个小时；从米国到中国，打飞的也只要十个小时。况且，不一定以某处为家，而是四海为家。其二，有了可以一心扑上去的事情做（指读研），不再那么渴望回家和玩耍（其实上次回家写论文的体验也非常棒hhh）。因此即便身在异地，也不至于太过孤独。不过有时也会想，要是回家了也不错啊！如果在老家，有吃不完的牛羊肉和喝不完的油茶；如果在广州，或许每天都能叹叹早茶，去西华路嗦河粉，上越秀山溜个弯。</p>\n<p>在春晚的歌声、论文的复杂构思、博客的混乱思绪里，时间悄悄流过。</p>\n<p>2023，新的一年就这样悄无声息地到来了。</p>\n<h4 id=\"战士\"><a href=\"#战士\" class=\"headerlink\" title=\"战士\"></a>战士</h4><p>研究生阶段的首要任务是发论文。正如棋士是在棋盘上与对手搏杀的战士，研究者也是在未知的领域挑战研究问题的战士。熟悉研究领域（熟悉战场）；广泛调研文献，发现有价值的研究问题（寻找适合的对手）；探索解决研究问题的方法（挑战对手），这正是战斗的内容。战斗结束后，还需要将整个过程记录下来，以供人参考，是为写论文。</p>\n<p>我当前的研究领域在于教育数据挖掘，这一领域的基本思想是将数据挖掘技术与教育应用（如能力测评、试题推荐）相结合，使用数据挖掘技术解决教育应用中的痛点问题。例如，如何从受试者的答题记录中推断其认知能力（认知诊断）、如何在时间维度上追踪受试者的能力变化和答题能力（知识追踪）。自己去年在KDD’22上发表的一篇文章，挑战的研究问题是如何将知识点的依赖关系融合进认知诊断的过程中。这一领域不像理论机器学习那样在数学上硬核，也不像system方向那样在实验上硬核，但也是真真切切的、有实际落地价值的研究。希望能在这个领域能多做一些优美的、有趣的、开创性的、有价值的工作。换言之，希望能在战斗中给出扎实但不失灵活的战术。然后，将这些战斗记录下来，以飨后人。目前正在赶一篇论文，希望稳稳能中！</p>\n<p>我们的战斗还要继续，我们的战斗才刚刚开始！[经典收尾]</p>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: document.title+document.date,\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>"},{"title":"推荐系统中的用户行为建模综述【IJCAI'22论文阅读】","mathjax":true,"codeblock":{"enable":true,"show_result":true},"date":"2023-12-01T08:28:17.000Z","_content":"\n本文为IJCAI'22综述论文 _[A Survey on User Behavior Modeling in Recommender Systems](https://arxiv.org/abs/2302.11087)_ 阅读笔记。\n<!--more-->\n\n- [问题定义](#问题定义)\n- [UBM 工作分类](#ubm-工作分类)\n  - [传统UBM](#传统ubm)\n  - [长序列UBM](#长序列ubm)\n  - [多类型UBM](#多类型ubm)\n    - [行为的分类](#行为的分类)\n    - [多行为融合](#多行为融合)\n    - [多行为预测](#多行为预测)\n- [UBM + 辅助信息](#ubm--辅助信息)\n  - [辅助信息源](#辅助信息源)\n  - [辅助信息的利用](#辅助信息的利用)\n- [研究展望](#研究展望)\n\n\n## 问题定义\n- 用户行为建模（User Bevhavior Modeling, UBM）是推荐系统（Recommender System, RS）中的一个重要问题，其目标为根据用户信息、商品信息以及用户历史行为数据去预测用户对商品的兴趣：\n\n$$\nP(u,i) = F_{\\Theta}^{UBM}(u,i,\\mathcal{H}_u,f_u,f_i,f_c),\\forall u\\in\\mathcal{U},i\\in\\mathcal{I}\n$$\n\n其中：\n- $\\mathcal{U}$为用户集合，$\\mathcal{I}$为商品集合\n- $f_u,f_i,f_c$分别为非行为用户特征（如年龄）、商品特征（如价格）、上下文特征（如工作日/周末），不在本文讨论范围内\n- $\\mathcal{H}_u = \\{h_{u,k}=(v_k,t_k,f_k)|v_k\\in\\mathcal{I},t_k, f_k\\}$ 表示用户$u$的历史行为集合，其元素为一个三元组，包含历史商品标识$v_k$，时间戳$t_k$，行为特征$f_k$。\n\n## UBM 工作分类\n### 传统UBM \n特点：用户历史行为集合用短序列（按时间排序）表示，且行为种类单一：\n\n$$\nP(u,i) = F_\\Theta^{UBM}(u,i,\\mathcal{H}_u^S),\\forall u\\in\\mathcal{U},i\\in\\mathcal{I}\n$$\n\n其中$\\mathcal{H}_u^S$为从用户历史行为集合$\\mathcal{H}_u$中提取的短行为序列，且长度有限。\n\n常见方法：RNN-based; CNN-based; Attention-based\n\n- 讨论：相关研究主要关注于不同网络结构（RNN,CNN,Attention,MLP...）对于捕捉历史行为特征的作用，且不同网络结构各有优劣\n\n### 长序列UBM\n特点：将传统UBM中的用户历史行为序列拓展到长序列（至少$10^3$级别），研究难点为长序列难以使用深度模型学习（遗忘问题）、噪声含量高，以及潜在计算瓶颈：\n\n$$\nP(u,i) = F_\\Theta^{UBM}(u,i,\\mathcal{H}_u^L),\\forall u\\in\\mathcal{U},i\\in\\mathcal{I}\n$$\n\n其中$\\mathcal{H}_u^S$为从用户历史行为集合$\\mathcal{H}_u$中提取的长行为序列。\n\n常见方法：Memory-augmented: User Behavior Retrieval\n- Memory-augmented: 将从长序列中提取到的知识额外存储，如用户兴趣表征（可embedding化）\n- User Behavior Retrieval: 从长行为序列中检索与当前推荐目标最相关的那些行为，从而减少历史行为序列之长度，并且降噪\n\n- 讨论：memory-augemented方法的动机是通过引入额外参数来记忆历史行为序列信息。该方法虽然对于长序列建模很有效，但在现实场景中模型相当复杂且难以部署。相比之下，retrival-based方法效率更高，且更易于部署在大规模推荐系统中。然而此类方法不可避免地会损失部分行为信息。\n\n### 多类型UBM\n特点：同时考虑多种类型的用户行为（如购买，点击，etc.）对用户兴趣估计的影响：\n\n$$\nP(u,i) = F_\\Theta^{UBM}(u,i,\\mathcal{H}_u^{MB}),\\forall u\\in\\mathcal{U},i\\in\\mathcal{I}\n$$\n\n其中$\\mathcal{H}_u^{MB}$为从用户历史行为集合$\\mathcal{H}_u$中提取的多类别行为序列，每个元素为$h_{u,k}^{MB}=(v_k,t_k,b_k,f_k)$, 其中$b_k\\in\\mathcal{B}$表示用户的行为类别。\n\n#### 行为的分类\n多类型UBM的第一大挑战是用户行为的分类，目前学界缺乏统一定义。一般地，用户行为可以分为三大类：\n- 宏观行为：具有显式的交互行动的那些行为，例如点击、加入购物车、收藏、购买等。在线购物平台中可直接获取。\n- 微观行为：依赖于专家知识的，比宏观行为更加细粒度的行为。例如点击行为可以根据点击源的不同做进一步分类。然而这种分类法缺乏泛化性，难以推广到与场景无关的一般情况。\n- 来自不同领域或场景的行为：与场景相关联的行为，例如搜索场景中的查询操作以及推荐场景中的点击操作。此外，同名行为（如“观看”）在不同场景中的含义也不同，需要分别单独建模。\n\n#### 多行为融合\n多行为UBM的第二大挑战是如何联合利用多种行为提升推荐效果。相关做法为late-fusion和early-fusion两种。\n- late-fusion：两阶段方法。第一阶段分别建模每种行为，第二阶段将第一阶段的建模结果融合\n- early-fusion：从一开始就将所有种类行为混合建模（所有行为放进一个混合行为序列里）\n\n#### 多行为预测\n多行为UBM的第三大挑战是，有些行为本身需要在模型中被预测出来（笔者：由于这些行为在测试集中不可获取？）。\n- 常见做法：单独设置一个行为预测模型，与兴趣预测相互分离。优点：易于构建；缺点：行为预测模型缺乏与兴趣预测本身的联系，因此兴趣预测性能堪忧。\n\n## UBM + 辅助信息\n除了上述UBM方法，相关研究者还注重于利用行为中丰富的辅助信息（如时间戳）增强推荐效果：\n\n$$\nP(u,i) = F_\\Theta^{UBM}(u,i,M(\\mathcal{H}_u)), \\forall u\\in\\mathcal{U}, i\\in\\mathcal{I}\n$$\n\n其中$M(\\cdot)$将辅助信息($t_k,f_k$)与商品ID $v_k$融合，以获得商品的细粒度表征。$M(\\cdot)$的设计在这里工作中非常重要。\n\n\n### 辅助信息源\n辅助信息有三种来源：时间信息、商品属性，以及多模态信息。\n- 时间信息：时间戳、时间间隔，可用来排序或挖掘用户兴趣\n- 商品属性：如商品价格，影响用户行为从而影响兴趣\n- 多模态信息：如商品介绍文本、图片、视频，同上\n\n### 辅助信息的利用\n（笔者：基本思想为表征学习，即将辅助信息映射到语义向量，映射过程可训练，类似Transformer）。\n相关做法略\n\n## 研究展望\n- 更加深度的信息融合\n- 更加高速的学习算法\n- 更加可解释的用户表征\n- 更加先进的技术（如预训练）\n\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: decodeURI(window.location.pathname),\n            distractionFreeMode: true // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","source":"_posts/2023-12-01-ubm.md","raw":"---\ntitle: 推荐系统中的用户行为建模综述【IJCAI'22论文阅读】\nmathjax: True\ncodeblock:\n  enable: true\n  show_result: true\ndate: 2023-12-01 16:28:17\ntags: 推荐系统\ncategories: 学习笔记\n---\n\n本文为IJCAI'22综述论文 _[A Survey on User Behavior Modeling in Recommender Systems](https://arxiv.org/abs/2302.11087)_ 阅读笔记。\n<!--more-->\n\n- [问题定义](#问题定义)\n- [UBM 工作分类](#ubm-工作分类)\n  - [传统UBM](#传统ubm)\n  - [长序列UBM](#长序列ubm)\n  - [多类型UBM](#多类型ubm)\n    - [行为的分类](#行为的分类)\n    - [多行为融合](#多行为融合)\n    - [多行为预测](#多行为预测)\n- [UBM + 辅助信息](#ubm--辅助信息)\n  - [辅助信息源](#辅助信息源)\n  - [辅助信息的利用](#辅助信息的利用)\n- [研究展望](#研究展望)\n\n\n## 问题定义\n- 用户行为建模（User Bevhavior Modeling, UBM）是推荐系统（Recommender System, RS）中的一个重要问题，其目标为根据用户信息、商品信息以及用户历史行为数据去预测用户对商品的兴趣：\n\n$$\nP(u,i) = F_{\\Theta}^{UBM}(u,i,\\mathcal{H}_u,f_u,f_i,f_c),\\forall u\\in\\mathcal{U},i\\in\\mathcal{I}\n$$\n\n其中：\n- $\\mathcal{U}$为用户集合，$\\mathcal{I}$为商品集合\n- $f_u,f_i,f_c$分别为非行为用户特征（如年龄）、商品特征（如价格）、上下文特征（如工作日/周末），不在本文讨论范围内\n- $\\mathcal{H}_u = \\{h_{u,k}=(v_k,t_k,f_k)|v_k\\in\\mathcal{I},t_k, f_k\\}$ 表示用户$u$的历史行为集合，其元素为一个三元组，包含历史商品标识$v_k$，时间戳$t_k$，行为特征$f_k$。\n\n## UBM 工作分类\n### 传统UBM \n特点：用户历史行为集合用短序列（按时间排序）表示，且行为种类单一：\n\n$$\nP(u,i) = F_\\Theta^{UBM}(u,i,\\mathcal{H}_u^S),\\forall u\\in\\mathcal{U},i\\in\\mathcal{I}\n$$\n\n其中$\\mathcal{H}_u^S$为从用户历史行为集合$\\mathcal{H}_u$中提取的短行为序列，且长度有限。\n\n常见方法：RNN-based; CNN-based; Attention-based\n\n- 讨论：相关研究主要关注于不同网络结构（RNN,CNN,Attention,MLP...）对于捕捉历史行为特征的作用，且不同网络结构各有优劣\n\n### 长序列UBM\n特点：将传统UBM中的用户历史行为序列拓展到长序列（至少$10^3$级别），研究难点为长序列难以使用深度模型学习（遗忘问题）、噪声含量高，以及潜在计算瓶颈：\n\n$$\nP(u,i) = F_\\Theta^{UBM}(u,i,\\mathcal{H}_u^L),\\forall u\\in\\mathcal{U},i\\in\\mathcal{I}\n$$\n\n其中$\\mathcal{H}_u^S$为从用户历史行为集合$\\mathcal{H}_u$中提取的长行为序列。\n\n常见方法：Memory-augmented: User Behavior Retrieval\n- Memory-augmented: 将从长序列中提取到的知识额外存储，如用户兴趣表征（可embedding化）\n- User Behavior Retrieval: 从长行为序列中检索与当前推荐目标最相关的那些行为，从而减少历史行为序列之长度，并且降噪\n\n- 讨论：memory-augemented方法的动机是通过引入额外参数来记忆历史行为序列信息。该方法虽然对于长序列建模很有效，但在现实场景中模型相当复杂且难以部署。相比之下，retrival-based方法效率更高，且更易于部署在大规模推荐系统中。然而此类方法不可避免地会损失部分行为信息。\n\n### 多类型UBM\n特点：同时考虑多种类型的用户行为（如购买，点击，etc.）对用户兴趣估计的影响：\n\n$$\nP(u,i) = F_\\Theta^{UBM}(u,i,\\mathcal{H}_u^{MB}),\\forall u\\in\\mathcal{U},i\\in\\mathcal{I}\n$$\n\n其中$\\mathcal{H}_u^{MB}$为从用户历史行为集合$\\mathcal{H}_u$中提取的多类别行为序列，每个元素为$h_{u,k}^{MB}=(v_k,t_k,b_k,f_k)$, 其中$b_k\\in\\mathcal{B}$表示用户的行为类别。\n\n#### 行为的分类\n多类型UBM的第一大挑战是用户行为的分类，目前学界缺乏统一定义。一般地，用户行为可以分为三大类：\n- 宏观行为：具有显式的交互行动的那些行为，例如点击、加入购物车、收藏、购买等。在线购物平台中可直接获取。\n- 微观行为：依赖于专家知识的，比宏观行为更加细粒度的行为。例如点击行为可以根据点击源的不同做进一步分类。然而这种分类法缺乏泛化性，难以推广到与场景无关的一般情况。\n- 来自不同领域或场景的行为：与场景相关联的行为，例如搜索场景中的查询操作以及推荐场景中的点击操作。此外，同名行为（如“观看”）在不同场景中的含义也不同，需要分别单独建模。\n\n#### 多行为融合\n多行为UBM的第二大挑战是如何联合利用多种行为提升推荐效果。相关做法为late-fusion和early-fusion两种。\n- late-fusion：两阶段方法。第一阶段分别建模每种行为，第二阶段将第一阶段的建模结果融合\n- early-fusion：从一开始就将所有种类行为混合建模（所有行为放进一个混合行为序列里）\n\n#### 多行为预测\n多行为UBM的第三大挑战是，有些行为本身需要在模型中被预测出来（笔者：由于这些行为在测试集中不可获取？）。\n- 常见做法：单独设置一个行为预测模型，与兴趣预测相互分离。优点：易于构建；缺点：行为预测模型缺乏与兴趣预测本身的联系，因此兴趣预测性能堪忧。\n\n## UBM + 辅助信息\n除了上述UBM方法，相关研究者还注重于利用行为中丰富的辅助信息（如时间戳）增强推荐效果：\n\n$$\nP(u,i) = F_\\Theta^{UBM}(u,i,M(\\mathcal{H}_u)), \\forall u\\in\\mathcal{U}, i\\in\\mathcal{I}\n$$\n\n其中$M(\\cdot)$将辅助信息($t_k,f_k$)与商品ID $v_k$融合，以获得商品的细粒度表征。$M(\\cdot)$的设计在这里工作中非常重要。\n\n\n### 辅助信息源\n辅助信息有三种来源：时间信息、商品属性，以及多模态信息。\n- 时间信息：时间戳、时间间隔，可用来排序或挖掘用户兴趣\n- 商品属性：如商品价格，影响用户行为从而影响兴趣\n- 多模态信息：如商品介绍文本、图片、视频，同上\n\n### 辅助信息的利用\n（笔者：基本思想为表征学习，即将辅助信息映射到语义向量，映射过程可训练，类似Transformer）。\n相关做法略\n\n## 研究展望\n- 更加深度的信息融合\n- 更加高速的学习算法\n- 更加可解释的用户表征\n- 更加先进的技术（如预训练）\n\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: decodeURI(window.location.pathname),\n            distractionFreeMode: true // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","slug":"2023-12-01-ubm","published":1,"updated":"2024-02-01T03:09:06.785Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cludw9na600399wv9h6kvcenc","content":"<p>本文为IJCAI’22综述论文 _<a href=\"https://arxiv.org/abs/2302.11087\">A Survey on User Behavior Modeling in Recommender Systems</a>_ 阅读笔记。<br><span id=\"more\"></span></p>\n<ul>\n<li><a href=\"#问题定义\">问题定义</a></li>\n<li><a href=\"#ubm-工作分类\">UBM 工作分类</a><ul>\n<li><a href=\"#传统ubm\">传统UBM</a></li>\n<li><a href=\"#长序列ubm\">长序列UBM</a></li>\n<li><a href=\"#多类型ubm\">多类型UBM</a><ul>\n<li><a href=\"#行为的分类\">行为的分类</a></li>\n<li><a href=\"#多行为融合\">多行为融合</a></li>\n<li><a href=\"#多行为预测\">多行为预测</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"#ubm--辅助信息\">UBM + 辅助信息</a><ul>\n<li><a href=\"#辅助信息源\">辅助信息源</a></li>\n<li><a href=\"#辅助信息的利用\">辅助信息的利用</a></li>\n</ul>\n</li>\n<li><a href=\"#研究展望\">研究展望</a></li>\n</ul>\n<h2 id=\"问题定义\"><a href=\"#问题定义\" class=\"headerlink\" title=\"问题定义\"></a>问题定义</h2><ul>\n<li>用户行为建模（User Bevhavior Modeling, UBM）是推荐系统（Recommender System, RS）中的一个重要问题，其目标为根据用户信息、商品信息以及用户历史行为数据去预测用户对商品的兴趣：</li>\n</ul>\n<script type=\"math/tex; mode=display\">\nP(u,i) = F_{\\Theta}^{UBM}(u,i,\\mathcal{H}_u,f_u,f_i,f_c),\\forall u\\in\\mathcal{U},i\\in\\mathcal{I}</script><p>其中：</p>\n<ul>\n<li><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.063ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.554ex\" height=\"1.609ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 687 711\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"55\" d=\"M8 592Q8 616 70 649T193 683Q246 683 246 631Q246 587 205 492T124 297T83 143Q83 101 100 75T154 48Q202 48 287 135T450 342T560 553Q589 635 593 640Q603 656 626 668T669 683H670Q687 683 687 672T670 616T617 463T547 220Q525 137 521 68Q521 54 522 50T533 42L543 47Q573 61 588 61Q604 61 604 47Q599 16 506 -22Q486 -28 468 -28T436 -18T421 18Q421 92 468 258Q468 259 467 257T459 248Q426 206 391 167T303 81T194 6T83 -22Q66 -22 58 -20Q25 -11 4 19T-17 99Q-17 146 8 220T64 358T120 488T146 586Q146 604 141 608T123 613H120Q99 613 72 597T25 580Q8 580 8 592Z\"></path></g></g></g></g></svg></mjx-container>为用户集合，<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.452ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 642 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"49\" d=\"M174 0H31Q-13 0 -21 2T-30 12Q-30 23 -17 36Q9 60 42 68L155 70Q187 102 214 179T257 333T302 491T366 610L369 614H305Q221 611 188 607T145 596T128 569Q119 543 94 529T47 512Q28 512 28 524Q28 527 32 539Q56 614 159 654Q218 678 312 682Q314 682 339 682T404 682T481 683H632Q642 678 642 671Q642 657 621 641T577 617Q570 615 507 614H444Q427 592 406 542Q382 478 355 366T310 209Q280 123 238 78L230 69H330Q442 70 442 74Q443 74 443 77T447 87T460 105Q490 134 527 137Q545 137 545 125Q545 120 542 112Q531 78 491 49T399 7Q379 2 360 2T174 0Z\"></path></g></g></g></g></svg></mjx-container>为商品集合</li>\n<li><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.464ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"8.061ex\" height=\"2.059ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -705 3562.9 910\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D453\" d=\"M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(523,-150) scale(0.707)\"><path data-c=\"1D462\" d=\"M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(977.5,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(1422.1,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D453\" d=\"M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(523,-150) scale(0.707)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(2239.1,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(2683.8,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D453\" d=\"M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(523,-150) scale(0.707)\"><path data-c=\"1D450\" d=\"M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z\"></path></g></g></g></g></svg></mjx-container>分别为非行为用户特征（如年龄）、商品特征（如价格）、上下文特征（如工作日/周末），不在本文讨论范围内</li>\n<li><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.65ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"37.8ex\" height=\"2.347ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 16707.7 1037.2\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"48\" d=\"M18 487Q18 496 29 517T67 566T127 621T216 665T330 683Q359 683 376 669T397 643T400 622Q400 584 382 488T348 343Q348 342 467 342H587L594 366Q615 440 648 534T690 641Q701 656 723 669T764 683Q783 683 783 672L750 578Q716 485 677 346T625 101Q624 92 623 82T622 65T621 56Q621 20 658 20Q666 20 701 25Q709 52 736 69T785 87Q803 87 803 75T791 44T754 3T685 -33T588 -48Q568 -48 562 -46Q522 -31 522 13V23Q531 129 562 250L569 281L565 280Q561 278 556 277T549 274L438 273H328L321 249Q307 202 275 107T232 0Q219 -16 196 -28T155 -41Q149 -41 145 -39T140 -34T139 -29Q139 -24 148 -3T181 86T233 247Q240 270 240 272Q240 273 194 273H169Q139 273 139 285Q139 295 153 308T187 332Q206 341 236 342L260 343L264 359Q278 414 289 482T300 578Q300 613 260 613H254Q198 613 169 592Q148 578 127 544T104 508Q72 478 37 475Q18 475 18 487Z\"></path></g></g><g data-mml-node=\"mi\" transform=\"translate(878,-150) scale(0.707)\"><path data-c=\"1D462\" d=\"M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(1610.2,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2666,0)\"><path data-c=\"7B\" d=\"M434 -231Q434 -244 428 -250H410Q281 -250 230 -184Q225 -177 222 -172T217 -161T213 -148T211 -133T210 -111T209 -84T209 -47T209 0Q209 21 209 53Q208 142 204 153Q203 154 203 155Q189 191 153 211T82 231Q71 231 68 234T65 250T68 266T82 269Q116 269 152 289T203 345Q208 356 208 377T209 529V579Q209 634 215 656T244 698Q270 724 324 740Q361 748 377 749Q379 749 390 749T408 750H428Q434 744 434 732Q434 719 431 716Q429 713 415 713Q362 710 332 689T296 647Q291 634 291 499V417Q291 370 288 353T271 314Q240 271 184 255L170 250L184 245Q202 239 220 230T262 196T290 137Q291 131 291 1Q291 -134 296 -147Q306 -174 339 -192T415 -213Q429 -213 431 -216Q434 -219 434 -231Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(3166,0)\"><g data-mml-node=\"mi\"><path data-c=\"210E\" d=\"M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z\"></path></g><g data-mml-node=\"TeXAtom\" transform=\"translate(609,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"1D462\" d=\"M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(572,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(850,0)\"><path data-c=\"1D458\" d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"></path></g></g></g><g data-mml-node=\"mo\" transform=\"translate(5072.2,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6128,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(6517,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D463\" d=\"M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(518,-150) scale(0.707)\"><path data-c=\"1D458\" d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(7453.4,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(7898.1,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(394,-150) scale(0.707)\"><path data-c=\"1D458\" d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(8710.5,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(9155.2,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D453\" d=\"M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(523,-150) scale(0.707)\"><path data-c=\"1D458\" d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(10096.6,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(10485.6,0) translate(0 -0.5)\"><path data-c=\"7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(10763.6,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D463\" d=\"M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(518,-150) scale(0.707)\"><path data-c=\"1D458\" d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(11977.7,0)\"><path data-c=\"2208\" d=\"M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z\"></path></g><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\" transform=\"translate(12922.5,0)\"><g data-mml-node=\"mi\"><path data-c=\"49\" d=\"M174 0H31Q-13 0 -21 2T-30 12Q-30 23 -17 36Q9 60 42 68L155 70Q187 102 214 179T257 333T302 491T366 610L369 614H305Q221 611 188 607T145 596T128 569Q119 543 94 529T47 512Q28 512 28 524Q28 527 32 539Q56 614 159 654Q218 678 312 682Q314 682 339 682T404 682T481 683H632Q642 678 642 671Q642 657 621 641T577 617Q570 615 507 614H444Q427 592 406 542Q382 478 355 366T310 209Q280 123 238 78L230 69H330Q442 70 442 74Q443 74 443 77T447 87T460 105Q490 134 527 137Q545 137 545 125Q545 120 542 112Q531 78 491 49T399 7Q379 2 360 2T174 0Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(13564.5,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(14009.2,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(394,-150) scale(0.707)\"><path data-c=\"1D458\" d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(14821.6,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(15266.3,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D453\" d=\"M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(523,-150) scale(0.707)\"><path data-c=\"1D458\" d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(16207.7,0)\"><path data-c=\"7D\" d=\"M65 731Q65 745 68 747T88 750Q171 750 216 725T279 670Q288 649 289 635T291 501Q292 362 293 357Q306 312 345 291T417 269Q428 269 431 266T434 250T431 234T417 231Q380 231 345 210T298 157Q293 143 292 121T291 -28V-79Q291 -134 285 -156T256 -198Q202 -250 89 -250Q71 -250 68 -247T65 -230Q65 -224 65 -223T66 -218T69 -214T77 -213Q91 -213 108 -210T146 -200T183 -177T207 -139Q208 -134 209 3L210 139Q223 196 280 230Q315 247 330 250Q305 257 280 270Q225 304 212 352L210 362L209 498Q208 635 207 640Q195 680 154 696T77 713Q68 713 67 716T65 731Z\"></path></g></g></g></svg></mjx-container> 表示用户<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.294ex\" height=\"1.025ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 572 453\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D462\" d=\"M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g></g></g></svg></mjx-container>的历史行为集合，其元素为一个三元组，包含历史商品标识<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.357ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.119ex\" height=\"1.359ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -443 936.4 600.8\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D463\" d=\"M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(518,-150) scale(0.707)\"><path data-c=\"1D458\" d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"></path></g></g></g></g></svg></mjx-container>，时间戳<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.357ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.838ex\" height=\"1.773ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -626 812.4 783.8\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(394,-150) scale(0.707)\"><path data-c=\"1D458\" d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"></path></g></g></g></g></svg></mjx-container>，行为特征<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.464ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.13ex\" height=\"2.059ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -705 941.4 910\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D453\" d=\"M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(523,-150) scale(0.707)\"><path data-c=\"1D458\" d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"></path></g></g></g></g></svg></mjx-container>。</li>\n</ul>\n<h2 id=\"UBM-工作分类\"><a href=\"#UBM-工作分类\" class=\"headerlink\" title=\"UBM 工作分类\"></a>UBM 工作分类</h2><h3 id=\"传统UBM\"><a href=\"#传统UBM\" class=\"headerlink\" title=\"传统UBM\"></a>传统UBM</h3><p>特点：用户历史行为集合用短序列（按时间排序）表示，且行为种类单一：</p>\n<script type=\"math/tex; mode=display\">\nP(u,i) = F_\\Theta^{UBM}(u,i,\\mathcal{H}_u^S),\\forall u\\in\\mathcal{U},i\\in\\mathcal{I}</script><p>其中<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.576ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"3.131ex\" height=\"2.526ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -861.5 1384.1 1116.3\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msubsup\"><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"48\" d=\"M18 487Q18 496 29 517T67 566T127 621T216 665T330 683Q359 683 376 669T397 643T400 622Q400 584 382 488T348 343Q348 342 467 342H587L594 366Q615 440 648 534T690 641Q701 656 723 669T764 683Q783 683 783 672L750 578Q716 485 677 346T625 101Q624 92 623 82T622 65T621 56Q621 20 658 20Q666 20 701 25Q709 52 736 69T785 87Q803 87 803 75T791 44T754 3T685 -33T588 -48Q568 -48 562 -46Q522 -31 522 13V23Q531 129 562 250L569 281L565 280Q561 278 556 277T549 274L438 273H328L321 249Q307 202 275 107T232 0Q219 -16 196 -28T155 -41Q149 -41 145 -39T140 -34T139 -29Q139 -24 148 -3T181 86T233 247Q240 270 240 272Q240 273 194 273H169Q139 273 139 285Q139 295 153 308T187 332Q206 341 236 342L260 343L264 359Q278 414 289 482T300 578Q300 613 260 613H254Q198 613 169 592Q148 578 127 544T104 508Q72 478 37 475Q18 475 18 487Z\"></path></g></g><g data-mml-node=\"mi\" transform=\"translate(878,363) scale(0.707)\"><path data-c=\"1D446\" d=\"M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(878,-247) scale(0.707)\"><path data-c=\"1D462\" d=\"M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g></g></g></g></svg></mjx-container>为从用户历史行为集合<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.357ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"3.015ex\" height=\"1.902ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 1332.5 840.8\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"48\" d=\"M18 487Q18 496 29 517T67 566T127 621T216 665T330 683Q359 683 376 669T397 643T400 622Q400 584 382 488T348 343Q348 342 467 342H587L594 366Q615 440 648 534T690 641Q701 656 723 669T764 683Q783 683 783 672L750 578Q716 485 677 346T625 101Q624 92 623 82T622 65T621 56Q621 20 658 20Q666 20 701 25Q709 52 736 69T785 87Q803 87 803 75T791 44T754 3T685 -33T588 -48Q568 -48 562 -46Q522 -31 522 13V23Q531 129 562 250L569 281L565 280Q561 278 556 277T549 274L438 273H328L321 249Q307 202 275 107T232 0Q219 -16 196 -28T155 -41Q149 -41 145 -39T140 -34T139 -29Q139 -24 148 -3T181 86T233 247Q240 270 240 272Q240 273 194 273H169Q139 273 139 285Q139 295 153 308T187 332Q206 341 236 342L260 343L264 359Q278 414 289 482T300 578Q300 613 260 613H254Q198 613 169 592Q148 578 127 544T104 508Q72 478 37 475Q18 475 18 487Z\"></path></g></g><g data-mml-node=\"mi\" transform=\"translate(878,-150) scale(0.707)\"><path data-c=\"1D462\" d=\"M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g></g></g></g></svg></mjx-container>中提取的短行为序列，且长度有限。</p>\n<p>常见方法：RNN-based; CNN-based; Attention-based</p>\n<ul>\n<li>讨论：相关研究主要关注于不同网络结构（RNN,CNN,Attention,MLP…）对于捕捉历史行为特征的作用，且不同网络结构各有优劣</li>\n</ul>\n<h3 id=\"长序列UBM\"><a href=\"#长序列UBM\" class=\"headerlink\" title=\"长序列UBM\"></a>长序列UBM</h3><p>特点：将传统UBM中的用户历史行为序列拓展到长序列（至少<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"3.25ex\" height=\"2.003ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -863.3 1436.6 885.3\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msup\"><g data-mml-node=\"mn\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(500,0)\"></path></g><g data-mml-node=\"mn\" transform=\"translate(1033,393.1) scale(0.707)\"><path data-c=\"33\" d=\"M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z\"></path></g></g></g></g></svg></mjx-container>级别），研究难点为长序列难以使用深度模型学习（遗忘问题）、噪声含量高，以及潜在计算瓶颈：</p>\n<script type=\"math/tex; mode=display\">\nP(u,i) = F_\\Theta^{UBM}(u,i,\\mathcal{H}_u^L),\\forall u\\in\\mathcal{U},i\\in\\mathcal{I}</script><p>其中<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.576ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"3.131ex\" height=\"2.526ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -861.5 1384.1 1116.3\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msubsup\"><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"48\" d=\"M18 487Q18 496 29 517T67 566T127 621T216 665T330 683Q359 683 376 669T397 643T400 622Q400 584 382 488T348 343Q348 342 467 342H587L594 366Q615 440 648 534T690 641Q701 656 723 669T764 683Q783 683 783 672L750 578Q716 485 677 346T625 101Q624 92 623 82T622 65T621 56Q621 20 658 20Q666 20 701 25Q709 52 736 69T785 87Q803 87 803 75T791 44T754 3T685 -33T588 -48Q568 -48 562 -46Q522 -31 522 13V23Q531 129 562 250L569 281L565 280Q561 278 556 277T549 274L438 273H328L321 249Q307 202 275 107T232 0Q219 -16 196 -28T155 -41Q149 -41 145 -39T140 -34T139 -29Q139 -24 148 -3T181 86T233 247Q240 270 240 272Q240 273 194 273H169Q139 273 139 285Q139 295 153 308T187 332Q206 341 236 342L260 343L264 359Q278 414 289 482T300 578Q300 613 260 613H254Q198 613 169 592Q148 578 127 544T104 508Q72 478 37 475Q18 475 18 487Z\"></path></g></g><g data-mml-node=\"mi\" transform=\"translate(878,363) scale(0.707)\"><path data-c=\"1D446\" d=\"M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(878,-247) scale(0.707)\"><path data-c=\"1D462\" d=\"M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g></g></g></g></svg></mjx-container>为从用户历史行为集合<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.357ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"3.015ex\" height=\"1.902ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 1332.5 840.8\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"48\" d=\"M18 487Q18 496 29 517T67 566T127 621T216 665T330 683Q359 683 376 669T397 643T400 622Q400 584 382 488T348 343Q348 342 467 342H587L594 366Q615 440 648 534T690 641Q701 656 723 669T764 683Q783 683 783 672L750 578Q716 485 677 346T625 101Q624 92 623 82T622 65T621 56Q621 20 658 20Q666 20 701 25Q709 52 736 69T785 87Q803 87 803 75T791 44T754 3T685 -33T588 -48Q568 -48 562 -46Q522 -31 522 13V23Q531 129 562 250L569 281L565 280Q561 278 556 277T549 274L438 273H328L321 249Q307 202 275 107T232 0Q219 -16 196 -28T155 -41Q149 -41 145 -39T140 -34T139 -29Q139 -24 148 -3T181 86T233 247Q240 270 240 272Q240 273 194 273H169Q139 273 139 285Q139 295 153 308T187 332Q206 341 236 342L260 343L264 359Q278 414 289 482T300 578Q300 613 260 613H254Q198 613 169 592Q148 578 127 544T104 508Q72 478 37 475Q18 475 18 487Z\"></path></g></g><g data-mml-node=\"mi\" transform=\"translate(878,-150) scale(0.707)\"><path data-c=\"1D462\" d=\"M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g></g></g></g></svg></mjx-container>中提取的长行为序列。</p>\n<p>常见方法：Memory-augmented: User Behavior Retrieval</p>\n<ul>\n<li>Memory-augmented: 将从长序列中提取到的知识额外存储，如用户兴趣表征（可embedding化）</li>\n<li><p>User Behavior Retrieval: 从长行为序列中检索与当前推荐目标最相关的那些行为，从而减少历史行为序列之长度，并且降噪</p>\n</li>\n<li><p>讨论：memory-augemented方法的动机是通过引入额外参数来记忆历史行为序列信息。该方法虽然对于长序列建模很有效，但在现实场景中模型相当复杂且难以部署。相比之下，retrival-based方法效率更高，且更易于部署在大规模推荐系统中。然而此类方法不可避免地会损失部分行为信息。</p>\n</li>\n</ul>\n<h3 id=\"多类型UBM\"><a href=\"#多类型UBM\" class=\"headerlink\" title=\"多类型UBM\"></a>多类型UBM</h3><p>特点：同时考虑多种类型的用户行为（如购买，点击，etc.）对用户兴趣估计的影响：</p>\n<script type=\"math/tex; mode=display\">\nP(u,i) = F_\\Theta^{UBM}(u,i,\\mathcal{H}_u^{MB}),\\forall u\\in\\mathcal{U},i\\in\\mathcal{I}</script><p>其中<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.576ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.995ex\" height=\"2.49ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -846 2207.9 1100.7\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msubsup\"><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"48\" d=\"M18 487Q18 496 29 517T67 566T127 621T216 665T330 683Q359 683 376 669T397 643T400 622Q400 584 382 488T348 343Q348 342 467 342H587L594 366Q615 440 648 534T690 641Q701 656 723 669T764 683Q783 683 783 672L750 578Q716 485 677 346T625 101Q624 92 623 82T622 65T621 56Q621 20 658 20Q666 20 701 25Q709 52 736 69T785 87Q803 87 803 75T791 44T754 3T685 -33T588 -48Q568 -48 562 -46Q522 -31 522 13V23Q531 129 562 250L569 281L565 280Q561 278 556 277T549 274L438 273H328L321 249Q307 202 275 107T232 0Q219 -16 196 -28T155 -41Q149 -41 145 -39T140 -34T139 -29Q139 -24 148 -3T181 86T233 247Q240 270 240 272Q240 273 194 273H169Q139 273 139 285Q139 295 153 308T187 332Q206 341 236 342L260 343L264 359Q278 414 289 482T300 578Q300 613 260 613H254Q198 613 169 592Q148 578 127 544T104 508Q72 478 37 475Q18 475 18 487Z\"></path></g></g><g data-mml-node=\"TeXAtom\" transform=\"translate(878,363) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"1D440\" d=\"M289 629Q289 635 232 637Q208 637 201 638T194 648Q194 649 196 659Q197 662 198 666T199 671T201 676T203 679T207 681T212 683T220 683T232 684Q238 684 262 684T307 683Q386 683 398 683T414 678Q415 674 451 396L487 117L510 154Q534 190 574 254T662 394Q837 673 839 675Q840 676 842 678T846 681L852 683H948Q965 683 988 683T1017 684Q1051 684 1051 673Q1051 668 1048 656T1045 643Q1041 637 1008 637Q968 636 957 634T939 623Q936 618 867 340T797 59Q797 55 798 54T805 50T822 48T855 46H886Q892 37 892 35Q892 19 885 5Q880 0 869 0Q864 0 828 1T736 2Q675 2 644 2T609 1Q592 1 592 11Q592 13 594 25Q598 41 602 43T625 46Q652 46 685 49Q699 52 704 61Q706 65 742 207T813 490T848 631L654 322Q458 10 453 5Q451 4 449 3Q444 0 433 0Q418 0 415 7Q413 11 374 317L335 624L267 354Q200 88 200 79Q206 46 272 46H282Q288 41 289 37T286 19Q282 3 278 1Q274 0 267 0Q265 0 255 0T221 1T157 2Q127 2 95 1T58 0Q43 0 39 2T35 11Q35 13 38 25T43 40Q45 46 65 46Q135 46 154 86Q158 92 223 354T289 629Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1051,0)\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g></g><g data-mml-node=\"mi\" transform=\"translate(878,-247) scale(0.707)\"><path data-c=\"1D462\" d=\"M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g></g></g></g></svg></mjx-container>为从用户历史行为集合<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.357ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"3.015ex\" height=\"1.902ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 1332.5 840.8\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"48\" d=\"M18 487Q18 496 29 517T67 566T127 621T216 665T330 683Q359 683 376 669T397 643T400 622Q400 584 382 488T348 343Q348 342 467 342H587L594 366Q615 440 648 534T690 641Q701 656 723 669T764 683Q783 683 783 672L750 578Q716 485 677 346T625 101Q624 92 623 82T622 65T621 56Q621 20 658 20Q666 20 701 25Q709 52 736 69T785 87Q803 87 803 75T791 44T754 3T685 -33T588 -48Q568 -48 562 -46Q522 -31 522 13V23Q531 129 562 250L569 281L565 280Q561 278 556 277T549 274L438 273H328L321 249Q307 202 275 107T232 0Q219 -16 196 -28T155 -41Q149 -41 145 -39T140 -34T139 -29Q139 -24 148 -3T181 86T233 247Q240 270 240 272Q240 273 194 273H169Q139 273 139 285Q139 295 153 308T187 332Q206 341 236 342L260 343L264 359Q278 414 289 482T300 578Q300 613 260 613H254Q198 613 169 592Q148 578 127 544T104 508Q72 478 37 475Q18 475 18 487Z\"></path></g></g><g data-mml-node=\"mi\" transform=\"translate(878,-150) scale(0.707)\"><path data-c=\"1D462\" d=\"M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g></g></g></g></svg></mjx-container>中提取的多类别行为序列，每个元素为<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -1.007ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20.26ex\" height=\"2.921ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -846 8955 1290.9\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msubsup\"><g data-mml-node=\"mi\"><path data-c=\"210E\" d=\"M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z\"></path></g><g data-mml-node=\"TeXAtom\" transform=\"translate(609,363) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"1D440\" d=\"M289 629Q289 635 232 637Q208 637 201 638T194 648Q194 649 196 659Q197 662 198 666T199 671T201 676T203 679T207 681T212 683T220 683T232 684Q238 684 262 684T307 683Q386 683 398 683T414 678Q415 674 451 396L487 117L510 154Q534 190 574 254T662 394Q837 673 839 675Q840 676 842 678T846 681L852 683H948Q965 683 988 683T1017 684Q1051 684 1051 673Q1051 668 1048 656T1045 643Q1041 637 1008 637Q968 636 957 634T939 623Q936 618 867 340T797 59Q797 55 798 54T805 50T822 48T855 46H886Q892 37 892 35Q892 19 885 5Q880 0 869 0Q864 0 828 1T736 2Q675 2 644 2T609 1Q592 1 592 11Q592 13 594 25Q598 41 602 43T625 46Q652 46 685 49Q699 52 704 61Q706 65 742 207T813 490T848 631L654 322Q458 10 453 5Q451 4 449 3Q444 0 433 0Q418 0 415 7Q413 11 374 317L335 624L267 354Q200 88 200 79Q206 46 272 46H282Q288 41 289 37T286 19Q282 3 278 1Q274 0 267 0Q265 0 255 0T221 1T157 2Q127 2 95 1T58 0Q43 0 39 2T35 11Q35 13 38 25T43 40Q45 46 65 46Q135 46 154 86Q158 92 223 354T289 629Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1051,0)\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g></g><g data-mml-node=\"TeXAtom\" transform=\"translate(609,-307.7) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"1D462\" d=\"M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(572,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(850,0)\"><path data-c=\"1D458\" d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"></path></g></g></g><g data-mml-node=\"mo\" transform=\"translate(2216.6,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3272.4,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(3661.4,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D463\" d=\"M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(518,-150) scale(0.707)\"><path data-c=\"1D458\" d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(4597.8,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(5042.5,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(394,-150) scale(0.707)\"><path data-c=\"1D458\" d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(5854.9,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(6299.6,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D44F\" d=\"M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(462,-150) scale(0.707)\"><path data-c=\"1D458\" d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(7180,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(7624.6,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D453\" d=\"M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(523,-150) scale(0.707)\"><path data-c=\"1D458\" d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(8566,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>, 其中<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.357ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.244ex\" height=\"1.952ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -705 2760 862.8\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D44F\" d=\"M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(462,-150) scale(0.707)\"><path data-c=\"1D458\" d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(1158.2,0)\"><path data-c=\"2208\" d=\"M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z\"></path></g><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\" transform=\"translate(2103,0)\"><g data-mml-node=\"mi\"><path data-c=\"42\" d=\"M304 342Q292 342 292 353Q292 372 323 391Q331 396 417 428T533 487Q563 512 563 555V562Q563 575 557 589T530 618T475 636Q429 636 396 613T330 539Q263 446 210 238Q196 183 173 120Q135 31 121 16Q108 1 85 -10T47 -22T32 -10Q32 -5 44 18T77 93T112 206Q135 296 154 395T182 550T191 615Q191 616 190 616Q188 616 179 611T157 601T131 594Q113 594 113 605Q113 623 144 644Q154 650 205 676T267 703Q277 705 279 705Q295 705 295 693Q295 686 288 635T278 575Q278 572 287 582Q336 635 402 669T540 704Q603 704 633 673T664 599Q664 559 638 523T580 462Q553 440 504 413L491 407L504 402Q566 381 596 338T627 244Q627 172 575 110T444 13T284 -22Q208 -22 158 28Q144 42 146 50Q150 67 178 85T230 103Q236 103 246 95T267 75T302 56T357 47Q436 47 486 93Q526 136 526 198V210Q526 228 518 249T491 292T436 330T350 345Q335 345 321 344T304 342Z\"></path></g></g></g></g></svg></mjx-container>表示用户的行为类别。</p>\n<h4 id=\"行为的分类\"><a href=\"#行为的分类\" class=\"headerlink\" title=\"行为的分类\"></a>行为的分类</h4><p>多类型UBM的第一大挑战是用户行为的分类，目前学界缺乏统一定义。一般地，用户行为可以分为三大类：</p>\n<ul>\n<li>宏观行为：具有显式的交互行动的那些行为，例如点击、加入购物车、收藏、购买等。在线购物平台中可直接获取。</li>\n<li>微观行为：依赖于专家知识的，比宏观行为更加细粒度的行为。例如点击行为可以根据点击源的不同做进一步分类。然而这种分类法缺乏泛化性，难以推广到与场景无关的一般情况。</li>\n<li>来自不同领域或场景的行为：与场景相关联的行为，例如搜索场景中的查询操作以及推荐场景中的点击操作。此外，同名行为（如“观看”）在不同场景中的含义也不同，需要分别单独建模。</li>\n</ul>\n<h4 id=\"多行为融合\"><a href=\"#多行为融合\" class=\"headerlink\" title=\"多行为融合\"></a>多行为融合</h4><p>多行为UBM的第二大挑战是如何联合利用多种行为提升推荐效果。相关做法为late-fusion和early-fusion两种。</p>\n<ul>\n<li>late-fusion：两阶段方法。第一阶段分别建模每种行为，第二阶段将第一阶段的建模结果融合</li>\n<li>early-fusion：从一开始就将所有种类行为混合建模（所有行为放进一个混合行为序列里）</li>\n</ul>\n<h4 id=\"多行为预测\"><a href=\"#多行为预测\" class=\"headerlink\" title=\"多行为预测\"></a>多行为预测</h4><p>多行为UBM的第三大挑战是，有些行为本身需要在模型中被预测出来（笔者：由于这些行为在测试集中不可获取？）。</p>\n<ul>\n<li>常见做法：单独设置一个行为预测模型，与兴趣预测相互分离。优点：易于构建；缺点：行为预测模型缺乏与兴趣预测本身的联系，因此兴趣预测性能堪忧。</li>\n</ul>\n<h2 id=\"UBM-辅助信息\"><a href=\"#UBM-辅助信息\" class=\"headerlink\" title=\"UBM + 辅助信息\"></a>UBM + 辅助信息</h2><p>除了上述UBM方法，相关研究者还注重于利用行为中丰富的辅助信息（如时间戳）增强推荐效果：</p>\n<script type=\"math/tex; mode=display\">\nP(u,i) = F_\\Theta^{UBM}(u,i,M(\\mathcal{H}_u)), \\forall u\\in\\mathcal{U}, i\\in\\mathcal{I}</script><p>其中<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.767ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 2107 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D440\" d=\"M289 629Q289 635 232 637Q208 637 201 638T194 648Q194 649 196 659Q197 662 198 666T199 671T201 676T203 679T207 681T212 683T220 683T232 684Q238 684 262 684T307 683Q386 683 398 683T414 678Q415 674 451 396L487 117L510 154Q534 190 574 254T662 394Q837 673 839 675Q840 676 842 678T846 681L852 683H948Q965 683 988 683T1017 684Q1051 684 1051 673Q1051 668 1048 656T1045 643Q1041 637 1008 637Q968 636 957 634T939 623Q936 618 867 340T797 59Q797 55 798 54T805 50T822 48T855 46H886Q892 37 892 35Q892 19 885 5Q880 0 869 0Q864 0 828 1T736 2Q675 2 644 2T609 1Q592 1 592 11Q592 13 594 25Q598 41 602 43T625 46Q652 46 685 49Q699 52 704 61Q706 65 742 207T813 490T848 631L654 322Q458 10 453 5Q451 4 449 3Q444 0 433 0Q418 0 415 7Q413 11 374 317L335 624L267 354Q200 88 200 79Q206 46 272 46H282Q288 41 289 37T286 19Q282 3 278 1Q274 0 267 0Q265 0 255 0T221 1T157 2Q127 2 95 1T58 0Q43 0 39 2T35 11Q35 13 38 25T43 40Q45 46 65 46Q135 46 154 86Q158 92 223 354T289 629Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1051,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1440,0)\"><path data-c=\"22C5\" d=\"M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1718,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>将辅助信息(<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.464ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.974ex\" height=\"2.059ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -705 2198.5 910\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(394,-150) scale(0.707)\"><path data-c=\"1D458\" d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(812.4,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(1257.1,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D453\" d=\"M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(523,-150) scale(0.707)\"><path data-c=\"1D458\" d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"></path></g></g></g></g></svg></mjx-container>)与商品ID <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.357ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.119ex\" height=\"1.359ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -443 936.4 600.8\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D463\" d=\"M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(518,-150) scale(0.707)\"><path data-c=\"1D458\" d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"></path></g></g></g></g></svg></mjx-container>融合，以获得商品的细粒度表征。<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.767ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 2107 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D440\" d=\"M289 629Q289 635 232 637Q208 637 201 638T194 648Q194 649 196 659Q197 662 198 666T199 671T201 676T203 679T207 681T212 683T220 683T232 684Q238 684 262 684T307 683Q386 683 398 683T414 678Q415 674 451 396L487 117L510 154Q534 190 574 254T662 394Q837 673 839 675Q840 676 842 678T846 681L852 683H948Q965 683 988 683T1017 684Q1051 684 1051 673Q1051 668 1048 656T1045 643Q1041 637 1008 637Q968 636 957 634T939 623Q936 618 867 340T797 59Q797 55 798 54T805 50T822 48T855 46H886Q892 37 892 35Q892 19 885 5Q880 0 869 0Q864 0 828 1T736 2Q675 2 644 2T609 1Q592 1 592 11Q592 13 594 25Q598 41 602 43T625 46Q652 46 685 49Q699 52 704 61Q706 65 742 207T813 490T848 631L654 322Q458 10 453 5Q451 4 449 3Q444 0 433 0Q418 0 415 7Q413 11 374 317L335 624L267 354Q200 88 200 79Q206 46 272 46H282Q288 41 289 37T286 19Q282 3 278 1Q274 0 267 0Q265 0 255 0T221 1T157 2Q127 2 95 1T58 0Q43 0 39 2T35 11Q35 13 38 25T43 40Q45 46 65 46Q135 46 154 86Q158 92 223 354T289 629Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1051,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1440,0)\"><path data-c=\"22C5\" d=\"M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1718,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>的设计在这里工作中非常重要。</p>\n<h3 id=\"辅助信息源\"><a href=\"#辅助信息源\" class=\"headerlink\" title=\"辅助信息源\"></a>辅助信息源</h3><p>辅助信息有三种来源：时间信息、商品属性，以及多模态信息。</p>\n<ul>\n<li>时间信息：时间戳、时间间隔，可用来排序或挖掘用户兴趣</li>\n<li>商品属性：如商品价格，影响用户行为从而影响兴趣</li>\n<li>多模态信息：如商品介绍文本、图片、视频，同上</li>\n</ul>\n<h3 id=\"辅助信息的利用\"><a href=\"#辅助信息的利用\" class=\"headerlink\" title=\"辅助信息的利用\"></a>辅助信息的利用</h3><p>（笔者：基本思想为表征学习，即将辅助信息映射到语义向量，映射过程可训练，类似Transformer）。<br>相关做法略</p>\n<h2 id=\"研究展望\"><a href=\"#研究展望\" class=\"headerlink\" title=\"研究展望\"></a>研究展望</h2><ul>\n<li>更加深度的信息融合</li>\n<li>更加高速的学习算法</li>\n<li>更加可解释的用户表征</li>\n<li>更加先进的技术（如预训练）</li>\n</ul>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: decodeURI(window.location.pathname),\n            distractionFreeMode: true // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","site":{"data":{}},"length":2957,"excerpt":"<p>本文为IJCAI’22综述论文 _<a href=\"https://arxiv.org/abs/2302.11087\">A Survey on User Behavior Modeling in Recommender Systems</a>_ 阅读笔记。<br>","more":"</p>\n<ul>\n<li><a href=\"#问题定义\">问题定义</a></li>\n<li><a href=\"#ubm-工作分类\">UBM 工作分类</a><ul>\n<li><a href=\"#传统ubm\">传统UBM</a></li>\n<li><a href=\"#长序列ubm\">长序列UBM</a></li>\n<li><a href=\"#多类型ubm\">多类型UBM</a><ul>\n<li><a href=\"#行为的分类\">行为的分类</a></li>\n<li><a href=\"#多行为融合\">多行为融合</a></li>\n<li><a href=\"#多行为预测\">多行为预测</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"#ubm--辅助信息\">UBM + 辅助信息</a><ul>\n<li><a href=\"#辅助信息源\">辅助信息源</a></li>\n<li><a href=\"#辅助信息的利用\">辅助信息的利用</a></li>\n</ul>\n</li>\n<li><a href=\"#研究展望\">研究展望</a></li>\n</ul>\n<h2 id=\"问题定义\"><a href=\"#问题定义\" class=\"headerlink\" title=\"问题定义\"></a>问题定义</h2><ul>\n<li>用户行为建模（User Bevhavior Modeling, UBM）是推荐系统（Recommender System, RS）中的一个重要问题，其目标为根据用户信息、商品信息以及用户历史行为数据去预测用户对商品的兴趣：</li>\n</ul>\n<script type=\"math/tex; mode=display\">\nP(u,i) = F_{\\Theta}^{UBM}(u,i,\\mathcal{H}_u,f_u,f_i,f_c),\\forall u\\in\\mathcal{U},i\\in\\mathcal{I}</script><p>其中：</p>\n<ul>\n<li><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.063ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.554ex\" height=\"1.609ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 687 711\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"55\" d=\"M8 592Q8 616 70 649T193 683Q246 683 246 631Q246 587 205 492T124 297T83 143Q83 101 100 75T154 48Q202 48 287 135T450 342T560 553Q589 635 593 640Q603 656 626 668T669 683H670Q687 683 687 672T670 616T617 463T547 220Q525 137 521 68Q521 54 522 50T533 42L543 47Q573 61 588 61Q604 61 604 47Q599 16 506 -22Q486 -28 468 -28T436 -18T421 18Q421 92 468 258Q468 259 467 257T459 248Q426 206 391 167T303 81T194 6T83 -22Q66 -22 58 -20Q25 -11 4 19T-17 99Q-17 146 8 220T64 358T120 488T146 586Q146 604 141 608T123 613H120Q99 613 72 597T25 580Q8 580 8 592Z\"></path></g></g></g></g></svg></mjx-container>为用户集合，<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.452ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 642 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"49\" d=\"M174 0H31Q-13 0 -21 2T-30 12Q-30 23 -17 36Q9 60 42 68L155 70Q187 102 214 179T257 333T302 491T366 610L369 614H305Q221 611 188 607T145 596T128 569Q119 543 94 529T47 512Q28 512 28 524Q28 527 32 539Q56 614 159 654Q218 678 312 682Q314 682 339 682T404 682T481 683H632Q642 678 642 671Q642 657 621 641T577 617Q570 615 507 614H444Q427 592 406 542Q382 478 355 366T310 209Q280 123 238 78L230 69H330Q442 70 442 74Q443 74 443 77T447 87T460 105Q490 134 527 137Q545 137 545 125Q545 120 542 112Q531 78 491 49T399 7Q379 2 360 2T174 0Z\"></path></g></g></g></g></svg></mjx-container>为商品集合</li>\n<li><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.464ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"8.061ex\" height=\"2.059ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -705 3562.9 910\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D453\" d=\"M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(523,-150) scale(0.707)\"><path data-c=\"1D462\" d=\"M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(977.5,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(1422.1,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D453\" d=\"M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(523,-150) scale(0.707)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(2239.1,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(2683.8,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D453\" d=\"M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(523,-150) scale(0.707)\"><path data-c=\"1D450\" d=\"M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z\"></path></g></g></g></g></svg></mjx-container>分别为非行为用户特征（如年龄）、商品特征（如价格）、上下文特征（如工作日/周末），不在本文讨论范围内</li>\n<li><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.65ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"37.8ex\" height=\"2.347ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 16707.7 1037.2\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"48\" d=\"M18 487Q18 496 29 517T67 566T127 621T216 665T330 683Q359 683 376 669T397 643T400 622Q400 584 382 488T348 343Q348 342 467 342H587L594 366Q615 440 648 534T690 641Q701 656 723 669T764 683Q783 683 783 672L750 578Q716 485 677 346T625 101Q624 92 623 82T622 65T621 56Q621 20 658 20Q666 20 701 25Q709 52 736 69T785 87Q803 87 803 75T791 44T754 3T685 -33T588 -48Q568 -48 562 -46Q522 -31 522 13V23Q531 129 562 250L569 281L565 280Q561 278 556 277T549 274L438 273H328L321 249Q307 202 275 107T232 0Q219 -16 196 -28T155 -41Q149 -41 145 -39T140 -34T139 -29Q139 -24 148 -3T181 86T233 247Q240 270 240 272Q240 273 194 273H169Q139 273 139 285Q139 295 153 308T187 332Q206 341 236 342L260 343L264 359Q278 414 289 482T300 578Q300 613 260 613H254Q198 613 169 592Q148 578 127 544T104 508Q72 478 37 475Q18 475 18 487Z\"></path></g></g><g data-mml-node=\"mi\" transform=\"translate(878,-150) scale(0.707)\"><path data-c=\"1D462\" d=\"M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(1610.2,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2666,0)\"><path data-c=\"7B\" d=\"M434 -231Q434 -244 428 -250H410Q281 -250 230 -184Q225 -177 222 -172T217 -161T213 -148T211 -133T210 -111T209 -84T209 -47T209 0Q209 21 209 53Q208 142 204 153Q203 154 203 155Q189 191 153 211T82 231Q71 231 68 234T65 250T68 266T82 269Q116 269 152 289T203 345Q208 356 208 377T209 529V579Q209 634 215 656T244 698Q270 724 324 740Q361 748 377 749Q379 749 390 749T408 750H428Q434 744 434 732Q434 719 431 716Q429 713 415 713Q362 710 332 689T296 647Q291 634 291 499V417Q291 370 288 353T271 314Q240 271 184 255L170 250L184 245Q202 239 220 230T262 196T290 137Q291 131 291 1Q291 -134 296 -147Q306 -174 339 -192T415 -213Q429 -213 431 -216Q434 -219 434 -231Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(3166,0)\"><g data-mml-node=\"mi\"><path data-c=\"210E\" d=\"M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z\"></path></g><g data-mml-node=\"TeXAtom\" transform=\"translate(609,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"1D462\" d=\"M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(572,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(850,0)\"><path data-c=\"1D458\" d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"></path></g></g></g><g data-mml-node=\"mo\" transform=\"translate(5072.2,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6128,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(6517,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D463\" d=\"M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(518,-150) scale(0.707)\"><path data-c=\"1D458\" d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(7453.4,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(7898.1,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(394,-150) scale(0.707)\"><path data-c=\"1D458\" d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(8710.5,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(9155.2,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D453\" d=\"M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(523,-150) scale(0.707)\"><path data-c=\"1D458\" d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(10096.6,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(10485.6,0) translate(0 -0.5)\"><path data-c=\"7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(10763.6,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D463\" d=\"M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(518,-150) scale(0.707)\"><path data-c=\"1D458\" d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(11977.7,0)\"><path data-c=\"2208\" d=\"M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z\"></path></g><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\" transform=\"translate(12922.5,0)\"><g data-mml-node=\"mi\"><path data-c=\"49\" d=\"M174 0H31Q-13 0 -21 2T-30 12Q-30 23 -17 36Q9 60 42 68L155 70Q187 102 214 179T257 333T302 491T366 610L369 614H305Q221 611 188 607T145 596T128 569Q119 543 94 529T47 512Q28 512 28 524Q28 527 32 539Q56 614 159 654Q218 678 312 682Q314 682 339 682T404 682T481 683H632Q642 678 642 671Q642 657 621 641T577 617Q570 615 507 614H444Q427 592 406 542Q382 478 355 366T310 209Q280 123 238 78L230 69H330Q442 70 442 74Q443 74 443 77T447 87T460 105Q490 134 527 137Q545 137 545 125Q545 120 542 112Q531 78 491 49T399 7Q379 2 360 2T174 0Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(13564.5,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(14009.2,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(394,-150) scale(0.707)\"><path data-c=\"1D458\" d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(14821.6,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(15266.3,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D453\" d=\"M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(523,-150) scale(0.707)\"><path data-c=\"1D458\" d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(16207.7,0)\"><path data-c=\"7D\" d=\"M65 731Q65 745 68 747T88 750Q171 750 216 725T279 670Q288 649 289 635T291 501Q292 362 293 357Q306 312 345 291T417 269Q428 269 431 266T434 250T431 234T417 231Q380 231 345 210T298 157Q293 143 292 121T291 -28V-79Q291 -134 285 -156T256 -198Q202 -250 89 -250Q71 -250 68 -247T65 -230Q65 -224 65 -223T66 -218T69 -214T77 -213Q91 -213 108 -210T146 -200T183 -177T207 -139Q208 -134 209 3L210 139Q223 196 280 230Q315 247 330 250Q305 257 280 270Q225 304 212 352L210 362L209 498Q208 635 207 640Q195 680 154 696T77 713Q68 713 67 716T65 731Z\"></path></g></g></g></svg></mjx-container> 表示用户<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.294ex\" height=\"1.025ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 572 453\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D462\" d=\"M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g></g></g></svg></mjx-container>的历史行为集合，其元素为一个三元组，包含历史商品标识<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.357ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.119ex\" height=\"1.359ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -443 936.4 600.8\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D463\" d=\"M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(518,-150) scale(0.707)\"><path data-c=\"1D458\" d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"></path></g></g></g></g></svg></mjx-container>，时间戳<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.357ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.838ex\" height=\"1.773ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -626 812.4 783.8\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(394,-150) scale(0.707)\"><path data-c=\"1D458\" d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"></path></g></g></g></g></svg></mjx-container>，行为特征<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.464ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.13ex\" height=\"2.059ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -705 941.4 910\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D453\" d=\"M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(523,-150) scale(0.707)\"><path data-c=\"1D458\" d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"></path></g></g></g></g></svg></mjx-container>。</li>\n</ul>\n<h2 id=\"UBM-工作分类\"><a href=\"#UBM-工作分类\" class=\"headerlink\" title=\"UBM 工作分类\"></a>UBM 工作分类</h2><h3 id=\"传统UBM\"><a href=\"#传统UBM\" class=\"headerlink\" title=\"传统UBM\"></a>传统UBM</h3><p>特点：用户历史行为集合用短序列（按时间排序）表示，且行为种类单一：</p>\n<script type=\"math/tex; mode=display\">\nP(u,i) = F_\\Theta^{UBM}(u,i,\\mathcal{H}_u^S),\\forall u\\in\\mathcal{U},i\\in\\mathcal{I}</script><p>其中<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.576ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"3.131ex\" height=\"2.526ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -861.5 1384.1 1116.3\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msubsup\"><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"48\" d=\"M18 487Q18 496 29 517T67 566T127 621T216 665T330 683Q359 683 376 669T397 643T400 622Q400 584 382 488T348 343Q348 342 467 342H587L594 366Q615 440 648 534T690 641Q701 656 723 669T764 683Q783 683 783 672L750 578Q716 485 677 346T625 101Q624 92 623 82T622 65T621 56Q621 20 658 20Q666 20 701 25Q709 52 736 69T785 87Q803 87 803 75T791 44T754 3T685 -33T588 -48Q568 -48 562 -46Q522 -31 522 13V23Q531 129 562 250L569 281L565 280Q561 278 556 277T549 274L438 273H328L321 249Q307 202 275 107T232 0Q219 -16 196 -28T155 -41Q149 -41 145 -39T140 -34T139 -29Q139 -24 148 -3T181 86T233 247Q240 270 240 272Q240 273 194 273H169Q139 273 139 285Q139 295 153 308T187 332Q206 341 236 342L260 343L264 359Q278 414 289 482T300 578Q300 613 260 613H254Q198 613 169 592Q148 578 127 544T104 508Q72 478 37 475Q18 475 18 487Z\"></path></g></g><g data-mml-node=\"mi\" transform=\"translate(878,363) scale(0.707)\"><path data-c=\"1D446\" d=\"M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(878,-247) scale(0.707)\"><path data-c=\"1D462\" d=\"M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g></g></g></g></svg></mjx-container>为从用户历史行为集合<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.357ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"3.015ex\" height=\"1.902ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 1332.5 840.8\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"48\" d=\"M18 487Q18 496 29 517T67 566T127 621T216 665T330 683Q359 683 376 669T397 643T400 622Q400 584 382 488T348 343Q348 342 467 342H587L594 366Q615 440 648 534T690 641Q701 656 723 669T764 683Q783 683 783 672L750 578Q716 485 677 346T625 101Q624 92 623 82T622 65T621 56Q621 20 658 20Q666 20 701 25Q709 52 736 69T785 87Q803 87 803 75T791 44T754 3T685 -33T588 -48Q568 -48 562 -46Q522 -31 522 13V23Q531 129 562 250L569 281L565 280Q561 278 556 277T549 274L438 273H328L321 249Q307 202 275 107T232 0Q219 -16 196 -28T155 -41Q149 -41 145 -39T140 -34T139 -29Q139 -24 148 -3T181 86T233 247Q240 270 240 272Q240 273 194 273H169Q139 273 139 285Q139 295 153 308T187 332Q206 341 236 342L260 343L264 359Q278 414 289 482T300 578Q300 613 260 613H254Q198 613 169 592Q148 578 127 544T104 508Q72 478 37 475Q18 475 18 487Z\"></path></g></g><g data-mml-node=\"mi\" transform=\"translate(878,-150) scale(0.707)\"><path data-c=\"1D462\" d=\"M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g></g></g></g></svg></mjx-container>中提取的短行为序列，且长度有限。</p>\n<p>常见方法：RNN-based; CNN-based; Attention-based</p>\n<ul>\n<li>讨论：相关研究主要关注于不同网络结构（RNN,CNN,Attention,MLP…）对于捕捉历史行为特征的作用，且不同网络结构各有优劣</li>\n</ul>\n<h3 id=\"长序列UBM\"><a href=\"#长序列UBM\" class=\"headerlink\" title=\"长序列UBM\"></a>长序列UBM</h3><p>特点：将传统UBM中的用户历史行为序列拓展到长序列（至少<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"3.25ex\" height=\"2.003ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -863.3 1436.6 885.3\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msup\"><g data-mml-node=\"mn\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(500,0)\"></path></g><g data-mml-node=\"mn\" transform=\"translate(1033,393.1) scale(0.707)\"><path data-c=\"33\" d=\"M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z\"></path></g></g></g></g></svg></mjx-container>级别），研究难点为长序列难以使用深度模型学习（遗忘问题）、噪声含量高，以及潜在计算瓶颈：</p>\n<script type=\"math/tex; mode=display\">\nP(u,i) = F_\\Theta^{UBM}(u,i,\\mathcal{H}_u^L),\\forall u\\in\\mathcal{U},i\\in\\mathcal{I}</script><p>其中<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.576ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"3.131ex\" height=\"2.526ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -861.5 1384.1 1116.3\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msubsup\"><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"48\" d=\"M18 487Q18 496 29 517T67 566T127 621T216 665T330 683Q359 683 376 669T397 643T400 622Q400 584 382 488T348 343Q348 342 467 342H587L594 366Q615 440 648 534T690 641Q701 656 723 669T764 683Q783 683 783 672L750 578Q716 485 677 346T625 101Q624 92 623 82T622 65T621 56Q621 20 658 20Q666 20 701 25Q709 52 736 69T785 87Q803 87 803 75T791 44T754 3T685 -33T588 -48Q568 -48 562 -46Q522 -31 522 13V23Q531 129 562 250L569 281L565 280Q561 278 556 277T549 274L438 273H328L321 249Q307 202 275 107T232 0Q219 -16 196 -28T155 -41Q149 -41 145 -39T140 -34T139 -29Q139 -24 148 -3T181 86T233 247Q240 270 240 272Q240 273 194 273H169Q139 273 139 285Q139 295 153 308T187 332Q206 341 236 342L260 343L264 359Q278 414 289 482T300 578Q300 613 260 613H254Q198 613 169 592Q148 578 127 544T104 508Q72 478 37 475Q18 475 18 487Z\"></path></g></g><g data-mml-node=\"mi\" transform=\"translate(878,363) scale(0.707)\"><path data-c=\"1D446\" d=\"M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(878,-247) scale(0.707)\"><path data-c=\"1D462\" d=\"M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g></g></g></g></svg></mjx-container>为从用户历史行为集合<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.357ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"3.015ex\" height=\"1.902ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 1332.5 840.8\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"48\" d=\"M18 487Q18 496 29 517T67 566T127 621T216 665T330 683Q359 683 376 669T397 643T400 622Q400 584 382 488T348 343Q348 342 467 342H587L594 366Q615 440 648 534T690 641Q701 656 723 669T764 683Q783 683 783 672L750 578Q716 485 677 346T625 101Q624 92 623 82T622 65T621 56Q621 20 658 20Q666 20 701 25Q709 52 736 69T785 87Q803 87 803 75T791 44T754 3T685 -33T588 -48Q568 -48 562 -46Q522 -31 522 13V23Q531 129 562 250L569 281L565 280Q561 278 556 277T549 274L438 273H328L321 249Q307 202 275 107T232 0Q219 -16 196 -28T155 -41Q149 -41 145 -39T140 -34T139 -29Q139 -24 148 -3T181 86T233 247Q240 270 240 272Q240 273 194 273H169Q139 273 139 285Q139 295 153 308T187 332Q206 341 236 342L260 343L264 359Q278 414 289 482T300 578Q300 613 260 613H254Q198 613 169 592Q148 578 127 544T104 508Q72 478 37 475Q18 475 18 487Z\"></path></g></g><g data-mml-node=\"mi\" transform=\"translate(878,-150) scale(0.707)\"><path data-c=\"1D462\" d=\"M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g></g></g></g></svg></mjx-container>中提取的长行为序列。</p>\n<p>常见方法：Memory-augmented: User Behavior Retrieval</p>\n<ul>\n<li>Memory-augmented: 将从长序列中提取到的知识额外存储，如用户兴趣表征（可embedding化）</li>\n<li><p>User Behavior Retrieval: 从长行为序列中检索与当前推荐目标最相关的那些行为，从而减少历史行为序列之长度，并且降噪</p>\n</li>\n<li><p>讨论：memory-augemented方法的动机是通过引入额外参数来记忆历史行为序列信息。该方法虽然对于长序列建模很有效，但在现实场景中模型相当复杂且难以部署。相比之下，retrival-based方法效率更高，且更易于部署在大规模推荐系统中。然而此类方法不可避免地会损失部分行为信息。</p>\n</li>\n</ul>\n<h3 id=\"多类型UBM\"><a href=\"#多类型UBM\" class=\"headerlink\" title=\"多类型UBM\"></a>多类型UBM</h3><p>特点：同时考虑多种类型的用户行为（如购买，点击，etc.）对用户兴趣估计的影响：</p>\n<script type=\"math/tex; mode=display\">\nP(u,i) = F_\\Theta^{UBM}(u,i,\\mathcal{H}_u^{MB}),\\forall u\\in\\mathcal{U},i\\in\\mathcal{I}</script><p>其中<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.576ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.995ex\" height=\"2.49ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -846 2207.9 1100.7\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msubsup\"><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"48\" d=\"M18 487Q18 496 29 517T67 566T127 621T216 665T330 683Q359 683 376 669T397 643T400 622Q400 584 382 488T348 343Q348 342 467 342H587L594 366Q615 440 648 534T690 641Q701 656 723 669T764 683Q783 683 783 672L750 578Q716 485 677 346T625 101Q624 92 623 82T622 65T621 56Q621 20 658 20Q666 20 701 25Q709 52 736 69T785 87Q803 87 803 75T791 44T754 3T685 -33T588 -48Q568 -48 562 -46Q522 -31 522 13V23Q531 129 562 250L569 281L565 280Q561 278 556 277T549 274L438 273H328L321 249Q307 202 275 107T232 0Q219 -16 196 -28T155 -41Q149 -41 145 -39T140 -34T139 -29Q139 -24 148 -3T181 86T233 247Q240 270 240 272Q240 273 194 273H169Q139 273 139 285Q139 295 153 308T187 332Q206 341 236 342L260 343L264 359Q278 414 289 482T300 578Q300 613 260 613H254Q198 613 169 592Q148 578 127 544T104 508Q72 478 37 475Q18 475 18 487Z\"></path></g></g><g data-mml-node=\"TeXAtom\" transform=\"translate(878,363) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"1D440\" d=\"M289 629Q289 635 232 637Q208 637 201 638T194 648Q194 649 196 659Q197 662 198 666T199 671T201 676T203 679T207 681T212 683T220 683T232 684Q238 684 262 684T307 683Q386 683 398 683T414 678Q415 674 451 396L487 117L510 154Q534 190 574 254T662 394Q837 673 839 675Q840 676 842 678T846 681L852 683H948Q965 683 988 683T1017 684Q1051 684 1051 673Q1051 668 1048 656T1045 643Q1041 637 1008 637Q968 636 957 634T939 623Q936 618 867 340T797 59Q797 55 798 54T805 50T822 48T855 46H886Q892 37 892 35Q892 19 885 5Q880 0 869 0Q864 0 828 1T736 2Q675 2 644 2T609 1Q592 1 592 11Q592 13 594 25Q598 41 602 43T625 46Q652 46 685 49Q699 52 704 61Q706 65 742 207T813 490T848 631L654 322Q458 10 453 5Q451 4 449 3Q444 0 433 0Q418 0 415 7Q413 11 374 317L335 624L267 354Q200 88 200 79Q206 46 272 46H282Q288 41 289 37T286 19Q282 3 278 1Q274 0 267 0Q265 0 255 0T221 1T157 2Q127 2 95 1T58 0Q43 0 39 2T35 11Q35 13 38 25T43 40Q45 46 65 46Q135 46 154 86Q158 92 223 354T289 629Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1051,0)\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g></g><g data-mml-node=\"mi\" transform=\"translate(878,-247) scale(0.707)\"><path data-c=\"1D462\" d=\"M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g></g></g></g></svg></mjx-container>为从用户历史行为集合<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.357ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"3.015ex\" height=\"1.902ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 1332.5 840.8\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"48\" d=\"M18 487Q18 496 29 517T67 566T127 621T216 665T330 683Q359 683 376 669T397 643T400 622Q400 584 382 488T348 343Q348 342 467 342H587L594 366Q615 440 648 534T690 641Q701 656 723 669T764 683Q783 683 783 672L750 578Q716 485 677 346T625 101Q624 92 623 82T622 65T621 56Q621 20 658 20Q666 20 701 25Q709 52 736 69T785 87Q803 87 803 75T791 44T754 3T685 -33T588 -48Q568 -48 562 -46Q522 -31 522 13V23Q531 129 562 250L569 281L565 280Q561 278 556 277T549 274L438 273H328L321 249Q307 202 275 107T232 0Q219 -16 196 -28T155 -41Q149 -41 145 -39T140 -34T139 -29Q139 -24 148 -3T181 86T233 247Q240 270 240 272Q240 273 194 273H169Q139 273 139 285Q139 295 153 308T187 332Q206 341 236 342L260 343L264 359Q278 414 289 482T300 578Q300 613 260 613H254Q198 613 169 592Q148 578 127 544T104 508Q72 478 37 475Q18 475 18 487Z\"></path></g></g><g data-mml-node=\"mi\" transform=\"translate(878,-150) scale(0.707)\"><path data-c=\"1D462\" d=\"M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g></g></g></g></svg></mjx-container>中提取的多类别行为序列，每个元素为<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -1.007ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20.26ex\" height=\"2.921ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -846 8955 1290.9\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msubsup\"><g data-mml-node=\"mi\"><path data-c=\"210E\" d=\"M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z\"></path></g><g data-mml-node=\"TeXAtom\" transform=\"translate(609,363) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"1D440\" d=\"M289 629Q289 635 232 637Q208 637 201 638T194 648Q194 649 196 659Q197 662 198 666T199 671T201 676T203 679T207 681T212 683T220 683T232 684Q238 684 262 684T307 683Q386 683 398 683T414 678Q415 674 451 396L487 117L510 154Q534 190 574 254T662 394Q837 673 839 675Q840 676 842 678T846 681L852 683H948Q965 683 988 683T1017 684Q1051 684 1051 673Q1051 668 1048 656T1045 643Q1041 637 1008 637Q968 636 957 634T939 623Q936 618 867 340T797 59Q797 55 798 54T805 50T822 48T855 46H886Q892 37 892 35Q892 19 885 5Q880 0 869 0Q864 0 828 1T736 2Q675 2 644 2T609 1Q592 1 592 11Q592 13 594 25Q598 41 602 43T625 46Q652 46 685 49Q699 52 704 61Q706 65 742 207T813 490T848 631L654 322Q458 10 453 5Q451 4 449 3Q444 0 433 0Q418 0 415 7Q413 11 374 317L335 624L267 354Q200 88 200 79Q206 46 272 46H282Q288 41 289 37T286 19Q282 3 278 1Q274 0 267 0Q265 0 255 0T221 1T157 2Q127 2 95 1T58 0Q43 0 39 2T35 11Q35 13 38 25T43 40Q45 46 65 46Q135 46 154 86Q158 92 223 354T289 629Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1051,0)\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g></g><g data-mml-node=\"TeXAtom\" transform=\"translate(609,-307.7) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"1D462\" d=\"M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(572,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(850,0)\"><path data-c=\"1D458\" d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"></path></g></g></g><g data-mml-node=\"mo\" transform=\"translate(2216.6,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3272.4,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(3661.4,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D463\" d=\"M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(518,-150) scale(0.707)\"><path data-c=\"1D458\" d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(4597.8,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(5042.5,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(394,-150) scale(0.707)\"><path data-c=\"1D458\" d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(5854.9,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(6299.6,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D44F\" d=\"M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(462,-150) scale(0.707)\"><path data-c=\"1D458\" d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(7180,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(7624.6,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D453\" d=\"M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(523,-150) scale(0.707)\"><path data-c=\"1D458\" d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(8566,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>, 其中<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.357ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.244ex\" height=\"1.952ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -705 2760 862.8\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D44F\" d=\"M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(462,-150) scale(0.707)\"><path data-c=\"1D458\" d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(1158.2,0)\"><path data-c=\"2208\" d=\"M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z\"></path></g><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\" transform=\"translate(2103,0)\"><g data-mml-node=\"mi\"><path data-c=\"42\" d=\"M304 342Q292 342 292 353Q292 372 323 391Q331 396 417 428T533 487Q563 512 563 555V562Q563 575 557 589T530 618T475 636Q429 636 396 613T330 539Q263 446 210 238Q196 183 173 120Q135 31 121 16Q108 1 85 -10T47 -22T32 -10Q32 -5 44 18T77 93T112 206Q135 296 154 395T182 550T191 615Q191 616 190 616Q188 616 179 611T157 601T131 594Q113 594 113 605Q113 623 144 644Q154 650 205 676T267 703Q277 705 279 705Q295 705 295 693Q295 686 288 635T278 575Q278 572 287 582Q336 635 402 669T540 704Q603 704 633 673T664 599Q664 559 638 523T580 462Q553 440 504 413L491 407L504 402Q566 381 596 338T627 244Q627 172 575 110T444 13T284 -22Q208 -22 158 28Q144 42 146 50Q150 67 178 85T230 103Q236 103 246 95T267 75T302 56T357 47Q436 47 486 93Q526 136 526 198V210Q526 228 518 249T491 292T436 330T350 345Q335 345 321 344T304 342Z\"></path></g></g></g></g></svg></mjx-container>表示用户的行为类别。</p>\n<h4 id=\"行为的分类\"><a href=\"#行为的分类\" class=\"headerlink\" title=\"行为的分类\"></a>行为的分类</h4><p>多类型UBM的第一大挑战是用户行为的分类，目前学界缺乏统一定义。一般地，用户行为可以分为三大类：</p>\n<ul>\n<li>宏观行为：具有显式的交互行动的那些行为，例如点击、加入购物车、收藏、购买等。在线购物平台中可直接获取。</li>\n<li>微观行为：依赖于专家知识的，比宏观行为更加细粒度的行为。例如点击行为可以根据点击源的不同做进一步分类。然而这种分类法缺乏泛化性，难以推广到与场景无关的一般情况。</li>\n<li>来自不同领域或场景的行为：与场景相关联的行为，例如搜索场景中的查询操作以及推荐场景中的点击操作。此外，同名行为（如“观看”）在不同场景中的含义也不同，需要分别单独建模。</li>\n</ul>\n<h4 id=\"多行为融合\"><a href=\"#多行为融合\" class=\"headerlink\" title=\"多行为融合\"></a>多行为融合</h4><p>多行为UBM的第二大挑战是如何联合利用多种行为提升推荐效果。相关做法为late-fusion和early-fusion两种。</p>\n<ul>\n<li>late-fusion：两阶段方法。第一阶段分别建模每种行为，第二阶段将第一阶段的建模结果融合</li>\n<li>early-fusion：从一开始就将所有种类行为混合建模（所有行为放进一个混合行为序列里）</li>\n</ul>\n<h4 id=\"多行为预测\"><a href=\"#多行为预测\" class=\"headerlink\" title=\"多行为预测\"></a>多行为预测</h4><p>多行为UBM的第三大挑战是，有些行为本身需要在模型中被预测出来（笔者：由于这些行为在测试集中不可获取？）。</p>\n<ul>\n<li>常见做法：单独设置一个行为预测模型，与兴趣预测相互分离。优点：易于构建；缺点：行为预测模型缺乏与兴趣预测本身的联系，因此兴趣预测性能堪忧。</li>\n</ul>\n<h2 id=\"UBM-辅助信息\"><a href=\"#UBM-辅助信息\" class=\"headerlink\" title=\"UBM + 辅助信息\"></a>UBM + 辅助信息</h2><p>除了上述UBM方法，相关研究者还注重于利用行为中丰富的辅助信息（如时间戳）增强推荐效果：</p>\n<script type=\"math/tex; mode=display\">\nP(u,i) = F_\\Theta^{UBM}(u,i,M(\\mathcal{H}_u)), \\forall u\\in\\mathcal{U}, i\\in\\mathcal{I}</script><p>其中<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.767ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 2107 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D440\" d=\"M289 629Q289 635 232 637Q208 637 201 638T194 648Q194 649 196 659Q197 662 198 666T199 671T201 676T203 679T207 681T212 683T220 683T232 684Q238 684 262 684T307 683Q386 683 398 683T414 678Q415 674 451 396L487 117L510 154Q534 190 574 254T662 394Q837 673 839 675Q840 676 842 678T846 681L852 683H948Q965 683 988 683T1017 684Q1051 684 1051 673Q1051 668 1048 656T1045 643Q1041 637 1008 637Q968 636 957 634T939 623Q936 618 867 340T797 59Q797 55 798 54T805 50T822 48T855 46H886Q892 37 892 35Q892 19 885 5Q880 0 869 0Q864 0 828 1T736 2Q675 2 644 2T609 1Q592 1 592 11Q592 13 594 25Q598 41 602 43T625 46Q652 46 685 49Q699 52 704 61Q706 65 742 207T813 490T848 631L654 322Q458 10 453 5Q451 4 449 3Q444 0 433 0Q418 0 415 7Q413 11 374 317L335 624L267 354Q200 88 200 79Q206 46 272 46H282Q288 41 289 37T286 19Q282 3 278 1Q274 0 267 0Q265 0 255 0T221 1T157 2Q127 2 95 1T58 0Q43 0 39 2T35 11Q35 13 38 25T43 40Q45 46 65 46Q135 46 154 86Q158 92 223 354T289 629Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1051,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1440,0)\"><path data-c=\"22C5\" d=\"M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1718,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>将辅助信息(<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.464ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.974ex\" height=\"2.059ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -705 2198.5 910\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(394,-150) scale(0.707)\"><path data-c=\"1D458\" d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(812.4,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(1257.1,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D453\" d=\"M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(523,-150) scale(0.707)\"><path data-c=\"1D458\" d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"></path></g></g></g></g></svg></mjx-container>)与商品ID <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.357ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.119ex\" height=\"1.359ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -443 936.4 600.8\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D463\" d=\"M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(518,-150) scale(0.707)\"><path data-c=\"1D458\" d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"></path></g></g></g></g></svg></mjx-container>融合，以获得商品的细粒度表征。<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.767ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 2107 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D440\" d=\"M289 629Q289 635 232 637Q208 637 201 638T194 648Q194 649 196 659Q197 662 198 666T199 671T201 676T203 679T207 681T212 683T220 683T232 684Q238 684 262 684T307 683Q386 683 398 683T414 678Q415 674 451 396L487 117L510 154Q534 190 574 254T662 394Q837 673 839 675Q840 676 842 678T846 681L852 683H948Q965 683 988 683T1017 684Q1051 684 1051 673Q1051 668 1048 656T1045 643Q1041 637 1008 637Q968 636 957 634T939 623Q936 618 867 340T797 59Q797 55 798 54T805 50T822 48T855 46H886Q892 37 892 35Q892 19 885 5Q880 0 869 0Q864 0 828 1T736 2Q675 2 644 2T609 1Q592 1 592 11Q592 13 594 25Q598 41 602 43T625 46Q652 46 685 49Q699 52 704 61Q706 65 742 207T813 490T848 631L654 322Q458 10 453 5Q451 4 449 3Q444 0 433 0Q418 0 415 7Q413 11 374 317L335 624L267 354Q200 88 200 79Q206 46 272 46H282Q288 41 289 37T286 19Q282 3 278 1Q274 0 267 0Q265 0 255 0T221 1T157 2Q127 2 95 1T58 0Q43 0 39 2T35 11Q35 13 38 25T43 40Q45 46 65 46Q135 46 154 86Q158 92 223 354T289 629Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1051,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1440,0)\"><path data-c=\"22C5\" d=\"M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1718,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>的设计在这里工作中非常重要。</p>\n<h3 id=\"辅助信息源\"><a href=\"#辅助信息源\" class=\"headerlink\" title=\"辅助信息源\"></a>辅助信息源</h3><p>辅助信息有三种来源：时间信息、商品属性，以及多模态信息。</p>\n<ul>\n<li>时间信息：时间戳、时间间隔，可用来排序或挖掘用户兴趣</li>\n<li>商品属性：如商品价格，影响用户行为从而影响兴趣</li>\n<li>多模态信息：如商品介绍文本、图片、视频，同上</li>\n</ul>\n<h3 id=\"辅助信息的利用\"><a href=\"#辅助信息的利用\" class=\"headerlink\" title=\"辅助信息的利用\"></a>辅助信息的利用</h3><p>（笔者：基本思想为表征学习，即将辅助信息映射到语义向量，映射过程可训练，类似Transformer）。<br>相关做法略</p>\n<h2 id=\"研究展望\"><a href=\"#研究展望\" class=\"headerlink\" title=\"研究展望\"></a>研究展望</h2><ul>\n<li>更加深度的信息融合</li>\n<li>更加高速的学习算法</li>\n<li>更加可解释的用户表征</li>\n<li>更加先进的技术（如预训练）</li>\n</ul>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: decodeURI(window.location.pathname),\n            distractionFreeMode: true // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>"},{"title":"骑行随想","mathjax":false,"codeblock":{"enable":true,"show_result":true},"date":"2024-01-16T12:54:41.000Z","_content":"\n一些日常。\n\n<!--more-->\n\n今天下午有些破防。\n\n起因是自己精心设计并编写的一个程序，运行速度很慢，很久（约有6个小时）都没有完成，最后觉得浪费时间，不得不提前终止进程。请教了同事，读过github源码之后，发现并行化的官方源码只需要2小时就可以完成。其效率如此之高，以至于让我感到自己白白浪费了两天编写和优化程序。然而初看起来官方源码如此复杂，让我感到一头雾水，无从下手，更是诧异于师兄是如何精巧地将并行模块恰当地嵌入合适的位置，使得程序能够在2个小时的时间内正常运行，还能够完备且不冲突地记录运行日志。越往深入思考，越感到一个漆黑的漩涡正将自己裹挟、吞没进去。感到任务很艰难，自己很无能；痛惜时间白白浪费，担心想法没能奏效...\n\n事实上，在接触这一项目之前，我甚至不知Python中的concurrent.future为何物。对于并发编程，也仅仅停留在本科“并行计算”课上的PPT内容。日常使用的并发就更不用说了——人肉并发或者Threading。然而由于没有需求，Threading也不经常用，日常的并发编程经验约等于零。我感到自己就是一个小白。\n\n想到上述的“事实”，我更加破防了。刚好晚上去银行办点事，于是准备骑行过去，顺便放松一下大脑，从漩涡中挣脱出来。\n\n骑行路上，一边听着朱广权语音播报经常犯错的导航，一边思考下午的破防体验。晚风很凉爽，甚至有点冷，让我的脑子冷静下来，发现了症结所在。想起一句话，__“除了生病以外，你所感受到的痛苦几乎都是你的价值观带来的，并非真实存在”__。这句话恰好解释了我今天下午的精神困境。自己代码的运行效率低，甚至有错误，一方面是刚上手，另一方面是在相关领域缺乏实践经验。同样地，不了解Python的并发模块并非自己的过错，而是因为之前的实践中缺乏并发编程的需求。因此这一经历，是一个很好的学习Python并发编程的契机。官方源码令自己一头雾水，无从下手，一方面是相关代码接触少，另一方面则是官方源码缺乏注释，可读性差。只需要多读、多运行、多与人沟通，总能够彻底明白代码的运行机理。\n\n此外，我也发现自己代码相比之下的诸多优点——包括面向对象、易于迁移、注释完备、便于数据分析。只是下午破防之时，注意力全部集中于自己代码的不足之处，忽略掉了这些闪光点。因此，重新振作、博采众长，将官方代码的优点吸收进自己的代码中，问题即可迎刃而解。最最重要的是一鼓作气的行动力，切忌胡思乱想和精神内耗。\n\n不知不觉间，骑到终点了。然而银行晚上关门，明天还得再跑一趟。遂重新上车，听着朱广权语音的迷糊导航，骑回家里。\n\n这附近的餐厅不错，改天一定要来试下。\n\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: decodeURI(window.location.pathname),\n            distractionFreeMode: true // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","source":"_posts/2024-01-16-emo.md","raw":"---\ntitle: 骑行随想\nmathjax: false\ncodeblock:\n  enable: true\n  show_result: true\ndate: 2024-01-16 20:54:41\ntags: 随笔 日常 骑行\ncategories: 随笔\n---\n\n一些日常。\n\n<!--more-->\n\n今天下午有些破防。\n\n起因是自己精心设计并编写的一个程序，运行速度很慢，很久（约有6个小时）都没有完成，最后觉得浪费时间，不得不提前终止进程。请教了同事，读过github源码之后，发现并行化的官方源码只需要2小时就可以完成。其效率如此之高，以至于让我感到自己白白浪费了两天编写和优化程序。然而初看起来官方源码如此复杂，让我感到一头雾水，无从下手，更是诧异于师兄是如何精巧地将并行模块恰当地嵌入合适的位置，使得程序能够在2个小时的时间内正常运行，还能够完备且不冲突地记录运行日志。越往深入思考，越感到一个漆黑的漩涡正将自己裹挟、吞没进去。感到任务很艰难，自己很无能；痛惜时间白白浪费，担心想法没能奏效...\n\n事实上，在接触这一项目之前，我甚至不知Python中的concurrent.future为何物。对于并发编程，也仅仅停留在本科“并行计算”课上的PPT内容。日常使用的并发就更不用说了——人肉并发或者Threading。然而由于没有需求，Threading也不经常用，日常的并发编程经验约等于零。我感到自己就是一个小白。\n\n想到上述的“事实”，我更加破防了。刚好晚上去银行办点事，于是准备骑行过去，顺便放松一下大脑，从漩涡中挣脱出来。\n\n骑行路上，一边听着朱广权语音播报经常犯错的导航，一边思考下午的破防体验。晚风很凉爽，甚至有点冷，让我的脑子冷静下来，发现了症结所在。想起一句话，__“除了生病以外，你所感受到的痛苦几乎都是你的价值观带来的，并非真实存在”__。这句话恰好解释了我今天下午的精神困境。自己代码的运行效率低，甚至有错误，一方面是刚上手，另一方面是在相关领域缺乏实践经验。同样地，不了解Python的并发模块并非自己的过错，而是因为之前的实践中缺乏并发编程的需求。因此这一经历，是一个很好的学习Python并发编程的契机。官方源码令自己一头雾水，无从下手，一方面是相关代码接触少，另一方面则是官方源码缺乏注释，可读性差。只需要多读、多运行、多与人沟通，总能够彻底明白代码的运行机理。\n\n此外，我也发现自己代码相比之下的诸多优点——包括面向对象、易于迁移、注释完备、便于数据分析。只是下午破防之时，注意力全部集中于自己代码的不足之处，忽略掉了这些闪光点。因此，重新振作、博采众长，将官方代码的优点吸收进自己的代码中，问题即可迎刃而解。最最重要的是一鼓作气的行动力，切忌胡思乱想和精神内耗。\n\n不知不觉间，骑到终点了。然而银行晚上关门，明天还得再跑一趟。遂重新上车，听着朱广权语音的迷糊导航，骑回家里。\n\n这附近的餐厅不错，改天一定要来试下。\n\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: decodeURI(window.location.pathname),\n            distractionFreeMode: true // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","slug":"2024-01-16-emo","published":1,"updated":"2024-01-16T13:32:30.960Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cludw9nai005b9wv9hjihgcso","content":"<p>一些日常。</p>\n<span id=\"more\"></span>\n<p>今天下午有些破防。</p>\n<p>起因是自己精心设计并编写的一个程序，运行速度很慢，很久（约有6个小时）都没有完成，最后觉得浪费时间，不得不提前终止进程。请教了同事，读过github源码之后，发现并行化的官方源码只需要2小时就可以完成。其效率如此之高，以至于让我感到自己白白浪费了两天编写和优化程序。然而初看起来官方源码如此复杂，让我感到一头雾水，无从下手，更是诧异于师兄是如何精巧地将并行模块恰当地嵌入合适的位置，使得程序能够在2个小时的时间内正常运行，还能够完备且不冲突地记录运行日志。越往深入思考，越感到一个漆黑的漩涡正将自己裹挟、吞没进去。感到任务很艰难，自己很无能；痛惜时间白白浪费，担心想法没能奏效…</p>\n<p>事实上，在接触这一项目之前，我甚至不知Python中的concurrent.future为何物。对于并发编程，也仅仅停留在本科“并行计算”课上的PPT内容。日常使用的并发就更不用说了——人肉并发或者Threading。然而由于没有需求，Threading也不经常用，日常的并发编程经验约等于零。我感到自己就是一个小白。</p>\n<p>想到上述的“事实”，我更加破防了。刚好晚上去银行办点事，于是准备骑行过去，顺便放松一下大脑，从漩涡中挣脱出来。</p>\n<p>骑行路上，一边听着朱广权语音播报经常犯错的导航，一边思考下午的破防体验。晚风很凉爽，甚至有点冷，让我的脑子冷静下来，发现了症结所在。想起一句话，<strong>“除了生病以外，你所感受到的痛苦几乎都是你的价值观带来的，并非真实存在”</strong>。这句话恰好解释了我今天下午的精神困境。自己代码的运行效率低，甚至有错误，一方面是刚上手，另一方面是在相关领域缺乏实践经验。同样地，不了解Python的并发模块并非自己的过错，而是因为之前的实践中缺乏并发编程的需求。因此这一经历，是一个很好的学习Python并发编程的契机。官方源码令自己一头雾水，无从下手，一方面是相关代码接触少，另一方面则是官方源码缺乏注释，可读性差。只需要多读、多运行、多与人沟通，总能够彻底明白代码的运行机理。</p>\n<p>此外，我也发现自己代码相比之下的诸多优点——包括面向对象、易于迁移、注释完备、便于数据分析。只是下午破防之时，注意力全部集中于自己代码的不足之处，忽略掉了这些闪光点。因此，重新振作、博采众长，将官方代码的优点吸收进自己的代码中，问题即可迎刃而解。最最重要的是一鼓作气的行动力，切忌胡思乱想和精神内耗。</p>\n<p>不知不觉间，骑到终点了。然而银行晚上关门，明天还得再跑一趟。遂重新上车，听着朱广权语音的迷糊导航，骑回家里。</p>\n<p>这附近的餐厅不错，改天一定要来试下。</p>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: decodeURI(window.location.pathname),\n            distractionFreeMode: true // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","site":{"data":{}},"length":1398,"excerpt":"<p>一些日常。</p>","more":"<p>今天下午有些破防。</p>\n<p>起因是自己精心设计并编写的一个程序，运行速度很慢，很久（约有6个小时）都没有完成，最后觉得浪费时间，不得不提前终止进程。请教了同事，读过github源码之后，发现并行化的官方源码只需要2小时就可以完成。其效率如此之高，以至于让我感到自己白白浪费了两天编写和优化程序。然而初看起来官方源码如此复杂，让我感到一头雾水，无从下手，更是诧异于师兄是如何精巧地将并行模块恰当地嵌入合适的位置，使得程序能够在2个小时的时间内正常运行，还能够完备且不冲突地记录运行日志。越往深入思考，越感到一个漆黑的漩涡正将自己裹挟、吞没进去。感到任务很艰难，自己很无能；痛惜时间白白浪费，担心想法没能奏效…</p>\n<p>事实上，在接触这一项目之前，我甚至不知Python中的concurrent.future为何物。对于并发编程，也仅仅停留在本科“并行计算”课上的PPT内容。日常使用的并发就更不用说了——人肉并发或者Threading。然而由于没有需求，Threading也不经常用，日常的并发编程经验约等于零。我感到自己就是一个小白。</p>\n<p>想到上述的“事实”，我更加破防了。刚好晚上去银行办点事，于是准备骑行过去，顺便放松一下大脑，从漩涡中挣脱出来。</p>\n<p>骑行路上，一边听着朱广权语音播报经常犯错的导航，一边思考下午的破防体验。晚风很凉爽，甚至有点冷，让我的脑子冷静下来，发现了症结所在。想起一句话，<strong>“除了生病以外，你所感受到的痛苦几乎都是你的价值观带来的，并非真实存在”</strong>。这句话恰好解释了我今天下午的精神困境。自己代码的运行效率低，甚至有错误，一方面是刚上手，另一方面是在相关领域缺乏实践经验。同样地，不了解Python的并发模块并非自己的过错，而是因为之前的实践中缺乏并发编程的需求。因此这一经历，是一个很好的学习Python并发编程的契机。官方源码令自己一头雾水，无从下手，一方面是相关代码接触少，另一方面则是官方源码缺乏注释，可读性差。只需要多读、多运行、多与人沟通，总能够彻底明白代码的运行机理。</p>\n<p>此外，我也发现自己代码相比之下的诸多优点——包括面向对象、易于迁移、注释完备、便于数据分析。只是下午破防之时，注意力全部集中于自己代码的不足之处，忽略掉了这些闪光点。因此，重新振作、博采众长，将官方代码的优点吸收进自己的代码中，问题即可迎刃而解。最最重要的是一鼓作气的行动力，切忌胡思乱想和精神内耗。</p>\n<p>不知不觉间，骑到终点了。然而银行晚上关门，明天还得再跑一趟。遂重新上车，听着朱广权语音的迷糊导航，骑回家里。</p>\n<p>这附近的餐厅不错，改天一定要来试下。</p>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: decodeURI(window.location.pathname),\n            distractionFreeMode: true // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>"},{"title":"2023年一次USTC国际差旅学生报销记录","mathjax":false,"codeblock":{"enable":true,"show_result":true},"date":"2024-01-16T13:33:20.000Z","_content":"\n将这次报销过程记录下来，以供后人参考\n\n<!--more-->\n\n2023年7月份去美国线下参加了一次学术会议，本次报销的项目包括以下四项：\n1. 会议注册费\n2. 签证费\n3. 机票费\n4. 住宿费\n\n提交的打印报销材料包括如下：\n\n\n- 公共项\n  1. 报销单据（__注意，需要项目负责人 -> （项目负责人所在学院）系主任 -> 执行院长或院长 -> 国合部 四层签字，不可越级签字，不可电子签字__）\n  2. 国合部批件\n  3. 护照首页和签证页复印件；出入境盖章页复印件（如果有）\n  4. 出入中国国境记录文件（去国家移民管理局微信小程序上找）\n  5. 出入美国国境记录文件（上网搜索I-94）\n  6. 访问超期说明，国合部签字（注意，__是否超期需要比较出入中国国境的时间（而非入境和出境目的国）和国合部批件准许的访问时间__）\n  7. 美元对人民币汇率截图（按支付日期为准，不等后报账界面可查）\n   \n\n- 会议注册费：\n  1. 会议官方邀请信\n  2. 会议收费标准（可从官网截图）\n  3. 会议注册费发票（英文发票标题应当有invoice或receipt字样）\n  4. 会议注册费支付记录\n\n\n- 签证费（注意，美国签证不给开发票）\n  1. 签证无法开发票官方说明（美国大使馆官网申请签证时截图）\n  2. 签证付款码（当时使用支付宝付款）\n  3. 签证付款页\n  4. 签证费支付记录\n   \n\n- 机票费（非国内航空公司且有异地转机，额外注意）\n  1. [乘坐非国内航空公司航班和改变中转地审批表（__出发前办理__， 需要国合部和财务处领导签字）](https://oic.ustc.edu.cn/wp-content/uploads/2020/09/%E4%B9%98%E5%9D%90%E9%9D%9E%E5%9B%BD%E5%86%85%E8%88%AA%E7%A9%BA%E5%85%AC%E5%8F%B8%E8%88%AA%E7%8F%AD%E5%92%8C%E6%94%B9%E5%8F%98%E4%B8%AD%E8%BD%AC%E5%9C%B0%E5%AE%A1%E6%89%B9%E8%A1%A8.xls)\n  2. 难以买到国内航空公司航班截图说明（在机票选择界面截图，写文字说明该时间段内不存在价格与时间均符合要求且无需转机的国内航空公司航班）\n  3. 登机牌（**一定要注意保管好**。如果登机牌丢了，则写一则说明，找报销项目负责人签字）\n  4. 飞机行程单（买票商家可开，如携程）\n  5. 发票（电子发票即便上传至不等候报账系统，也需要打印）\n  6. 机票支付记录\n  7. 机票改签说明，国合部签字（财务处要求）\n\n\n- 住宿费\n  1. 住宿发票（标题需要带invoice或receipt字样）\n  2. Guest Folio是住宿发票的说明（在打电话给酒店前台开电子发票时，已经明确说明\"apply for an invoice or receipt\"，但那边有将Guest Folio（客人账单）当成发票用的习惯，开的文件也是Guest Folio。因此需要写一说明，由**项目负责人**签字）\n  3. 住宿支付记录\n\n以上就是用到的所有纸质文件。张贴好登机牌，分类整理好各个文件，即可投递至报销箱。之后可能会与财务处另有几次交锋，注意沟通时一次性将问题全部问出，即可高效解决报销问题。\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: decodeURI(window.location.pathname),\n            distractionFreeMode: true // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","source":"_posts/2024-01-16-reimburse.md","raw":"---\ntitle: 2023年一次USTC国际差旅学生报销记录\nmathjax: false\ncodeblock:\n  enable: true\n  show_result: true\ndate: 2024-01-16 21:33:20\ntags:\ncategories:\n---\n\n将这次报销过程记录下来，以供后人参考\n\n<!--more-->\n\n2023年7月份去美国线下参加了一次学术会议，本次报销的项目包括以下四项：\n1. 会议注册费\n2. 签证费\n3. 机票费\n4. 住宿费\n\n提交的打印报销材料包括如下：\n\n\n- 公共项\n  1. 报销单据（__注意，需要项目负责人 -> （项目负责人所在学院）系主任 -> 执行院长或院长 -> 国合部 四层签字，不可越级签字，不可电子签字__）\n  2. 国合部批件\n  3. 护照首页和签证页复印件；出入境盖章页复印件（如果有）\n  4. 出入中国国境记录文件（去国家移民管理局微信小程序上找）\n  5. 出入美国国境记录文件（上网搜索I-94）\n  6. 访问超期说明，国合部签字（注意，__是否超期需要比较出入中国国境的时间（而非入境和出境目的国）和国合部批件准许的访问时间__）\n  7. 美元对人民币汇率截图（按支付日期为准，不等后报账界面可查）\n   \n\n- 会议注册费：\n  1. 会议官方邀请信\n  2. 会议收费标准（可从官网截图）\n  3. 会议注册费发票（英文发票标题应当有invoice或receipt字样）\n  4. 会议注册费支付记录\n\n\n- 签证费（注意，美国签证不给开发票）\n  1. 签证无法开发票官方说明（美国大使馆官网申请签证时截图）\n  2. 签证付款码（当时使用支付宝付款）\n  3. 签证付款页\n  4. 签证费支付记录\n   \n\n- 机票费（非国内航空公司且有异地转机，额外注意）\n  1. [乘坐非国内航空公司航班和改变中转地审批表（__出发前办理__， 需要国合部和财务处领导签字）](https://oic.ustc.edu.cn/wp-content/uploads/2020/09/%E4%B9%98%E5%9D%90%E9%9D%9E%E5%9B%BD%E5%86%85%E8%88%AA%E7%A9%BA%E5%85%AC%E5%8F%B8%E8%88%AA%E7%8F%AD%E5%92%8C%E6%94%B9%E5%8F%98%E4%B8%AD%E8%BD%AC%E5%9C%B0%E5%AE%A1%E6%89%B9%E8%A1%A8.xls)\n  2. 难以买到国内航空公司航班截图说明（在机票选择界面截图，写文字说明该时间段内不存在价格与时间均符合要求且无需转机的国内航空公司航班）\n  3. 登机牌（**一定要注意保管好**。如果登机牌丢了，则写一则说明，找报销项目负责人签字）\n  4. 飞机行程单（买票商家可开，如携程）\n  5. 发票（电子发票即便上传至不等候报账系统，也需要打印）\n  6. 机票支付记录\n  7. 机票改签说明，国合部签字（财务处要求）\n\n\n- 住宿费\n  1. 住宿发票（标题需要带invoice或receipt字样）\n  2. Guest Folio是住宿发票的说明（在打电话给酒店前台开电子发票时，已经明确说明\"apply for an invoice or receipt\"，但那边有将Guest Folio（客人账单）当成发票用的习惯，开的文件也是Guest Folio。因此需要写一说明，由**项目负责人**签字）\n  3. 住宿支付记录\n\n以上就是用到的所有纸质文件。张贴好登机牌，分类整理好各个文件，即可投递至报销箱。之后可能会与财务处另有几次交锋，注意沟通时一次性将问题全部问出，即可高效解决报销问题。\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: decodeURI(window.location.pathname),\n            distractionFreeMode: true // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","slug":"2024-01-16-reimburse","published":1,"updated":"2024-01-16T14:19:04.536Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cludw9nai005c9wv97qip201n","content":"<p>将这次报销过程记录下来，以供后人参考</p>\n<span id=\"more\"></span>\n<p>2023年7月份去美国线下参加了一次学术会议，本次报销的项目包括以下四项：</p>\n<ol>\n<li>会议注册费</li>\n<li>签证费</li>\n<li>机票费</li>\n<li>住宿费</li>\n</ol>\n<p>提交的打印报销材料包括如下：</p>\n<ul>\n<li>公共项<ol>\n<li>报销单据（<strong>注意，需要项目负责人 -&gt; （项目负责人所在学院）系主任 -&gt; 执行院长或院长 -&gt; 国合部 四层签字，不可越级签字，不可电子签字</strong>）</li>\n<li>国合部批件</li>\n<li>护照首页和签证页复印件；出入境盖章页复印件（如果有）</li>\n<li>出入中国国境记录文件（去国家移民管理局微信小程序上找）</li>\n<li>出入美国国境记录文件（上网搜索I-94）</li>\n<li>访问超期说明，国合部签字（注意，<strong>是否超期需要比较出入中国国境的时间（而非入境和出境目的国）和国合部批件准许的访问时间</strong>）</li>\n<li>美元对人民币汇率截图（按支付日期为准，不等后报账界面可查）</li>\n</ol>\n</li>\n</ul>\n<ul>\n<li>会议注册费：<ol>\n<li>会议官方邀请信</li>\n<li>会议收费标准（可从官网截图）</li>\n<li>会议注册费发票（英文发票标题应当有invoice或receipt字样）</li>\n<li>会议注册费支付记录</li>\n</ol>\n</li>\n</ul>\n<ul>\n<li>签证费（注意，美国签证不给开发票）<ol>\n<li>签证无法开发票官方说明（美国大使馆官网申请签证时截图）</li>\n<li>签证付款码（当时使用支付宝付款）</li>\n<li>签证付款页</li>\n<li>签证费支付记录</li>\n</ol>\n</li>\n</ul>\n<ul>\n<li>机票费（非国内航空公司且有异地转机，额外注意）<ol>\n<li><a href=\"https://oic.ustc.edu.cn/wp-content/uploads/2020/09/%E4%B9%98%E5%9D%90%E9%9D%9E%E5%9B%BD%E5%86%85%E8%88%AA%E7%A9%BA%E5%85%AC%E5%8F%B8%E8%88%AA%E7%8F%AD%E5%92%8C%E6%94%B9%E5%8F%98%E4%B8%AD%E8%BD%AC%E5%9C%B0%E5%AE%A1%E6%89%B9%E8%A1%A8.xls\">乘坐非国内航空公司航班和改变中转地审批表（<strong>出发前办理</strong>， 需要国合部和财务处领导签字）</a></li>\n<li>难以买到国内航空公司航班截图说明（在机票选择界面截图，写文字说明该时间段内不存在价格与时间均符合要求且无需转机的国内航空公司航班）</li>\n<li>登机牌（<strong>一定要注意保管好</strong>。如果登机牌丢了，则写一则说明，找报销项目负责人签字）</li>\n<li>飞机行程单（买票商家可开，如携程）</li>\n<li>发票（电子发票即便上传至不等候报账系统，也需要打印）</li>\n<li>机票支付记录</li>\n<li>机票改签说明，国合部签字（财务处要求）</li>\n</ol>\n</li>\n</ul>\n<ul>\n<li>住宿费<ol>\n<li>住宿发票（标题需要带invoice或receipt字样）</li>\n<li>Guest Folio是住宿发票的说明（在打电话给酒店前台开电子发票时，已经明确说明”apply for an invoice or receipt”，但那边有将Guest Folio（客人账单）当成发票用的习惯，开的文件也是Guest Folio。因此需要写一说明，由<strong>项目负责人</strong>签字）</li>\n<li>住宿支付记录</li>\n</ol>\n</li>\n</ul>\n<p>以上就是用到的所有纸质文件。张贴好登机牌，分类整理好各个文件，即可投递至报销箱。之后可能会与财务处另有几次交锋，注意沟通时一次性将问题全部问出，即可高效解决报销问题。</p>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: decodeURI(window.location.pathname),\n            distractionFreeMode: true // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","site":{"data":{}},"length":1293,"excerpt":"<p>将这次报销过程记录下来，以供后人参考</p>","more":"<p>2023年7月份去美国线下参加了一次学术会议，本次报销的项目包括以下四项：</p>\n<ol>\n<li>会议注册费</li>\n<li>签证费</li>\n<li>机票费</li>\n<li>住宿费</li>\n</ol>\n<p>提交的打印报销材料包括如下：</p>\n<ul>\n<li>公共项<ol>\n<li>报销单据（<strong>注意，需要项目负责人 -&gt; （项目负责人所在学院）系主任 -&gt; 执行院长或院长 -&gt; 国合部 四层签字，不可越级签字，不可电子签字</strong>）</li>\n<li>国合部批件</li>\n<li>护照首页和签证页复印件；出入境盖章页复印件（如果有）</li>\n<li>出入中国国境记录文件（去国家移民管理局微信小程序上找）</li>\n<li>出入美国国境记录文件（上网搜索I-94）</li>\n<li>访问超期说明，国合部签字（注意，<strong>是否超期需要比较出入中国国境的时间（而非入境和出境目的国）和国合部批件准许的访问时间</strong>）</li>\n<li>美元对人民币汇率截图（按支付日期为准，不等后报账界面可查）</li>\n</ol>\n</li>\n</ul>\n<ul>\n<li>会议注册费：<ol>\n<li>会议官方邀请信</li>\n<li>会议收费标准（可从官网截图）</li>\n<li>会议注册费发票（英文发票标题应当有invoice或receipt字样）</li>\n<li>会议注册费支付记录</li>\n</ol>\n</li>\n</ul>\n<ul>\n<li>签证费（注意，美国签证不给开发票）<ol>\n<li>签证无法开发票官方说明（美国大使馆官网申请签证时截图）</li>\n<li>签证付款码（当时使用支付宝付款）</li>\n<li>签证付款页</li>\n<li>签证费支付记录</li>\n</ol>\n</li>\n</ul>\n<ul>\n<li>机票费（非国内航空公司且有异地转机，额外注意）<ol>\n<li><a href=\"https://oic.ustc.edu.cn/wp-content/uploads/2020/09/%E4%B9%98%E5%9D%90%E9%9D%9E%E5%9B%BD%E5%86%85%E8%88%AA%E7%A9%BA%E5%85%AC%E5%8F%B8%E8%88%AA%E7%8F%AD%E5%92%8C%E6%94%B9%E5%8F%98%E4%B8%AD%E8%BD%AC%E5%9C%B0%E5%AE%A1%E6%89%B9%E8%A1%A8.xls\">乘坐非国内航空公司航班和改变中转地审批表（<strong>出发前办理</strong>， 需要国合部和财务处领导签字）</a></li>\n<li>难以买到国内航空公司航班截图说明（在机票选择界面截图，写文字说明该时间段内不存在价格与时间均符合要求且无需转机的国内航空公司航班）</li>\n<li>登机牌（<strong>一定要注意保管好</strong>。如果登机牌丢了，则写一则说明，找报销项目负责人签字）</li>\n<li>飞机行程单（买票商家可开，如携程）</li>\n<li>发票（电子发票即便上传至不等候报账系统，也需要打印）</li>\n<li>机票支付记录</li>\n<li>机票改签说明，国合部签字（财务处要求）</li>\n</ol>\n</li>\n</ul>\n<ul>\n<li>住宿费<ol>\n<li>住宿发票（标题需要带invoice或receipt字样）</li>\n<li>Guest Folio是住宿发票的说明（在打电话给酒店前台开电子发票时，已经明确说明”apply for an invoice or receipt”，但那边有将Guest Folio（客人账单）当成发票用的习惯，开的文件也是Guest Folio。因此需要写一说明，由<strong>项目负责人</strong>签字）</li>\n<li>住宿支付记录</li>\n</ol>\n</li>\n</ul>\n<p>以上就是用到的所有纸质文件。张贴好登机牌，分类整理好各个文件，即可投递至报销箱。之后可能会与财务处另有几次交锋，注意沟通时一次性将问题全部问出，即可高效解决报销问题。</p>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: decodeURI(window.location.pathname),\n            distractionFreeMode: true // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>"},{"title":"WWW 2024 | 重剑无锋：个性化学习者能力建模全新范式：通用的可识别、可解释的能力诊断框架","mathjax":true,"codeblock":{"enable":true,"show_result":true},"date":"2024-02-01T03:04:58.000Z","_content":"\n个性化学习者能力建模全新范式。\n\n<!--more-->\n\n![论文首页](https://pic4.zhimg.com/80/v2-ba1f68abd2b83f3f36024d5f9adadfdb.png)\n\n论文标题：Towards the Identifiability and Explainability for Personalized Learner Modeling: An Inductive Paradigm\n\n作者：Jiatong Li, Qi Liu, Fei Wang, Jiayu Liu, Zhenya Huang, Fangzhou Yao, Linbo Zhu, Yu Su\n\n作者单位：中国科学技术大学\n\n论文链接：https://arxiv.org/abs/2309.00300\n\n论文录用：The Web Conference 2024 Main Conference （Research Tracks）\n\n作者主页：https://cslijt.github.io/\n\n![基于认知诊断的学习者能力建模现状](https://pic4.zhimg.com/80/v2-0ee8897ec3d978569909d11d5f83ce50.png)\n\n## 论文摘要\n基于认知诊断(CD)的个性化学习者建模是许多网络学习服务的一项基础而重要的任务，它旨在通过从行为数据中诊断学习者的特征来建模学习者的认知状态。现有的认知诊断模型(CDMs)遵循认知状态-答题响应范式，将学习者认知状态和题目参数视为可训练的嵌入，并通过学习者得分预测来学习它们。然而，我们注意到这种范式不可避免地导致学习者建模的不可识别性，并导致可解释性过拟合问题，这不利于学习者认知状态的量化和网络学习服务的质量。为了解决这些问题，我们提出了一个可识别的认知诊断框架(ID-CDF)，该框架基于一种全新的答题响应-认知状态-答题响应范式，该范式受到编码器-解码器模型的启发。具体而言，我们首先设计了ID-CDF的诊断模块，该模块利用归纳学习消除模型优化中的参数随机性，以确保学习者能力建模结果的可识别性，并捕获总体响应数据分布与认知状态之间的单调性，以防止可解释性过拟合。接下来，我们提出了一个灵活的ID-CDF预测模块，以保证诊断结果的准确性。我们进一步提出了一个ID-CDF的实现，即ID-CDM，以说明其可用性。在四个具有不同特征的真实数据集上进行的大量实验表明，ID-CDF可以有效解决上述研究问题，同时不失诊断结果准确性。\n\n## 背景介绍\n在各种Web学习应用（如在线学习平台、在线自适应测试）中，基于认知诊断（cognitive diagnosis, CD）的个性化学习者能力建模，是一项重要的基础任务。该任务的目标是从学习者的历史行为数据（绝大部分情况下，是答题得分记录）中诊断出学习者的认知状态（如对学科知识点的掌握水平）。诊断结果作为认知诊断模型（cognitive diagnosis model, CDM）的输出，一方面可以直接提供给学习者用户，作为其近期学习状态的反馈，另一方面可以作为用户特征（embedding），提供给下游任务挖掘进一步用途，如计算自适应测试（computerized adaptive testing, CAT）、习题推荐（item recommendation）等。需要注意的是，这里的“学习者”是指广义上的所有需要通过学习和测试过程积累知识的个体（如职业资格考试备考者、大学生），不仅仅是K-12教育中的学生。\n\n![传统范式与本文提出的新范式对比](https://pic4.zhimg.com/80/v2-f209050626df0d396f6839221005872c.png)\n\n## 研究动机\n**从研究现状看，**现有的基于深度学习的学习者能力建模认知诊断模型（cdm）都遵循“能力水平->响应”范式（proficiency-response paradigm），即把学习者认知状态以及试题特征视作可以从数据中学习的embedding，并通过预测答题得分->计算损失函数->反向传播的方式来优化embedding，从而得到预测结果。这一范式与推荐系统中的双塔模型极为类似。即便是不基于深度学习的传统认知诊断模型如DINA（Deterministic Input, Noisy \"And\" gate model），“能力水平->响应结果”这一逻辑依然保持。倒不如说，基于深度学习的CDM的proficiency-response paradigm，就是从传统CDM这里一脉相承的。前者通过神经网络强大的函数拟合能力，能够准确地预测学习者在试题上的答题得分。**然而，这一范式容易导致两个难以解决的问题，一是无法保持诊断结果的可识别性，二是导致诊断结果可解释性的过拟合。**\n\n其中，可识别性是指，给定交互函数（CDM的答题得分预测函数）$f:\\Theta\\times\\Psi\\to \\{0,1\\}$，不同的学习者认知状态$\\theta, \\theta' \\in\\Theta$应当导致不同的答题得分分布。换言之，取其等价的逆否命题，也即 **“如果有两名学习者，他们的答题得分分布一模一样，那么在没有其他先验信息的前提下，这两名学习者的认知状态应当是相同的”**。例如在Figure 1中，Adam和Paul的得分分布一模一样（答对e1,e2；答错e3,e4），那么他们本就应当具有相同的认知状态。听起来很符合直觉也很合理对不对？但这样一个重要的性质，却没有任何一个现有的CDM能够保持。这是由传统范式在参数优化过程天然存在的随机性导致的，而且难以消除。在教育测量学界，以Xu et al. 为代表，已经有一些关于传统模型DINA的可识别性条件的理论研究。但相关性质要求试题Q矩阵的特定形式，并且相比于可识别性的实现，更加关注其理论存在性，在现实中仍然难以实现。而在计算机领域，关于个性化学习者能力建模结果可识别性的研究，仍然是一片空白。\n\n另一个问题，可解释性过拟合，是指诊断结果只在训练数据上有较好的可解释性，在测试数据上却难以解释。这一现象是我们首先通过实验观测到的。这里的“可解释性”是指教育测量层面的可解释，即诊断结果能够反映学习者真实认知状态的程度，需要通过“单调性假设”来维持，即学习者诊断结果随相关习题得分单调递增。可解释性对于学习者能力建模是至关重要的，毕竟诊断结果会直接输出给学习者作为其学习情况反馈，需要令其信服，不像推荐系统中服务提供方只关注推荐效果，如CTR。然而传统范式中，学习者能力是从训练集得分中一个一个“优化”出来的，天然地会导致其单调性指标在训练集上很高（虚高），在验证集和测试集上很拉跨。相关研究中的可解释性指标也都是在训练集上计算的。因为人们不需要通过可解释性“预测”什么，只关注其“在已观测的数据上是否分布合理”。然而，这与可解释性的初衷，即“由有限的已知数据推断隐藏在背后的真实能力”，是相悖的。\n\n\n**从研究目标看，**我们认为学习者能力建模这一任务本身，更应该关注**由数据到认知状态的诊断过程**，而非**由认知状态到数据的预测过程**。进一步讲，**一个具有实际应用价值的学习者能力建模服务，应当更加关注诊断结果本身的质量，而非答题预测精度，并且整个诊断过程是直接的、端到端的**。当一个在线学习者用户想测评其认知状态时，他只需要输入答题数据，得到输出的诊断结果。不幸的是，现有的CDM都做不到这一点。现有的CDM由于是基于参数优化来估计学习者能力结果的，因此每当一个学习者用户想要测评认知状态时，他必须将自己的答题数据放入全量答题数据中（如果之前有10,000名用户，那么现在就有10,001个用户），重新训练一遍整个模型。注意，冻结其他参数而只训练自己的能力参数这是不可取的，因为容易导致严重的过拟合，而且诊断结果完全不可识别。因此，在实际应用中，现有的CDM也是难以部署的，更多停留在实验室阶段。\n\n**因此，为了解决上述的棘手问题，我们首先开创了一种全新的学习者能力建模范式，Proficiency-response-proficiency paradigm**，如Figure 3所示。基于这一新范式，**我们提出了一种可识别的认知诊断框架ID-CDF**，如Figure 4所示。在这一框架中，学习者认知状态和试题特征不再通过参数优化学习得到，而是通过诊断模块Diagnostic Module一步得到。\n\n![ID-CDF框架图](https://pic4.zhimg.com/80/v2-40e4246b15789a527485beb03f6cc0d4.png)\n\n## ID-CDF：通用的可识别认知诊断框架\n\n如 Figure 4 所示，ID-CDF这一框架包含两大模块：诊断模块（Diagnostic Module）和预测模块（Predictive Module）。\n\n### 诊断模块（Diagnostic Module）\n**诊断模块的目的是通过归纳式学习（inductive learning），彻底解决现有学习者能力建模方法的不可识别问题，并通过额外引入的约束机制（可定制，可拓展）来满足诊断结果的可解释性，并且归纳式学习本身能够有效缓解可解释性过拟合问题。**具体而言，在这一模块中，学习者和试题的答题数据（本文实现中为0-1的答题得分）首先编码为向量。设有N名学生和M道试题，那么每一名学生的答题数据向量是M维的，每一维度表示在该题的得分（1 = 答对；0 = 未做； -1 = 答错）；类似地，每一道试题的答题数据向量是N维的。上述编码方式可如下公式所示形式化地表示：\n\n![可观测量编码](https://pic4.zhimg.com/80/v2-3639e3812a95c4f70b30276b61dbe7d4.png)\n\n接下来，诊断模块通过如下形式的诊断函数从答题数据中（归纳式地）直接计算出学习者和试题的诊断结果。其中$\\theta$表示学习者的能力，$\\psi$表示试题的隐含属性如难度、区分度；$\\omega$表示诊断函数的参数。\n\n![诊断函数](https://pic4.zhimg.com/80/v2-ffc5b300ba0cd4d60cad805b005e532c.png)\n\n$\\omega$的存在是为说明，**诊断函数是可以从数据中学习的**。但是，诊断函数千千万万，究竟哪一个是合理的？尤其是回到本文的研究问题：怎样保证诊断结果是可识别、可解释的？这里我们就需要引入诊断函数的可识别性条件和单调性条件：\n- **可识别性条件（Identifiability condition）：** 一个诊断函数满足可识别性条件，当且仅当诊断结果是完全由可观测量决定的。换言之，该函数的计算过程不允许存在任何可能导致诊断结果改变的外部的不可观测量。\n  - 这一条件可以概括为，“所见即所得”。例如，如果学习者答题数据中仅有答题得分，那么可识别的诊断函数必须保证诊断结果是完全由答题得分决定的，不能存在随机因素或不可见的学习者个人因素（如学习者ID）。\n- **单调性条件（Monotonicity condition）：** 一个学习者诊断函数满足单调性条件，当且仅当诊断结果相对于输入的任意一个维度是单调递增的。\n  - 单调性条件源于心理测量学中基础但重要的的“单调性假设”，即学习者的**真实能力水平**是随其正答概率单调递增的。由于学习者的真实能力是未知的、不可观测的，因此在单调性假设成立的前提下，通过单调性条件来保证估计出的学习者能力诊断结果的可解释性。\n\n上述两个条件是解决本文研究问题的钥匙，也是ID-CDF对诊断函数设计的唯二约束。在满足上述两个条件的前提下，ID-CDF允许并鼓励使用者定义自己的诊断函数，以满足不同场景的需求。本文中为验证这一模块的准确性，使用了全连接神经网络来定义。使用者也可考虑使用CNN、RNN或其他定义方式，设计符合自己需求的诊断函数。\n\n\n### 预测模块（Predictive Module）\n**预测模块的目的是通过利用诊断结果重建可观测量（答题数据），以保证诊断结果的准确性及其在下游任务中的潜力**。ID-CDF的诊断模块就是目前已有的大多数认知诊断模型（CDM）的本体。例如DINA、IRT、MIRT、NCDM，均与ID-CDF的预测模块同构。在ID-CDF中，预测模块的本质是一个交互函数（interaction function），该函数通过模拟学习者调动自身认知状态以解决题目的过程，从诊断结果中重建答题数据。如下所示：\n\n![交互函数](https://pic4.zhimg.com/80/v2-eca255d52feca490d7279659f3621227.png)\n\n其中$q_j$表示试题$j$的Q向量，用来指示试题与知识点的对应关系。$\\odot$是逐元素乘法，意思是我们只关注所有知识点中那些被试题考察的知识点。$\\omega$表示交互函数的隐参数，可以在拟合数据的过程中学习。\n\n### 损失函数\n由于答题数据的重建结果是概率化的，因此使用交叉熵作为损失函数：\n![损失函数](https://pic4.zhimg.com/80/v2-c5612bf3c79bb312b6c7e0b2d6a85d67.png)\n\n## ID-CDM：ID-CDF的一种简洁实现\nID-CDM的提出目的，是作为ID-CDF的一种简洁实现，在实验中验证ID-CDF的有效性。\n\n### 诊断模块的实现\n在ID-CDM中，学习者诊断函数通过一个单调双层全连接神经网络实现：\n\n![学习者诊断函数](https://pic4.zhimg.com/80/v2-008cce8d26bba86cf638788fe022b150.png)\n\n同时，试题诊断函数通过一个三层全连接神经网络实现：\n\n![试题诊断函数](https://pic4.zhimg.com/80/v2-c8154977f8096b8b39ef4005eb715fe0.png)\n\n### 预测模块的实现\n\nID-CDM中，预测模块首先通过一个降维操作，将高维稀疏的诊断结果（注意，只关注那些被试题考察的知识点维度）压缩为低维高信息密度的诊断结果隐向量：\n\n![压缩操作](https://pic4.zhimg.com/80/v2-a34b5404ced296f220eaca2d64e880c7.png)\n\n然后，再通过一个三层神经网络重建可观测量（答题得分）：\n\n![重建答题得分](https://pic4.zhimg.com/80/v2-0917427a314bd4a6645432258e1fa8e6.png)\n\n以上就是ID-CDM的实现。\n\n## 实验部分\n### 研究问题\n- RQ1：ID-CDM诊断结果的可识别性如何？\n- RQ2：ID-CDM诊断结果的可解释性如何？\n- RQ3：ID-CDM诊断结果能否精准反映学习者的真实答题表现？\n- RQ4：（由不同诊断模型给出的）学习者的诊断结果与其答题表现有何统计关联性？\n\n为回答上述问题，我们设计了四个不同的实验，在四个具有不同特征的数据集上验证ID-CDM的有效性。数据集信息可见于[原始论文](https://arxiv.org/pdf/2309.00300.pdf)。\n\n### 可识别性评估（RQ1）\n\n![可识别性评估结果](https://pic4.zhimg.com/80/v2-18c908dcbed6fb8bd61315e3c166042f.png)\n\n针对这一问题，我们提出一种名为可识别性得分（Identifiability Score, IDS）的评价指标。该指标在增强数据集上检测具有相同可观测量的学习者或试题的诊断结果相似性以评价可识别性。IDS介于0和1之间，越接近1，则诊断结果的平均可识别性越强。**当且仅当IDS = 1.0，全体诊断结果是严格可识别的。**\n\n如Table 1所示，我们计算了ID-CDM和诊断模型baseline各自的IDS。ID-CDM的诊断结果是所有结果中唯一可识别的。此外，ID-CDM-nEnc表示去掉诊断模块的ID-CDM，因此牺牲了可识别性条件，是用于验证可识别性条件有效性的消融实验。NCDM-Const表示使用常数初始化NCDM的诊断结果，以观察这种经典的去随机化方式能否解决传统CDM的不可识别问题。结果表明，虽然NCDM-Const的IDS相对于NCDM有一定提升，但仍然未能彻底解决不可识别问题。因此，在上述方法中，ID-CDM是唯一能够彻底解决不可识别问题的方案。\n\n### 可解释性评估（RQ2）\n\n![可解释性评估结果](https://pic4.zhimg.com/80/v2-869aee8ae3e3378f05245bf6a132b061.png)\n\n针对可解释性评估问题，我们提出两个指标以从不同角度测量诊断的可解释性：一致性程度（Degreement of Consistency, DOC）和可解释过拟合率（Rate of Explainability Overfitting, REO）。**DOC介于0-1之间，测量诊断结果在测试集上的单调性程度，越高越好；REO通常介于0-1之间，测量诊断结果可解释性过拟合程度，越低越好**。\n\n如Figure 5所示，ID-CDM无论在DOC还是REO上都达到了SOTA。此外，ID-CDM-nMono是去掉了单调性约束的ID-CDM，是用于验证单调性约束有效性的消融实验。实验结果表明，ID-CDM的诊断结果具有良好的可解释性，并且有效缓解了诊断模型中存在的可解释性过拟合问题。\n\n### 学习者得分预测（RQ3）\n\n![学习者得分预测结果](https://pic4.zhimg.com/80/v2-c563b5cf48364584838081b57826ae37.png)\n\n学习者得分预测既可以看作分类问题，也可以看作回归问题。因此我们使用Accuracy、F1 score、RMSE三个指标，全面评估答题得分预测的精度，以比较不同模型给出的诊断结果的准确性。由Figure 6可见，即便我们没有在得分预测精度方面为ID-CDM作任何增强，其预测精度相对于baseline中的SOTA仍然没有损失。这足以验证ID-CDM在诊断结果精准度方面的有效性。\n\n### 诊断结果聚类（RQ4）\n\n![诊断结果聚类结果](https://pic4.zhimg.com/80/v2-23ea2d3d0c3b8cc8c2e1877f0f468836.png)\n\n为探究诊断结果与答题得分表现之间的统计关联性，我们首先使用UMAP算法将高维的学习者能力降维至2维，再将每个学习者对应的点按照其答题得分率染色（得分率越高越偏蓝色，得分率越低越偏红色），再观察学习者能力点能否按照答题得分率很好地聚类。聚类效果越好，则诊断结果与答题表现之间的统计关联性越强，可解释性越好。\n\nFigure 7 展示了正文中呈现的初步结果。其中ID-CDM的诊断结果可视化呈现条带状，且条带的延伸方向与得分率的变化方向一致，因此能够很好地按答题得分率聚类学习者。NCDM和U-AutoRec（经典的encoder-decoder用户建模模型）聚类效果也尚可，但相比ID-CDM的结果更松散。DINA的可视化中，各种得分率的学习者点则完全混杂在一起，无法聚类。上述结果说明了ID-CDM的诊断结果与答题得分表现之间有较强的统计关联性。这可以从流形的角度解释，可留给读者自行想象。\n\n我们还在附录中进一步讨论了各种baseline对于学习者的聚类能力，以及ID-CDM的不同组件对其聚类能力的影响。我们主要阐述后者的直观结论：\n\n1. ID-CDM的诊断模块（新范式中的创新点）对于聚类的影响在于，其可以将聚类结果由圆形（如NCDM诊断结果可视化）变成条带形，延长条带的长度，在答题得分变化的“纵向”上增强诊断结果与之的统计关联性。\n2. ID-CDM的单调性约束对于聚类的影响在于，其可以缩短条带的宽度，在答题得分变化的“横向”上增强诊断结果与之的统计关联性（见ID-CDM-nMono诊断结果可视化）。换言之，具有相似答题得分率的学习者，也具有相似的诊断结果。这可以视作松弛版的可识别性。\n\n![附录 p1](https://pic4.zhimg.com/80/v2-f57f7cc791e5e0d53a2c95bfc11c444f.png)\n\n![附录 p2](https://pic4.zhimg.com/80/v2-29fe72bc28a3959fc92937d197a0c4f0.png)\n\n## 结论\n本文研究了基于认知诊断的学习者建模任务中普遍存在的不可识别性和可解释性过拟合问题，并提出了一个通用的可识别、可解释的认知诊断框架(ID-CDF)来解决这两个问题。具体来说，我们提出了一个新的答题响应-认知状态-答题响应(R-P-R)范式，从根本上解决这两个问题。基于此，我们提出了ID-CDF，它利用诊断模块从响应数据中获得可识别和可解释的诊断结果。然后，它使用预测模块对学习者和问题之间的复杂交互进行建模，以保证诊断结果的准确性。然后，我们提出ID-CDM作为ID-CDF的实现，以显示其可用性。最后，我们通过在四个真实数据集上的大量实验证明了ID-CDF的有效性。\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: decodeURI(window.location.pathname),\n            distractionFreeMode: true // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","source":"_posts/2024-02-01-idcd.md","raw":"---\ntitle: WWW 2024 | 重剑无锋：个性化学习者能力建模全新范式：通用的可识别、可解释的能力诊断框架\nmathjax: true\ncodeblock:\n  enable: true\n  show_result: true\ndate: 2024-02-01 11:04:58\ntags: \ncategories:\n---\n\n个性化学习者能力建模全新范式。\n\n<!--more-->\n\n![论文首页](https://pic4.zhimg.com/80/v2-ba1f68abd2b83f3f36024d5f9adadfdb.png)\n\n论文标题：Towards the Identifiability and Explainability for Personalized Learner Modeling: An Inductive Paradigm\n\n作者：Jiatong Li, Qi Liu, Fei Wang, Jiayu Liu, Zhenya Huang, Fangzhou Yao, Linbo Zhu, Yu Su\n\n作者单位：中国科学技术大学\n\n论文链接：https://arxiv.org/abs/2309.00300\n\n论文录用：The Web Conference 2024 Main Conference （Research Tracks）\n\n作者主页：https://cslijt.github.io/\n\n![基于认知诊断的学习者能力建模现状](https://pic4.zhimg.com/80/v2-0ee8897ec3d978569909d11d5f83ce50.png)\n\n## 论文摘要\n基于认知诊断(CD)的个性化学习者建模是许多网络学习服务的一项基础而重要的任务，它旨在通过从行为数据中诊断学习者的特征来建模学习者的认知状态。现有的认知诊断模型(CDMs)遵循认知状态-答题响应范式，将学习者认知状态和题目参数视为可训练的嵌入，并通过学习者得分预测来学习它们。然而，我们注意到这种范式不可避免地导致学习者建模的不可识别性，并导致可解释性过拟合问题，这不利于学习者认知状态的量化和网络学习服务的质量。为了解决这些问题，我们提出了一个可识别的认知诊断框架(ID-CDF)，该框架基于一种全新的答题响应-认知状态-答题响应范式，该范式受到编码器-解码器模型的启发。具体而言，我们首先设计了ID-CDF的诊断模块，该模块利用归纳学习消除模型优化中的参数随机性，以确保学习者能力建模结果的可识别性，并捕获总体响应数据分布与认知状态之间的单调性，以防止可解释性过拟合。接下来，我们提出了一个灵活的ID-CDF预测模块，以保证诊断结果的准确性。我们进一步提出了一个ID-CDF的实现，即ID-CDM，以说明其可用性。在四个具有不同特征的真实数据集上进行的大量实验表明，ID-CDF可以有效解决上述研究问题，同时不失诊断结果准确性。\n\n## 背景介绍\n在各种Web学习应用（如在线学习平台、在线自适应测试）中，基于认知诊断（cognitive diagnosis, CD）的个性化学习者能力建模，是一项重要的基础任务。该任务的目标是从学习者的历史行为数据（绝大部分情况下，是答题得分记录）中诊断出学习者的认知状态（如对学科知识点的掌握水平）。诊断结果作为认知诊断模型（cognitive diagnosis model, CDM）的输出，一方面可以直接提供给学习者用户，作为其近期学习状态的反馈，另一方面可以作为用户特征（embedding），提供给下游任务挖掘进一步用途，如计算自适应测试（computerized adaptive testing, CAT）、习题推荐（item recommendation）等。需要注意的是，这里的“学习者”是指广义上的所有需要通过学习和测试过程积累知识的个体（如职业资格考试备考者、大学生），不仅仅是K-12教育中的学生。\n\n![传统范式与本文提出的新范式对比](https://pic4.zhimg.com/80/v2-f209050626df0d396f6839221005872c.png)\n\n## 研究动机\n**从研究现状看，**现有的基于深度学习的学习者能力建模认知诊断模型（cdm）都遵循“能力水平->响应”范式（proficiency-response paradigm），即把学习者认知状态以及试题特征视作可以从数据中学习的embedding，并通过预测答题得分->计算损失函数->反向传播的方式来优化embedding，从而得到预测结果。这一范式与推荐系统中的双塔模型极为类似。即便是不基于深度学习的传统认知诊断模型如DINA（Deterministic Input, Noisy \"And\" gate model），“能力水平->响应结果”这一逻辑依然保持。倒不如说，基于深度学习的CDM的proficiency-response paradigm，就是从传统CDM这里一脉相承的。前者通过神经网络强大的函数拟合能力，能够准确地预测学习者在试题上的答题得分。**然而，这一范式容易导致两个难以解决的问题，一是无法保持诊断结果的可识别性，二是导致诊断结果可解释性的过拟合。**\n\n其中，可识别性是指，给定交互函数（CDM的答题得分预测函数）$f:\\Theta\\times\\Psi\\to \\{0,1\\}$，不同的学习者认知状态$\\theta, \\theta' \\in\\Theta$应当导致不同的答题得分分布。换言之，取其等价的逆否命题，也即 **“如果有两名学习者，他们的答题得分分布一模一样，那么在没有其他先验信息的前提下，这两名学习者的认知状态应当是相同的”**。例如在Figure 1中，Adam和Paul的得分分布一模一样（答对e1,e2；答错e3,e4），那么他们本就应当具有相同的认知状态。听起来很符合直觉也很合理对不对？但这样一个重要的性质，却没有任何一个现有的CDM能够保持。这是由传统范式在参数优化过程天然存在的随机性导致的，而且难以消除。在教育测量学界，以Xu et al. 为代表，已经有一些关于传统模型DINA的可识别性条件的理论研究。但相关性质要求试题Q矩阵的特定形式，并且相比于可识别性的实现，更加关注其理论存在性，在现实中仍然难以实现。而在计算机领域，关于个性化学习者能力建模结果可识别性的研究，仍然是一片空白。\n\n另一个问题，可解释性过拟合，是指诊断结果只在训练数据上有较好的可解释性，在测试数据上却难以解释。这一现象是我们首先通过实验观测到的。这里的“可解释性”是指教育测量层面的可解释，即诊断结果能够反映学习者真实认知状态的程度，需要通过“单调性假设”来维持，即学习者诊断结果随相关习题得分单调递增。可解释性对于学习者能力建模是至关重要的，毕竟诊断结果会直接输出给学习者作为其学习情况反馈，需要令其信服，不像推荐系统中服务提供方只关注推荐效果，如CTR。然而传统范式中，学习者能力是从训练集得分中一个一个“优化”出来的，天然地会导致其单调性指标在训练集上很高（虚高），在验证集和测试集上很拉跨。相关研究中的可解释性指标也都是在训练集上计算的。因为人们不需要通过可解释性“预测”什么，只关注其“在已观测的数据上是否分布合理”。然而，这与可解释性的初衷，即“由有限的已知数据推断隐藏在背后的真实能力”，是相悖的。\n\n\n**从研究目标看，**我们认为学习者能力建模这一任务本身，更应该关注**由数据到认知状态的诊断过程**，而非**由认知状态到数据的预测过程**。进一步讲，**一个具有实际应用价值的学习者能力建模服务，应当更加关注诊断结果本身的质量，而非答题预测精度，并且整个诊断过程是直接的、端到端的**。当一个在线学习者用户想测评其认知状态时，他只需要输入答题数据，得到输出的诊断结果。不幸的是，现有的CDM都做不到这一点。现有的CDM由于是基于参数优化来估计学习者能力结果的，因此每当一个学习者用户想要测评认知状态时，他必须将自己的答题数据放入全量答题数据中（如果之前有10,000名用户，那么现在就有10,001个用户），重新训练一遍整个模型。注意，冻结其他参数而只训练自己的能力参数这是不可取的，因为容易导致严重的过拟合，而且诊断结果完全不可识别。因此，在实际应用中，现有的CDM也是难以部署的，更多停留在实验室阶段。\n\n**因此，为了解决上述的棘手问题，我们首先开创了一种全新的学习者能力建模范式，Proficiency-response-proficiency paradigm**，如Figure 3所示。基于这一新范式，**我们提出了一种可识别的认知诊断框架ID-CDF**，如Figure 4所示。在这一框架中，学习者认知状态和试题特征不再通过参数优化学习得到，而是通过诊断模块Diagnostic Module一步得到。\n\n![ID-CDF框架图](https://pic4.zhimg.com/80/v2-40e4246b15789a527485beb03f6cc0d4.png)\n\n## ID-CDF：通用的可识别认知诊断框架\n\n如 Figure 4 所示，ID-CDF这一框架包含两大模块：诊断模块（Diagnostic Module）和预测模块（Predictive Module）。\n\n### 诊断模块（Diagnostic Module）\n**诊断模块的目的是通过归纳式学习（inductive learning），彻底解决现有学习者能力建模方法的不可识别问题，并通过额外引入的约束机制（可定制，可拓展）来满足诊断结果的可解释性，并且归纳式学习本身能够有效缓解可解释性过拟合问题。**具体而言，在这一模块中，学习者和试题的答题数据（本文实现中为0-1的答题得分）首先编码为向量。设有N名学生和M道试题，那么每一名学生的答题数据向量是M维的，每一维度表示在该题的得分（1 = 答对；0 = 未做； -1 = 答错）；类似地，每一道试题的答题数据向量是N维的。上述编码方式可如下公式所示形式化地表示：\n\n![可观测量编码](https://pic4.zhimg.com/80/v2-3639e3812a95c4f70b30276b61dbe7d4.png)\n\n接下来，诊断模块通过如下形式的诊断函数从答题数据中（归纳式地）直接计算出学习者和试题的诊断结果。其中$\\theta$表示学习者的能力，$\\psi$表示试题的隐含属性如难度、区分度；$\\omega$表示诊断函数的参数。\n\n![诊断函数](https://pic4.zhimg.com/80/v2-ffc5b300ba0cd4d60cad805b005e532c.png)\n\n$\\omega$的存在是为说明，**诊断函数是可以从数据中学习的**。但是，诊断函数千千万万，究竟哪一个是合理的？尤其是回到本文的研究问题：怎样保证诊断结果是可识别、可解释的？这里我们就需要引入诊断函数的可识别性条件和单调性条件：\n- **可识别性条件（Identifiability condition）：** 一个诊断函数满足可识别性条件，当且仅当诊断结果是完全由可观测量决定的。换言之，该函数的计算过程不允许存在任何可能导致诊断结果改变的外部的不可观测量。\n  - 这一条件可以概括为，“所见即所得”。例如，如果学习者答题数据中仅有答题得分，那么可识别的诊断函数必须保证诊断结果是完全由答题得分决定的，不能存在随机因素或不可见的学习者个人因素（如学习者ID）。\n- **单调性条件（Monotonicity condition）：** 一个学习者诊断函数满足单调性条件，当且仅当诊断结果相对于输入的任意一个维度是单调递增的。\n  - 单调性条件源于心理测量学中基础但重要的的“单调性假设”，即学习者的**真实能力水平**是随其正答概率单调递增的。由于学习者的真实能力是未知的、不可观测的，因此在单调性假设成立的前提下，通过单调性条件来保证估计出的学习者能力诊断结果的可解释性。\n\n上述两个条件是解决本文研究问题的钥匙，也是ID-CDF对诊断函数设计的唯二约束。在满足上述两个条件的前提下，ID-CDF允许并鼓励使用者定义自己的诊断函数，以满足不同场景的需求。本文中为验证这一模块的准确性，使用了全连接神经网络来定义。使用者也可考虑使用CNN、RNN或其他定义方式，设计符合自己需求的诊断函数。\n\n\n### 预测模块（Predictive Module）\n**预测模块的目的是通过利用诊断结果重建可观测量（答题数据），以保证诊断结果的准确性及其在下游任务中的潜力**。ID-CDF的诊断模块就是目前已有的大多数认知诊断模型（CDM）的本体。例如DINA、IRT、MIRT、NCDM，均与ID-CDF的预测模块同构。在ID-CDF中，预测模块的本质是一个交互函数（interaction function），该函数通过模拟学习者调动自身认知状态以解决题目的过程，从诊断结果中重建答题数据。如下所示：\n\n![交互函数](https://pic4.zhimg.com/80/v2-eca255d52feca490d7279659f3621227.png)\n\n其中$q_j$表示试题$j$的Q向量，用来指示试题与知识点的对应关系。$\\odot$是逐元素乘法，意思是我们只关注所有知识点中那些被试题考察的知识点。$\\omega$表示交互函数的隐参数，可以在拟合数据的过程中学习。\n\n### 损失函数\n由于答题数据的重建结果是概率化的，因此使用交叉熵作为损失函数：\n![损失函数](https://pic4.zhimg.com/80/v2-c5612bf3c79bb312b6c7e0b2d6a85d67.png)\n\n## ID-CDM：ID-CDF的一种简洁实现\nID-CDM的提出目的，是作为ID-CDF的一种简洁实现，在实验中验证ID-CDF的有效性。\n\n### 诊断模块的实现\n在ID-CDM中，学习者诊断函数通过一个单调双层全连接神经网络实现：\n\n![学习者诊断函数](https://pic4.zhimg.com/80/v2-008cce8d26bba86cf638788fe022b150.png)\n\n同时，试题诊断函数通过一个三层全连接神经网络实现：\n\n![试题诊断函数](https://pic4.zhimg.com/80/v2-c8154977f8096b8b39ef4005eb715fe0.png)\n\n### 预测模块的实现\n\nID-CDM中，预测模块首先通过一个降维操作，将高维稀疏的诊断结果（注意，只关注那些被试题考察的知识点维度）压缩为低维高信息密度的诊断结果隐向量：\n\n![压缩操作](https://pic4.zhimg.com/80/v2-a34b5404ced296f220eaca2d64e880c7.png)\n\n然后，再通过一个三层神经网络重建可观测量（答题得分）：\n\n![重建答题得分](https://pic4.zhimg.com/80/v2-0917427a314bd4a6645432258e1fa8e6.png)\n\n以上就是ID-CDM的实现。\n\n## 实验部分\n### 研究问题\n- RQ1：ID-CDM诊断结果的可识别性如何？\n- RQ2：ID-CDM诊断结果的可解释性如何？\n- RQ3：ID-CDM诊断结果能否精准反映学习者的真实答题表现？\n- RQ4：（由不同诊断模型给出的）学习者的诊断结果与其答题表现有何统计关联性？\n\n为回答上述问题，我们设计了四个不同的实验，在四个具有不同特征的数据集上验证ID-CDM的有效性。数据集信息可见于[原始论文](https://arxiv.org/pdf/2309.00300.pdf)。\n\n### 可识别性评估（RQ1）\n\n![可识别性评估结果](https://pic4.zhimg.com/80/v2-18c908dcbed6fb8bd61315e3c166042f.png)\n\n针对这一问题，我们提出一种名为可识别性得分（Identifiability Score, IDS）的评价指标。该指标在增强数据集上检测具有相同可观测量的学习者或试题的诊断结果相似性以评价可识别性。IDS介于0和1之间，越接近1，则诊断结果的平均可识别性越强。**当且仅当IDS = 1.0，全体诊断结果是严格可识别的。**\n\n如Table 1所示，我们计算了ID-CDM和诊断模型baseline各自的IDS。ID-CDM的诊断结果是所有结果中唯一可识别的。此外，ID-CDM-nEnc表示去掉诊断模块的ID-CDM，因此牺牲了可识别性条件，是用于验证可识别性条件有效性的消融实验。NCDM-Const表示使用常数初始化NCDM的诊断结果，以观察这种经典的去随机化方式能否解决传统CDM的不可识别问题。结果表明，虽然NCDM-Const的IDS相对于NCDM有一定提升，但仍然未能彻底解决不可识别问题。因此，在上述方法中，ID-CDM是唯一能够彻底解决不可识别问题的方案。\n\n### 可解释性评估（RQ2）\n\n![可解释性评估结果](https://pic4.zhimg.com/80/v2-869aee8ae3e3378f05245bf6a132b061.png)\n\n针对可解释性评估问题，我们提出两个指标以从不同角度测量诊断的可解释性：一致性程度（Degreement of Consistency, DOC）和可解释过拟合率（Rate of Explainability Overfitting, REO）。**DOC介于0-1之间，测量诊断结果在测试集上的单调性程度，越高越好；REO通常介于0-1之间，测量诊断结果可解释性过拟合程度，越低越好**。\n\n如Figure 5所示，ID-CDM无论在DOC还是REO上都达到了SOTA。此外，ID-CDM-nMono是去掉了单调性约束的ID-CDM，是用于验证单调性约束有效性的消融实验。实验结果表明，ID-CDM的诊断结果具有良好的可解释性，并且有效缓解了诊断模型中存在的可解释性过拟合问题。\n\n### 学习者得分预测（RQ3）\n\n![学习者得分预测结果](https://pic4.zhimg.com/80/v2-c563b5cf48364584838081b57826ae37.png)\n\n学习者得分预测既可以看作分类问题，也可以看作回归问题。因此我们使用Accuracy、F1 score、RMSE三个指标，全面评估答题得分预测的精度，以比较不同模型给出的诊断结果的准确性。由Figure 6可见，即便我们没有在得分预测精度方面为ID-CDM作任何增强，其预测精度相对于baseline中的SOTA仍然没有损失。这足以验证ID-CDM在诊断结果精准度方面的有效性。\n\n### 诊断结果聚类（RQ4）\n\n![诊断结果聚类结果](https://pic4.zhimg.com/80/v2-23ea2d3d0c3b8cc8c2e1877f0f468836.png)\n\n为探究诊断结果与答题得分表现之间的统计关联性，我们首先使用UMAP算法将高维的学习者能力降维至2维，再将每个学习者对应的点按照其答题得分率染色（得分率越高越偏蓝色，得分率越低越偏红色），再观察学习者能力点能否按照答题得分率很好地聚类。聚类效果越好，则诊断结果与答题表现之间的统计关联性越强，可解释性越好。\n\nFigure 7 展示了正文中呈现的初步结果。其中ID-CDM的诊断结果可视化呈现条带状，且条带的延伸方向与得分率的变化方向一致，因此能够很好地按答题得分率聚类学习者。NCDM和U-AutoRec（经典的encoder-decoder用户建模模型）聚类效果也尚可，但相比ID-CDM的结果更松散。DINA的可视化中，各种得分率的学习者点则完全混杂在一起，无法聚类。上述结果说明了ID-CDM的诊断结果与答题得分表现之间有较强的统计关联性。这可以从流形的角度解释，可留给读者自行想象。\n\n我们还在附录中进一步讨论了各种baseline对于学习者的聚类能力，以及ID-CDM的不同组件对其聚类能力的影响。我们主要阐述后者的直观结论：\n\n1. ID-CDM的诊断模块（新范式中的创新点）对于聚类的影响在于，其可以将聚类结果由圆形（如NCDM诊断结果可视化）变成条带形，延长条带的长度，在答题得分变化的“纵向”上增强诊断结果与之的统计关联性。\n2. ID-CDM的单调性约束对于聚类的影响在于，其可以缩短条带的宽度，在答题得分变化的“横向”上增强诊断结果与之的统计关联性（见ID-CDM-nMono诊断结果可视化）。换言之，具有相似答题得分率的学习者，也具有相似的诊断结果。这可以视作松弛版的可识别性。\n\n![附录 p1](https://pic4.zhimg.com/80/v2-f57f7cc791e5e0d53a2c95bfc11c444f.png)\n\n![附录 p2](https://pic4.zhimg.com/80/v2-29fe72bc28a3959fc92937d197a0c4f0.png)\n\n## 结论\n本文研究了基于认知诊断的学习者建模任务中普遍存在的不可识别性和可解释性过拟合问题，并提出了一个通用的可识别、可解释的认知诊断框架(ID-CDF)来解决这两个问题。具体来说，我们提出了一个新的答题响应-认知状态-答题响应(R-P-R)范式，从根本上解决这两个问题。基于此，我们提出了ID-CDF，它利用诊断模块从响应数据中获得可识别和可解释的诊断结果。然后，它使用预测模块对学习者和问题之间的复杂交互进行建模，以保证诊断结果的准确性。然后，我们提出ID-CDM作为ID-CDF的实现，以显示其可用性。最后，我们通过在四个真实数据集上的大量实验证明了ID-CDF的有效性。\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: decodeURI(window.location.pathname),\n            distractionFreeMode: true // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","slug":"2024-02-01-idcd","published":1,"updated":"2024-03-08T08:26:03.055Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cludw9naj005f9wv95egb2gjb","content":"<p>个性化学习者能力建模全新范式。</p>\n<span id=\"more\"></span>\n<p><img src=\"https://pic4.zhimg.com/80/v2-ba1f68abd2b83f3f36024d5f9adadfdb.png\" alt=\"论文首页\"></p>\n<p>论文标题：Towards the Identifiability and Explainability for Personalized Learner Modeling: An Inductive Paradigm</p>\n<p>作者：Jiatong Li, Qi Liu, Fei Wang, Jiayu Liu, Zhenya Huang, Fangzhou Yao, Linbo Zhu, Yu Su</p>\n<p>作者单位：中国科学技术大学</p>\n<p>论文链接：<a href=\"https://arxiv.org/abs/2309.00300\">https://arxiv.org/abs/2309.00300</a></p>\n<p>论文录用：The Web Conference 2024 Main Conference （Research Tracks）</p>\n<p>作者主页：<a href=\"https://cslijt.github.io/\">https://cslijt.github.io/</a></p>\n<p><img src=\"https://pic4.zhimg.com/80/v2-0ee8897ec3d978569909d11d5f83ce50.png\" alt=\"基于认知诊断的学习者能力建模现状\"></p>\n<h2 id=\"论文摘要\"><a href=\"#论文摘要\" class=\"headerlink\" title=\"论文摘要\"></a>论文摘要</h2><p>基于认知诊断(CD)的个性化学习者建模是许多网络学习服务的一项基础而重要的任务，它旨在通过从行为数据中诊断学习者的特征来建模学习者的认知状态。现有的认知诊断模型(CDMs)遵循认知状态-答题响应范式，将学习者认知状态和题目参数视为可训练的嵌入，并通过学习者得分预测来学习它们。然而，我们注意到这种范式不可避免地导致学习者建模的不可识别性，并导致可解释性过拟合问题，这不利于学习者认知状态的量化和网络学习服务的质量。为了解决这些问题，我们提出了一个可识别的认知诊断框架(ID-CDF)，该框架基于一种全新的答题响应-认知状态-答题响应范式，该范式受到编码器-解码器模型的启发。具体而言，我们首先设计了ID-CDF的诊断模块，该模块利用归纳学习消除模型优化中的参数随机性，以确保学习者能力建模结果的可识别性，并捕获总体响应数据分布与认知状态之间的单调性，以防止可解释性过拟合。接下来，我们提出了一个灵活的ID-CDF预测模块，以保证诊断结果的准确性。我们进一步提出了一个ID-CDF的实现，即ID-CDM，以说明其可用性。在四个具有不同特征的真实数据集上进行的大量实验表明，ID-CDF可以有效解决上述研究问题，同时不失诊断结果准确性。</p>\n<h2 id=\"背景介绍\"><a href=\"#背景介绍\" class=\"headerlink\" title=\"背景介绍\"></a>背景介绍</h2><p>在各种Web学习应用（如在线学习平台、在线自适应测试）中，基于认知诊断（cognitive diagnosis, CD）的个性化学习者能力建模，是一项重要的基础任务。该任务的目标是从学习者的历史行为数据（绝大部分情况下，是答题得分记录）中诊断出学习者的认知状态（如对学科知识点的掌握水平）。诊断结果作为认知诊断模型（cognitive diagnosis model, CDM）的输出，一方面可以直接提供给学习者用户，作为其近期学习状态的反馈，另一方面可以作为用户特征（embedding），提供给下游任务挖掘进一步用途，如计算自适应测试（computerized adaptive testing, CAT）、习题推荐（item recommendation）等。需要注意的是，这里的“学习者”是指广义上的所有需要通过学习和测试过程积累知识的个体（如职业资格考试备考者、大学生），不仅仅是K-12教育中的学生。</p>\n<p><img src=\"https://pic4.zhimg.com/80/v2-f209050626df0d396f6839221005872c.png\" alt=\"传统范式与本文提出的新范式对比\"></p>\n<h2 id=\"研究动机\"><a href=\"#研究动机\" class=\"headerlink\" title=\"研究动机\"></a>研究动机</h2><p><strong>从研究现状看，</strong>现有的基于深度学习的学习者能力建模认知诊断模型（cdm）都遵循“能力水平-&gt;响应”范式（proficiency-response paradigm），即把学习者认知状态以及试题特征视作可以从数据中学习的embedding，并通过预测答题得分-&gt;计算损失函数-&gt;反向传播的方式来优化embedding，从而得到预测结果。这一范式与推荐系统中的双塔模型极为类似。即便是不基于深度学习的传统认知诊断模型如DINA（Deterministic Input, Noisy “And” gate model），“能力水平-&gt;响应结果”这一逻辑依然保持。倒不如说，基于深度学习的CDM的proficiency-response paradigm，就是从传统CDM这里一脉相承的。前者通过神经网络强大的函数拟合能力，能够准确地预测学习者在试题上的答题得分。<strong>然而，这一范式容易导致两个难以解决的问题，一是无法保持诊断结果的可识别性，二是导致诊断结果可解释性的过拟合。</strong></p>\n<p>其中，可识别性是指，给定交互函数（CDM的答题得分预测函数）<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"18.467ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 8162.2 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D453\" d=\"M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(827.8,0)\"><path data-c=\"3A\" d=\"M78 370Q78 394 95 412T138 430Q162 430 180 414T199 371Q199 346 182 328T139 310T96 327T78 370ZM78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1383.6,0)\"><path data-c=\"398\" d=\"M56 340Q56 423 86 494T164 610T270 680T388 705Q521 705 621 601T722 341Q722 260 693 191T617 75T510 4T388 -22T267 3T160 74T85 189T56 340ZM610 339Q610 428 590 495T535 598T463 651T384 668Q332 668 289 638T221 566Q168 485 168 339Q168 274 176 235Q189 158 228 105T324 28Q356 16 388 16Q415 16 442 24T501 54T555 111T594 205T610 339ZM223 263V422H263V388H514V422H554V263H514V297H263V263H223Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2383.8,0)\"><path data-c=\"D7\" d=\"M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3384,0)\"><path data-c=\"3A8\" d=\"M340 622Q338 623 335 625T331 629T325 631T314 634T298 635T274 636T239 637H212V683H224Q248 680 389 680T554 683H566V637H539Q479 637 464 635T439 622L438 407Q438 192 439 192Q443 193 449 195T474 207T507 232T536 276T557 344Q560 365 562 417T573 493Q587 536 620 544Q627 546 671 546H715L722 540V515Q714 509 708 509Q680 505 671 476T658 392T644 307Q599 177 451 153L438 151V106L439 61Q446 54 451 52T476 48T539 46H566V0H554Q530 3 389 3T224 0H212V46H239Q259 46 273 46T298 47T314 48T325 51T331 54T335 57T340 61V151Q126 178 117 406Q115 503 69 509Q55 509 55 526Q55 541 59 543T86 546H107H120Q150 546 161 543T184 528Q198 514 204 493Q212 472 213 420T226 316T272 230Q287 216 303 207T330 194L339 192Q340 192 340 407V622Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4439.8,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(5717.6,0)\"><path data-c=\"7B\" d=\"M434 -231Q434 -244 428 -250H410Q281 -250 230 -184Q225 -177 222 -172T217 -161T213 -148T211 -133T210 -111T209 -84T209 -47T209 0Q209 21 209 53Q208 142 204 153Q203 154 203 155Q189 191 153 211T82 231Q71 231 68 234T65 250T68 266T82 269Q116 269 152 289T203 345Q208 356 208 377T209 529V579Q209 634 215 656T244 698Q270 724 324 740Q361 748 377 749Q379 749 390 749T408 750H428Q434 744 434 732Q434 719 431 716Q429 713 415 713Q362 710 332 689T296 647Q291 634 291 499V417Q291 370 288 353T271 314Q240 271 184 255L170 250L184 245Q202 239 220 230T262 196T290 137Q291 131 291 1Q291 -134 296 -147Q306 -174 339 -192T415 -213Q429 -213 431 -216Q434 -219 434 -231Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(6217.6,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6717.6,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(7162.2,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(7662.2,0)\"><path data-c=\"7D\" d=\"M65 731Q65 745 68 747T88 750Q171 750 216 725T279 670Q288 649 289 635T291 501Q292 362 293 357Q306 312 345 291T417 269Q428 269 431 266T434 250T431 234T417 231Q380 231 345 210T298 157Q293 143 292 121T291 -28V-79Q291 -134 285 -156T256 -198Q202 -250 89 -250Q71 -250 68 -247T65 -230Q65 -224 65 -223T66 -218T69 -214T77 -213Q91 -213 108 -210T146 -200T183 -177T207 -139Q208 -134 209 3L210 139Q223 196 280 230Q315 247 330 250Q305 257 280 270Q225 304 212 352L210 362L209 498Q208 635 207 640Q195 680 154 696T77 713Q68 713 67 716T65 731Z\"></path></g></g></g></svg></mjx-container>，不同的学习者认知状态<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.439ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"8.282ex\" height=\"2.156ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -759 3660.7 953\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D703\" d=\"M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(469,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"msup\" transform=\"translate(913.7,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D703\" d=\"M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(502,363) scale(0.707)\"><path data-c=\"2032\" d=\"M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(1937.9,0)\"><path data-c=\"2208\" d=\"M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2882.7,0)\"><path data-c=\"398\" d=\"M56 340Q56 423 86 494T164 610T270 680T388 705Q521 705 621 601T722 341Q722 260 693 191T617 75T510 4T388 -22T267 3T160 74T85 189T56 340ZM610 339Q610 428 590 495T535 598T463 651T384 668Q332 668 289 638T221 566Q168 485 168 339Q168 274 176 235Q189 158 228 105T324 28Q356 16 388 16Q415 16 442 24T501 54T555 111T594 205T610 339ZM223 263V422H263V388H514V422H554V263H514V297H263V263H223Z\"></path></g></g></g></svg></mjx-container>应当导致不同的答题得分分布。换言之，取其等价的逆否命题，也即 <strong>“如果有两名学习者，他们的答题得分分布一模一样，那么在没有其他先验信息的前提下，这两名学习者的认知状态应当是相同的”</strong>。例如在Figure 1中，Adam和Paul的得分分布一模一样（答对e1,e2；答错e3,e4），那么他们本就应当具有相同的认知状态。听起来很符合直觉也很合理对不对？但这样一个重要的性质，却没有任何一个现有的CDM能够保持。这是由传统范式在参数优化过程天然存在的随机性导致的，而且难以消除。在教育测量学界，以Xu et al. 为代表，已经有一些关于传统模型DINA的可识别性条件的理论研究。但相关性质要求试题Q矩阵的特定形式，并且相比于可识别性的实现，更加关注其理论存在性，在现实中仍然难以实现。而在计算机领域，关于个性化学习者能力建模结果可识别性的研究，仍然是一片空白。</p>\n<p>另一个问题，可解释性过拟合，是指诊断结果只在训练数据上有较好的可解释性，在测试数据上却难以解释。这一现象是我们首先通过实验观测到的。这里的“可解释性”是指教育测量层面的可解释，即诊断结果能够反映学习者真实认知状态的程度，需要通过“单调性假设”来维持，即学习者诊断结果随相关习题得分单调递增。可解释性对于学习者能力建模是至关重要的，毕竟诊断结果会直接输出给学习者作为其学习情况反馈，需要令其信服，不像推荐系统中服务提供方只关注推荐效果，如CTR。然而传统范式中，学习者能力是从训练集得分中一个一个“优化”出来的，天然地会导致其单调性指标在训练集上很高（虚高），在验证集和测试集上很拉跨。相关研究中的可解释性指标也都是在训练集上计算的。因为人们不需要通过可解释性“预测”什么，只关注其“在已观测的数据上是否分布合理”。然而，这与可解释性的初衷，即“由有限的已知数据推断隐藏在背后的真实能力”，是相悖的。</p>\n<p><strong>从研究目标看，</strong>我们认为学习者能力建模这一任务本身，更应该关注<strong>由数据到认知状态的诊断过程</strong>，而非<strong>由认知状态到数据的预测过程</strong>。进一步讲，<strong>一个具有实际应用价值的学习者能力建模服务，应当更加关注诊断结果本身的质量，而非答题预测精度，并且整个诊断过程是直接的、端到端的</strong>。当一个在线学习者用户想测评其认知状态时，他只需要输入答题数据，得到输出的诊断结果。不幸的是，现有的CDM都做不到这一点。现有的CDM由于是基于参数优化来估计学习者能力结果的，因此每当一个学习者用户想要测评认知状态时，他必须将自己的答题数据放入全量答题数据中（如果之前有10,000名用户，那么现在就有10,001个用户），重新训练一遍整个模型。注意，冻结其他参数而只训练自己的能力参数这是不可取的，因为容易导致严重的过拟合，而且诊断结果完全不可识别。因此，在实际应用中，现有的CDM也是难以部署的，更多停留在实验室阶段。</p>\n<p><strong>因此，为了解决上述的棘手问题，我们首先开创了一种全新的学习者能力建模范式，Proficiency-response-proficiency paradigm</strong>，如Figure 3所示。基于这一新范式，<strong>我们提出了一种可识别的认知诊断框架ID-CDF</strong>，如Figure 4所示。在这一框架中，学习者认知状态和试题特征不再通过参数优化学习得到，而是通过诊断模块Diagnostic Module一步得到。</p>\n<p><img src=\"https://pic4.zhimg.com/80/v2-40e4246b15789a527485beb03f6cc0d4.png\" alt=\"ID-CDF框架图\"></p>\n<h2 id=\"ID-CDF：通用的可识别认知诊断框架\"><a href=\"#ID-CDF：通用的可识别认知诊断框架\" class=\"headerlink\" title=\"ID-CDF：通用的可识别认知诊断框架\"></a>ID-CDF：通用的可识别认知诊断框架</h2><p>如 Figure 4 所示，ID-CDF这一框架包含两大模块：诊断模块（Diagnostic Module）和预测模块（Predictive Module）。</p>\n<h3 id=\"诊断模块（Diagnostic-Module）\"><a href=\"#诊断模块（Diagnostic-Module）\" class=\"headerlink\" title=\"诊断模块（Diagnostic Module）\"></a>诊断模块（Diagnostic Module）</h3><p><strong>诊断模块的目的是通过归纳式学习（inductive learning），彻底解决现有学习者能力建模方法的不可识别问题，并通过额外引入的约束机制（可定制，可拓展）来满足诊断结果的可解释性，并且归纳式学习本身能够有效缓解可解释性过拟合问题。</strong>具体而言，在这一模块中，学习者和试题的答题数据（本文实现中为0-1的答题得分）首先编码为向量。设有N名学生和M道试题，那么每一名学生的答题数据向量是M维的，每一维度表示在该题的得分（1 = 答对；0 = 未做； -1 = 答错）；类似地，每一道试题的答题数据向量是N维的。上述编码方式可如下公式所示形式化地表示：</p>\n<p><img src=\"https://pic4.zhimg.com/80/v2-3639e3812a95c4f70b30276b61dbe7d4.png\" alt=\"可观测量编码\"></p>\n<p>接下来，诊断模块通过如下形式的诊断函数从答题数据中（归纳式地）直接计算出学习者和试题的诊断结果。其中<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.023ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.061ex\" height=\"1.618ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -705 469 715\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D703\" d=\"M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z\"></path></g></g></g></svg></mjx-container>表示学习者的能力，<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.464ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.473ex\" height=\"2.034ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -694 651 899\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D713\" d=\"M161 441Q202 441 226 417T250 358Q250 338 218 252T187 127Q190 85 214 61Q235 43 257 37Q275 29 288 29H289L371 360Q455 691 456 692Q459 694 472 694Q492 694 492 687Q492 678 411 356Q329 28 329 27T335 26Q421 26 498 114T576 278Q576 302 568 319T550 343T532 361T524 384Q524 405 541 424T583 443Q602 443 618 425T634 366Q634 337 623 288T605 220Q573 125 492 57T329 -11H319L296 -104Q272 -198 272 -199Q270 -205 252 -205H239Q233 -199 233 -197Q233 -192 256 -102T279 -9Q272 -8 265 -8Q106 14 106 139Q106 174 139 264T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 299 34 333T82 404T161 441Z\"></path></g></g></g></svg></mjx-container>表示试题的隐含属性如难度、区分度；<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.407ex\" height=\"1.027ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -443 622 454\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D714\" d=\"M495 384Q495 406 514 424T555 443Q574 443 589 425T604 364Q604 334 592 278T555 155T483 38T377 -11Q297 -11 267 66Q266 68 260 61Q201 -11 125 -11Q15 -11 15 139Q15 230 56 325T123 434Q135 441 147 436Q160 429 160 418Q160 406 140 379T94 306T62 208Q61 202 61 187Q61 124 85 100T143 76Q201 76 245 129L253 137V156Q258 297 317 297Q348 297 348 261Q348 243 338 213T318 158L308 135Q309 133 310 129T318 115T334 97T358 83T393 76Q456 76 501 148T546 274Q546 305 533 325T508 357T495 384Z\"></path></g></g></g></svg></mjx-container>表示诊断函数的参数。</p>\n<p><img src=\"https://pic4.zhimg.com/80/v2-ffc5b300ba0cd4d60cad805b005e532c.png\" alt=\"诊断函数\"></p>\n<p><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.407ex\" height=\"1.027ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -443 622 454\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D714\" d=\"M495 384Q495 406 514 424T555 443Q574 443 589 425T604 364Q604 334 592 278T555 155T483 38T377 -11Q297 -11 267 66Q266 68 260 61Q201 -11 125 -11Q15 -11 15 139Q15 230 56 325T123 434Q135 441 147 436Q160 429 160 418Q160 406 140 379T94 306T62 208Q61 202 61 187Q61 124 85 100T143 76Q201 76 245 129L253 137V156Q258 297 317 297Q348 297 348 261Q348 243 338 213T318 158L308 135Q309 133 310 129T318 115T334 97T358 83T393 76Q456 76 501 148T546 274Q546 305 533 325T508 357T495 384Z\"></path></g></g></g></svg></mjx-container>的存在是为说明，<strong>诊断函数是可以从数据中学习的</strong>。但是，诊断函数千千万万，究竟哪一个是合理的？尤其是回到本文的研究问题：怎样保证诊断结果是可识别、可解释的？这里我们就需要引入诊断函数的可识别性条件和单调性条件：</p>\n<ul>\n<li><strong>可识别性条件（Identifiability condition）：</strong> 一个诊断函数满足可识别性条件，当且仅当诊断结果是完全由可观测量决定的。换言之，该函数的计算过程不允许存在任何可能导致诊断结果改变的外部的不可观测量。<ul>\n<li>这一条件可以概括为，“所见即所得”。例如，如果学习者答题数据中仅有答题得分，那么可识别的诊断函数必须保证诊断结果是完全由答题得分决定的，不能存在随机因素或不可见的学习者个人因素（如学习者ID）。</li>\n</ul>\n</li>\n<li><strong>单调性条件（Monotonicity condition）：</strong> 一个学习者诊断函数满足单调性条件，当且仅当诊断结果相对于输入的任意一个维度是单调递增的。<ul>\n<li>单调性条件源于心理测量学中基础但重要的的“单调性假设”，即学习者的<strong>真实能力水平</strong>是随其正答概率单调递增的。由于学习者的真实能力是未知的、不可观测的，因此在单调性假设成立的前提下，通过单调性条件来保证估计出的学习者能力诊断结果的可解释性。</li>\n</ul>\n</li>\n</ul>\n<p>上述两个条件是解决本文研究问题的钥匙，也是ID-CDF对诊断函数设计的唯二约束。在满足上述两个条件的前提下，ID-CDF允许并鼓励使用者定义自己的诊断函数，以满足不同场景的需求。本文中为验证这一模块的准确性，使用了全连接神经网络来定义。使用者也可考虑使用CNN、RNN或其他定义方式，设计符合自己需求的诊断函数。</p>\n<h3 id=\"预测模块（Predictive-Module）\"><a href=\"#预测模块（Predictive-Module）\" class=\"headerlink\" title=\"预测模块（Predictive Module）\"></a>预测模块（Predictive Module）</h3><p><strong>预测模块的目的是通过利用诊断结果重建可观测量（答题数据），以保证诊断结果的准确性及其在下游任务中的潜力</strong>。ID-CDF的诊断模块就是目前已有的大多数认知诊断模型（CDM）的本体。例如DINA、IRT、MIRT、NCDM，均与ID-CDF的预测模块同构。在ID-CDF中，预测模块的本质是一个交互函数（interaction function），该函数通过模拟学习者调动自身认知状态以解决题目的过程，从诊断结果中重建答题数据。如下所示：</p>\n<p><img src=\"https://pic4.zhimg.com/80/v2-eca255d52feca490d7279659f3621227.png\" alt=\"交互函数\"></p>\n<p>其中<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.666ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.856ex\" height=\"1.666ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 820.3 736.2\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D45E\" d=\"M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(479,-150) scale(0.707)\"><path data-c=\"1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\"></path></g></g></g></g></svg></mjx-container>表示试题<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.462ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"0.932ex\" height=\"1.957ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -661 412 865\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\"></path></g></g></g></svg></mjx-container>的Q向量，用来指示试题与知识点的对应关系。<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.188ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.76ex\" height=\"1.507ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -583 778 666\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"2299\" d=\"M56 250Q56 394 156 488T384 583Q530 583 626 485T722 250Q722 110 625 14T390 -83Q249 -83 153 14T56 250ZM682 250Q682 322 649 387T546 497T381 542Q272 542 184 459T95 250Q95 132 178 45T389 -42Q515 -42 598 45T682 250ZM311 250Q311 285 332 304T375 328Q376 328 382 328T392 329Q424 326 445 305T466 250Q466 217 445 195T389 172Q354 172 333 195T311 250Z\"></path></g></g></g></svg></mjx-container>是逐元素乘法，意思是我们只关注所有知识点中那些被试题考察的知识点。<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.407ex\" height=\"1.027ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -443 622 454\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D714\" d=\"M495 384Q495 406 514 424T555 443Q574 443 589 425T604 364Q604 334 592 278T555 155T483 38T377 -11Q297 -11 267 66Q266 68 260 61Q201 -11 125 -11Q15 -11 15 139Q15 230 56 325T123 434Q135 441 147 436Q160 429 160 418Q160 406 140 379T94 306T62 208Q61 202 61 187Q61 124 85 100T143 76Q201 76 245 129L253 137V156Q258 297 317 297Q348 297 348 261Q348 243 338 213T318 158L308 135Q309 133 310 129T318 115T334 97T358 83T393 76Q456 76 501 148T546 274Q546 305 533 325T508 357T495 384Z\"></path></g></g></g></svg></mjx-container>表示交互函数的隐参数，可以在拟合数据的过程中学习。</p>\n<h3 id=\"损失函数\"><a href=\"#损失函数\" class=\"headerlink\" title=\"损失函数\"></a>损失函数</h3><p>由于答题数据的重建结果是概率化的，因此使用交叉熵作为损失函数：<br><img src=\"https://pic4.zhimg.com/80/v2-c5612bf3c79bb312b6c7e0b2d6a85d67.png\" alt=\"损失函数\"></p>\n<h2 id=\"ID-CDM：ID-CDF的一种简洁实现\"><a href=\"#ID-CDM：ID-CDF的一种简洁实现\" class=\"headerlink\" title=\"ID-CDM：ID-CDF的一种简洁实现\"></a>ID-CDM：ID-CDF的一种简洁实现</h2><p>ID-CDM的提出目的，是作为ID-CDF的一种简洁实现，在实验中验证ID-CDF的有效性。</p>\n<h3 id=\"诊断模块的实现\"><a href=\"#诊断模块的实现\" class=\"headerlink\" title=\"诊断模块的实现\"></a>诊断模块的实现</h3><p>在ID-CDM中，学习者诊断函数通过一个单调双层全连接神经网络实现：</p>\n<p><img src=\"https://pic4.zhimg.com/80/v2-008cce8d26bba86cf638788fe022b150.png\" alt=\"学习者诊断函数\"></p>\n<p>同时，试题诊断函数通过一个三层全连接神经网络实现：</p>\n<p><img src=\"https://pic4.zhimg.com/80/v2-c8154977f8096b8b39ef4005eb715fe0.png\" alt=\"试题诊断函数\"></p>\n<h3 id=\"预测模块的实现\"><a href=\"#预测模块的实现\" class=\"headerlink\" title=\"预测模块的实现\"></a>预测模块的实现</h3><p>ID-CDM中，预测模块首先通过一个降维操作，将高维稀疏的诊断结果（注意，只关注那些被试题考察的知识点维度）压缩为低维高信息密度的诊断结果隐向量：</p>\n<p><img src=\"https://pic4.zhimg.com/80/v2-a34b5404ced296f220eaca2d64e880c7.png\" alt=\"压缩操作\"></p>\n<p>然后，再通过一个三层神经网络重建可观测量（答题得分）：</p>\n<p><img src=\"https://pic4.zhimg.com/80/v2-0917427a314bd4a6645432258e1fa8e6.png\" alt=\"重建答题得分\"></p>\n<p>以上就是ID-CDM的实现。</p>\n<h2 id=\"实验部分\"><a href=\"#实验部分\" class=\"headerlink\" title=\"实验部分\"></a>实验部分</h2><h3 id=\"研究问题\"><a href=\"#研究问题\" class=\"headerlink\" title=\"研究问题\"></a>研究问题</h3><ul>\n<li>RQ1：ID-CDM诊断结果的可识别性如何？</li>\n<li>RQ2：ID-CDM诊断结果的可解释性如何？</li>\n<li>RQ3：ID-CDM诊断结果能否精准反映学习者的真实答题表现？</li>\n<li>RQ4：（由不同诊断模型给出的）学习者的诊断结果与其答题表现有何统计关联性？</li>\n</ul>\n<p>为回答上述问题，我们设计了四个不同的实验，在四个具有不同特征的数据集上验证ID-CDM的有效性。数据集信息可见于<a href=\"https://arxiv.org/pdf/2309.00300.pdf\">原始论文</a>。</p>\n<h3 id=\"可识别性评估（RQ1）\"><a href=\"#可识别性评估（RQ1）\" class=\"headerlink\" title=\"可识别性评估（RQ1）\"></a>可识别性评估（RQ1）</h3><p><img src=\"https://pic4.zhimg.com/80/v2-18c908dcbed6fb8bd61315e3c166042f.png\" alt=\"可识别性评估结果\"></p>\n<p>针对这一问题，我们提出一种名为可识别性得分（Identifiability Score, IDS）的评价指标。该指标在增强数据集上检测具有相同可观测量的学习者或试题的诊断结果相似性以评价可识别性。IDS介于0和1之间，越接近1，则诊断结果的平均可识别性越强。<strong>当且仅当IDS = 1.0，全体诊断结果是严格可识别的。</strong></p>\n<p>如Table 1所示，我们计算了ID-CDM和诊断模型baseline各自的IDS。ID-CDM的诊断结果是所有结果中唯一可识别的。此外，ID-CDM-nEnc表示去掉诊断模块的ID-CDM，因此牺牲了可识别性条件，是用于验证可识别性条件有效性的消融实验。NCDM-Const表示使用常数初始化NCDM的诊断结果，以观察这种经典的去随机化方式能否解决传统CDM的不可识别问题。结果表明，虽然NCDM-Const的IDS相对于NCDM有一定提升，但仍然未能彻底解决不可识别问题。因此，在上述方法中，ID-CDM是唯一能够彻底解决不可识别问题的方案。</p>\n<h3 id=\"可解释性评估（RQ2）\"><a href=\"#可解释性评估（RQ2）\" class=\"headerlink\" title=\"可解释性评估（RQ2）\"></a>可解释性评估（RQ2）</h3><p><img src=\"https://pic4.zhimg.com/80/v2-869aee8ae3e3378f05245bf6a132b061.png\" alt=\"可解释性评估结果\"></p>\n<p>针对可解释性评估问题，我们提出两个指标以从不同角度测量诊断的可解释性：一致性程度（Degreement of Consistency, DOC）和可解释过拟合率（Rate of Explainability Overfitting, REO）。<strong>DOC介于0-1之间，测量诊断结果在测试集上的单调性程度，越高越好；REO通常介于0-1之间，测量诊断结果可解释性过拟合程度，越低越好</strong>。</p>\n<p>如Figure 5所示，ID-CDM无论在DOC还是REO上都达到了SOTA。此外，ID-CDM-nMono是去掉了单调性约束的ID-CDM，是用于验证单调性约束有效性的消融实验。实验结果表明，ID-CDM的诊断结果具有良好的可解释性，并且有效缓解了诊断模型中存在的可解释性过拟合问题。</p>\n<h3 id=\"学习者得分预测（RQ3）\"><a href=\"#学习者得分预测（RQ3）\" class=\"headerlink\" title=\"学习者得分预测（RQ3）\"></a>学习者得分预测（RQ3）</h3><p><img src=\"https://pic4.zhimg.com/80/v2-c563b5cf48364584838081b57826ae37.png\" alt=\"学习者得分预测结果\"></p>\n<p>学习者得分预测既可以看作分类问题，也可以看作回归问题。因此我们使用Accuracy、F1 score、RMSE三个指标，全面评估答题得分预测的精度，以比较不同模型给出的诊断结果的准确性。由Figure 6可见，即便我们没有在得分预测精度方面为ID-CDM作任何增强，其预测精度相对于baseline中的SOTA仍然没有损失。这足以验证ID-CDM在诊断结果精准度方面的有效性。</p>\n<h3 id=\"诊断结果聚类（RQ4）\"><a href=\"#诊断结果聚类（RQ4）\" class=\"headerlink\" title=\"诊断结果聚类（RQ4）\"></a>诊断结果聚类（RQ4）</h3><p><img src=\"https://pic4.zhimg.com/80/v2-23ea2d3d0c3b8cc8c2e1877f0f468836.png\" alt=\"诊断结果聚类结果\"></p>\n<p>为探究诊断结果与答题得分表现之间的统计关联性，我们首先使用UMAP算法将高维的学习者能力降维至2维，再将每个学习者对应的点按照其答题得分率染色（得分率越高越偏蓝色，得分率越低越偏红色），再观察学习者能力点能否按照答题得分率很好地聚类。聚类效果越好，则诊断结果与答题表现之间的统计关联性越强，可解释性越好。</p>\n<p>Figure 7 展示了正文中呈现的初步结果。其中ID-CDM的诊断结果可视化呈现条带状，且条带的延伸方向与得分率的变化方向一致，因此能够很好地按答题得分率聚类学习者。NCDM和U-AutoRec（经典的encoder-decoder用户建模模型）聚类效果也尚可，但相比ID-CDM的结果更松散。DINA的可视化中，各种得分率的学习者点则完全混杂在一起，无法聚类。上述结果说明了ID-CDM的诊断结果与答题得分表现之间有较强的统计关联性。这可以从流形的角度解释，可留给读者自行想象。</p>\n<p>我们还在附录中进一步讨论了各种baseline对于学习者的聚类能力，以及ID-CDM的不同组件对其聚类能力的影响。我们主要阐述后者的直观结论：</p>\n<ol>\n<li>ID-CDM的诊断模块（新范式中的创新点）对于聚类的影响在于，其可以将聚类结果由圆形（如NCDM诊断结果可视化）变成条带形，延长条带的长度，在答题得分变化的“纵向”上增强诊断结果与之的统计关联性。</li>\n<li>ID-CDM的单调性约束对于聚类的影响在于，其可以缩短条带的宽度，在答题得分变化的“横向”上增强诊断结果与之的统计关联性（见ID-CDM-nMono诊断结果可视化）。换言之，具有相似答题得分率的学习者，也具有相似的诊断结果。这可以视作松弛版的可识别性。</li>\n</ol>\n<p><img src=\"https://pic4.zhimg.com/80/v2-f57f7cc791e5e0d53a2c95bfc11c444f.png\" alt=\"附录 p1\"></p>\n<p><img src=\"https://pic4.zhimg.com/80/v2-29fe72bc28a3959fc92937d197a0c4f0.png\" alt=\"附录 p2\"></p>\n<h2 id=\"结论\"><a href=\"#结论\" class=\"headerlink\" title=\"结论\"></a>结论</h2><p>本文研究了基于认知诊断的学习者建模任务中普遍存在的不可识别性和可解释性过拟合问题，并提出了一个通用的可识别、可解释的认知诊断框架(ID-CDF)来解决这两个问题。具体来说，我们提出了一个新的答题响应-认知状态-答题响应(R-P-R)范式，从根本上解决这两个问题。基于此，我们提出了ID-CDF，它利用诊断模块从响应数据中获得可识别和可解释的诊断结果。然后，它使用预测模块对学习者和问题之间的复杂交互进行建模，以保证诊断结果的准确性。然后，我们提出ID-CDM作为ID-CDF的实现，以显示其可用性。最后，我们通过在四个真实数据集上的大量实验证明了ID-CDF的有效性。</p>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: decodeURI(window.location.pathname),\n            distractionFreeMode: true // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","site":{"data":{}},"length":7382,"excerpt":"<p>个性化学习者能力建模全新范式。</p>","more":"<p><img src=\"https://pic4.zhimg.com/80/v2-ba1f68abd2b83f3f36024d5f9adadfdb.png\" alt=\"论文首页\"></p>\n<p>论文标题：Towards the Identifiability and Explainability for Personalized Learner Modeling: An Inductive Paradigm</p>\n<p>作者：Jiatong Li, Qi Liu, Fei Wang, Jiayu Liu, Zhenya Huang, Fangzhou Yao, Linbo Zhu, Yu Su</p>\n<p>作者单位：中国科学技术大学</p>\n<p>论文链接：<a href=\"https://arxiv.org/abs/2309.00300\">https://arxiv.org/abs/2309.00300</a></p>\n<p>论文录用：The Web Conference 2024 Main Conference （Research Tracks）</p>\n<p>作者主页：<a href=\"https://cslijt.github.io/\">https://cslijt.github.io/</a></p>\n<p><img src=\"https://pic4.zhimg.com/80/v2-0ee8897ec3d978569909d11d5f83ce50.png\" alt=\"基于认知诊断的学习者能力建模现状\"></p>\n<h2 id=\"论文摘要\"><a href=\"#论文摘要\" class=\"headerlink\" title=\"论文摘要\"></a>论文摘要</h2><p>基于认知诊断(CD)的个性化学习者建模是许多网络学习服务的一项基础而重要的任务，它旨在通过从行为数据中诊断学习者的特征来建模学习者的认知状态。现有的认知诊断模型(CDMs)遵循认知状态-答题响应范式，将学习者认知状态和题目参数视为可训练的嵌入，并通过学习者得分预测来学习它们。然而，我们注意到这种范式不可避免地导致学习者建模的不可识别性，并导致可解释性过拟合问题，这不利于学习者认知状态的量化和网络学习服务的质量。为了解决这些问题，我们提出了一个可识别的认知诊断框架(ID-CDF)，该框架基于一种全新的答题响应-认知状态-答题响应范式，该范式受到编码器-解码器模型的启发。具体而言，我们首先设计了ID-CDF的诊断模块，该模块利用归纳学习消除模型优化中的参数随机性，以确保学习者能力建模结果的可识别性，并捕获总体响应数据分布与认知状态之间的单调性，以防止可解释性过拟合。接下来，我们提出了一个灵活的ID-CDF预测模块，以保证诊断结果的准确性。我们进一步提出了一个ID-CDF的实现，即ID-CDM，以说明其可用性。在四个具有不同特征的真实数据集上进行的大量实验表明，ID-CDF可以有效解决上述研究问题，同时不失诊断结果准确性。</p>\n<h2 id=\"背景介绍\"><a href=\"#背景介绍\" class=\"headerlink\" title=\"背景介绍\"></a>背景介绍</h2><p>在各种Web学习应用（如在线学习平台、在线自适应测试）中，基于认知诊断（cognitive diagnosis, CD）的个性化学习者能力建模，是一项重要的基础任务。该任务的目标是从学习者的历史行为数据（绝大部分情况下，是答题得分记录）中诊断出学习者的认知状态（如对学科知识点的掌握水平）。诊断结果作为认知诊断模型（cognitive diagnosis model, CDM）的输出，一方面可以直接提供给学习者用户，作为其近期学习状态的反馈，另一方面可以作为用户特征（embedding），提供给下游任务挖掘进一步用途，如计算自适应测试（computerized adaptive testing, CAT）、习题推荐（item recommendation）等。需要注意的是，这里的“学习者”是指广义上的所有需要通过学习和测试过程积累知识的个体（如职业资格考试备考者、大学生），不仅仅是K-12教育中的学生。</p>\n<p><img src=\"https://pic4.zhimg.com/80/v2-f209050626df0d396f6839221005872c.png\" alt=\"传统范式与本文提出的新范式对比\"></p>\n<h2 id=\"研究动机\"><a href=\"#研究动机\" class=\"headerlink\" title=\"研究动机\"></a>研究动机</h2><p><strong>从研究现状看，</strong>现有的基于深度学习的学习者能力建模认知诊断模型（cdm）都遵循“能力水平-&gt;响应”范式（proficiency-response paradigm），即把学习者认知状态以及试题特征视作可以从数据中学习的embedding，并通过预测答题得分-&gt;计算损失函数-&gt;反向传播的方式来优化embedding，从而得到预测结果。这一范式与推荐系统中的双塔模型极为类似。即便是不基于深度学习的传统认知诊断模型如DINA（Deterministic Input, Noisy “And” gate model），“能力水平-&gt;响应结果”这一逻辑依然保持。倒不如说，基于深度学习的CDM的proficiency-response paradigm，就是从传统CDM这里一脉相承的。前者通过神经网络强大的函数拟合能力，能够准确地预测学习者在试题上的答题得分。<strong>然而，这一范式容易导致两个难以解决的问题，一是无法保持诊断结果的可识别性，二是导致诊断结果可解释性的过拟合。</strong></p>\n<p>其中，可识别性是指，给定交互函数（CDM的答题得分预测函数）<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"18.467ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 8162.2 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D453\" d=\"M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(827.8,0)\"><path data-c=\"3A\" d=\"M78 370Q78 394 95 412T138 430Q162 430 180 414T199 371Q199 346 182 328T139 310T96 327T78 370ZM78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1383.6,0)\"><path data-c=\"398\" d=\"M56 340Q56 423 86 494T164 610T270 680T388 705Q521 705 621 601T722 341Q722 260 693 191T617 75T510 4T388 -22T267 3T160 74T85 189T56 340ZM610 339Q610 428 590 495T535 598T463 651T384 668Q332 668 289 638T221 566Q168 485 168 339Q168 274 176 235Q189 158 228 105T324 28Q356 16 388 16Q415 16 442 24T501 54T555 111T594 205T610 339ZM223 263V422H263V388H514V422H554V263H514V297H263V263H223Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2383.8,0)\"><path data-c=\"D7\" d=\"M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3384,0)\"><path data-c=\"3A8\" d=\"M340 622Q338 623 335 625T331 629T325 631T314 634T298 635T274 636T239 637H212V683H224Q248 680 389 680T554 683H566V637H539Q479 637 464 635T439 622L438 407Q438 192 439 192Q443 193 449 195T474 207T507 232T536 276T557 344Q560 365 562 417T573 493Q587 536 620 544Q627 546 671 546H715L722 540V515Q714 509 708 509Q680 505 671 476T658 392T644 307Q599 177 451 153L438 151V106L439 61Q446 54 451 52T476 48T539 46H566V0H554Q530 3 389 3T224 0H212V46H239Q259 46 273 46T298 47T314 48T325 51T331 54T335 57T340 61V151Q126 178 117 406Q115 503 69 509Q55 509 55 526Q55 541 59 543T86 546H107H120Q150 546 161 543T184 528Q198 514 204 493Q212 472 213 420T226 316T272 230Q287 216 303 207T330 194L339 192Q340 192 340 407V622Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4439.8,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(5717.6,0)\"><path data-c=\"7B\" d=\"M434 -231Q434 -244 428 -250H410Q281 -250 230 -184Q225 -177 222 -172T217 -161T213 -148T211 -133T210 -111T209 -84T209 -47T209 0Q209 21 209 53Q208 142 204 153Q203 154 203 155Q189 191 153 211T82 231Q71 231 68 234T65 250T68 266T82 269Q116 269 152 289T203 345Q208 356 208 377T209 529V579Q209 634 215 656T244 698Q270 724 324 740Q361 748 377 749Q379 749 390 749T408 750H428Q434 744 434 732Q434 719 431 716Q429 713 415 713Q362 710 332 689T296 647Q291 634 291 499V417Q291 370 288 353T271 314Q240 271 184 255L170 250L184 245Q202 239 220 230T262 196T290 137Q291 131 291 1Q291 -134 296 -147Q306 -174 339 -192T415 -213Q429 -213 431 -216Q434 -219 434 -231Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(6217.6,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6717.6,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(7162.2,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(7662.2,0)\"><path data-c=\"7D\" d=\"M65 731Q65 745 68 747T88 750Q171 750 216 725T279 670Q288 649 289 635T291 501Q292 362 293 357Q306 312 345 291T417 269Q428 269 431 266T434 250T431 234T417 231Q380 231 345 210T298 157Q293 143 292 121T291 -28V-79Q291 -134 285 -156T256 -198Q202 -250 89 -250Q71 -250 68 -247T65 -230Q65 -224 65 -223T66 -218T69 -214T77 -213Q91 -213 108 -210T146 -200T183 -177T207 -139Q208 -134 209 3L210 139Q223 196 280 230Q315 247 330 250Q305 257 280 270Q225 304 212 352L210 362L209 498Q208 635 207 640Q195 680 154 696T77 713Q68 713 67 716T65 731Z\"></path></g></g></g></svg></mjx-container>，不同的学习者认知状态<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.439ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"8.282ex\" height=\"2.156ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -759 3660.7 953\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D703\" d=\"M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(469,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"msup\" transform=\"translate(913.7,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D703\" d=\"M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(502,363) scale(0.707)\"><path data-c=\"2032\" d=\"M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(1937.9,0)\"><path data-c=\"2208\" d=\"M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2882.7,0)\"><path data-c=\"398\" d=\"M56 340Q56 423 86 494T164 610T270 680T388 705Q521 705 621 601T722 341Q722 260 693 191T617 75T510 4T388 -22T267 3T160 74T85 189T56 340ZM610 339Q610 428 590 495T535 598T463 651T384 668Q332 668 289 638T221 566Q168 485 168 339Q168 274 176 235Q189 158 228 105T324 28Q356 16 388 16Q415 16 442 24T501 54T555 111T594 205T610 339ZM223 263V422H263V388H514V422H554V263H514V297H263V263H223Z\"></path></g></g></g></svg></mjx-container>应当导致不同的答题得分分布。换言之，取其等价的逆否命题，也即 <strong>“如果有两名学习者，他们的答题得分分布一模一样，那么在没有其他先验信息的前提下，这两名学习者的认知状态应当是相同的”</strong>。例如在Figure 1中，Adam和Paul的得分分布一模一样（答对e1,e2；答错e3,e4），那么他们本就应当具有相同的认知状态。听起来很符合直觉也很合理对不对？但这样一个重要的性质，却没有任何一个现有的CDM能够保持。这是由传统范式在参数优化过程天然存在的随机性导致的，而且难以消除。在教育测量学界，以Xu et al. 为代表，已经有一些关于传统模型DINA的可识别性条件的理论研究。但相关性质要求试题Q矩阵的特定形式，并且相比于可识别性的实现，更加关注其理论存在性，在现实中仍然难以实现。而在计算机领域，关于个性化学习者能力建模结果可识别性的研究，仍然是一片空白。</p>\n<p>另一个问题，可解释性过拟合，是指诊断结果只在训练数据上有较好的可解释性，在测试数据上却难以解释。这一现象是我们首先通过实验观测到的。这里的“可解释性”是指教育测量层面的可解释，即诊断结果能够反映学习者真实认知状态的程度，需要通过“单调性假设”来维持，即学习者诊断结果随相关习题得分单调递增。可解释性对于学习者能力建模是至关重要的，毕竟诊断结果会直接输出给学习者作为其学习情况反馈，需要令其信服，不像推荐系统中服务提供方只关注推荐效果，如CTR。然而传统范式中，学习者能力是从训练集得分中一个一个“优化”出来的，天然地会导致其单调性指标在训练集上很高（虚高），在验证集和测试集上很拉跨。相关研究中的可解释性指标也都是在训练集上计算的。因为人们不需要通过可解释性“预测”什么，只关注其“在已观测的数据上是否分布合理”。然而，这与可解释性的初衷，即“由有限的已知数据推断隐藏在背后的真实能力”，是相悖的。</p>\n<p><strong>从研究目标看，</strong>我们认为学习者能力建模这一任务本身，更应该关注<strong>由数据到认知状态的诊断过程</strong>，而非<strong>由认知状态到数据的预测过程</strong>。进一步讲，<strong>一个具有实际应用价值的学习者能力建模服务，应当更加关注诊断结果本身的质量，而非答题预测精度，并且整个诊断过程是直接的、端到端的</strong>。当一个在线学习者用户想测评其认知状态时，他只需要输入答题数据，得到输出的诊断结果。不幸的是，现有的CDM都做不到这一点。现有的CDM由于是基于参数优化来估计学习者能力结果的，因此每当一个学习者用户想要测评认知状态时，他必须将自己的答题数据放入全量答题数据中（如果之前有10,000名用户，那么现在就有10,001个用户），重新训练一遍整个模型。注意，冻结其他参数而只训练自己的能力参数这是不可取的，因为容易导致严重的过拟合，而且诊断结果完全不可识别。因此，在实际应用中，现有的CDM也是难以部署的，更多停留在实验室阶段。</p>\n<p><strong>因此，为了解决上述的棘手问题，我们首先开创了一种全新的学习者能力建模范式，Proficiency-response-proficiency paradigm</strong>，如Figure 3所示。基于这一新范式，<strong>我们提出了一种可识别的认知诊断框架ID-CDF</strong>，如Figure 4所示。在这一框架中，学习者认知状态和试题特征不再通过参数优化学习得到，而是通过诊断模块Diagnostic Module一步得到。</p>\n<p><img src=\"https://pic4.zhimg.com/80/v2-40e4246b15789a527485beb03f6cc0d4.png\" alt=\"ID-CDF框架图\"></p>\n<h2 id=\"ID-CDF：通用的可识别认知诊断框架\"><a href=\"#ID-CDF：通用的可识别认知诊断框架\" class=\"headerlink\" title=\"ID-CDF：通用的可识别认知诊断框架\"></a>ID-CDF：通用的可识别认知诊断框架</h2><p>如 Figure 4 所示，ID-CDF这一框架包含两大模块：诊断模块（Diagnostic Module）和预测模块（Predictive Module）。</p>\n<h3 id=\"诊断模块（Diagnostic-Module）\"><a href=\"#诊断模块（Diagnostic-Module）\" class=\"headerlink\" title=\"诊断模块（Diagnostic Module）\"></a>诊断模块（Diagnostic Module）</h3><p><strong>诊断模块的目的是通过归纳式学习（inductive learning），彻底解决现有学习者能力建模方法的不可识别问题，并通过额外引入的约束机制（可定制，可拓展）来满足诊断结果的可解释性，并且归纳式学习本身能够有效缓解可解释性过拟合问题。</strong>具体而言，在这一模块中，学习者和试题的答题数据（本文实现中为0-1的答题得分）首先编码为向量。设有N名学生和M道试题，那么每一名学生的答题数据向量是M维的，每一维度表示在该题的得分（1 = 答对；0 = 未做； -1 = 答错）；类似地，每一道试题的答题数据向量是N维的。上述编码方式可如下公式所示形式化地表示：</p>\n<p><img src=\"https://pic4.zhimg.com/80/v2-3639e3812a95c4f70b30276b61dbe7d4.png\" alt=\"可观测量编码\"></p>\n<p>接下来，诊断模块通过如下形式的诊断函数从答题数据中（归纳式地）直接计算出学习者和试题的诊断结果。其中<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.023ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.061ex\" height=\"1.618ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -705 469 715\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D703\" d=\"M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z\"></path></g></g></g></svg></mjx-container>表示学习者的能力，<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.464ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.473ex\" height=\"2.034ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -694 651 899\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D713\" d=\"M161 441Q202 441 226 417T250 358Q250 338 218 252T187 127Q190 85 214 61Q235 43 257 37Q275 29 288 29H289L371 360Q455 691 456 692Q459 694 472 694Q492 694 492 687Q492 678 411 356Q329 28 329 27T335 26Q421 26 498 114T576 278Q576 302 568 319T550 343T532 361T524 384Q524 405 541 424T583 443Q602 443 618 425T634 366Q634 337 623 288T605 220Q573 125 492 57T329 -11H319L296 -104Q272 -198 272 -199Q270 -205 252 -205H239Q233 -199 233 -197Q233 -192 256 -102T279 -9Q272 -8 265 -8Q106 14 106 139Q106 174 139 264T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 299 34 333T82 404T161 441Z\"></path></g></g></g></svg></mjx-container>表示试题的隐含属性如难度、区分度；<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.407ex\" height=\"1.027ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -443 622 454\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D714\" d=\"M495 384Q495 406 514 424T555 443Q574 443 589 425T604 364Q604 334 592 278T555 155T483 38T377 -11Q297 -11 267 66Q266 68 260 61Q201 -11 125 -11Q15 -11 15 139Q15 230 56 325T123 434Q135 441 147 436Q160 429 160 418Q160 406 140 379T94 306T62 208Q61 202 61 187Q61 124 85 100T143 76Q201 76 245 129L253 137V156Q258 297 317 297Q348 297 348 261Q348 243 338 213T318 158L308 135Q309 133 310 129T318 115T334 97T358 83T393 76Q456 76 501 148T546 274Q546 305 533 325T508 357T495 384Z\"></path></g></g></g></svg></mjx-container>表示诊断函数的参数。</p>\n<p><img src=\"https://pic4.zhimg.com/80/v2-ffc5b300ba0cd4d60cad805b005e532c.png\" alt=\"诊断函数\"></p>\n<p><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.407ex\" height=\"1.027ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -443 622 454\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D714\" d=\"M495 384Q495 406 514 424T555 443Q574 443 589 425T604 364Q604 334 592 278T555 155T483 38T377 -11Q297 -11 267 66Q266 68 260 61Q201 -11 125 -11Q15 -11 15 139Q15 230 56 325T123 434Q135 441 147 436Q160 429 160 418Q160 406 140 379T94 306T62 208Q61 202 61 187Q61 124 85 100T143 76Q201 76 245 129L253 137V156Q258 297 317 297Q348 297 348 261Q348 243 338 213T318 158L308 135Q309 133 310 129T318 115T334 97T358 83T393 76Q456 76 501 148T546 274Q546 305 533 325T508 357T495 384Z\"></path></g></g></g></svg></mjx-container>的存在是为说明，<strong>诊断函数是可以从数据中学习的</strong>。但是，诊断函数千千万万，究竟哪一个是合理的？尤其是回到本文的研究问题：怎样保证诊断结果是可识别、可解释的？这里我们就需要引入诊断函数的可识别性条件和单调性条件：</p>\n<ul>\n<li><strong>可识别性条件（Identifiability condition）：</strong> 一个诊断函数满足可识别性条件，当且仅当诊断结果是完全由可观测量决定的。换言之，该函数的计算过程不允许存在任何可能导致诊断结果改变的外部的不可观测量。<ul>\n<li>这一条件可以概括为，“所见即所得”。例如，如果学习者答题数据中仅有答题得分，那么可识别的诊断函数必须保证诊断结果是完全由答题得分决定的，不能存在随机因素或不可见的学习者个人因素（如学习者ID）。</li>\n</ul>\n</li>\n<li><strong>单调性条件（Monotonicity condition）：</strong> 一个学习者诊断函数满足单调性条件，当且仅当诊断结果相对于输入的任意一个维度是单调递增的。<ul>\n<li>单调性条件源于心理测量学中基础但重要的的“单调性假设”，即学习者的<strong>真实能力水平</strong>是随其正答概率单调递增的。由于学习者的真实能力是未知的、不可观测的，因此在单调性假设成立的前提下，通过单调性条件来保证估计出的学习者能力诊断结果的可解释性。</li>\n</ul>\n</li>\n</ul>\n<p>上述两个条件是解决本文研究问题的钥匙，也是ID-CDF对诊断函数设计的唯二约束。在满足上述两个条件的前提下，ID-CDF允许并鼓励使用者定义自己的诊断函数，以满足不同场景的需求。本文中为验证这一模块的准确性，使用了全连接神经网络来定义。使用者也可考虑使用CNN、RNN或其他定义方式，设计符合自己需求的诊断函数。</p>\n<h3 id=\"预测模块（Predictive-Module）\"><a href=\"#预测模块（Predictive-Module）\" class=\"headerlink\" title=\"预测模块（Predictive Module）\"></a>预测模块（Predictive Module）</h3><p><strong>预测模块的目的是通过利用诊断结果重建可观测量（答题数据），以保证诊断结果的准确性及其在下游任务中的潜力</strong>。ID-CDF的诊断模块就是目前已有的大多数认知诊断模型（CDM）的本体。例如DINA、IRT、MIRT、NCDM，均与ID-CDF的预测模块同构。在ID-CDF中，预测模块的本质是一个交互函数（interaction function），该函数通过模拟学习者调动自身认知状态以解决题目的过程，从诊断结果中重建答题数据。如下所示：</p>\n<p><img src=\"https://pic4.zhimg.com/80/v2-eca255d52feca490d7279659f3621227.png\" alt=\"交互函数\"></p>\n<p>其中<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.666ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.856ex\" height=\"1.666ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 820.3 736.2\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D45E\" d=\"M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(479,-150) scale(0.707)\"><path data-c=\"1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\"></path></g></g></g></g></svg></mjx-container>表示试题<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.462ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"0.932ex\" height=\"1.957ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -661 412 865\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\"></path></g></g></g></svg></mjx-container>的Q向量，用来指示试题与知识点的对应关系。<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.188ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.76ex\" height=\"1.507ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -583 778 666\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"2299\" d=\"M56 250Q56 394 156 488T384 583Q530 583 626 485T722 250Q722 110 625 14T390 -83Q249 -83 153 14T56 250ZM682 250Q682 322 649 387T546 497T381 542Q272 542 184 459T95 250Q95 132 178 45T389 -42Q515 -42 598 45T682 250ZM311 250Q311 285 332 304T375 328Q376 328 382 328T392 329Q424 326 445 305T466 250Q466 217 445 195T389 172Q354 172 333 195T311 250Z\"></path></g></g></g></svg></mjx-container>是逐元素乘法，意思是我们只关注所有知识点中那些被试题考察的知识点。<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.407ex\" height=\"1.027ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -443 622 454\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D714\" d=\"M495 384Q495 406 514 424T555 443Q574 443 589 425T604 364Q604 334 592 278T555 155T483 38T377 -11Q297 -11 267 66Q266 68 260 61Q201 -11 125 -11Q15 -11 15 139Q15 230 56 325T123 434Q135 441 147 436Q160 429 160 418Q160 406 140 379T94 306T62 208Q61 202 61 187Q61 124 85 100T143 76Q201 76 245 129L253 137V156Q258 297 317 297Q348 297 348 261Q348 243 338 213T318 158L308 135Q309 133 310 129T318 115T334 97T358 83T393 76Q456 76 501 148T546 274Q546 305 533 325T508 357T495 384Z\"></path></g></g></g></svg></mjx-container>表示交互函数的隐参数，可以在拟合数据的过程中学习。</p>\n<h3 id=\"损失函数\"><a href=\"#损失函数\" class=\"headerlink\" title=\"损失函数\"></a>损失函数</h3><p>由于答题数据的重建结果是概率化的，因此使用交叉熵作为损失函数：<br><img src=\"https://pic4.zhimg.com/80/v2-c5612bf3c79bb312b6c7e0b2d6a85d67.png\" alt=\"损失函数\"></p>\n<h2 id=\"ID-CDM：ID-CDF的一种简洁实现\"><a href=\"#ID-CDM：ID-CDF的一种简洁实现\" class=\"headerlink\" title=\"ID-CDM：ID-CDF的一种简洁实现\"></a>ID-CDM：ID-CDF的一种简洁实现</h2><p>ID-CDM的提出目的，是作为ID-CDF的一种简洁实现，在实验中验证ID-CDF的有效性。</p>\n<h3 id=\"诊断模块的实现\"><a href=\"#诊断模块的实现\" class=\"headerlink\" title=\"诊断模块的实现\"></a>诊断模块的实现</h3><p>在ID-CDM中，学习者诊断函数通过一个单调双层全连接神经网络实现：</p>\n<p><img src=\"https://pic4.zhimg.com/80/v2-008cce8d26bba86cf638788fe022b150.png\" alt=\"学习者诊断函数\"></p>\n<p>同时，试题诊断函数通过一个三层全连接神经网络实现：</p>\n<p><img src=\"https://pic4.zhimg.com/80/v2-c8154977f8096b8b39ef4005eb715fe0.png\" alt=\"试题诊断函数\"></p>\n<h3 id=\"预测模块的实现\"><a href=\"#预测模块的实现\" class=\"headerlink\" title=\"预测模块的实现\"></a>预测模块的实现</h3><p>ID-CDM中，预测模块首先通过一个降维操作，将高维稀疏的诊断结果（注意，只关注那些被试题考察的知识点维度）压缩为低维高信息密度的诊断结果隐向量：</p>\n<p><img src=\"https://pic4.zhimg.com/80/v2-a34b5404ced296f220eaca2d64e880c7.png\" alt=\"压缩操作\"></p>\n<p>然后，再通过一个三层神经网络重建可观测量（答题得分）：</p>\n<p><img src=\"https://pic4.zhimg.com/80/v2-0917427a314bd4a6645432258e1fa8e6.png\" alt=\"重建答题得分\"></p>\n<p>以上就是ID-CDM的实现。</p>\n<h2 id=\"实验部分\"><a href=\"#实验部分\" class=\"headerlink\" title=\"实验部分\"></a>实验部分</h2><h3 id=\"研究问题\"><a href=\"#研究问题\" class=\"headerlink\" title=\"研究问题\"></a>研究问题</h3><ul>\n<li>RQ1：ID-CDM诊断结果的可识别性如何？</li>\n<li>RQ2：ID-CDM诊断结果的可解释性如何？</li>\n<li>RQ3：ID-CDM诊断结果能否精准反映学习者的真实答题表现？</li>\n<li>RQ4：（由不同诊断模型给出的）学习者的诊断结果与其答题表现有何统计关联性？</li>\n</ul>\n<p>为回答上述问题，我们设计了四个不同的实验，在四个具有不同特征的数据集上验证ID-CDM的有效性。数据集信息可见于<a href=\"https://arxiv.org/pdf/2309.00300.pdf\">原始论文</a>。</p>\n<h3 id=\"可识别性评估（RQ1）\"><a href=\"#可识别性评估（RQ1）\" class=\"headerlink\" title=\"可识别性评估（RQ1）\"></a>可识别性评估（RQ1）</h3><p><img src=\"https://pic4.zhimg.com/80/v2-18c908dcbed6fb8bd61315e3c166042f.png\" alt=\"可识别性评估结果\"></p>\n<p>针对这一问题，我们提出一种名为可识别性得分（Identifiability Score, IDS）的评价指标。该指标在增强数据集上检测具有相同可观测量的学习者或试题的诊断结果相似性以评价可识别性。IDS介于0和1之间，越接近1，则诊断结果的平均可识别性越强。<strong>当且仅当IDS = 1.0，全体诊断结果是严格可识别的。</strong></p>\n<p>如Table 1所示，我们计算了ID-CDM和诊断模型baseline各自的IDS。ID-CDM的诊断结果是所有结果中唯一可识别的。此外，ID-CDM-nEnc表示去掉诊断模块的ID-CDM，因此牺牲了可识别性条件，是用于验证可识别性条件有效性的消融实验。NCDM-Const表示使用常数初始化NCDM的诊断结果，以观察这种经典的去随机化方式能否解决传统CDM的不可识别问题。结果表明，虽然NCDM-Const的IDS相对于NCDM有一定提升，但仍然未能彻底解决不可识别问题。因此，在上述方法中，ID-CDM是唯一能够彻底解决不可识别问题的方案。</p>\n<h3 id=\"可解释性评估（RQ2）\"><a href=\"#可解释性评估（RQ2）\" class=\"headerlink\" title=\"可解释性评估（RQ2）\"></a>可解释性评估（RQ2）</h3><p><img src=\"https://pic4.zhimg.com/80/v2-869aee8ae3e3378f05245bf6a132b061.png\" alt=\"可解释性评估结果\"></p>\n<p>针对可解释性评估问题，我们提出两个指标以从不同角度测量诊断的可解释性：一致性程度（Degreement of Consistency, DOC）和可解释过拟合率（Rate of Explainability Overfitting, REO）。<strong>DOC介于0-1之间，测量诊断结果在测试集上的单调性程度，越高越好；REO通常介于0-1之间，测量诊断结果可解释性过拟合程度，越低越好</strong>。</p>\n<p>如Figure 5所示，ID-CDM无论在DOC还是REO上都达到了SOTA。此外，ID-CDM-nMono是去掉了单调性约束的ID-CDM，是用于验证单调性约束有效性的消融实验。实验结果表明，ID-CDM的诊断结果具有良好的可解释性，并且有效缓解了诊断模型中存在的可解释性过拟合问题。</p>\n<h3 id=\"学习者得分预测（RQ3）\"><a href=\"#学习者得分预测（RQ3）\" class=\"headerlink\" title=\"学习者得分预测（RQ3）\"></a>学习者得分预测（RQ3）</h3><p><img src=\"https://pic4.zhimg.com/80/v2-c563b5cf48364584838081b57826ae37.png\" alt=\"学习者得分预测结果\"></p>\n<p>学习者得分预测既可以看作分类问题，也可以看作回归问题。因此我们使用Accuracy、F1 score、RMSE三个指标，全面评估答题得分预测的精度，以比较不同模型给出的诊断结果的准确性。由Figure 6可见，即便我们没有在得分预测精度方面为ID-CDM作任何增强，其预测精度相对于baseline中的SOTA仍然没有损失。这足以验证ID-CDM在诊断结果精准度方面的有效性。</p>\n<h3 id=\"诊断结果聚类（RQ4）\"><a href=\"#诊断结果聚类（RQ4）\" class=\"headerlink\" title=\"诊断结果聚类（RQ4）\"></a>诊断结果聚类（RQ4）</h3><p><img src=\"https://pic4.zhimg.com/80/v2-23ea2d3d0c3b8cc8c2e1877f0f468836.png\" alt=\"诊断结果聚类结果\"></p>\n<p>为探究诊断结果与答题得分表现之间的统计关联性，我们首先使用UMAP算法将高维的学习者能力降维至2维，再将每个学习者对应的点按照其答题得分率染色（得分率越高越偏蓝色，得分率越低越偏红色），再观察学习者能力点能否按照答题得分率很好地聚类。聚类效果越好，则诊断结果与答题表现之间的统计关联性越强，可解释性越好。</p>\n<p>Figure 7 展示了正文中呈现的初步结果。其中ID-CDM的诊断结果可视化呈现条带状，且条带的延伸方向与得分率的变化方向一致，因此能够很好地按答题得分率聚类学习者。NCDM和U-AutoRec（经典的encoder-decoder用户建模模型）聚类效果也尚可，但相比ID-CDM的结果更松散。DINA的可视化中，各种得分率的学习者点则完全混杂在一起，无法聚类。上述结果说明了ID-CDM的诊断结果与答题得分表现之间有较强的统计关联性。这可以从流形的角度解释，可留给读者自行想象。</p>\n<p>我们还在附录中进一步讨论了各种baseline对于学习者的聚类能力，以及ID-CDM的不同组件对其聚类能力的影响。我们主要阐述后者的直观结论：</p>\n<ol>\n<li>ID-CDM的诊断模块（新范式中的创新点）对于聚类的影响在于，其可以将聚类结果由圆形（如NCDM诊断结果可视化）变成条带形，延长条带的长度，在答题得分变化的“纵向”上增强诊断结果与之的统计关联性。</li>\n<li>ID-CDM的单调性约束对于聚类的影响在于，其可以缩短条带的宽度，在答题得分变化的“横向”上增强诊断结果与之的统计关联性（见ID-CDM-nMono诊断结果可视化）。换言之，具有相似答题得分率的学习者，也具有相似的诊断结果。这可以视作松弛版的可识别性。</li>\n</ol>\n<p><img src=\"https://pic4.zhimg.com/80/v2-f57f7cc791e5e0d53a2c95bfc11c444f.png\" alt=\"附录 p1\"></p>\n<p><img src=\"https://pic4.zhimg.com/80/v2-29fe72bc28a3959fc92937d197a0c4f0.png\" alt=\"附录 p2\"></p>\n<h2 id=\"结论\"><a href=\"#结论\" class=\"headerlink\" title=\"结论\"></a>结论</h2><p>本文研究了基于认知诊断的学习者建模任务中普遍存在的不可识别性和可解释性过拟合问题，并提出了一个通用的可识别、可解释的认知诊断框架(ID-CDF)来解决这两个问题。具体来说，我们提出了一个新的答题响应-认知状态-答题响应(R-P-R)范式，从根本上解决这两个问题。基于此，我们提出了ID-CDF，它利用诊断模块从响应数据中获得可识别和可解释的诊断结果。然后，它使用预测模块对学习者和问题之间的复杂交互进行建模，以保证诊断结果的准确性。然后，我们提出ID-CDM作为ID-CDF的实现，以显示其可用性。最后，我们通过在四个真实数据集上的大量实验证明了ID-CDF的有效性。</p>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: decodeURI(window.location.pathname),\n            distractionFreeMode: true // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>"}],"PostAsset":[{"_id":"source/_posts/2022-04-17-github/github20220401701.png","post":"cludw9n9r00159wv9a3pb45az","slug":"github20220401701.png","modified":1,"renderable":1},{"_id":"source/_posts/2023-02-16-adbs02/b+eg.jpg","post":"cludw9n9y00209wv9d05p190x","slug":"b+eg.jpg","modified":1,"renderable":1},{"_id":"source/_posts/2023-02-16-adbs02/b+int.jpg","post":"cludw9n9y00209wv9d05p190x","slug":"b+int.jpg","modified":1,"renderable":1},{"_id":"source/_posts/2023-02-16-adbs02/b+leaf.jpg","post":"cludw9n9y00209wv9d05p190x","slug":"b+leaf.jpg","modified":1,"renderable":1},{"_id":"source/_posts/2023-02-16-adbs02/multi-eg.jpg","post":"cludw9n9y00209wv9d05p190x","slug":"multi-eg.jpg","modified":1,"renderable":1},{"_id":"source/_posts/2023-02-16-adbs01/disk_struct.jpg","post":"cludw9n9x001x9wv949wzgkbp","slug":"disk_struct.jpg","modified":1,"renderable":1},{"_id":"source/_posts/2023-02-16-adbs01/item-rep.jpg","post":"cludw9n9x001x9wv949wzgkbp","slug":"item-rep.jpg","modified":1,"renderable":1},{"_id":"source/_posts/2023-02-16-adbs01/pcm.jpg","post":"cludw9n9x001x9wv949wzgkbp","slug":"pcm.jpg","modified":1,"renderable":1},{"_id":"source/_posts/2023-02-16-adbs01/rec-fix.jpg","post":"cludw9n9x001x9wv949wzgkbp","slug":"rec-fix.jpg","modified":1,"renderable":1},{"_id":"source/_posts/2023-02-17-adbs03/hash-alg.jpg","post":"cludw9n9z00239wv99l5d0rxr","slug":"hash-alg.jpg","modified":1,"renderable":1},{"_id":"source/_posts/2023-02-17-adbs03/index-alg.jpg","post":"cludw9n9z00239wv99l5d0rxr","slug":"index-alg.jpg","modified":1,"renderable":1},{"_id":"source/_posts/2023-02-17-adbs03/index-probe.jpg","post":"cludw9n9z00239wv99l5d0rxr","slug":"index-probe.jpg","modified":1,"renderable":1},{"_id":"source/_posts/2023-02-17-adbs03/join-eg.jpg","post":"cludw9n9z00239wv99l5d0rxr","slug":"join-eg.jpg","modified":1,"renderable":1},{"_id":"source/_posts/2023-02-17-adbs03/loop-alg.jpg","post":"cludw9n9z00239wv99l5d0rxr","slug":"loop-alg.jpg","modified":1,"renderable":1},{"_id":"source/_posts/2023-02-17-adbs03/merge-alg.jpg","post":"cludw9n9z00239wv99l5d0rxr","slug":"merge-alg.jpg","modified":1,"renderable":1},{"_id":"source/_posts/2023-02-21-guitar/Long-long-ago,-20th-century.pdf","post":"cludw9na0002a9wv92duk9x6r","slug":"Long-long-ago,-20th-century.pdf","modified":1,"renderable":1},{"_id":"source/_posts/2023-02-25-bios/bios1.jpg","post":"cludw9na0002e9wv95t6b8y2i","slug":"bios1.jpg","modified":1,"renderable":1},{"_id":"source/_posts/2023-02-25-bios/bios2.jpg","post":"cludw9na0002e9wv95t6b8y2i","slug":"bios2.jpg","modified":1,"renderable":1},{"_id":"source/_posts/2023-02-25-bios/cmd.jpg","post":"cludw9na0002e9wv95t6b8y2i","slug":"cmd.jpg","modified":1,"renderable":1},{"_id":"source/_posts/2023-03-19-rs/1.jpg","post":"cludw9na2002k9wv9917a6tfg","slug":"1.jpg","modified":1,"renderable":1},{"_id":"source/_posts/2023-03-20-vae/v2-97e09bd511a1fb0c3240fa717ce235d2_1440w.png","post":"cludw9na2002n9wv9dpnb7q9i","slug":"v2-97e09bd511a1fb0c3240fa717ce235d2_1440w.png","modified":1,"renderable":1},{"_id":"source/_posts/2023-03-20-vae/vae-diagram-1-1536x845.jpg","post":"cludw9na2002n9wv9dpnb7q9i","slug":"vae-diagram-1-1536x845.jpg","modified":1,"renderable":1},{"_id":"source/_posts/2023-07-09-visa/approve.jpg","post":"cludw9na5002y9wv9gcy13k6w","slug":"approve.jpg","modified":1,"renderable":1},{"_id":"source/_posts/2023-07-09-visa/issued.png","post":"cludw9na5002y9wv9gcy13k6w","slug":"issued.png","modified":1,"renderable":1},{"_id":"source/_posts/2023-06-10-game/notations.jpg","post":"cludw9na500319wv99uae34lz","slug":"notations.jpg","modified":1,"renderable":1},{"_id":"source/_posts/2024-02-01-idcd/0.png","post":"cludw9naj005f9wv95egb2gjb","slug":"0.png","modified":1,"renderable":1},{"_id":"source/_posts/2024-02-01-idcd/1.png","post":"cludw9naj005f9wv95egb2gjb","slug":"1.png","modified":1,"renderable":1},{"_id":"source/_posts/2024-02-01-idcd/10.png","post":"cludw9naj005f9wv95egb2gjb","slug":"10.png","modified":1,"renderable":1},{"_id":"source/_posts/2024-02-01-idcd/11.png","post":"cludw9naj005f9wv95egb2gjb","slug":"11.png","modified":1,"renderable":1},{"_id":"source/_posts/2024-02-01-idcd/12.png","post":"cludw9naj005f9wv95egb2gjb","slug":"12.png","modified":1,"renderable":1},{"_id":"source/_posts/2024-02-01-idcd/13.png","post":"cludw9naj005f9wv95egb2gjb","slug":"13.png","modified":1,"renderable":1},{"_id":"source/_posts/2024-02-01-idcd/14.png","post":"cludw9naj005f9wv95egb2gjb","slug":"14.png","modified":1,"renderable":1},{"_id":"source/_posts/2024-02-01-idcd/15.png","post":"cludw9naj005f9wv95egb2gjb","slug":"15.png","modified":1,"renderable":1},{"_id":"source/_posts/2024-02-01-idcd/16.png","post":"cludw9naj005f9wv95egb2gjb","slug":"16.png","modified":1,"renderable":1},{"_id":"source/_posts/2024-02-01-idcd/17.png","post":"cludw9naj005f9wv95egb2gjb","slug":"17.png","modified":1,"renderable":1},{"_id":"source/_posts/2024-02-01-idcd/2.png","post":"cludw9naj005f9wv95egb2gjb","slug":"2.png","modified":1,"renderable":1},{"_id":"source/_posts/2024-02-01-idcd/3.png","post":"cludw9naj005f9wv95egb2gjb","slug":"3.png","modified":1,"renderable":1},{"_id":"source/_posts/2024-02-01-idcd/4.png","post":"cludw9naj005f9wv95egb2gjb","slug":"4.png","modified":1,"renderable":1},{"_id":"source/_posts/2024-02-01-idcd/5.png","post":"cludw9naj005f9wv95egb2gjb","slug":"5.png","modified":1,"renderable":1},{"_id":"source/_posts/2024-02-01-idcd/6.png","post":"cludw9naj005f9wv95egb2gjb","slug":"6.png","modified":1,"renderable":1},{"_id":"source/_posts/2024-02-01-idcd/7.png","post":"cludw9naj005f9wv95egb2gjb","slug":"7.png","modified":1,"renderable":1},{"_id":"source/_posts/2024-02-01-idcd/8.png","post":"cludw9naj005f9wv95egb2gjb","slug":"8.png","modified":1,"renderable":1},{"_id":"source/_posts/2024-02-01-idcd/9.png","post":"cludw9naj005f9wv95egb2gjb","slug":"9.png","modified":1,"renderable":1}],"PostCategory":[{"post_id":"cludw9n9q00109wv9aaima41w","category_id":"cludw9n9r00149wv9eam79iit","_id":"cludw9n9u001e9wv9ez2u6cx4"},{"post_id":"cludw9n9s00189wv9dxenca2a","category_id":"cludw9n9r00149wv9eam79iit","_id":"cludw9n9v001j9wv9fkdafcs5"},{"post_id":"cludw9n9t001b9wv92dlv69q7","category_id":"cludw9n9r00149wv9eam79iit","_id":"cludw9n9w001m9wv9agvo37jt"},{"post_id":"cludw9n9q00129wv9ac603rx9","category_id":"cludw9n9t00199wv98q3bc5xi","_id":"cludw9n9w001q9wv97yomfno4"},{"post_id":"cludw9n9u001d9wv9chrq4eos","category_id":"cludw9n9r00149wv9eam79iit","_id":"cludw9n9x001t9wv93r062jpi"},{"post_id":"cludw9n9v001i9wv9hoxs7sl4","category_id":"cludw9n9r00149wv9eam79iit","_id":"cludw9n9x001w9wv934c87opq"},{"post_id":"cludw9n9r00159wv9a3pb45az","category_id":"cludw9n9t00199wv98q3bc5xi","_id":"cludw9n9y001y9wv9g80n3dba"},{"post_id":"cludw9n9v001l9wv9bszc2si3","category_id":"cludw9n9r00149wv9eam79iit","_id":"cludw9n9y00219wv9cp9vb4yb"},{"post_id":"cludw9n9w001p9wv9a8hnd3wu","category_id":"cludw9n9r00149wv9eam79iit","_id":"cludw9n9z00249wv96l63gift"},{"post_id":"cludw9n9x001x9wv949wzgkbp","category_id":"cludw9n9r00149wv9eam79iit","_id":"cludw9n9z00289wv93uu0a218"},{"post_id":"cludw9n9y00209wv9d05p190x","category_id":"cludw9n9r00149wv9eam79iit","_id":"cludw9na0002b9wv9660260yo"},{"post_id":"cludw9n9z00239wv99l5d0rxr","category_id":"cludw9n9r00149wv9eam79iit","_id":"cludw9na1002f9wv9bpcacff0"},{"post_id":"cludw9n9z00279wv97bbbadzo","category_id":"cludw9n9r00149wv9eam79iit","_id":"cludw9na1002j9wv939215824"},{"post_id":"cludw9na0002e9wv95t6b8y2i","category_id":"cludw9n9t00199wv98q3bc5xi","_id":"cludw9na2002o9wv99gj40hyz"},{"post_id":"cludw9na0002a9wv92duk9x6r","category_id":"cludw9na1002h9wv9h8bc97jf","_id":"cludw9na4002u9wv91mm2drfd"},{"post_id":"cludw9na1002i9wv9g1jz3743","category_id":"cludw9na2002p9wv9ahdl5dty","_id":"cludw9na5002z9wv9afxggg0d"},{"post_id":"cludw9na3002t9wv98y609xoq","category_id":"cludw9n9r00149wv9eam79iit","_id":"cludw9na500329wv9cktb09p1"},{"post_id":"cludw9na4002w9wv9emlua0xi","category_id":"cludw9n9r00149wv9eam79iit","_id":"cludw9na600379wv92dw0ds1z"},{"post_id":"cludw9na2002n9wv9dpnb7q9i","category_id":"cludw9na4002v9wv99268dc8x","_id":"cludw9na7003a9wv92pl13319"},{"post_id":"cludw9na500319wv99uae34lz","category_id":"cludw9n9r00149wv9eam79iit","_id":"cludw9na7003c9wv9gukf0xnr"},{"post_id":"cludw9na600399wv9h6kvcenc","category_id":"cludw9n9r00149wv9eam79iit","_id":"cludw9na7003d9wv9axon3p7z"},{"post_id":"cludw9na5002y9wv9gcy13k6w","category_id":"cludw9na600349wv91bt2577x","_id":"cludw9na7003f9wv9d66h045n"},{"post_id":"cludw9nai005b9wv9hjihgcso","category_id":"cludw9naj005d9wv9cegx8mmf","_id":"cludw9nak005h9wv95ofsesb4"}],"PostTag":[{"post_id":"cludw9n9800019wv90bcgcf64","tag_id":"cludw9n9c00049wv9bqmd1gcd","_id":"cludw9n9m000n9wv9g63c7f85"},{"post_id":"cludw9n9800019wv90bcgcf64","tag_id":"cludw9n9f000b9wv9hl588g75","_id":"cludw9n9n000p9wv931ws15em"},{"post_id":"cludw9n9800019wv90bcgcf64","tag_id":"cludw9n9i000f9wv93z7o2rwy","_id":"cludw9n9o000s9wv9dju308bt"},{"post_id":"cludw9n9800019wv90bcgcf64","tag_id":"cludw9n9j000i9wv90gz9h3zv","_id":"cludw9n9o000u9wv9ejskaov1"},{"post_id":"cludw9n9b00039wv93j8n7m4t","tag_id":"cludw9n9k000l9wv9b8401ueh","_id":"cludw9n9p000x9wv9c1vvbtro"},{"post_id":"cludw9n9d00069wv9ec9i48k5","tag_id":"cludw9n9k000l9wv9b8401ueh","_id":"cludw9n9q000z9wv97vu7cwnt"},{"post_id":"cludw9n9e00089wv93jx04lf4","tag_id":"cludw9n9p000w9wv9953scebg","_id":"cludw9n9r00139wv97irs0jda"},{"post_id":"cludw9n9f000a9wv98ev10j7r","tag_id":"cludw9n9c00049wv9bqmd1gcd","_id":"cludw9n9u001c9wv9hqav5cfl"},{"post_id":"cludw9n9f000a9wv98ev10j7r","tag_id":"cludw9n9f000b9wv9hl588g75","_id":"cludw9n9u001f9wv91zpieuay"},{"post_id":"cludw9n9f000a9wv98ev10j7r","tag_id":"cludw9n9i000f9wv93z7o2rwy","_id":"cludw9n9v001k9wv9gh6u8pog"},{"post_id":"cludw9n9g000d9wv92p3gflq5","tag_id":"cludw9n9f000b9wv9hl588g75","_id":"cludw9n9w001n9wv93z2a5mja"},{"post_id":"cludw9n9g000d9wv92p3gflq5","tag_id":"cludw9n9t001a9wv9huh53ifq","_id":"cludw9n9w001r9wv9dfbqfgtz"},{"post_id":"cludw9n9h000e9wv963jn7390","tag_id":"cludw9n9v001h9wv91nj9e9q4","_id":"cludw9n9y00229wv96mch3ri5"},{"post_id":"cludw9n9h000e9wv963jn7390","tag_id":"cludw9n9i000f9wv93z7o2rwy","_id":"cludw9n9z00259wv99sov478g"},{"post_id":"cludw9n9h000e9wv963jn7390","tag_id":"cludw9n9j000i9wv90gz9h3zv","_id":"cludw9n9z00299wv9c3jkfyjn"},{"post_id":"cludw9n9i000g9wv9ckz2eezn","tag_id":"cludw9n9i000f9wv93z7o2rwy","_id":"cludw9na0002c9wv902qrhxdm"},{"post_id":"cludw9n9i000g9wv9ckz2eezn","tag_id":"cludw9n9j000i9wv90gz9h3zv","_id":"cludw9na1002g9wv96ohzb76e"},{"post_id":"cludw9n9i000h9wv9fhs61f9h","tag_id":"cludw9n9k000l9wv9b8401ueh","_id":"cludw9na2002m9wv96o07bull"},{"post_id":"cludw9n9i000h9wv9fhs61f9h","tag_id":"cludw9na0002d9wv9damg3oa6","_id":"cludw9na3002q9wv9e1chbff2"},{"post_id":"cludw9n9j000j9wv9dbwehz78","tag_id":"cludw9n9i000f9wv93z7o2rwy","_id":"cludw9na500309wv9go8w2glq"},{"post_id":"cludw9n9j000j9wv9dbwehz78","tag_id":"cludw9na2002l9wv9cqsbhw6x","_id":"cludw9na500339wv9a1q88j1t"},{"post_id":"cludw9n9j000j9wv9dbwehz78","tag_id":"cludw9na3002s9wv93ro154c9","_id":"cludw9na600389wv9a26g4qdx"},{"post_id":"cludw9n9j000k9wv99h7icxsk","tag_id":"cludw9na4002x9wv9hase7zfr","_id":"cludw9na7003h9wv98vp2cc7u"},{"post_id":"cludw9n9j000k9wv99h7icxsk","tag_id":"cludw9na600359wv9b97d65jw","_id":"cludw9na8003i9wv9bpoqeqws"},{"post_id":"cludw9n9j000k9wv99h7icxsk","tag_id":"cludw9na7003b9wv90c0tds1c","_id":"cludw9na8003k9wv9cciq8bkm"},{"post_id":"cludw9n9j000k9wv99h7icxsk","tag_id":"cludw9na7003e9wv90gxq31nf","_id":"cludw9na8003l9wv96msjbmcy"},{"post_id":"cludw9n9k000m9wv9cpyea728","tag_id":"cludw9na7003g9wv9clq30z0l","_id":"cludw9na8003n9wv9c8d7ddxg"},{"post_id":"cludw9n9m000o9wv9hajdbnmw","tag_id":"cludw9na8003j9wv9527u4g7f","_id":"cludw9na8003o9wv93uo71w65"},{"post_id":"cludw9n9n000q9wv90g0ifcki","tag_id":"cludw9na8003m9wv9fsl49u2m","_id":"cludw9na8003q9wv99qmxhie7"},{"post_id":"cludw9n9o000t9wv919s26njd","tag_id":"cludw9na8003j9wv9527u4g7f","_id":"cludw9na9003t9wv91iw972tx"},{"post_id":"cludw9n9o000t9wv919s26njd","tag_id":"cludw9na0002d9wv9damg3oa6","_id":"cludw9na9003u9wv9heyndgwx"},{"post_id":"cludw9n9p000v9wv97l3h6pfa","tag_id":"cludw9na8003m9wv9fsl49u2m","_id":"cludw9na9003x9wv98v1dhrt0"},{"post_id":"cludw9n9p000v9wv97l3h6pfa","tag_id":"cludw9na9003v9wv98lulap2n","_id":"cludw9na9003y9wv900dq6246"},{"post_id":"cludw9n9q00109wv9aaima41w","tag_id":"cludw9na9003w9wv94exe9kvi","_id":"cludw9na900409wv98xpj5iru"},{"post_id":"cludw9n9q00129wv9ac603rx9","tag_id":"cludw9n9i000f9wv93z7o2rwy","_id":"cludw9na900429wv94mz522q9"},{"post_id":"cludw9n9q00129wv9ac603rx9","tag_id":"cludw9n9v001h9wv91nj9e9q4","_id":"cludw9na900439wv97tbdfa0p"},{"post_id":"cludw9n9r00159wv9a3pb45az","tag_id":"cludw9na900419wv915944re5","_id":"cludw9naa00469wv9he8g4x52"},{"post_id":"cludw9n9r00159wv9a3pb45az","tag_id":"cludw9na900449wv943fc9qs5","_id":"cludw9naa00479wv99fcy0jjm"},{"post_id":"cludw9n9s00189wv9dxenca2a","tag_id":"cludw9na9003w9wv94exe9kvi","_id":"cludw9naa00499wv905en57fd"},{"post_id":"cludw9n9t001b9wv92dlv69q7","tag_id":"cludw9na9003w9wv94exe9kvi","_id":"cludw9naa004b9wv98il63afu"},{"post_id":"cludw9n9u001d9wv9chrq4eos","tag_id":"cludw9na9003w9wv94exe9kvi","_id":"cludw9nab004d9wv90wkvac32"},{"post_id":"cludw9n9v001i9wv9hoxs7sl4","tag_id":"cludw9na9003w9wv94exe9kvi","_id":"cludw9nab004f9wv9hiesbajw"},{"post_id":"cludw9n9v001l9wv9bszc2si3","tag_id":"cludw9na9003w9wv94exe9kvi","_id":"cludw9nab004h9wv90okfghl9"},{"post_id":"cludw9n9w001p9wv9a8hnd3wu","tag_id":"cludw9na9003w9wv94exe9kvi","_id":"cludw9nab004j9wv91f5f7csl"},{"post_id":"cludw9n9x001x9wv949wzgkbp","tag_id":"cludw9nab004i9wv9bthtdygo","_id":"cludw9nac004l9wv9hjrndhev"},{"post_id":"cludw9n9y00209wv9d05p190x","tag_id":"cludw9nab004i9wv9bthtdygo","_id":"cludw9nac004n9wv9bzfaepq3"},{"post_id":"cludw9n9z00239wv99l5d0rxr","tag_id":"cludw9nab004i9wv9bthtdygo","_id":"cludw9nac004p9wv96d2ggjho"},{"post_id":"cludw9n9z00279wv97bbbadzo","tag_id":"cludw9nab004i9wv9bthtdygo","_id":"cludw9nac004r9wv9fkzpeplu"},{"post_id":"cludw9na0002a9wv92duk9x6r","tag_id":"cludw9nac004q9wv94uu07pq2","_id":"cludw9nac004t9wv9bcu5cflt"},{"post_id":"cludw9na0002e9wv95t6b8y2i","tag_id":"cludw9nac004s9wv91bsqhxp3","_id":"cludw9nad004w9wv916404m5j"},{"post_id":"cludw9na0002e9wv95t6b8y2i","tag_id":"cludw9nac004u9wv9af7nhvpm","_id":"cludw9nad004x9wv9b98wgyls"},{"post_id":"cludw9na1002i9wv9g1jz3743","tag_id":"cludw9nac004v9wv91vuw58bx","_id":"cludw9nad004z9wv900dd0jvl"},{"post_id":"cludw9na2002n9wv9dpnb7q9i","tag_id":"cludw9nad004y9wv9a501h61t","_id":"cludw9nad00519wv9bf3q2ctw"},{"post_id":"cludw9na3002t9wv98y609xoq","tag_id":"cludw9nad00509wv9c9aoftb1","_id":"cludw9nad00539wv97qptcz7i"},{"post_id":"cludw9na4002w9wv9emlua0xi","tag_id":"cludw9nad00529wv9cgmlf1kn","_id":"cludw9nad00559wv937h08f3r"},{"post_id":"cludw9na5002y9wv9gcy13k6w","tag_id":"cludw9nad00549wv91wicejqd","_id":"cludw9nad00579wv9ecj1fr7s"},{"post_id":"cludw9na500319wv99uae34lz","tag_id":"cludw9nad00569wv97qlv4qh0","_id":"cludw9nae00599wv9e7a95b3a"},{"post_id":"cludw9na600399wv9h6kvcenc","tag_id":"cludw9nad00589wv93k3x5pie","_id":"cludw9nae005a9wv929ra2blf"},{"post_id":"cludw9nai005b9wv9hjihgcso","tag_id":"cludw9naj005e9wv9edvbexj7","_id":"cludw9nak005g9wv92gx5ausc"}],"Tag":[{"name":"pytorch","_id":"cludw9n9c00049wv9bqmd1gcd"},{"name":"深度学习","_id":"cludw9n9f000b9wv9hl588g75"},{"name":"coding","_id":"cludw9n9i000f9wv93z7o2rwy"},{"name":"持续更新","_id":"cludw9n9j000i9wv90gz9h3zv"},{"name":"美食","_id":"cludw9n9k000l9wv9b8401ueh"},{"name":"小说","_id":"cludw9n9p000w9wv9953scebg"},{"name":"实验","_id":"cludw9n9t001a9wv9huh53ifq"},{"name":"python","_id":"cludw9n9v001h9wv91nj9e9q4"},{"name":"杂谈","_id":"cludw9na0002d9wv9damg3oa6"},{"name":"vscode","_id":"cludw9na2002l9wv9cqsbhw6x"},{"name":"ssh","_id":"cludw9na3002s9wv93ro154c9"},{"name":"大数据","_id":"cludw9na4002x9wv9hase7zfr"},{"name":"Java","_id":"cludw9na600359wv9b97d65jw"},{"name":"Hadoop","_id":"cludw9na7003b9wv90c0tds1c"},{"name":"Mapreduce","_id":"cludw9na7003e9wv90gxq31nf"},{"name":"大数据 Java Hadoop","_id":"cludw9na7003g9wv9clq30z0l"},{"name":"数学","_id":"cludw9na8003j9wv9527u4g7f"},{"name":"科研","_id":"cludw9na8003m9wv9fsl49u2m"},{"name":"学习","_id":"cludw9na9003v9wv98lulap2n"},{"name":"因果推断","_id":"cludw9na9003w9wv94exe9kvi"},{"name":"git","_id":"cludw9na900419wv915944re5"},{"name":"github","_id":"cludw9na900449wv943fc9qs5"},{"name":"数据库","_id":"cludw9nab004i9wv9bthtdygo"},{"name":"吉他, 编曲","_id":"cludw9nac004q9wv94uu07pq2"},{"name":"电脑","_id":"cludw9nac004s9wv91bsqhxp3"},{"name":"硬件","_id":"cludw9nac004u9wv9af7nhvpm"},{"name":"美食 菜谱","_id":"cludw9nac004v9wv91vuw58bx"},{"name":"深度学习 人工智能","_id":"cludw9nad004y9wv9a501h61t"},{"name":"学习笔记 贝叶斯推断","_id":"cludw9nad00509wv9c9aoftb1"},{"name":"学习笔记 因果推断","_id":"cludw9nad00529wv9cgmlf1kn"},{"name":"学术会议","_id":"cludw9nad00549wv91wicejqd"},{"name":"博弈论","_id":"cludw9nad00569wv97qlv4qh0"},{"name":"推荐系统","_id":"cludw9nad00589wv93k3x5pie"},{"name":"随笔 日常 骑行","_id":"cludw9naj005e9wv9edvbexj7"}]}}