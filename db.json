{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/next/source/js/algolia-search.js","path":"js/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/js/bookmark.js","path":"js/bookmark.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/motion.js","path":"js/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/next-boot.js","path":"js/next-boot.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/local-search.js","path":"js/local-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/anime.min.js","path":"lib/anime.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/utils.js","path":"js/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/schemes/pisces.js","path":"js/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-brands-400.woff2","path":"lib/font-awesome/webfonts/fa-brands-400.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-regular-400.woff2","path":"lib/font-awesome/webfonts/fa-regular-400.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/all.min.css","path":"lib/font-awesome/css/all.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-solid-900.woff2","path":"lib/font-awesome/webfonts/fa-solid-900.woff2","modified":1,"renderable":1},{"_id":"source/images/2021112601.png","path":"images/2021112601.png","modified":1,"renderable":0},{"_id":"source/images/2021112602.png","path":"images/2021112602.png","modified":1,"renderable":0},{"_id":"source/images/2021112603.png","path":"images/2021112603.png","modified":1,"renderable":0},{"_id":"source/images/2021121301.png","path":"images/2021121301.png","modified":1,"renderable":0},{"_id":"source/images/2021112604.png","path":"images/2021112604.png","modified":1,"renderable":0},{"_id":"source/images/IMG_20210321_171950.jpg","path":"images/IMG_20210321_171950.jpg","modified":1,"renderable":0},{"_id":"source/images/IMG_20210323_120734.jpg","path":"images/IMG_20210323_120734.jpg","modified":1,"renderable":0},{"_id":"source/images/IMG_20210325_104740.jpg","path":"images/IMG_20210325_104740.jpg","modified":1,"renderable":0},{"_id":"source/images/IMG_20210405_134224.jpg","path":"images/IMG_20210405_134224.jpg","modified":1,"renderable":0},{"_id":"source/images/IMG_20210405_134319.jpg","path":"images/IMG_20210405_134319.jpg","modified":1,"renderable":0},{"_id":"source/images/IMG_20210809_091606_edit_932701128736847.jpg","path":"images/IMG_20210809_091606_edit_932701128736847.jpg","modified":1,"renderable":0},{"_id":"source/images/IMG_20210925_120441.jpg","path":"images/IMG_20210925_120441.jpg","modified":1,"renderable":0},{"_id":"source/images/IMG_20210925_120635_edit_759134094171144.jpg","path":"images/IMG_20210925_120635_edit_759134094171144.jpg","modified":1,"renderable":0},{"_id":"source/images/IMG_20210925_203119.jpg","path":"images/IMG_20210925_203119.jpg","modified":1,"renderable":0},{"_id":"source/images/IMG_20210925_210835.jpg","path":"images/IMG_20210925_210835.jpg","modified":1,"renderable":0},{"_id":"source/images/IMG_20210925_210855.jpg","path":"images/IMG_20210925_210855.jpg","modified":1,"renderable":0},{"_id":"source/images/Linkedin.svg","path":"images/Linkedin.svg","modified":1,"renderable":0},{"_id":"source/images/avatar.jpg","path":"images/avatar.jpg","modified":1,"renderable":0},{"_id":"source/images/background.jpg","path":"images/background.jpg","modified":1,"renderable":0},{"_id":"source/images/c995d143ad4bd113d3b5cb035eafa40f4bfb0582.jpg","path":"images/c995d143ad4bd113d3b5cb035eafa40f4bfb0582.jpg","modified":1,"renderable":0},{"_id":"source/images/email.svg","path":"images/email.svg","modified":1,"renderable":0},{"_id":"source/images/github.svg","path":"images/github.svg","modified":1,"renderable":0},{"_id":"source/images/pytorch.png","path":"images/pytorch.png","modified":1,"renderable":0},{"_id":"source/images/qrcode_cslijt.github.io.png","path":"images/qrcode_cslijt.github.io.png","modified":1,"renderable":0},{"_id":"source/images/屏幕截图_2022-03-26_175317.jpg","path":"images/屏幕截图_2022-03-26_175317.jpg","modified":1,"renderable":0},{"_id":"source/images/屏幕截图_2022-03-26_175646.jpg","path":"images/屏幕截图_2022-03-26_175646.jpg","modified":1,"renderable":0},{"_id":"source/images/微信图片_20211001161414.jpg","path":"images/微信图片_20211001161414.jpg","modified":1,"renderable":0},{"_id":"source/images/微信图片_20211001171428.jpg","path":"images/微信图片_20211001171428.jpg","modified":1,"renderable":0},{"_id":"source/images/知乎.svg","path":"images/知乎.svg","modified":1,"renderable":0}],"Cache":[{"_id":"source/index.md","hash":"ea82c5182d66d922bbfde95951911fd4e67deb40","modified":1649296993854},{"_id":"source/_posts/2021-09-27-pytorch.md","hash":"270b6a4fa11b01f25d52fb275c2c81643c36409e","modified":1649238091960},{"_id":"source/_posts/2021-10-01-stewlamb.md","hash":"ecfd7f193fc1d45df0a06dcecaf050cd396b0ccb","modified":1649238231884},{"_id":"source/_posts/2021-09-29-food.md","hash":"a0f3cbafb199bbd0de41494d3865314d29ac660f","modified":1649238222817},{"_id":"source/_posts/2021-10-07-pytorch.md","hash":"59c582c80b3e13c38f5c25d68ef62efa674b2899","modified":1649238255444},{"_id":"source/_posts/2021-10-01-whale01.md","hash":"b3b2927c08635fa913e20d05b228bb1ef0d7c1f8","modified":1649238241519},{"_id":"source/_posts/2021-10-18-ablation.md","hash":"82f08e5684920f4264964013850b6672f1a2eeb3","modified":1649238280657},{"_id":"source/_posts/2021-10-25-python.md","hash":"ee963d97742cf4defe61b31f1efba7b0efc35762","modified":1649491447277},{"_id":"source/_posts/2021-10-26-regex.md","hash":"3fc820311de2c1a710e16aa75a698be921262ea5","modified":1649238401582},{"_id":"source/_posts/2021-11-23-delicacy.md","hash":"cb3d103adf224fed9a1cf22e5964c7fcd164e18a","modified":1649238431857},{"_id":"source/_posts/2021-11-26-vscode.md","hash":"b9d8bd10ae2d04c46455ee4eead83fbd59af8a0b","modified":1649238470569},{"_id":"source/_posts/2021-12-13-hadoop.md","hash":"71e85a28008a919b64641334db3f28075b25ef80","modified":1649238591656},{"_id":"source/_posts/2021-12-13-java.md","hash":"2688a43c1ce7ef411c2d4902262515c83191cc8d","modified":1649238632027},{"_id":"source/_posts/2021-12-29-fuzzy.md","hash":"61955f5e2523c17cd80f11ca122b24f7a59e60e5","modified":1649260980550},{"_id":"source/_posts/2022-02-22-paper.md","hash":"2299162d82f3b3cfa386122b689d5ee8345ccb92","modified":1649238658025},{"_id":"source/_posts/2022-03-26-remind.md","hash":"2382fd397fd35d1a1a576ea783ee216f2a72a7f6","modified":1649238669106},{"_id":"source/_posts/2022-04-01-plan.md","hash":"2638df47097e8a3bbdb03721c1611efaf5b7bb46","modified":1649238678870},{"_id":"source/_posts/2022-04-06-hexo.md","hash":"104f9aaea744126a74ab24069d627f97ecbc0970","modified":1649249410827},{"_id":"source/_posts/2022-04-09-python.md","hash":"e8cfd4de6ff077f72d6a229fb2d6ff1afdbe3065","modified":1650526073383},{"_id":"source/_posts/2022-04-07-casual-inference-1.md","hash":"a4ebe86b8cc36a3f4e4c863e75dbed554375de59","modified":1651070542959},{"_id":"source/_posts/2022-04-17-legend.md","hash":"233840474920ab6a1d9f6538192f9af70f7afc74","modified":1650526064833},{"_id":"source/_posts/2022-04-17-github.md","hash":"9407f927759010302dbf6296c30bebb7ee9fd34f","modified":1650526033322},{"_id":"source/_posts/2022-04-21-casual-inference-2.md","hash":"a98bac80a017ce0b1ecc29ebed5a336592393ff5","modified":1651070518504},{"_id":"source/about/index.md","hash":"6781dd0938dea885d317d4deb9b2e7550c7c0c38","modified":1649248043661},{"_id":"source/_posts/2022-04-22-casual-inference-3.md","hash":"b6f434aee5423037e729f7a2fa36ba58ef5c4bfd","modified":1651111019664},{"_id":"source/_posts/2022-04-27-casual-inference-4.md","hash":"0bd6c968818fdc3234aba8f560626e32d4642c7f","modified":1651740413842},{"_id":"source/_posts/2022-05-05-causal-inference-5.md","hash":"78d0dba36d289bfca41e623b354ad377006704e1","modified":1651806825095},{"_id":"source/tags/index.md","hash":"0022d708d44ce8886e15253bb5feba61f9c452fb","modified":1649236795845},{"_id":"source/categories/index.md","hash":"d7dc11c389a65875212803ffde140e4539fabd97","modified":1649236799583},{"_id":"source/images/2021112604.png","hash":"86b40fadbfd75b7afae3266f54e772a67ec6c6a2","modified":1637912471329},{"_id":"source/images/Linkedin.svg","hash":"c9fef67479d6a9e36dcd93e7bcf396b8dd41be7c","modified":1636976186012},{"_id":"source/images/email.svg","hash":"d347f708ecac0aad59241631a8e20999a098cf1b","modified":1636976210834},{"_id":"source/images/github.svg","hash":"328b059eb62ccdbf789100eb7fa93e0ad88baacd","modified":1636975753931},{"_id":"source/images/pytorch.png","hash":"c2e801b87de4351c4e0ee23aca1f1768b61e2ba4","modified":1633580527891},{"_id":"source/images/qrcode_cslijt.github.io.png","hash":"7242fae717ed02bd23fffcb6044c8a9dbb43aa1c","modified":1637029191368},{"_id":"source/images/屏幕截图_2022-03-26_175646.jpg","hash":"26e1a1351e575419cd154e827f9cf99569e2ff29","modified":1648288609876},{"_id":"source/images/知乎.svg","hash":"13af7dd0fecfa2111e1ad926934e3effdc8b693d","modified":1636976252400},{"_id":"source/images/2021112601.png","hash":"e097693047fe4101014ae79b1ae1efc76062b16d","modified":1637901977945},{"_id":"source/images/2021112603.png","hash":"c1052463cdc4375b1472169b592bd64f698152d9","modified":1637911359123},{"_id":"source/images/c995d143ad4bd113d3b5cb035eafa40f4bfb0582.jpg","hash":"cb074d590659e292ce0d605882a3b4b3a1f04dcd","modified":1633080352111},{"_id":"source/images/屏幕截图_2022-03-26_175317.jpg","hash":"c4a37962b06c44cf51afe57bc581c74496d5ba33","modified":1648288451693},{"_id":"source/_posts/2022-04-17-github/github20220401701.png","hash":"0c4ff2071acc36220cb757ce53a39fb341a8d9a7","modified":1650161384578},{"_id":"source/images/2021112602.png","hash":"638027646cd217ce436c31957c7158b7ea914638","modified":1637902079233},{"_id":"source/images/2021121301.png","hash":"15d5d40d42c834bebeacc41495cd204ba3f3234f","modified":1639378671587},{"_id":"source/images/微信图片_20211001171428.jpg","hash":"45a8630d8a32f35c386de921d084d4cc5bf7774b","modified":1633079681820},{"_id":"themes/next/.eslintrc.json","hash":"cc5f297f0322672fe3f684f823bc4659e4a54c41","modified":1627608806000},{"_id":"themes/next/.editorconfig","hash":"8570735a8d8d034a3a175afd1dd40b39140b3e6a","modified":1627608806000},{"_id":"themes/next/.gitattributes","hash":"a54f902957d49356376b59287b894b1a3d7a003f","modified":1627608806000},{"_id":"themes/next/.stylintrc","hash":"2cf4d637b56d8eb423f59656a11f6403aa90f550","modified":1627608806000},{"_id":"themes/next/.gitignore","hash":"56f3470755c20311ddd30d421b377697a6e5e68b","modified":1627608806000},{"_id":"themes/next/README.md","hash":"9b4b7d66aca47f9c65d6321b14eef48d95c4dff1","modified":1627608806000},{"_id":"themes/next/.travis.yml","hash":"ecca3b919a5b15886e3eca58aa84aafc395590da","modified":1627608806000},{"_id":"themes/next/LICENSE.md","hash":"18144d8ed58c75af66cb419d54f3f63374cd5c5b","modified":1627608806000},{"_id":"themes/next/_config.yml","hash":"b175fb6e4cf6b542f7f637d119899e3bc52f2a5f","modified":1650159816277},{"_id":"themes/next/.github/CODE_OF_CONDUCT.md","hash":"aa4cb7aff595ca628cb58160ee1eee117989ec4e","modified":1627608806000},{"_id":"themes/next/package.json","hash":"62fad6de02adbbba9fb096cbe2dcc15fe25f2435","modified":1627608806000},{"_id":"themes/next/gulpfile.js","hash":"1b4fc262b89948937b9e3794de812a7c1f2f3592","modified":1627608806000},{"_id":"themes/next/crowdin.yml","hash":"e026078448c77dcdd9ef50256bb6635a8f83dca6","modified":1627608806000},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"e554931b98f251fd49ff1d2443006d9ea2c20461","modified":1627608806000},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"1a435c20ae8fa183d49bbf96ac956f7c6c25c8af","modified":1627608806000},{"_id":"themes/next/.github/issue-close-app.yml","hash":"7cba457eec47dbfcfd4086acd1c69eaafca2f0cd","modified":1627608806000},{"_id":"themes/next/.github/issue_label_bot.yaml","hash":"fca600ddef6f80c5e61aeed21722d191e5606e5b","modified":1627608806000},{"_id":"themes/next/.github/config.yml","hash":"1d3f4e8794986817c0fead095c74f756d45f91ed","modified":1627608806000},{"_id":"themes/next/.github/lock.yml","hash":"61173b9522ebac13db2c544e138808295624f7fd","modified":1627608806000},{"_id":"themes/next/.github/release-drafter.yml","hash":"3cc10ce75ecc03a5ce86b00363e2a17eb65d15ea","modified":1627608806000},{"_id":"themes/next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1627608806000},{"_id":"themes/next/docs/AUTHORS.md","hash":"10135a2f78ac40e9f46b3add3e360c025400752f","modified":1627608806000},{"_id":"themes/next/.github/mergeable.yml","hash":"0ee56e23bbc71e1e76427d2bd255a9879bd36e22","modified":1627608806000},{"_id":"themes/next/.github/support.yml","hash":"d75db6ffa7b4ca3b865a925f9de9aef3fc51925c","modified":1627608806000},{"_id":"themes/next/docs/DATA-FILES.md","hash":"cddbdc91ee9e65c37a50bec12194f93d36161616","modified":1627608806000},{"_id":"themes/next/.github/stale.yml","hash":"fdf82de9284f8bc8e0b0712b4cc1cb081a94de59","modified":1627608806000},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"c7a994b9542040317d8f99affa1405c143a94a38","modified":1627608806000},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"94dc3404ccb0e5f663af2aa883c1af1d6eae553d","modified":1627608806000},{"_id":"themes/next/docs/LICENSE.txt","hash":"368bf2c29d70f27d8726dd914f1b3211cae4bbab","modified":1627608806000},{"_id":"themes/next/docs/INSTALLATION.md","hash":"af88bcce035780aaa061261ed9d0d6c697678618","modified":1627608806000},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"8b6e4b2c9cfcb969833092bdeaed78534082e3e6","modified":1627608806000},{"_id":"themes/next/docs/MATH.md","hash":"d645b025ec7fb9fbf799b9bb76af33b9f5b9ed93","modified":1627608806000},{"_id":"themes/next/languages/ar.yml","hash":"9815e84e53d750c8bcbd9193c2d44d8d910e3444","modified":1627608806000},{"_id":"themes/next/languages/default.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1627608806000},{"_id":"themes/next/languages/es.yml","hash":"c64cf05f356096f1464b4b1439da3c6c9b941062","modified":1627608806000},{"_id":"themes/next/languages/de.yml","hash":"74c59f2744217003b717b59d96e275b54635abf5","modified":1627608806000},{"_id":"themes/next/languages/en.yml","hash":"45bc5118828bdc72dcaa25282cd367c8622758cb","modified":1627608806000},{"_id":"themes/next/languages/fr.yml","hash":"752bf309f46a2cd43890b82300b342d7218d625f","modified":1627608806000},{"_id":"themes/next/languages/hu.yml","hash":"b1ebb77a5fd101195b79f94de293bcf9001d996f","modified":1627608806000},{"_id":"themes/next/languages/fa.yml","hash":"3676b32fda37e122f3c1a655085a1868fb6ad66b","modified":1627608806000},{"_id":"themes/next/languages/it.yml","hash":"44759f779ce9c260b895532de1d209ad4bd144bf","modified":1627608806000},{"_id":"themes/next/languages/id.yml","hash":"572ed855d47aafe26f58c73b1394530754881ec2","modified":1627608806000},{"_id":"themes/next/languages/ja.yml","hash":"0cf0baa663d530f22ff380a051881216d6adcdd8","modified":1627608806000},{"_id":"themes/next/languages/ko.yml","hash":"0feea9e43cd399f3610b94d755a39fff1d371e97","modified":1627608806000},{"_id":"themes/next/languages/nl.yml","hash":"5af3473d9f22897204afabc08bb984b247493330","modified":1627608806000},{"_id":"themes/next/languages/pt-BR.yml","hash":"67555b1ba31a0242b12fc6ce3add28531160e35b","modified":1627608806000},{"_id":"themes/next/languages/pt.yml","hash":"718d131f42f214842337776e1eaddd1e9a584054","modified":1627608806000},{"_id":"themes/next/languages/ru.yml","hash":"e993d5ca072f7f6887e30fc0c19b4da791ca7a88","modified":1627608806000},{"_id":"themes/next/layout/_layout.swig","hash":"cf68af4a334c866fad464c76c575cb53e38bb3fe","modified":1649235560334},{"_id":"themes/next/languages/vi.yml","hash":"93393b01df148dcbf0863f6eee8e404e2d94ef9e","modified":1627608806000},{"_id":"themes/next/languages/tr.yml","hash":"2b041eeb8bd096f549464f191cfc1ea0181daca4","modified":1627608806000},{"_id":"themes/next/languages/uk.yml","hash":"3a6d635b1035423b22fc86d9455dba9003724de9","modified":1627608806000},{"_id":"themes/next/languages/zh-HK.yml","hash":"3789f94010f948e9f23e21235ef422a191753c65","modified":1627608806000},{"_id":"themes/next/layout/archive.swig","hash":"e4e31317a8df68f23156cfc49e9b1aa9a12ad2ed","modified":1627608806000},{"_id":"themes/next/languages/zh-CN.yml","hash":"a1f15571ee7e1e84e3cc0985c3ec4ba1a113f6f8","modified":1627608806000},{"_id":"themes/next/languages/zh-TW.yml","hash":"8c09da7c4ec3fca2c6ee897b2eea260596a2baa1","modified":1627608806000},{"_id":"themes/next/layout/category.swig","hash":"1bde61cf4d2d171647311a0ac2c5c7933f6a53b0","modified":1627608806000},{"_id":"themes/next/layout/index.swig","hash":"7f403a18a68e6d662ae3e154b2c1d3bbe0801a23","modified":1627608806000},{"_id":"themes/next/layout/page.swig","hash":"db581bdeac5c75fabb0f17d7c5e746e47f2a9168","modified":1627608806000},{"_id":"themes/next/scripts/renderer.js","hash":"49a65df2028a1bc24814dc72fa50d52231ca4f05","modified":1627608806000},{"_id":"themes/next/layout/post.swig","hash":"2f6d992ced7e067521fdce05ffe4fd75481f41c5","modified":1627608806000},{"_id":"themes/next/layout/tag.swig","hash":"0dfb653bd5de980426d55a0606d1ab122bd8c017","modified":1627608806000},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"34b88784ec120dfdc20fa82aadeb5f64ef614d14","modified":1627608806000},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"0bd2d696f62a997a11a7d84fec0130122234174e","modified":1627608806000},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"fb23b85db6f7d8279d73ae1f41631f92f64fc864","modified":1627608806000},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"d3f03be036b75dc71cf3c366cd75aee7c127c874","modified":1627608806000},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"9c4fe2873123bf9ceacab5c50d17d8a0f1baef27","modified":1627608806000},{"_id":"themes/next/docs/ru/README.md","hash":"85dd68ed1250897a8e4a444a53a68c1d49eb7e11","modified":1627608806000},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"5237a368ab99123749d724b6c379415f2c142a96","modified":1627608806000},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"ca1030efdfca5e20f9db2e7a428998e66a24c0d0","modified":1627608806000},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"8b18f84503a361fc712b0fe4d4568e2f086ca97d","modified":1627608806000},{"_id":"themes/next/.github/ISSUE_TEMPLATE/bug-report.md","hash":"c3e6b8196c983c40fd140bdeca012d03e6e86967","modified":1627608806000},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"579c7bd8341873fb8be4732476d412814f1a3df7","modified":1627608806000},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"b92585d251f1f9ebe401abb5d932cb920f9b8b10","modified":1627608806000},{"_id":"themes/next/.github/ISSUE_TEMPLATE/feature-request.md","hash":"12d99fb8b62bd9e34d9672f306c9ae4ace7e053e","modified":1627608806000},{"_id":"themes/next/docs/zh-CN/README.md","hash":"c038629ff8f3f24e8593c4c8ecf0bef3a35c750d","modified":1627608806000},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"d9ce7331c1236bbe0a551d56cef2405e47e65325","modified":1627608806000},{"_id":"themes/next/.github/ISSUE_TEMPLATE/other.md","hash":"d3efc0df0275c98440e69476f733097916a2d579","modified":1627608806000},{"_id":"themes/next/.github/ISSUE_TEMPLATE/question.md","hash":"53df7d537e26aaf062d70d86835c5fd8f81412f3","modified":1627608806000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"9c8dc0b8170679cdc1ee9ee8dbcbaebf3f42897b","modified":1627608806000},{"_id":"themes/next/layout/_partials/comments.swig","hash":"db6ab5421b5f4b7cb32ac73ad0e053fdf065f83e","modified":1627608806000},{"_id":"themes/next/layout/_macro/post.swig","hash":"090b5a9b6fca8e968178004cbd6cff205b7eba57","modified":1627608806000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"71655ca21907e9061b6e8ac52d0d8fbf54d0062b","modified":1627608806000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"b87b622637c82d296163577b834855b0bd98ba0c","modified":1649319587374},{"_id":"themes/next/layout/_partials/languages.swig","hash":"ba9e272f1065b8f0e8848648caa7dea3f02c6be1","modified":1627608806000},{"_id":"themes/next/layout/_scripts/index.swig","hash":"cea942b450bcb0f352da78d76dc6d6f1d23d5029","modified":1627608806000},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"d1f2bfde6f1da51a2b35a7ab9e7e8eb6eefd1c6b","modified":1627608806000},{"_id":"themes/next/layout/_partials/widgets.swig","hash":"83a40ce83dfd5cada417444fb2d6f5470aae6bb0","modified":1627608806000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9876dbfc15713c7a47d4bcaa301f4757bd978269","modified":1627608806000},{"_id":"themes/next/layout/_scripts/three.swig","hash":"a4f42f2301866bd25a784a2281069d8b66836d0b","modified":1627608806000},{"_id":"themes/next/layout/_scripts/pjax.swig","hash":"4d2c93c66e069852bb0e3ea2e268d213d07bfa3f","modified":1627608806000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"ef38c213679e7b6d2a4116f56c9e55d678446069","modified":1649256051416},{"_id":"themes/next/layout/_third-party/baidu-push.swig","hash":"b782eb2e34c0c15440837040b5d65b093ab6ec04","modified":1627608806000},{"_id":"themes/next/layout/_third-party/index.swig","hash":"b0936803430f735819d8d01996c21ed827de3d8e","modified":1649258049418},{"_id":"themes/next/layout/_third-party/quicklink.swig","hash":"311e5eceec9e949f1ea8d623b083cec0b8700ff2","modified":1627608806000},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"2731e262a6b88eaee2a3ca61e6a3583a7f594702","modified":1627608806000},{"_id":"themes/next/source/js/algolia-search.js","hash":"498d233eb5c7af6940baf94c1a1c36fdf1dd2636","modified":1627608806000},{"_id":"themes/next/source/css/_colors.styl","hash":"a8442520f719d3d7a19811cb3b85bcfd4a596e1f","modified":1627608806000},{"_id":"themes/next/source/css/_mixins.styl","hash":"e31a557f8879c2f4d8d5567ee1800b3e03f91f6e","modified":1627608806000},{"_id":"themes/next/source/js/bookmark.js","hash":"9734ebcb9b83489686f5c2da67dc9e6157e988ad","modified":1627608806000},{"_id":"themes/next/source/css/main.styl","hash":"a3a3bbb5a973052f0186b3523911cb2539ff7b88","modified":1627608806000},{"_id":"themes/next/source/js/motion.js","hash":"72df86f6dfa29cce22abeff9d814c9dddfcf13a9","modified":1627608806000},{"_id":"themes/next/source/js/local-search.js","hash":"35ccf100d8f9c0fd6bfbb7fa88c2a76c42a69110","modified":1627608806000},{"_id":"themes/next/source/js/next-boot.js","hash":"a1b0636423009d4a4e4cea97bcbf1842bfab582c","modified":1627608806000},{"_id":"themes/next/source/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1627608806000},{"_id":"themes/next/source/js/utils.js","hash":"730cca7f164eaf258661a61ff3f769851ff1e5da","modified":1627608806000},{"_id":"themes/next/scripts/events/index.js","hash":"5743cde07f3d2aa11532a168a652e52ec28514fd","modified":1627608806000},{"_id":"themes/next/scripts/filters/default-injects.js","hash":"aec50ed57b9d5d3faf2db3c88374f107203617e0","modified":1627608806000},{"_id":"themes/next/scripts/filters/front-matter.js","hash":"703bdd142a671b4b67d3d9dfb4a19d1dd7e7e8f7","modified":1627608806000},{"_id":"themes/next/scripts/filters/locals.js","hash":"b193a936ee63451f09f8886343dcfdca577c0141","modified":1627608806000},{"_id":"themes/next/scripts/filters/minify.js","hash":"19985723b9f677ff775f3b17dcebf314819a76ac","modified":1627608806000},{"_id":"themes/next/scripts/filters/post.js","hash":"44ba9b1c0bdda57590b53141306bb90adf0678db","modified":1627608806000},{"_id":"themes/next/scripts/helpers/engine.js","hash":"bdb424c3cc0d145bd0c6015bb1d2443c8a9c6cda","modified":1627608806000},{"_id":"themes/next/scripts/tags/button.js","hash":"8c6b45f36e324820c919a822674703769e6da32c","modified":1627608806000},{"_id":"themes/next/scripts/helpers/font.js","hash":"40cf00e9f2b7aa6e5f33d412e03ed10304b15fd7","modified":1627608806000},{"_id":"themes/next/scripts/helpers/next-config.js","hash":"5e11f30ddb5093a88a687446617a46b048fa02e5","modified":1627608806000},{"_id":"themes/next/scripts/helpers/next-url.js","hash":"958e86b2bd24e4fdfcbf9ce73e998efe3491a71f","modified":1627608806000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"f1826ade2d135e2f60e2d95cb035383685b3370c","modified":1627608806000},{"_id":"themes/next/scripts/tags/caniuse.js","hash":"94e0bbc7999b359baa42fa3731bdcf89c79ae2b3","modified":1627608806000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"d902fd313e8d35c3cc36f237607c2a0536c9edf1","modified":1627608806000},{"_id":"themes/next/scripts/tags/label.js","hash":"fc5b267d903facb7a35001792db28b801cccb1f8","modified":1627608806000},{"_id":"themes/next/scripts/tags/mermaid.js","hash":"983c6c4adea86160ecc0ba2204bc312aa338121d","modified":1627608806000},{"_id":"themes/next/scripts/tags/note.js","hash":"0a02bb4c15aec41f6d5f1271cdb5c65889e265d9","modified":1627608806000},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"c70f8e71e026e878a4e9d5ab3bbbf9b0b23c240c","modified":1627608806000},{"_id":"themes/next/scripts/tags/pdf.js","hash":"8c613b39e7bff735473e35244b5629d02ee20618","modified":1627608806000},{"_id":"themes/next/scripts/tags/tabs.js","hash":"93d8a734a3035c1d3f04933167b500517557ba3e","modified":1627608806000},{"_id":"themes/next/scripts/tags/video.js","hash":"e5ff4c44faee604dd3ea9db6b222828c4750c227","modified":1627608806000},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"810d544019e4a8651b756dd23e5592ee851eda71","modified":1627608806000},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"000bad572d76ee95d9c0a78f9ccdc8d97cc7d4b4","modified":1627608806000},{"_id":"themes/next/layout/_partials/header/menu-item.swig","hash":"9440d8a3a181698b80e1fa47f5104f4565d8cdf3","modified":1627608806000},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"d31f896680a6c2f2c3f5128b4d4dd46c87ce2130","modified":1627608806000},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"7dbe93b8297b746afb89700b4d29289556e85267","modified":1627608806000},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"ae2261bea836581918a1c2b0d1028a78718434e0","modified":1627608806000},{"_id":"themes/next/layout/_partials/page/breadcrumb.swig","hash":"c851717497ca64789f2176c9ecd1dedab237b752","modified":1627608806000},{"_id":"themes/next/layout/_partials/post/post-followme.swig","hash":"ceba16b9bd3a0c5c8811af7e7e49d0f9dcb2f41e","modified":1627608806000},{"_id":"themes/next/layout/_partials/page/page-header.swig","hash":"9b7a66791d7822c52117fe167612265356512477","modified":1627608806000},{"_id":"themes/next/layout/_partials/search/algolia-search.swig","hash":"48430bd03b8f19c9b8cdb2642005ed67d56c6e0b","modified":1627608806000},{"_id":"themes/next/layout/_partials/post/post-copyright.swig","hash":"954ad71536b6eb08bd1f30ac6e2f5493b69d1c04","modified":1627608806000},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"2be50f9bfb1c56b85b3b6910a7df27f51143632c","modified":1627608806000},{"_id":"themes/next/layout/_partials/sidebar/site-overview.swig","hash":"c46849e0af8f8fb78baccd40d2af14df04a074af","modified":1627608806000},{"_id":"themes/next/layout/_partials/post/post-footer.swig","hash":"8f14f3f8a1b2998d5114cc56b680fb5c419a6b07","modified":1627608806000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"f48a6a8eba04eb962470ce76dd731e13074d4c45","modified":1627608806000},{"_id":"themes/next/layout/_scripts/pages/schedule.swig","hash":"077b5d66f6309f2e7dcf08645058ff2e03143e6c","modified":1627608806000},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1627608806000},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"4790058691b7d36cf6d2d6b4e93795a7b8d608ad","modified":1627608806000},{"_id":"themes/next/layout/_partials/post/post-reward.swig","hash":"2b1a73556595c37951e39574df5a3f20b2edeaef","modified":1627608806000},{"_id":"themes/next/layout/_partials/post/post-related.swig","hash":"f79c44692451db26efce704813f7a8872b7e63a0","modified":1627608806000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1627608806000},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"2fa2b51d56bfac6a1ea76d651c93b9c20b01c09b","modified":1627608806000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1627608806000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1627608806000},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"1472cabb0181f60a6a0b7fec8899a4d03dfb2040","modified":1627608806000},{"_id":"themes/next/layout/_third-party/analytics/growingio.swig","hash":"5adea065641e8c55994dd2328ddae53215604928","modified":1627608806000},{"_id":"themes/next/layout/_third-party/chat/tidio.swig","hash":"cba0e6e0fad08568a9e74ba9a5bee5341cfc04c1","modified":1627608806000},{"_id":"themes/next/layout/_third-party/chat/chatra.swig","hash":"f910618292c63871ca2e6c6e66c491f344fa7b1f","modified":1627608806000},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"f39a5bf3ce9ee9adad282501235e0c588e4356ec","modified":1627608806000},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"6c5976621efd5db5f7c4c6b4f11bc79d6554885f","modified":1627608806000},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"b14908644225d78c864cd0a9b60c52407de56183","modified":1627608806000},{"_id":"themes/next/layout/_third-party/comments/disqusjs.swig","hash":"82f5b6822aa5ec958aa987b101ef860494c6cf1f","modified":1627608806000},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"f7a9eca599a682479e8ca863db59be7c9c7508c8","modified":1627608806000},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"4791c977a730f29c846efcf6c9c15131b9400ead","modified":1627608806000},{"_id":"themes/next/layout/_third-party/comments/gitalk.swig","hash":"ddf2e9cc97960284550fcdfbef1e2da0bf966439","modified":1649259458396},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"be0a8eccf1f6dc21154af297fc79555343031277","modified":1627608806000},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"ecf751321e799f0fb3bf94d049e535130e2547aa","modified":1627608806000},{"_id":"themes/next/layout/_third-party/statistics/busuanzi-counter.swig","hash":"4b1986e43d6abce13450d2b41a736dd6a5620a10","modified":1627608806000},{"_id":"themes/next/layout/_third-party/statistics/cnzz-analytics.swig","hash":"a17ace37876822327a2f9306a472974442c9005d","modified":1627608806000},{"_id":"themes/next/layout/_third-party/search/algolia-search.swig","hash":"d35a999d67f4c302f76fdf13744ceef3c6506481","modified":1627608806000},{"_id":"themes/next/layout/_third-party/statistics/firestore.swig","hash":"b26ac2bfbe91dd88267f8b96aee6bb222b265b7a","modified":1627608806000},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"767b6c714c22588bcd26ba70b0fc19b6810cbacd","modified":1627608806000},{"_id":"themes/next/layout/_third-party/statistics/index.swig","hash":"5f6a966c509680dbfa70433f9d658cee59c304d7","modified":1627608806000},{"_id":"themes/next/layout/_third-party/search/swiftype.swig","hash":"ba0dbc06b9d244073a1c681ff7a722dcbf920b51","modified":1627608806000},{"_id":"themes/next/layout/_third-party/tags/mermaid.swig","hash":"f3c43664a071ff3c0b28bd7e59b5523446829576","modified":1627608806000},{"_id":"themes/next/layout/_third-party/statistics/lean-analytics.swig","hash":"d56d5af427cdfecc33a0f62ee62c056b4e33d095","modified":1627608806000},{"_id":"themes/next/layout/_third-party/tags/pdf.swig","hash":"d30b0e255a8092043bac46441243f943ed6fb09b","modified":1627608806000},{"_id":"themes/next/source/js/schemes/muse.js","hash":"1eb9b88103ddcf8827b1a7cbc56471a9c5592d53","modified":1627608806000},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"f4e694e5db81e57442c7e34505a416d818b3044a","modified":1627608806000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"f70be8e229da7e1715c11dd0e975a2e71e453ac8","modified":1627608806000},{"_id":"themes/next/source/js/schemes/pisces.js","hash":"0ac5ce155bc58c972fe21c4c447f85e6f8755c62","modified":1627608806000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"62df49459d552bbf73841753da8011a1f5e875c8","modified":1627608806000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"612ec843372dae709acb17112c1145a53450cc59","modified":1627608806000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"818508748b7a62e02035e87fe58e75b603ed56dc","modified":1627608806000},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1627608806000},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1627608806000},{"_id":"themes/next/scripts/events/lib/config.js","hash":"d34c6040b13649714939f59be5175e137de65ede","modified":1627608806000},{"_id":"themes/next/scripts/filters/comment/changyan.js","hash":"a54708fd9309b4357c423a3730eb67f395344a5e","modified":1627608806000},{"_id":"themes/next/scripts/events/lib/injects-point.js","hash":"6661c1c91c7cbdefc6a5e6a034b443b8811235a1","modified":1627608806000},{"_id":"themes/next/scripts/filters/comment/common.js","hash":"2486f3e0150c753e5f3af1a3665d074704b8ee2c","modified":1627608806000},{"_id":"themes/next/scripts/events/lib/injects.js","hash":"f233d8d0103ae7f9b861344aa65c1a3c1de8a845","modified":1627608806000},{"_id":"themes/next/scripts/filters/comment/default-config.js","hash":"7f2d93af012c1e14b8596fecbfc7febb43d9b7f5","modified":1627608806000},{"_id":"themes/next/scripts/filters/comment/disqus.js","hash":"4c0c99c7e0f00849003dfce02a131104fb671137","modified":1627608806000},{"_id":"themes/next/scripts/filters/comment/disqusjs.js","hash":"7f8b92913d21070b489457fa5ed996d2a55f2c32","modified":1627608806000},{"_id":"themes/next/scripts/filters/comment/gitalk.js","hash":"e51dc3072c1ba0ea3008f09ecae8b46242ec6021","modified":1627608806000},{"_id":"themes/next/source/css/_common/outline/mobile.styl","hash":"681d33e3bc85bdca407d93b134c089264837378c","modified":1627608806000},{"_id":"themes/next/scripts/filters/comment/livere.js","hash":"d5fefc31fba4ab0188305b1af1feb61da49fdeb0","modified":1627608806000},{"_id":"themes/next/scripts/filters/comment/valine.js","hash":"6cbd85f9433c06bae22225ccf75ac55e04f2d106","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"ca5e70662dcfb261c25191cc5db5084dcf661c76","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"a47725574e1bee3bc3b63b0ff2039cc982b17eff","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"8e7b57a72e757cf95278239641726bb2d5b869d1","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/reading-progress.styl","hash":"2e3bf7baf383c9073ec5e67f157d3cb3823c0957","modified":1627608806000},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"7785bd756e0c4acede3a47fec1ed7b55988385a5","modified":1627608806000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"0b2c4b78eead410020d7c4ded59c75592a648df8","modified":1627608806000},{"_id":"themes/next/source/css/_common/scaffolding/comments.styl","hash":"b1f0fab7344a20ed6748b04065b141ad423cf4d9","modified":1627608806000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"a1690e035b505d28bdef2b4424c13fc6312ab049","modified":1627608806000},{"_id":"themes/next/source/css/_common/scaffolding/buttons.styl","hash":"a2e9e00962e43e98ec2614d6d248ef1773bb9b78","modified":1627608806000},{"_id":"themes/next/source/css/_common/scaffolding/pagination.styl","hash":"8f58570a1bbc34c4989a47a1b7d42a8030f38b06","modified":1627608806000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"b56367ea676ea8e8783ea89cd4ab150c7da7a060","modified":1627608806000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"523fb7b653b87ae37fc91fc8813e4ffad87b0d7e","modified":1627608806000},{"_id":"themes/next/source/css/_schemes/Mist/_layout.styl","hash":"bb7ace23345364eb14983e860a7172e1683a4c94","modified":1627608806000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"f6516d0f7d89dc7b6c6e143a5af54b926f585d82","modified":1649237514467},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"7104b9cef90ca3b140d7a7afcf15540a250218fc","modified":1627608806000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"18ce72d90459c9aa66910ac64eae115f2dde3767","modified":1627608806000},{"_id":"themes/next/source/css/_common/scaffolding/toggles.styl","hash":"179e33b8ac7f4d8a8e76736a7e4f965fe9ab8b42","modified":1627608806000},{"_id":"themes/next/source/css/_schemes/Muse/_header.styl","hash":"f0131db6275ceaecae7e1a6a3798b8f89f6c850d","modified":1627608806000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"a717969829fa6ef88225095737df3f8ee86c286b","modified":1627608806000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expand.styl","hash":"6136da4bbb7e70cec99f5c7ae8c7e74f5e7c261a","modified":1627608806000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"4d1c17345d2d39ef7698f7acf82dfc0f59308c34","modified":1627608806000},{"_id":"themes/next/source/css/_schemes/Muse/_sidebar.styl","hash":"2b2e7b5cea7783c9c8bb92655e26a67c266886f0","modified":1627608806000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"93db5dafe9294542a6b5f647643cb9deaced8e06","modified":1627608806000},{"_id":"themes/next/source/css/_schemes/Muse/_sub-menu.styl","hash":"c48ccd8d6651fe1a01faff8f01179456d39ba9b1","modified":1627608806000},{"_id":"themes/next/source/css/_schemes/Pisces/_header.styl","hash":"e282df938bd029f391c466168d0e68389978f120","modified":1649237575757},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1627608806000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"70a4324b70501132855b5e59029acfc5d3da1ebd","modified":1627608806000},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"260bb01acd44d88dcb7f501a238ab968f86bef9e","modified":1627608806000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"85da2f3006f4bef9a2199416ecfab4d288f848c4","modified":1627608806000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"44f47c88c06d89d06f220f102649057118715828","modified":1627608806000},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"e740deadcfc4f29c5cb01e40f9df6277262ba4e3","modified":1627608806000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1627608806000},{"_id":"themes/next/source/lib/font-awesome/css/all.min.css","hash":"0038dc97c79451578b7bd48af60ba62282b4082b","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"2bd0eb1512415325653b26d62a4463e6de83c5ac","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"e771dcb0b4673e063c0f3e2d73e7336ac05bcd57","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"e75693f33dbc92afc55489438267869ae2f3db54","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"fafc96c86926b22afba8bb9418c05e6afbc05a57","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f49ca072b5a800f735e8f01fc3518f885951dd8e","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"902569a9dea90548bec21a823dd3efd94ff7c133","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"7504dbc5c70262b048143b2c37d2b5aa2809afa2","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/pages/tag-cloud.styl","hash":"d21d4ac1982c13d02f125a67c065412085a92ff2","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"ded41fd9d20a5e8db66aaff7cc50f105f5ef2952","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/post/post-header.styl","hash":"65cb6edb69e94e70e3291e9132408361148d41d5","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"6a97bcfa635d637dc59005be3b931109e0d1ead5","modified":1627608806000},{"_id":"themes/next/source/css/_common/outline/footer/footer.styl","hash":"454a4aebfabb4469b92a8cbb49f46c49ac9bf165","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/post/post-followme.styl","hash":"1e4190c10c9e0c9ce92653b0dbcec21754b0b69d","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"72d495a88f7d6515af425c12cbc67308a57d88ea","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"f5c2788a78790aca1a2f37f7149d6058afb539e0","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"d114b2a531129e739a27ba6271cfe6857aa9a865","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"99e12c9ce3d14d4837e3d3f12fc867ba9c565317","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"5b5649b9749e3fd8b63aef22ceeece0a6e1df605","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/third-party/gitalk.styl","hash":"8a7fc03a568b95be8d3337195e38bc7ec5ba2b23","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/third-party/math.styl","hash":"b49e9fbd3c182b8fc066b8c2caf248e3eb748619","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"a760ee83ba6216871a9f14c5e56dc9bd0d9e2103","modified":1627608806000},{"_id":"themes/next/source/css/_common/outline/header/bookmark.styl","hash":"e2d606f1ac343e9be4f15dbbaf3464bc4df8bf81","modified":1627608806000},{"_id":"themes/next/source/css/_common/outline/header/github-banner.styl","hash":"e7a9fdb6478b8674b1cdf94de4f8052843fb71d9","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"e2992846b39bf3857b5104675af02ba73e72eed5","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/third-party/search.styl","hash":"9f0b93d109c9aec79450c8a0cf4a4eab717d674d","modified":1627608806000},{"_id":"themes/next/source/css/_common/outline/header/header.styl","hash":"a793cfff86ad4af818faef04c18013077873f8f0","modified":1627608806000},{"_id":"themes/next/source/css/_common/outline/header/headerband.styl","hash":"0caf32492692ba8e854da43697a2ec8a41612194","modified":1627608806000},{"_id":"themes/next/source/css/_common/outline/header/menu.styl","hash":"5f432a6ed9ca80a413c68b00e93d4a411abf280a","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"9a878d0119785a2316f42aebcceaa05a120b9a7a","modified":1627608806000},{"_id":"themes/next/source/css/_common/outline/header/site-meta.styl","hash":"45a239edca44acecf971d99b04f30a1aafbf6906","modified":1627608806000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"fa0222197b5eee47e18ac864cdc6eac75678b8fe","modified":1627608806000},{"_id":"themes/next/source/css/_common/outline/header/site-nav.styl","hash":"b2fc519828fe89a1f8f03ff7b809ad68cd46f3d7","modified":1627608806000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"2cb1876e9e0c9ac32160888af27b1178dbcb0616","modified":1627608806000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"44487d9ab290dc97871fa8dd4487016deb56e123","modified":1627608806000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"1f0e7fbe80956f47087c2458ea880acf7a83078b","modified":1627608806000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-dimmer.styl","hash":"9b479c2f9a9bfed77885e5093b8245cc5d768ec7","modified":1627608806000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"a960a2dd587b15d3b3fe1b59525d6fa971c6a6ec","modified":1627608806000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"b3220db827e1adbca7880c2bb23e78fa7cbe95cb","modified":1627608806000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"a05a4031e799bc864a4536f9ef61fe643cd421af","modified":1627608806000},{"_id":"themes/next/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"f71a3e86c05ea668b008cf05a81f67d92b6d65e4","modified":1627608806000},{"_id":"themes/next/source/css/_common/outline/sidebar/site-state.styl","hash":"2a47f8a6bb589c2fb635e6c1e4a2563c7f63c407","modified":1627608806000},{"_id":"themes/next/source/css/_common/scaffolding/highlight/diff.styl","hash":"d3f73688bb7423e3ab0de1efdf6db46db5e34f80","modified":1627608806000},{"_id":"themes/next/source/css/_common/scaffolding/highlight/highlight.styl","hash":"35c871a809afa8306c8cde13651010e282548bc6","modified":1627608806000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar.styl","hash":"a9cd93c36bae5af9223e7804963096274e8a4f03","modified":1627608806000},{"_id":"themes/next/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"1d2778ca5aeeeafaa690dc2766b01b352ab76a02","modified":1627608806000},{"_id":"themes/next/source/css/_common/scaffolding/highlight/theme.styl","hash":"3b3acc5caa0b95a2598bef4eeacb21bab21bea56","modified":1627608806000},{"_id":"themes/next/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"709d10f763e357e1472d6471f8be384ec9e2d983","modified":1627608806000},{"_id":"themes/next/source/css/_common/scaffolding/tags/label.styl","hash":"d7fce4b51b5f4b7c31d93a9edb6c6ce740aa0d6b","modified":1627608806000},{"_id":"themes/next/source/css/_common/scaffolding/tags/note.styl","hash":"e4d9a77ffe98e851c1202676940097ba28253313","modified":1627608806000},{"_id":"themes/next/source/css/_common/scaffolding/tags/tabs.styl","hash":"f23670f1d8e749f3e83766d446790d8fd9620278","modified":1627608806000},{"_id":"themes/next/source/css/_common/scaffolding/tags/tags.styl","hash":"9e4c0653cfd3cc6908fa0d97581bcf80861fb1e7","modified":1627608806000},{"_id":"themes/next/source/css/_common/scaffolding/tags/pdf.styl","hash":"b49c64f8e9a6ca1c45c0ba98febf1974fdd03616","modified":1627608806000},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"509988477da79c146cb93fb728405f18e923c2de","modified":1627608806000},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"75a88815c47a249eadb5f0edc1675957f860cca7","modified":1627608806000},{"_id":"source/images/IMG_20210925_203119.jpg","hash":"2e9abe7309e6e97c2123978bfab497e46e858902","modified":1632917523931},{"_id":"source/images/avatar.jpg","hash":"15683b2f7f56946cc4639cbd21441ec3e87add35","modified":1632917523974},{"_id":"source/images/IMG_20210925_120635_edit_759134094171144.jpg","hash":"7224ffbd056b66d4a804fcacd514b850b314efa0","modified":1632917523920},{"_id":"source/images/IMG_20210925_210855.jpg","hash":"fa759ff825b95129080a0c904880240177afb55f","modified":1632917523957},{"_id":"source/images/IMG_20210809_091606_edit_932701128736847.jpg","hash":"598dbcf1c15c494679c130432aa0f814c9d5e7b7","modified":1632917523895},{"_id":"source/images/IMG_20210925_210835.jpg","hash":"b31a89e566d3addbb9d74dac9893894984c9fa17","modified":1632917523942},{"_id":"source/images/IMG_20210925_120441.jpg","hash":"a267aeacf92ab8d504ad7b3b315c380e8056456d","modified":1632917523912},{"_id":"source/images/微信图片_20211001161414.jpg","hash":"1878e9bac84ead0d7444adeb7b4c3f36b63e4c1a","modified":1633076080727},{"_id":"source/images/IMG_20210323_120734.jpg","hash":"ba5f11fde2b69fa608712e6b9939df96174cecc1","modified":1632917523649},{"_id":"themes/next/images/avatar.jpg","hash":"15683b2f7f56946cc4639cbd21441ec3e87add35","modified":1632917523974},{"_id":"source/images/IMG_20210321_171950.jpg","hash":"af85f769e58663ec27832b75c01724c16a963172","modified":1632917523629},{"_id":"source/images/IMG_20210405_134224.jpg","hash":"3eeaa0239bfff2a50721fa503ac1c607bf0a4471","modified":1632917523732},{"_id":"source/images/IMG_20210325_104740.jpg","hash":"55ab15bbe191dce47fa98b7064740b4d86aa8d7a","modified":1632917523699},{"_id":"source/images/IMG_20210405_134319.jpg","hash":"9b3c658843fa18464120a82be9431e0c881b8e06","modified":1632917523877},{"_id":"source/images/background.jpg","hash":"9b3c658843fa18464120a82be9431e0c881b8e06","modified":1632917523877},{"_id":"public/search.xml","hash":"b398808e725852902ab75c0ecc60488cafdf8394","modified":1651806944595},{"_id":"public/leancloud_counter_security_urls.json","hash":"901c15d43cfece6e552361f5252787127d9e2c63","modified":1651806944595},{"_id":"public/index.html","hash":"5dfc303a6d4171bf9b6dbe46269420cb281f7a10","modified":1651806944595},{"_id":"public/about/index.html","hash":"c954ce745c575fa3bc64f5d7cfddf4e9d8585e00","modified":1651806944595},{"_id":"public/2022/04/27/2022-04-27-casual-inference-4/index.html","hash":"30d726981a864ea1d5bfe47b06656b8c4ea0b6d0","modified":1651806944595},{"_id":"public/2022/05/05/2022-05-05-causal-inference-5/index.html","hash":"7444c28481302c5693f51e1b521903f67a2b5ded","modified":1651806944595},{"_id":"public/tags/index.html","hash":"dfa08939ed5a18f8b0d5bc89acd7933a0d97ad63","modified":1651806944595},{"_id":"public/categories/index.html","hash":"e3ff52b518bca1bbfa5c504a2797a82966f44715","modified":1651806944595},{"_id":"public/2022/04/22/2022-04-22-casual-inference-3/index.html","hash":"c2fd94cd2e56c5ffa14b309cebcdbbf357af48be","modified":1651806944595},{"_id":"public/2022/04/21/2022-04-21-casual-inference-2/index.html","hash":"f4f94298f5202d1429ea823868a872ef1a7cb63a","modified":1651806944595},{"_id":"public/2022/04/17/2022-04-17-legend/index.html","hash":"f2c3dc67d4f5fb81c1b479dac0579ff6fbcb4209","modified":1651806944595},{"_id":"public/2022/04/17/2022-04-17-github/index.html","hash":"cba00ca5ee865e0f75dfb27a86a5ba2a1c152aab","modified":1651806944595},{"_id":"public/2022/04/09/2022-04-09-python/index.html","hash":"f7c603205591cf633278f5e14d462dcec9efa810","modified":1651806944595},{"_id":"public/2022/04/07/2022-04-07-casual-inference-1/index.html","hash":"fc0d1397855e7766c6ee78dc8ba3ded4ec3619c2","modified":1651806944595},{"_id":"public/2022/04/06/2022-04-06-hexo/index.html","hash":"5f6d8ef49c27017d0189c081bd91a81eeb2fcac9","modified":1651806944595},{"_id":"public/2022/04/01/2022-04-01-plan/index.html","hash":"3c5ee27c5fc906b3bf33a807b860d0285d737407","modified":1651806944595},{"_id":"public/2022/03/26/2022-03-26-remind/index.html","hash":"3111fd4657cef6d01e8ac8c2a06cb8e8b9cb8fbe","modified":1651806944595},{"_id":"public/2022/02/22/2022-02-22-paper/index.html","hash":"0845c394bb5f970c9e804fcb2e10e079c4e3080d","modified":1651806944595},{"_id":"public/2021/12/29/2021-12-29-fuzzy/index.html","hash":"7c9f4c492b2434bd1aca77429fff14c2b54f6c89","modified":1651806944595},{"_id":"public/2021/12/13/2021-12-13-hadoop/index.html","hash":"f4a9c0e9a10fea0e647ddecc755f5dc08c5e6618","modified":1651806944595},{"_id":"public/2021/12/13/2021-12-13-java/index.html","hash":"98432012c461a7872e8254dbf8dd74c10235f731","modified":1651806944595},{"_id":"public/2021/11/26/2021-11-26-vscode/index.html","hash":"107eba72c06246931aee0533e42b8e348b9e1c89","modified":1651806944595},{"_id":"public/2021/11/23/2021-11-23-delicacy/index.html","hash":"f9549e841fc9e4c9bbc89135f3bcba827ee70424","modified":1651806944595},{"_id":"public/2021/10/26/2021-10-26-regex/index.html","hash":"c7f9bc1b1a49b7d997950b7c2c42391c461487ba","modified":1651806944595},{"_id":"public/2021/10/25/2021-10-25-python/index.html","hash":"5c0c3b98b66ef634970150d30757372fb134b2cc","modified":1651806944595},{"_id":"public/2021/10/18/2021-10-18-ablation/index.html","hash":"05478422469af35654b747cb7fbd25ce73625e14","modified":1651806944595},{"_id":"public/2021/10/07/2021-10-07-pytorch/index.html","hash":"6521488d918b9e32b4f52c8fbf1040115323e7be","modified":1651806944595},{"_id":"public/2021/10/01/2021-10-01-whale01/index.html","hash":"93694fd2cdc19365eb372bd502cd0924b5dc9e7c","modified":1651806944595},{"_id":"public/2021/10/01/2021-10-01-stewlamb/index.html","hash":"2acae44a59b3ed5127438cb5db2a81ac2b6a9a10","modified":1651806944595},{"_id":"public/2021/09/29/2021-09-29-food/index.html","hash":"15ee5533f5e4c7e1e24588dede11f1a8680ae4d6","modified":1651806944595},{"_id":"public/2021/09/27/2021-09-27-pytorch/index.html","hash":"cc8bfd5b0335edf6050e8b296f6537e0889b9a03","modified":1651806944595},{"_id":"public/archives/index.html","hash":"5da77163841bcacda0778fa5e8bd585c402ea9e8","modified":1651806944595},{"_id":"public/archives/page/2/index.html","hash":"6ae6775b764a6dafb07a501ca6fc30eca2c87e2f","modified":1651806944595},{"_id":"public/archives/page/3/index.html","hash":"ba396dc5bb291623ebb02f258bbcff695c8787a9","modified":1651806944595},{"_id":"public/archives/2021/index.html","hash":"05a3e1a25372f9422a342c081658b20ca683bf10","modified":1651806944595},{"_id":"public/archives/2021/page/2/index.html","hash":"9584e4b741ca9f05fde0ec25b4017768e42c0ab0","modified":1651806944595},{"_id":"public/archives/2021/09/index.html","hash":"919a0d58bd2ada409a3acc6d9b5f346f2024256d","modified":1651806944595},{"_id":"public/archives/2021/10/index.html","hash":"2ae6dbea0ab3e5d680fb8d2a6dfde1aae2c4fdda","modified":1651806944595},{"_id":"public/archives/2021/11/index.html","hash":"4fc93f57e08294c85ccea1a0f4e5770ff6f96f1b","modified":1651806944595},{"_id":"public/archives/2021/12/index.html","hash":"13516a7029719fa93438344b996add19e3ea4043","modified":1651806944595},{"_id":"public/archives/2022/index.html","hash":"1b3ad0ed19b5be319df58cdc380fb23cb33a76c6","modified":1651806944595},{"_id":"public/archives/2022/page/2/index.html","hash":"f9e78447bff4bf43880015589b98e330d6ae280b","modified":1651806944595},{"_id":"public/archives/2022/02/index.html","hash":"9e3770b13026565cdc35535ac979ab26befabe78","modified":1651806944595},{"_id":"public/archives/2022/03/index.html","hash":"f6e205ef418ee9aae502c914e6a9d201d6a61992","modified":1651806944595},{"_id":"public/archives/2022/04/index.html","hash":"184b105618bb6848e81052a4e3e682a8e01fbf13","modified":1651806944595},{"_id":"public/archives/2022/05/index.html","hash":"ca0da32c30c4ad2c91f300c864c4192c913b6091","modified":1651806944595},{"_id":"public/page/2/index.html","hash":"0b99e0b2bb04a2a515bea92e89e3d3c800717e3e","modified":1651806944595},{"_id":"public/page/3/index.html","hash":"7200d0ce3e5908b3ae8364659ef6938a9e2df09d","modified":1651806944595},{"_id":"public/categories/技术文档/index.html","hash":"62eacae3f1ab396cd292825f6010d38553314772","modified":1651806944595},{"_id":"public/categories/学习笔记/index.html","hash":"4cbca1baa71ff08e794f4b1af057f211ca353ca1","modified":1651806944595},{"_id":"public/tags/pytorch/index.html","hash":"71a95b90dcdcd906b720d0b0784898bb77bbb4f8","modified":1651806944595},{"_id":"public/tags/深度学习/index.html","hash":"fe7d24b04977695111ba84c5b35d3a8f64f9f91d","modified":1651806944595},{"_id":"public/tags/coding/index.html","hash":"793c8fc38b4155c916869c268da1520957dc2d8c","modified":1651806944595},{"_id":"public/tags/持续更新/index.html","hash":"868377c9e28a9cebe94b557c122fe666804e4680","modified":1651806944595},{"_id":"public/tags/美食/index.html","hash":"4bf61c3e1a3bc1ad2b5c3289bbe7fc4ffd11e9fa","modified":1651806944595},{"_id":"public/tags/小说/index.html","hash":"af4736620a2c64dbf04386d9f1d39c6f5b1ca86c","modified":1651806944595},{"_id":"public/tags/实验/index.html","hash":"189ba4f3391570b9de56199cd8606c03456086dd","modified":1651806944595},{"_id":"public/tags/python/index.html","hash":"835f2f2629a7c8f910946df67decc23ec703a0b4","modified":1651806944595},{"_id":"public/tags/杂谈/index.html","hash":"8702c3f5d98b8450fd70f986f343a403fb44cbac","modified":1651806944595},{"_id":"public/tags/vscode/index.html","hash":"897a8b452f6365bb7b3a19fb722cbaa23d4e1652","modified":1651806944595},{"_id":"public/tags/ssh/index.html","hash":"831a285ea176ee9c6826a0831dca0bcbb1f69355","modified":1651806944595},{"_id":"public/tags/大数据/index.html","hash":"f7d2db782615cfb4b26514e0ec09227a78b82a07","modified":1651806944595},{"_id":"public/tags/Java/index.html","hash":"091d72027c77cb4f0383bb8407cbc6d97a940c5e","modified":1651806944595},{"_id":"public/tags/Hadoop/index.html","hash":"c1db113e11319cb4b2d42ed5034ff93001b0d2ff","modified":1651806944595},{"_id":"public/tags/Mapreduce/index.html","hash":"765baf24ab6e2a4831320469d0da34c3c66c2901","modified":1651806944595},{"_id":"public/tags/大数据-Java-Hadoop/index.html","hash":"e54e31ab157856502ae2da4e5d0379ae7997ed74","modified":1651806944595},{"_id":"public/tags/数学/index.html","hash":"c61c4d1166ec782038061bd681016805af33b847","modified":1651806944595},{"_id":"public/tags/科研/index.html","hash":"d0eeb4e8db249d52e77da524a975b7a10f977676","modified":1651806944595},{"_id":"public/tags/学习/index.html","hash":"b98eb431da386299893ddfa61cddead04cb068a1","modified":1651806944595},{"_id":"public/tags/因果推断/index.html","hash":"d028f8dafc462b642d04908c16c3752341d86066","modified":1651806944595},{"_id":"public/tags/github/index.html","hash":"2e6d08b8e0ced6c0dec44ddb6d87a8e6d6a3d995","modified":1651806944595},{"_id":"public/tags/git/index.html","hash":"fa7c8dbeb29dd845a974348c9a19fefac3e7ec88","modified":1651806944595},{"_id":"public/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"260bb01acd44d88dcb7f501a238ab968f86bef9e","modified":1651806944595},{"_id":"public/images/2021112604.png","hash":"86b40fadbfd75b7afae3266f54e772a67ec6c6a2","modified":1651806944595},{"_id":"public/images/Linkedin.svg","hash":"c9fef67479d6a9e36dcd93e7bcf396b8dd41be7c","modified":1651806944595},{"_id":"public/images/email.svg","hash":"d347f708ecac0aad59241631a8e20999a098cf1b","modified":1651806944595},{"_id":"public/images/github.svg","hash":"328b059eb62ccdbf789100eb7fa93e0ad88baacd","modified":1651806944595},{"_id":"public/images/pytorch.png","hash":"c2e801b87de4351c4e0ee23aca1f1768b61e2ba4","modified":1651806944595},{"_id":"public/images/qrcode_cslijt.github.io.png","hash":"7242fae717ed02bd23fffcb6044c8a9dbb43aa1c","modified":1651806944595},{"_id":"public/images/屏幕截图_2022-03-26_175646.jpg","hash":"26e1a1351e575419cd154e827f9cf99569e2ff29","modified":1651806944595},{"_id":"public/images/知乎.svg","hash":"13af7dd0fecfa2111e1ad926934e3effdc8b693d","modified":1651806944595},{"_id":"public/images/2021112601.png","hash":"e097693047fe4101014ae79b1ae1efc76062b16d","modified":1651806944595},{"_id":"public/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"75a88815c47a249eadb5f0edc1675957f860cca7","modified":1651806944595},{"_id":"public/images/2021112603.png","hash":"c1052463cdc4375b1472169b592bd64f698152d9","modified":1651806944595},{"_id":"public/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"509988477da79c146cb93fb728405f18e923c2de","modified":1651806944595},{"_id":"public/js/algolia-search.js","hash":"498d233eb5c7af6940baf94c1a1c36fdf1dd2636","modified":1651806944595},{"_id":"public/js/motion.js","hash":"72df86f6dfa29cce22abeff9d814c9dddfcf13a9","modified":1651806944595},{"_id":"public/js/bookmark.js","hash":"9734ebcb9b83489686f5c2da67dc9e6157e988ad","modified":1651806944595},{"_id":"public/js/next-boot.js","hash":"a1b0636423009d4a4e4cea97bcbf1842bfab582c","modified":1651806944595},{"_id":"public/js/local-search.js","hash":"35ccf100d8f9c0fd6bfbb7fa88c2a76c42a69110","modified":1651806944595},{"_id":"public/js/schemes/muse.js","hash":"1eb9b88103ddcf8827b1a7cbc56471a9c5592d53","modified":1651806944595},{"_id":"public/js/schemes/pisces.js","hash":"0ac5ce155bc58c972fe21c4c447f85e6f8755c62","modified":1651806944595},{"_id":"public/js/utils.js","hash":"730cca7f164eaf258661a61ff3f769851ff1e5da","modified":1651806944595},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1651806944595},{"_id":"public/css/main.css","hash":"a55c7626547f04a1d63e9b8d8ec10f85b7c6fba9","modified":1651806944595},{"_id":"public/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1651806944595},{"_id":"public/lib/font-awesome/css/all.min.css","hash":"0038dc97c79451578b7bd48af60ba62282b4082b","modified":1651806944595},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1651806944595},{"_id":"public/images/c995d143ad4bd113d3b5cb035eafa40f4bfb0582.jpg","hash":"cb074d590659e292ce0d605882a3b4b3a1f04dcd","modified":1651806944595},{"_id":"public/images/屏幕截图_2022-03-26_175317.jpg","hash":"c4a37962b06c44cf51afe57bc581c74496d5ba33","modified":1651806944595},{"_id":"public/2022/04/17/2022-04-17-github/github20220401701.png","hash":"0c4ff2071acc36220cb757ce53a39fb341a8d9a7","modified":1651806944595},{"_id":"public/images/2021112602.png","hash":"638027646cd217ce436c31957c7158b7ea914638","modified":1651806944595},{"_id":"public/images/2021121301.png","hash":"15d5d40d42c834bebeacc41495cd204ba3f3234f","modified":1651806944595},{"_id":"public/images/微信图片_20211001171428.jpg","hash":"45a8630d8a32f35c386de921d084d4cc5bf7774b","modified":1651806944595},{"_id":"public/images/IMG_20210925_203119.jpg","hash":"2e9abe7309e6e97c2123978bfab497e46e858902","modified":1651806944595},{"_id":"public/images/avatar.jpg","hash":"15683b2f7f56946cc4639cbd21441ec3e87add35","modified":1651806944595},{"_id":"public/images/IMG_20210925_120635_edit_759134094171144.jpg","hash":"7224ffbd056b66d4a804fcacd514b850b314efa0","modified":1651806944595},{"_id":"public/images/IMG_20210925_210855.jpg","hash":"fa759ff825b95129080a0c904880240177afb55f","modified":1651806944595},{"_id":"public/images/IMG_20210809_091606_edit_932701128736847.jpg","hash":"598dbcf1c15c494679c130432aa0f814c9d5e7b7","modified":1651806944595},{"_id":"public/images/IMG_20210925_210835.jpg","hash":"b31a89e566d3addbb9d74dac9893894984c9fa17","modified":1651806944595},{"_id":"public/images/IMG_20210925_120441.jpg","hash":"a267aeacf92ab8d504ad7b3b315c380e8056456d","modified":1651806944595},{"_id":"public/images/IMG_20210323_120734.jpg","hash":"ba5f11fde2b69fa608712e6b9939df96174cecc1","modified":1651806944595},{"_id":"public/images/微信图片_20211001161414.jpg","hash":"1878e9bac84ead0d7444adeb7b4c3f36b63e4c1a","modified":1651806944595},{"_id":"public/images/IMG_20210321_171950.jpg","hash":"af85f769e58663ec27832b75c01724c16a963172","modified":1651806944595},{"_id":"public/images/IMG_20210405_134224.jpg","hash":"3eeaa0239bfff2a50721fa503ac1c607bf0a4471","modified":1651806944595},{"_id":"public/images/IMG_20210325_104740.jpg","hash":"55ab15bbe191dce47fa98b7064740b4d86aa8d7a","modified":1651806944595},{"_id":"public/images/IMG_20210405_134319.jpg","hash":"9b3c658843fa18464120a82be9431e0c881b8e06","modified":1651806944595},{"_id":"public/images/background.jpg","hash":"9b3c658843fa18464120a82be9431e0c881b8e06","modified":1651806944595}],"Category":[{"name":"技术文档","_id":"cl2tv7gl700118cv9cjgq11t3"},{"name":"学习笔记","_id":"cl2tv7gl900178cv9auugfiel"}],"Data":[],"Page":[{"title":"LiJT的灵质空间","_content":"","source":"index.md","raw":"---\ntitle: LiJT的灵质空间\n---","date":"2022-04-07T02:03:13.854Z","updated":"2022-04-07T02:03:13.854Z","path":"index.html","comments":1,"layout":"page","_id":"cl2tv7gkl00008cv96e8de73x","content":"","site":{"data":{}},"length":0,"excerpt":"","more":""},{"title":"关于我","date":"2022-04-06T09:14:43.000Z","type":"about","_content":"\n* 一位漫步者\n* 喜欢吃饭，做饭，散步，喝咖啡\n* 潜在宅，隐藏月厨\n* <i class=\"far fa-envelope\"></i> <satosasara@mail.ustc.edu.cn>\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'f73c0bc3c19755d1c0d886c0d8791cad24509c9a',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: 'aaa',\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>\n","source":"about/index.md","raw":"---\ntitle: 关于我\ndate: 2022-04-06 17:14:43\ntype: \"about\"\n---\n\n* 一位漫步者\n* 喜欢吃饭，做饭，散步，喝咖啡\n* 潜在宅，隐藏月厨\n* <i class=\"far fa-envelope\"></i> <satosasara@mail.ustc.edu.cn>\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'f73c0bc3c19755d1c0d886c0d8791cad24509c9a',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: 'aaa',\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>\n","updated":"2022-04-06T12:27:23.661Z","path":"about/index.html","comments":1,"layout":"page","_id":"cl2tv7gkp00028cv95ijz3vd4","content":"<ul>\n<li>一位漫步者</li>\n<li>喜欢吃饭，做饭，散步，喝咖啡</li>\n<li>潜在宅，隐藏月厨</li>\n<li><i class=\"far fa-envelope\"></i> <a href=\"&#x6d;&#97;&#105;&#108;&#116;&#x6f;&#58;&#115;&#97;&#116;&#x6f;&#115;&#x61;&#115;&#x61;&#114;&#97;&#x40;&#109;&#97;&#105;&#x6c;&#x2e;&#x75;&#x73;&#x74;&#x63;&#46;&#x65;&#100;&#x75;&#46;&#x63;&#x6e;\">&#115;&#97;&#116;&#x6f;&#115;&#x61;&#115;&#x61;&#114;&#97;&#x40;&#109;&#97;&#105;&#x6c;&#x2e;&#x75;&#x73;&#x74;&#x63;&#46;&#x65;&#100;&#x75;&#46;&#x63;&#x6e;</a></li>\n</ul>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'f73c0bc3c19755d1c0d886c0d8791cad24509c9a',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: 'aaa',\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>\n","site":{"data":{}},"length":489,"excerpt":"","more":"<ul>\n<li>一位漫步者</li>\n<li>喜欢吃饭，做饭，散步，喝咖啡</li>\n<li>潜在宅，隐藏月厨</li>\n<li><i class=\"far fa-envelope\"></i> <a href=\"&#x6d;&#97;&#105;&#108;&#116;&#x6f;&#58;&#115;&#97;&#116;&#x6f;&#115;&#x61;&#115;&#x61;&#114;&#97;&#x40;&#109;&#97;&#105;&#x6c;&#x2e;&#x75;&#x73;&#x74;&#x63;&#46;&#x65;&#100;&#x75;&#46;&#x63;&#x6e;\">&#115;&#97;&#116;&#x6f;&#115;&#x61;&#115;&#x61;&#114;&#97;&#x40;&#109;&#97;&#105;&#x6c;&#x2e;&#x75;&#x73;&#x74;&#x63;&#46;&#x65;&#100;&#x75;&#46;&#x63;&#x6e;</a></li>\n</ul>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'f73c0bc3c19755d1c0d886c0d8791cad24509c9a',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: 'aaa',\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>\n"},{"title":"tags","date":"2022-04-06T09:15:01.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2022-04-06 17:15:01\ntype: \"tags\"\n---\n","updated":"2022-04-06T09:19:55.845Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cl2tv7gkr00058cv983849bmo","content":"","site":{"data":{}},"length":0,"excerpt":"","more":""},{"title":"categories","date":"2022-04-06T09:15:20.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2022-04-06 17:15:20\ntype: \"categories\"\n---\n","updated":"2022-04-06T09:19:59.583Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cl2tv7gks00078cv9c3kh9mvl","content":"","site":{"data":{}},"length":0,"excerpt":"","more":""}],"Post":[{"title":"PyTorch踩坑记录（持续更新）","author":"LiJT","date":"2021-09-26T16:00:00.000Z","key":"pytorch20210927","_content":"\n本篇记录使用pytorch过程中踩到的各种坑！\n<!--more-->\n\n## 声明损失函数时忘记加括号\n```python\nloss_fn = nn.BCELoss # 应该是 nn.BCELoss()\n\n>> RuntimeError: bool value of Tensor with more than one value is ambiguous\n```\n\n## 通过索引赋值后，梯度还能正常反向传播吗？\n- 答案：__能__.\n\n### 验证代码\n\n```python\nimport torch \n\ndef main():\n    # x 是输入张量，可求梯度\n    x = torch.rand(4)\n    x.requires_grad_(True)\n    # cache 是中间张量，将x赋给cache\n    cache = torch.zeros(3,4)\n    optim = torch.optim.Adam([x],lr=1e-2)\n    for i in range(10):\n        # 按索引赋值\n        cache[1,:] = x \n        result = cache * 2\n        result = result.view(-1)\n        # 求损失函数\n        sum = torch.sum(result, dim = 0)\n        print(x.data)\n        optim.zero_grad()\n        sum.backward(retain_graph = True)\n        optim.step()\n    \n    return \n\nif __name__ == '__main__':\n    main()\n```\n\n### 验证输出\n```\ntensor([0.3073, 0.0680, 0.3627, 0.0659])\ntensor([0.2973, 0.0580, 0.3527, 0.0559])\ntensor([0.2873, 0.0480, 0.3427, 0.0459])\ntensor([0.2773, 0.0380, 0.3327, 0.0359])\ntensor([0.2673, 0.0280, 0.3227, 0.0259])\ntensor([0.2573, 0.0180, 0.3127, 0.0159])\ntensor([0.2473, 0.0080, 0.3027, 0.0059])\ntensor([ 0.2373, -0.0020,  0.2927, -0.0041])\ntensor([ 0.2273, -0.0120,  0.2827, -0.0141])\ntensor([ 0.2173, -0.0220,  0.2727, -0.0241])\n```\n经过 x -> cache -> sum 的计算并反向传播后，可见x的值如上所示有所变化，因此索引将前向传播中间结果赋给Tensor，再在Tensor上做后续运算，能够实现到达输入张量的反向传播！\n\n\n","source":"_posts/2021-09-27-pytorch.md","raw":"---\ntitle: PyTorch踩坑记录（持续更新）\nauthor: LiJT\ndate: 2021-09-27\ntags: \n  - pytorch \n  - 深度学习 \n  - coding \n  - 持续更新\nkey: pytorch20210927\n---\n\n本篇记录使用pytorch过程中踩到的各种坑！\n<!--more-->\n\n## 声明损失函数时忘记加括号\n```python\nloss_fn = nn.BCELoss # 应该是 nn.BCELoss()\n\n>> RuntimeError: bool value of Tensor with more than one value is ambiguous\n```\n\n## 通过索引赋值后，梯度还能正常反向传播吗？\n- 答案：__能__.\n\n### 验证代码\n\n```python\nimport torch \n\ndef main():\n    # x 是输入张量，可求梯度\n    x = torch.rand(4)\n    x.requires_grad_(True)\n    # cache 是中间张量，将x赋给cache\n    cache = torch.zeros(3,4)\n    optim = torch.optim.Adam([x],lr=1e-2)\n    for i in range(10):\n        # 按索引赋值\n        cache[1,:] = x \n        result = cache * 2\n        result = result.view(-1)\n        # 求损失函数\n        sum = torch.sum(result, dim = 0)\n        print(x.data)\n        optim.zero_grad()\n        sum.backward(retain_graph = True)\n        optim.step()\n    \n    return \n\nif __name__ == '__main__':\n    main()\n```\n\n### 验证输出\n```\ntensor([0.3073, 0.0680, 0.3627, 0.0659])\ntensor([0.2973, 0.0580, 0.3527, 0.0559])\ntensor([0.2873, 0.0480, 0.3427, 0.0459])\ntensor([0.2773, 0.0380, 0.3327, 0.0359])\ntensor([0.2673, 0.0280, 0.3227, 0.0259])\ntensor([0.2573, 0.0180, 0.3127, 0.0159])\ntensor([0.2473, 0.0080, 0.3027, 0.0059])\ntensor([ 0.2373, -0.0020,  0.2927, -0.0041])\ntensor([ 0.2273, -0.0120,  0.2827, -0.0141])\ntensor([ 0.2173, -0.0220,  0.2727, -0.0241])\n```\n经过 x -> cache -> sum 的计算并反向传播后，可见x的值如上所示有所变化，因此索引将前向传播中间结果赋给Tensor，再在Tensor上做后续运算，能够实现到达输入张量的反向传播！\n\n\n","slug":"2021-09-27-pytorch","published":1,"updated":"2022-04-06T09:41:31.960Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl2tv7gkn00018cv9d9gd86av","content":"<p>本篇记录使用pytorch过程中踩到的各种坑！<br><span id=\"more\"></span></p>\n<h2 id=\"声明损失函数时忘记加括号\"><a href=\"#声明损失函数时忘记加括号\" class=\"headerlink\" title=\"声明损失函数时忘记加括号\"></a>声明损失函数时忘记加括号</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">loss_fn = nn.BCELoss <span class=\"comment\"># 应该是 nn.BCELoss()</span></span><br><span class=\"line\"></span><br><span class=\"line\">&gt;&gt; RuntimeError: <span class=\"built_in\">bool</span> value of Tensor <span class=\"keyword\">with</span> more than one value <span class=\"keyword\">is</span> ambiguous</span><br></pre></td></tr></table></figure>\n<h2 id=\"通过索引赋值后，梯度还能正常反向传播吗？\"><a href=\"#通过索引赋值后，梯度还能正常反向传播吗？\" class=\"headerlink\" title=\"通过索引赋值后，梯度还能正常反向传播吗？\"></a>通过索引赋值后，梯度还能正常反向传播吗？</h2><ul>\n<li>答案：<strong>能</strong>.</li>\n</ul>\n<h3 id=\"验证代码\"><a href=\"#验证代码\" class=\"headerlink\" title=\"验证代码\"></a>验证代码</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> torch </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">main</span>():</span><br><span class=\"line\">    <span class=\"comment\"># x 是输入张量，可求梯度</span></span><br><span class=\"line\">    x = torch.rand(<span class=\"number\">4</span>)</span><br><span class=\"line\">    x.requires_grad_(<span class=\"literal\">True</span>)</span><br><span class=\"line\">    <span class=\"comment\"># cache 是中间张量，将x赋给cache</span></span><br><span class=\"line\">    cache = torch.zeros(<span class=\"number\">3</span>,<span class=\"number\">4</span>)</span><br><span class=\"line\">    optim = torch.optim.Adam([x],lr=<span class=\"number\">1e-2</span>)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">10</span>):</span><br><span class=\"line\">        <span class=\"comment\"># 按索引赋值</span></span><br><span class=\"line\">        cache[<span class=\"number\">1</span>,:] = x </span><br><span class=\"line\">        result = cache * <span class=\"number\">2</span></span><br><span class=\"line\">        result = result.view(-<span class=\"number\">1</span>)</span><br><span class=\"line\">        <span class=\"comment\"># 求损失函数</span></span><br><span class=\"line\">        <span class=\"built_in\">sum</span> = torch.<span class=\"built_in\">sum</span>(result, dim = <span class=\"number\">0</span>)</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(x.data)</span><br><span class=\"line\">        optim.zero_grad()</span><br><span class=\"line\">        <span class=\"built_in\">sum</span>.backward(retain_graph = <span class=\"literal\">True</span>)</span><br><span class=\"line\">        optim.step()</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    main()</span><br></pre></td></tr></table></figure>\n<h3 id=\"验证输出\"><a href=\"#验证输出\" class=\"headerlink\" title=\"验证输出\"></a>验证输出</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tensor([0.3073, 0.0680, 0.3627, 0.0659])</span><br><span class=\"line\">tensor([0.2973, 0.0580, 0.3527, 0.0559])</span><br><span class=\"line\">tensor([0.2873, 0.0480, 0.3427, 0.0459])</span><br><span class=\"line\">tensor([0.2773, 0.0380, 0.3327, 0.0359])</span><br><span class=\"line\">tensor([0.2673, 0.0280, 0.3227, 0.0259])</span><br><span class=\"line\">tensor([0.2573, 0.0180, 0.3127, 0.0159])</span><br><span class=\"line\">tensor([0.2473, 0.0080, 0.3027, 0.0059])</span><br><span class=\"line\">tensor([ 0.2373, -0.0020,  0.2927, -0.0041])</span><br><span class=\"line\">tensor([ 0.2273, -0.0120,  0.2827, -0.0141])</span><br><span class=\"line\">tensor([ 0.2173, -0.0220,  0.2727, -0.0241])</span><br></pre></td></tr></table></figure>\n<p>经过 x -&gt; cache -&gt; sum 的计算并反向传播后，可见x的值如上所示有所变化，因此索引将前向传播中间结果赋给Tensor，再在Tensor上做后续运算，能够实现到达输入张量的反向传播！</p>\n","site":{"data":{}},"length":1069,"excerpt":"<p>本篇记录使用pytorch过程中踩到的各种坑！<br>","more":"</p>\n<h2 id=\"声明损失函数时忘记加括号\"><a href=\"#声明损失函数时忘记加括号\" class=\"headerlink\" title=\"声明损失函数时忘记加括号\"></a>声明损失函数时忘记加括号</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">loss_fn = nn.BCELoss <span class=\"comment\"># 应该是 nn.BCELoss()</span></span><br><span class=\"line\"></span><br><span class=\"line\">&gt;&gt; RuntimeError: <span class=\"built_in\">bool</span> value of Tensor <span class=\"keyword\">with</span> more than one value <span class=\"keyword\">is</span> ambiguous</span><br></pre></td></tr></table></figure>\n<h2 id=\"通过索引赋值后，梯度还能正常反向传播吗？\"><a href=\"#通过索引赋值后，梯度还能正常反向传播吗？\" class=\"headerlink\" title=\"通过索引赋值后，梯度还能正常反向传播吗？\"></a>通过索引赋值后，梯度还能正常反向传播吗？</h2><ul>\n<li>答案：<strong>能</strong>.</li>\n</ul>\n<h3 id=\"验证代码\"><a href=\"#验证代码\" class=\"headerlink\" title=\"验证代码\"></a>验证代码</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> torch </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">main</span>():</span><br><span class=\"line\">    <span class=\"comment\"># x 是输入张量，可求梯度</span></span><br><span class=\"line\">    x = torch.rand(<span class=\"number\">4</span>)</span><br><span class=\"line\">    x.requires_grad_(<span class=\"literal\">True</span>)</span><br><span class=\"line\">    <span class=\"comment\"># cache 是中间张量，将x赋给cache</span></span><br><span class=\"line\">    cache = torch.zeros(<span class=\"number\">3</span>,<span class=\"number\">4</span>)</span><br><span class=\"line\">    optim = torch.optim.Adam([x],lr=<span class=\"number\">1e-2</span>)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">10</span>):</span><br><span class=\"line\">        <span class=\"comment\"># 按索引赋值</span></span><br><span class=\"line\">        cache[<span class=\"number\">1</span>,:] = x </span><br><span class=\"line\">        result = cache * <span class=\"number\">2</span></span><br><span class=\"line\">        result = result.view(-<span class=\"number\">1</span>)</span><br><span class=\"line\">        <span class=\"comment\"># 求损失函数</span></span><br><span class=\"line\">        <span class=\"built_in\">sum</span> = torch.<span class=\"built_in\">sum</span>(result, dim = <span class=\"number\">0</span>)</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(x.data)</span><br><span class=\"line\">        optim.zero_grad()</span><br><span class=\"line\">        <span class=\"built_in\">sum</span>.backward(retain_graph = <span class=\"literal\">True</span>)</span><br><span class=\"line\">        optim.step()</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    main()</span><br></pre></td></tr></table></figure>\n<h3 id=\"验证输出\"><a href=\"#验证输出\" class=\"headerlink\" title=\"验证输出\"></a>验证输出</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tensor([0.3073, 0.0680, 0.3627, 0.0659])</span><br><span class=\"line\">tensor([0.2973, 0.0580, 0.3527, 0.0559])</span><br><span class=\"line\">tensor([0.2873, 0.0480, 0.3427, 0.0459])</span><br><span class=\"line\">tensor([0.2773, 0.0380, 0.3327, 0.0359])</span><br><span class=\"line\">tensor([0.2673, 0.0280, 0.3227, 0.0259])</span><br><span class=\"line\">tensor([0.2573, 0.0180, 0.3127, 0.0159])</span><br><span class=\"line\">tensor([0.2473, 0.0080, 0.3027, 0.0059])</span><br><span class=\"line\">tensor([ 0.2373, -0.0020,  0.2927, -0.0041])</span><br><span class=\"line\">tensor([ 0.2273, -0.0120,  0.2827, -0.0141])</span><br><span class=\"line\">tensor([ 0.2173, -0.0220,  0.2727, -0.0241])</span><br></pre></td></tr></table></figure>\n<p>经过 x -&gt; cache -&gt; sum 的计算并反向传播后，可见x的值如上所示有所变化，因此索引将前向传播中间结果赋给Tensor，再在Tensor上做后续运算，能够实现到达输入张量的反向传播！</p>"},{"title":"美食的记录","author":"LiJT","date":"2021-09-28T16:00:00.000Z","key":"food20210929","_content":"\n## 煲王\n- 猪脚煲的味道很棒，想起了以前吃过的发财猪手。骨髓浓香四溢，但考虑到健康，未敢多吃。\n- 咖喱牛腩的味道很正，有澳门风味。猪肚鸡的汤底调味很好，可惜猪肚太少，仅三两片，怎能够吃？\n- 煲仔饭和卤水拼盘味道不错。卤水拼盘改良过，热吃，色浓，摆盘也更加粗犷。更喜欢吃潮汕的蘸白醋的卤水狮头鹅！\n- 茄子煲调味很好，但火候不够，茄子不入味。叉烧包实属鸡肋！过量的面和少量的肉馅... 但是可以把面撕下来，包猪手吃，极美。\n\n<!--more-->\n\n\n## 卜一帆\n- 京葱鸡肉串极鲜美。咸鲜、多汁、皮微焦的鸡肉，焦黄、冲香的葱，实在是相得益彰。\n- 烤五花味道浓香，脆骨爽口，但肉略微有些干，或许是没有刷油。\n- 青花鱼，熟悉的味道。不加任何调料烤制，挤上几滴柠檬汁，鲜美而浓郁。配上一碗米饭和沙拉就是完美的午餐。\n- 寿喜锅，久闻大名却第一次吃。日料虽然只有甜酱油、味增、味淋、昆布高汤等几种调味料，但甜酱油和高汤真的很适合火锅。牛肉多汁入味嫩而不烂，吸满汤汁的白菜、金针菇、魔芋丝和豆腐是米饭的绝配。看着咕嘟嘟的小锅和冒出的白雾，如果这是在冬天，想必一定是非常幸福的时刻吧。\n\n","source":"_posts/2021-09-29-food.md","raw":"---\ntitle: 美食的记录\nauthor: LiJT\ndate: 2021-09-29\ntags: 美食\nkey: food20210929 \n---\n\n## 煲王\n- 猪脚煲的味道很棒，想起了以前吃过的发财猪手。骨髓浓香四溢，但考虑到健康，未敢多吃。\n- 咖喱牛腩的味道很正，有澳门风味。猪肚鸡的汤底调味很好，可惜猪肚太少，仅三两片，怎能够吃？\n- 煲仔饭和卤水拼盘味道不错。卤水拼盘改良过，热吃，色浓，摆盘也更加粗犷。更喜欢吃潮汕的蘸白醋的卤水狮头鹅！\n- 茄子煲调味很好，但火候不够，茄子不入味。叉烧包实属鸡肋！过量的面和少量的肉馅... 但是可以把面撕下来，包猪手吃，极美。\n\n<!--more-->\n\n\n## 卜一帆\n- 京葱鸡肉串极鲜美。咸鲜、多汁、皮微焦的鸡肉，焦黄、冲香的葱，实在是相得益彰。\n- 烤五花味道浓香，脆骨爽口，但肉略微有些干，或许是没有刷油。\n- 青花鱼，熟悉的味道。不加任何调料烤制，挤上几滴柠檬汁，鲜美而浓郁。配上一碗米饭和沙拉就是完美的午餐。\n- 寿喜锅，久闻大名却第一次吃。日料虽然只有甜酱油、味增、味淋、昆布高汤等几种调味料，但甜酱油和高汤真的很适合火锅。牛肉多汁入味嫩而不烂，吸满汤汁的白菜、金针菇、魔芋丝和豆腐是米饭的绝配。看着咕嘟嘟的小锅和冒出的白雾，如果这是在冬天，想必一定是非常幸福的时刻吧。\n\n","slug":"2021-09-29-food","published":1,"updated":"2022-04-06T09:43:42.817Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl2tv7gkp00038cv96anifi79","content":"<h2 id=\"煲王\"><a href=\"#煲王\" class=\"headerlink\" title=\"煲王\"></a>煲王</h2><ul>\n<li>猪脚煲的味道很棒，想起了以前吃过的发财猪手。骨髓浓香四溢，但考虑到健康，未敢多吃。</li>\n<li>咖喱牛腩的味道很正，有澳门风味。猪肚鸡的汤底调味很好，可惜猪肚太少，仅三两片，怎能够吃？</li>\n<li>煲仔饭和卤水拼盘味道不错。卤水拼盘改良过，热吃，色浓，摆盘也更加粗犷。更喜欢吃潮汕的蘸白醋的卤水狮头鹅！</li>\n<li>茄子煲调味很好，但火候不够，茄子不入味。叉烧包实属鸡肋！过量的面和少量的肉馅… 但是可以把面撕下来，包猪手吃，极美。</li>\n</ul>\n<span id=\"more\"></span>\n<h2 id=\"卜一帆\"><a href=\"#卜一帆\" class=\"headerlink\" title=\"卜一帆\"></a>卜一帆</h2><ul>\n<li>京葱鸡肉串极鲜美。咸鲜、多汁、皮微焦的鸡肉，焦黄、冲香的葱，实在是相得益彰。</li>\n<li>烤五花味道浓香，脆骨爽口，但肉略微有些干，或许是没有刷油。</li>\n<li>青花鱼，熟悉的味道。不加任何调料烤制，挤上几滴柠檬汁，鲜美而浓郁。配上一碗米饭和沙拉就是完美的午餐。</li>\n<li>寿喜锅，久闻大名却第一次吃。日料虽然只有甜酱油、味增、味淋、昆布高汤等几种调味料，但甜酱油和高汤真的很适合火锅。牛肉多汁入味嫩而不烂，吸满汤汁的白菜、金针菇、魔芋丝和豆腐是米饭的绝配。看着咕嘟嘟的小锅和冒出的白雾，如果这是在冬天，想必一定是非常幸福的时刻吧。</li>\n</ul>\n","site":{"data":{}},"length":445,"excerpt":"<h2 id=\"煲王\"><a href=\"#煲王\" class=\"headerlink\" title=\"煲王\"></a>煲王</h2><ul>\n<li>猪脚煲的味道很棒，想起了以前吃过的发财猪手。骨髓浓香四溢，但考虑到健康，未敢多吃。</li>\n<li>咖喱牛腩的味道很正，有澳门风味。猪肚鸡的汤底调味很好，可惜猪肚太少，仅三两片，怎能够吃？</li>\n<li>煲仔饭和卤水拼盘味道不错。卤水拼盘改良过，热吃，色浓，摆盘也更加粗犷。更喜欢吃潮汕的蘸白醋的卤水狮头鹅！</li>\n<li>茄子煲调味很好，但火候不够，茄子不入味。叉烧包实属鸡肋！过量的面和少量的肉馅… 但是可以把面撕下来，包猪手吃，极美。</li>\n</ul>","more":"<h2 id=\"卜一帆\"><a href=\"#卜一帆\" class=\"headerlink\" title=\"卜一帆\"></a>卜一帆</h2><ul>\n<li>京葱鸡肉串极鲜美。咸鲜、多汁、皮微焦的鸡肉，焦黄、冲香的葱，实在是相得益彰。</li>\n<li>烤五花味道浓香，脆骨爽口，但肉略微有些干，或许是没有刷油。</li>\n<li>青花鱼，熟悉的味道。不加任何调料烤制，挤上几滴柠檬汁，鲜美而浓郁。配上一碗米饭和沙拉就是完美的午餐。</li>\n<li>寿喜锅，久闻大名却第一次吃。日料虽然只有甜酱油、味增、味淋、昆布高汤等几种调味料，但甜酱油和高汤真的很适合火锅。牛肉多汁入味嫩而不烂，吸满汤汁的白菜、金针菇、魔芋丝和豆腐是米饭的绝配。看着咕嘟嘟的小锅和冒出的白雾，如果这是在冬天，想必一定是非常幸福的时刻吧。</li>\n</ul>"},{"title":"【连载】鲸的语言？（一）","author":"orange","date":"2021-09-30T16:00:00.000Z","key":"whale0120211001","_content":"\n一块雷雨云逼近了波多黎各的库莱布拉岛（Culebra）南部，威胁着要把小保罗·纳普（Paul Knapp Jr.）和他那艘18英尺充气小艇“小罗盘”号（Little Compass）上的三名乘客淋个透心凉。他船舵上的贴纸上写着： “我会说鲸鱼的语言。”\n\n<!--more-->\n\n鲸的语言？\n\n保罗纳普开始吟唱起不知名的咏叹调，在即将掀起的狂风暴雨中，咏叹调连1米外的乘客都听不见。\n\n狂风将他刚写好的纸张带入海里，很快不见踪影。\n\n他拿起挂在脖子上的喇叭，屹立在充气小艇的前端，继续开始他的人类音频咏叹调。\n\n这是鲸的语言吗？\n\n乘客A用他深蓝色的眼眸死死的盯着保罗纳普，有关海洋生物交流频率的研究在他脑海中不停穿插。\n\n海水一层层一层的荡漾过来，随时可以将气垫船掀翻。\n\n","source":"_posts/2021-10-01-whale01.md","raw":"---\ntitle: 【连载】鲸的语言？（一）\nauthor: orange\ndate: 2021-10-01\ntags: 小说\nkey: whale0120211001\n---\n\n一块雷雨云逼近了波多黎各的库莱布拉岛（Culebra）南部，威胁着要把小保罗·纳普（Paul Knapp Jr.）和他那艘18英尺充气小艇“小罗盘”号（Little Compass）上的三名乘客淋个透心凉。他船舵上的贴纸上写着： “我会说鲸鱼的语言。”\n\n<!--more-->\n\n鲸的语言？\n\n保罗纳普开始吟唱起不知名的咏叹调，在即将掀起的狂风暴雨中，咏叹调连1米外的乘客都听不见。\n\n狂风将他刚写好的纸张带入海里，很快不见踪影。\n\n他拿起挂在脖子上的喇叭，屹立在充气小艇的前端，继续开始他的人类音频咏叹调。\n\n这是鲸的语言吗？\n\n乘客A用他深蓝色的眼眸死死的盯着保罗纳普，有关海洋生物交流频率的研究在他脑海中不停穿插。\n\n海水一层层一层的荡漾过来，随时可以将气垫船掀翻。\n\n","slug":"2021-10-01-whale01","published":1,"updated":"2022-04-06T09:44:01.519Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl2tv7gkr00068cv9be1l98aa","content":"<p>一块雷雨云逼近了波多黎各的库莱布拉岛（Culebra）南部，威胁着要把小保罗·纳普（Paul Knapp Jr.）和他那艘18英尺充气小艇“小罗盘”号（Little Compass）上的三名乘客淋个透心凉。他船舵上的贴纸上写着： “我会说鲸鱼的语言。”</p>\n<span id=\"more\"></span>\n<p>鲸的语言？</p>\n<p>保罗纳普开始吟唱起不知名的咏叹调，在即将掀起的狂风暴雨中，咏叹调连1米外的乘客都听不见。</p>\n<p>狂风将他刚写好的纸张带入海里，很快不见踪影。</p>\n<p>他拿起挂在脖子上的喇叭，屹立在充气小艇的前端，继续开始他的人类音频咏叹调。</p>\n<p>这是鲸的语言吗？</p>\n<p>乘客A用他深蓝色的眼眸死死的盯着保罗纳普，有关海洋生物交流频率的研究在他脑海中不停穿插。</p>\n<p>海水一层层一层的荡漾过来，随时可以将气垫船掀翻。</p>\n","site":{"data":{}},"length":306,"excerpt":"<p>一块雷雨云逼近了波多黎各的库莱布拉岛（Culebra）南部，威胁着要把小保罗·纳普（Paul Knapp Jr.）和他那艘18英尺充气小艇“小罗盘”号（Little Compass）上的三名乘客淋个透心凉。他船舵上的贴纸上写着： “我会说鲸鱼的语言。”</p>","more":"<p>鲸的语言？</p>\n<p>保罗纳普开始吟唱起不知名的咏叹调，在即将掀起的狂风暴雨中，咏叹调连1米外的乘客都听不见。</p>\n<p>狂风将他刚写好的纸张带入海里，很快不见踪影。</p>\n<p>他拿起挂在脖子上的喇叭，屹立在充气小艇的前端，继续开始他的人类音频咏叹调。</p>\n<p>这是鲸的语言吗？</p>\n<p>乘客A用他深蓝色的眼眸死死的盯着保罗纳普，有关海洋生物交流频率的研究在他脑海中不停穿插。</p>\n<p>海水一层层一层的荡漾过来，随时可以将气垫船掀翻。</p>"},{"title":"PyTorch: CrossEntropyLoss vs. NLLLoss vs. BCELoss","author":"LiJT","date":"2021-10-06T16:00:00.000Z","key":"pytorch20211007","_content":"\nCrossEntropyLoss, NLLLoss 和 BCELoss 本质上都是基于交叉熵(cross entropy)的分类器的损失函数。但是三个函数的输入格式、计算方法和性能（收敛速度）有很大差别。本文记录笔者对此三者的学习笔记和理解。\n{:.info}\n\n<!--more-->\n\n## 交叉熵(Cross Entropy)\n\n交叉熵(Cross Entropy)是Shannon信息论中一个重要概念，主要用于度量两个概率分布间的差异性信息。或曰，概率分布 $p$ 和概率分布 $q$ 的相似程度。如果 $p$ 和 $q$ 越相似，那么越能用 $p$ 近似表示 $q$ 或用 $q$ 近似表示 $p$ 。定义交叉熵为：\n\n$$\nH(p,q) = \\sum_x p(x)\\log \\left(\\frac{1}{q(x)}\\right)\n$$\n\n注意交叉熵不满足对称性。\n\n## nn.CrossEntropyLoss\n\n```python\ntorch.nn.CrossEntropyLoss(weight=None, size_average=None, ignore_index=-100, reduce=None, reduction='mean')\n```\n\n### 计算方法\n\n根据[pytorch官方文档](https://pytorch.org/docs/stable/generated/torch.nn.CrossEntropyLoss.html)，CrossEntropyLoss的输入值为\"unnormalized scores for each class\"，即未限制在(0,1)上的各个类别的得分。其表达式为\n\n$$\nloss(x,class) = -\\log\\left(\\frac{\\exp(x[class])}{\\sum_j \\exp(x[j])} \\right)\n$$\n\n其中 $x$ 为一个样本，$class$ 为一个类别, $x[j]\\in(-\\infty,\\infty)$ 为分类器给样本 $x$ 在类别 $j$ 上赋予的得分，或当weight不为空时，\n\n$$\nloss(x,class) = -weight[class]\\log\\left(\\frac{\\exp(x[class])}{\\sum_j \\exp(x[j])} \\right)\n$$\n\n其中 $weight[class]$ 为类别 $class$ 的权重。其值越大，总损失中 $class$ 类所占有的损失项的比重越大。\n\n最终，总损失为每个样本$x$上的损失的加权平均，即\n\n$$\n\\mathcal{L}(X,class) = \\frac{\\sum_{x\\in X}loss(x,class[x])}{\\sum_{x\\in X}weight[class[x]]}\n$$\n\n### 总结\n- 是否支持多类别分类：支持\n- 输入得分值域：$(-\\infty,\\infty)$\n- 神经网络输出层是否需要激活/归一化: 不用\n\n## nn.NLLLoss\n\n```python\ntorch.nn.NLLLoss(weight=None, size_average=None, ignore_index=-100, reduce=None, reduction='mean')\n```\n\n### 计算方法\n\n`NLLLoss`的用法，实际在`CrossEntropyLoss`的文档中给出：\n\nThis criterion combines **LogSoftmax** and **NLLLoss** in one single class.\n{:.success}\n\n也就是说，`CrossEntropyLoss`是`NLLLoss`和`LogSoftmax`的结合体。为看清这一点，我们回到式(2)。其中 $\\log\\frac{\\exp(\\cdot)}{\\sum_j \\exp(\\cdot)}$ 就是LogSoftmax.\n\n因此，如果`CrossEntropyLoss`的输入值是 $(x,class)$， 那么 `NLLLoss` 的输入值就是 $LogSoftmax(x), class$。其中 $LogSoftmax(\\cdot)$ 需要对 $x$ 的每个分量计算一次，最终 $dim(LogSoftmax(x)) = dim(x)$。除此之外，`NLLLoss` 在其他部分的计算过程与 `CrossEntropyLoss` 完全一致。\n\n### 总结\n- 是否支持多类别分类：支持\n- 输入得分值域：$(-\\infty,\\infty)$\n- 神经网络输出层是否需要激活/归一化: 需要，最后一层使用LogSoftmax.也可在神经网络中使用softmax或sigmoid，在计算损失函数时显式加入torch.log计算对数\n\n## nn.BCELoss\n\n```python\ntorch.nn.BCELoss(weight=None, size_average=None, reduce=None, reduction='mean')\n```\n\n### 计算方法\n`BCELoss`是专门针对二分类问题的交叉熵损失函数。其计算形式更加接近式(1): \n\n$$\n\\mathcal{L}(x_n,y_n) = -w_n\\left[y_n\\cdot\\log x_n + (1-y_n)\\cdot\\log(1-x_n)\\right] \n$$\n\n### 总结\n- 是否支持多类别分类：不支持。只支持二分类\n- 输入得分值域：$(0,1)$。常搭配$sigmoid$一起使用\n- 神经网络输出层是否需要激活/归一化: sigmoid进行归一化处理。\n\nTips: 在实际使用时，出现过使用BCELoss时算法不收敛、AUC奇低，但换成NLLLoss后一切都很好用的情况。\n\n## 对比表格\n\n|项目\\方法|CrossEntropyLoss|NLLLoss|BCELoss|\n|:---|:---|:---|:---|\n|支持多分类|是|是|否|\n|`y_pred`值域|$(-\\infty,\\infty)$|$(-\\infty,\\infty)$|$(0,1)$|\n|`type(y_target)`|`torch.LongTensor`|`torch.LongTensor`|`torch.DoubleTensor`|\n|输出层是否需要归一化|否|`LogSoftmax`|`sigmoid`|\n\n","source":"_posts/2021-10-07-pytorch.md","raw":"---\ntitle: 'PyTorch: CrossEntropyLoss vs. NLLLoss vs. BCELoss'\nauthor: LiJT\ndate: 2021-10-07\ntags: \n  - pytorch \n  - 深度学习 \n  - coding\nkey: pytorch20211007\n---\n\nCrossEntropyLoss, NLLLoss 和 BCELoss 本质上都是基于交叉熵(cross entropy)的分类器的损失函数。但是三个函数的输入格式、计算方法和性能（收敛速度）有很大差别。本文记录笔者对此三者的学习笔记和理解。\n{:.info}\n\n<!--more-->\n\n## 交叉熵(Cross Entropy)\n\n交叉熵(Cross Entropy)是Shannon信息论中一个重要概念，主要用于度量两个概率分布间的差异性信息。或曰，概率分布 $p$ 和概率分布 $q$ 的相似程度。如果 $p$ 和 $q$ 越相似，那么越能用 $p$ 近似表示 $q$ 或用 $q$ 近似表示 $p$ 。定义交叉熵为：\n\n$$\nH(p,q) = \\sum_x p(x)\\log \\left(\\frac{1}{q(x)}\\right)\n$$\n\n注意交叉熵不满足对称性。\n\n## nn.CrossEntropyLoss\n\n```python\ntorch.nn.CrossEntropyLoss(weight=None, size_average=None, ignore_index=-100, reduce=None, reduction='mean')\n```\n\n### 计算方法\n\n根据[pytorch官方文档](https://pytorch.org/docs/stable/generated/torch.nn.CrossEntropyLoss.html)，CrossEntropyLoss的输入值为\"unnormalized scores for each class\"，即未限制在(0,1)上的各个类别的得分。其表达式为\n\n$$\nloss(x,class) = -\\log\\left(\\frac{\\exp(x[class])}{\\sum_j \\exp(x[j])} \\right)\n$$\n\n其中 $x$ 为一个样本，$class$ 为一个类别, $x[j]\\in(-\\infty,\\infty)$ 为分类器给样本 $x$ 在类别 $j$ 上赋予的得分，或当weight不为空时，\n\n$$\nloss(x,class) = -weight[class]\\log\\left(\\frac{\\exp(x[class])}{\\sum_j \\exp(x[j])} \\right)\n$$\n\n其中 $weight[class]$ 为类别 $class$ 的权重。其值越大，总损失中 $class$ 类所占有的损失项的比重越大。\n\n最终，总损失为每个样本$x$上的损失的加权平均，即\n\n$$\n\\mathcal{L}(X,class) = \\frac{\\sum_{x\\in X}loss(x,class[x])}{\\sum_{x\\in X}weight[class[x]]}\n$$\n\n### 总结\n- 是否支持多类别分类：支持\n- 输入得分值域：$(-\\infty,\\infty)$\n- 神经网络输出层是否需要激活/归一化: 不用\n\n## nn.NLLLoss\n\n```python\ntorch.nn.NLLLoss(weight=None, size_average=None, ignore_index=-100, reduce=None, reduction='mean')\n```\n\n### 计算方法\n\n`NLLLoss`的用法，实际在`CrossEntropyLoss`的文档中给出：\n\nThis criterion combines **LogSoftmax** and **NLLLoss** in one single class.\n{:.success}\n\n也就是说，`CrossEntropyLoss`是`NLLLoss`和`LogSoftmax`的结合体。为看清这一点，我们回到式(2)。其中 $\\log\\frac{\\exp(\\cdot)}{\\sum_j \\exp(\\cdot)}$ 就是LogSoftmax.\n\n因此，如果`CrossEntropyLoss`的输入值是 $(x,class)$， 那么 `NLLLoss` 的输入值就是 $LogSoftmax(x), class$。其中 $LogSoftmax(\\cdot)$ 需要对 $x$ 的每个分量计算一次，最终 $dim(LogSoftmax(x)) = dim(x)$。除此之外，`NLLLoss` 在其他部分的计算过程与 `CrossEntropyLoss` 完全一致。\n\n### 总结\n- 是否支持多类别分类：支持\n- 输入得分值域：$(-\\infty,\\infty)$\n- 神经网络输出层是否需要激活/归一化: 需要，最后一层使用LogSoftmax.也可在神经网络中使用softmax或sigmoid，在计算损失函数时显式加入torch.log计算对数\n\n## nn.BCELoss\n\n```python\ntorch.nn.BCELoss(weight=None, size_average=None, reduce=None, reduction='mean')\n```\n\n### 计算方法\n`BCELoss`是专门针对二分类问题的交叉熵损失函数。其计算形式更加接近式(1): \n\n$$\n\\mathcal{L}(x_n,y_n) = -w_n\\left[y_n\\cdot\\log x_n + (1-y_n)\\cdot\\log(1-x_n)\\right] \n$$\n\n### 总结\n- 是否支持多类别分类：不支持。只支持二分类\n- 输入得分值域：$(0,1)$。常搭配$sigmoid$一起使用\n- 神经网络输出层是否需要激活/归一化: sigmoid进行归一化处理。\n\nTips: 在实际使用时，出现过使用BCELoss时算法不收敛、AUC奇低，但换成NLLLoss后一切都很好用的情况。\n\n## 对比表格\n\n|项目\\方法|CrossEntropyLoss|NLLLoss|BCELoss|\n|:---|:---|:---|:---|\n|支持多分类|是|是|否|\n|`y_pred`值域|$(-\\infty,\\infty)$|$(-\\infty,\\infty)$|$(0,1)$|\n|`type(y_target)`|`torch.LongTensor`|`torch.LongTensor`|`torch.DoubleTensor`|\n|输出层是否需要归一化|否|`LogSoftmax`|`sigmoid`|\n\n","slug":"2021-10-07-pytorch","published":1,"updated":"2022-04-06T09:44:15.444Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl2tv7gks00088cv98ybr5ng5","content":"<p>CrossEntropyLoss, NLLLoss 和 BCELoss 本质上都是基于交叉熵(cross entropy)的分类器的损失函数。但是三个函数的输入格式、计算方法和性能（收敛速度）有很大差别。本文记录笔者对此三者的学习笔记和理解。<br>{:.info}</p>\n<span id=\"more\"></span>\n<h2 id=\"交叉熵-Cross-Entropy\"><a href=\"#交叉熵-Cross-Entropy\" class=\"headerlink\" title=\"交叉熵(Cross Entropy)\"></a>交叉熵(Cross Entropy)</h2><p>交叉熵(Cross Entropy)是Shannon信息论中一个重要概念，主要用于度量两个概率分布间的差异性信息。或曰，概率分布 $p$ 和概率分布 $q$ 的相似程度。如果 $p$ 和 $q$ 越相似，那么越能用 $p$ 近似表示 $q$ 或用 $q$ 近似表示 $p$ 。定义交叉熵为：</p>\n<script type=\"math/tex; mode=display\">\nH(p,q) = \\sum_x p(x)\\log \\left(\\frac{1}{q(x)}\\right)</script><p>注意交叉熵不满足对称性。</p>\n<h2 id=\"nn-CrossEntropyLoss\"><a href=\"#nn-CrossEntropyLoss\" class=\"headerlink\" title=\"nn.CrossEntropyLoss\"></a>nn.CrossEntropyLoss</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">torch.nn.CrossEntropyLoss(weight=<span class=\"literal\">None</span>, size_average=<span class=\"literal\">None</span>, ignore_index=-<span class=\"number\">100</span>, reduce=<span class=\"literal\">None</span>, reduction=<span class=\"string\">&#x27;mean&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"计算方法\"><a href=\"#计算方法\" class=\"headerlink\" title=\"计算方法\"></a>计算方法</h3><p>根据<a href=\"https://pytorch.org/docs/stable/generated/torch.nn.CrossEntropyLoss.html\">pytorch官方文档</a>，CrossEntropyLoss的输入值为”unnormalized scores for each class”，即未限制在(0,1)上的各个类别的得分。其表达式为</p>\n<script type=\"math/tex; mode=display\">\nloss(x,class) = -\\log\\left(\\frac{\\exp(x[class])}{\\sum_j \\exp(x[j])} \\right)</script><p>其中 $x$ 为一个样本，$class$ 为一个类别, $x[j]\\in(-\\infty,\\infty)$ 为分类器给样本 $x$ 在类别 $j$ 上赋予的得分，或当weight不为空时，</p>\n<script type=\"math/tex; mode=display\">\nloss(x,class) = -weight[class]\\log\\left(\\frac{\\exp(x[class])}{\\sum_j \\exp(x[j])} \\right)</script><p>其中 $weight[class]$ 为类别 $class$ 的权重。其值越大，总损失中 $class$ 类所占有的损失项的比重越大。</p>\n<p>最终，总损失为每个样本$x$上的损失的加权平均，即</p>\n<script type=\"math/tex; mode=display\">\n\\mathcal{L}(X,class) = \\frac{\\sum_{x\\in X}loss(x,class[x])}{\\sum_{x\\in X}weight[class[x]]}</script><h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><ul>\n<li>是否支持多类别分类：支持</li>\n<li>输入得分值域：$(-\\infty,\\infty)$</li>\n<li>神经网络输出层是否需要激活/归一化: 不用</li>\n</ul>\n<h2 id=\"nn-NLLLoss\"><a href=\"#nn-NLLLoss\" class=\"headerlink\" title=\"nn.NLLLoss\"></a>nn.NLLLoss</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">torch.nn.NLLLoss(weight=<span class=\"literal\">None</span>, size_average=<span class=\"literal\">None</span>, ignore_index=-<span class=\"number\">100</span>, reduce=<span class=\"literal\">None</span>, reduction=<span class=\"string\">&#x27;mean&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"计算方法-1\"><a href=\"#计算方法-1\" class=\"headerlink\" title=\"计算方法\"></a>计算方法</h3><p><code>NLLLoss</code>的用法，实际在<code>CrossEntropyLoss</code>的文档中给出：</p>\n<p>This criterion combines <strong>LogSoftmax</strong> and <strong>NLLLoss</strong> in one single class.<br>{:.success}</p>\n<p>也就是说，<code>CrossEntropyLoss</code>是<code>NLLLoss</code>和<code>LogSoftmax</code>的结合体。为看清这一点，我们回到式(2)。其中 $\\log\\frac{\\exp(\\cdot)}{\\sum_j \\exp(\\cdot)}$ 就是LogSoftmax.</p>\n<p>因此，如果<code>CrossEntropyLoss</code>的输入值是 $(x,class)$， 那么 <code>NLLLoss</code> 的输入值就是 $LogSoftmax(x), class$。其中 $LogSoftmax(\\cdot)$ 需要对 $x$ 的每个分量计算一次，最终 $dim(LogSoftmax(x)) = dim(x)$。除此之外，<code>NLLLoss</code> 在其他部分的计算过程与 <code>CrossEntropyLoss</code> 完全一致。</p>\n<h3 id=\"总结-1\"><a href=\"#总结-1\" class=\"headerlink\" title=\"总结\"></a>总结</h3><ul>\n<li>是否支持多类别分类：支持</li>\n<li>输入得分值域：$(-\\infty,\\infty)$</li>\n<li>神经网络输出层是否需要激活/归一化: 需要，最后一层使用LogSoftmax.也可在神经网络中使用softmax或sigmoid，在计算损失函数时显式加入torch.log计算对数</li>\n</ul>\n<h2 id=\"nn-BCELoss\"><a href=\"#nn-BCELoss\" class=\"headerlink\" title=\"nn.BCELoss\"></a>nn.BCELoss</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">torch.nn.BCELoss(weight=<span class=\"literal\">None</span>, size_average=<span class=\"literal\">None</span>, reduce=<span class=\"literal\">None</span>, reduction=<span class=\"string\">&#x27;mean&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"计算方法-2\"><a href=\"#计算方法-2\" class=\"headerlink\" title=\"计算方法\"></a>计算方法</h3><p><code>BCELoss</code>是专门针对二分类问题的交叉熵损失函数。其计算形式更加接近式(1): </p>\n<script type=\"math/tex; mode=display\">\n\\mathcal{L}(x_n,y_n) = -w_n\\left[y_n\\cdot\\log x_n + (1-y_n)\\cdot\\log(1-x_n)\\right]</script><h3 id=\"总结-2\"><a href=\"#总结-2\" class=\"headerlink\" title=\"总结\"></a>总结</h3><ul>\n<li>是否支持多类别分类：不支持。只支持二分类</li>\n<li>输入得分值域：$(0,1)$。常搭配$sigmoid$一起使用</li>\n<li>神经网络输出层是否需要激活/归一化: sigmoid进行归一化处理。</li>\n</ul>\n<p>Tips: 在实际使用时，出现过使用BCELoss时算法不收敛、AUC奇低，但换成NLLLoss后一切都很好用的情况。</p>\n<h2 id=\"对比表格\"><a href=\"#对比表格\" class=\"headerlink\" title=\"对比表格\"></a>对比表格</h2><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">项目\\方法</th>\n<th style=\"text-align:left\">CrossEntropyLoss</th>\n<th style=\"text-align:left\">NLLLoss</th>\n<th style=\"text-align:left\">BCELoss</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">支持多分类</td>\n<td style=\"text-align:left\">是</td>\n<td style=\"text-align:left\">是</td>\n<td style=\"text-align:left\">否</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>y_pred</code>值域</td>\n<td style=\"text-align:left\">$(-\\infty,\\infty)$</td>\n<td style=\"text-align:left\">$(-\\infty,\\infty)$</td>\n<td style=\"text-align:left\">$(0,1)$</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>type(y_target)</code></td>\n<td style=\"text-align:left\"><code>torch.LongTensor</code></td>\n<td style=\"text-align:left\"><code>torch.LongTensor</code></td>\n<td style=\"text-align:left\"><code>torch.DoubleTensor</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">输出层是否需要归一化</td>\n<td style=\"text-align:left\">否</td>\n<td style=\"text-align:left\"><code>LogSoftmax</code></td>\n<td style=\"text-align:left\"><code>sigmoid</code></td>\n</tr>\n</tbody>\n</table>\n</div>\n","site":{"data":{}},"length":2240,"excerpt":"<p>CrossEntropyLoss, NLLLoss 和 BCELoss 本质上都是基于交叉熵(cross entropy)的分类器的损失函数。但是三个函数的输入格式、计算方法和性能（收敛速度）有很大差别。本文记录笔者对此三者的学习笔记和理解。<br>{:.info}</p>","more":"<h2 id=\"交叉熵-Cross-Entropy\"><a href=\"#交叉熵-Cross-Entropy\" class=\"headerlink\" title=\"交叉熵(Cross Entropy)\"></a>交叉熵(Cross Entropy)</h2><p>交叉熵(Cross Entropy)是Shannon信息论中一个重要概念，主要用于度量两个概率分布间的差异性信息。或曰，概率分布 $p$ 和概率分布 $q$ 的相似程度。如果 $p$ 和 $q$ 越相似，那么越能用 $p$ 近似表示 $q$ 或用 $q$ 近似表示 $p$ 。定义交叉熵为：</p>\n<script type=\"math/tex; mode=display\">\nH(p,q) = \\sum_x p(x)\\log \\left(\\frac{1}{q(x)}\\right)</script><p>注意交叉熵不满足对称性。</p>\n<h2 id=\"nn-CrossEntropyLoss\"><a href=\"#nn-CrossEntropyLoss\" class=\"headerlink\" title=\"nn.CrossEntropyLoss\"></a>nn.CrossEntropyLoss</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">torch.nn.CrossEntropyLoss(weight=<span class=\"literal\">None</span>, size_average=<span class=\"literal\">None</span>, ignore_index=-<span class=\"number\">100</span>, reduce=<span class=\"literal\">None</span>, reduction=<span class=\"string\">&#x27;mean&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"计算方法\"><a href=\"#计算方法\" class=\"headerlink\" title=\"计算方法\"></a>计算方法</h3><p>根据<a href=\"https://pytorch.org/docs/stable/generated/torch.nn.CrossEntropyLoss.html\">pytorch官方文档</a>，CrossEntropyLoss的输入值为”unnormalized scores for each class”，即未限制在(0,1)上的各个类别的得分。其表达式为</p>\n<script type=\"math/tex; mode=display\">\nloss(x,class) = -\\log\\left(\\frac{\\exp(x[class])}{\\sum_j \\exp(x[j])} \\right)</script><p>其中 $x$ 为一个样本，$class$ 为一个类别, $x[j]\\in(-\\infty,\\infty)$ 为分类器给样本 $x$ 在类别 $j$ 上赋予的得分，或当weight不为空时，</p>\n<script type=\"math/tex; mode=display\">\nloss(x,class) = -weight[class]\\log\\left(\\frac{\\exp(x[class])}{\\sum_j \\exp(x[j])} \\right)</script><p>其中 $weight[class]$ 为类别 $class$ 的权重。其值越大，总损失中 $class$ 类所占有的损失项的比重越大。</p>\n<p>最终，总损失为每个样本$x$上的损失的加权平均，即</p>\n<script type=\"math/tex; mode=display\">\n\\mathcal{L}(X,class) = \\frac{\\sum_{x\\in X}loss(x,class[x])}{\\sum_{x\\in X}weight[class[x]]}</script><h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><ul>\n<li>是否支持多类别分类：支持</li>\n<li>输入得分值域：$(-\\infty,\\infty)$</li>\n<li>神经网络输出层是否需要激活/归一化: 不用</li>\n</ul>\n<h2 id=\"nn-NLLLoss\"><a href=\"#nn-NLLLoss\" class=\"headerlink\" title=\"nn.NLLLoss\"></a>nn.NLLLoss</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">torch.nn.NLLLoss(weight=<span class=\"literal\">None</span>, size_average=<span class=\"literal\">None</span>, ignore_index=-<span class=\"number\">100</span>, reduce=<span class=\"literal\">None</span>, reduction=<span class=\"string\">&#x27;mean&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"计算方法-1\"><a href=\"#计算方法-1\" class=\"headerlink\" title=\"计算方法\"></a>计算方法</h3><p><code>NLLLoss</code>的用法，实际在<code>CrossEntropyLoss</code>的文档中给出：</p>\n<p>This criterion combines <strong>LogSoftmax</strong> and <strong>NLLLoss</strong> in one single class.<br>{:.success}</p>\n<p>也就是说，<code>CrossEntropyLoss</code>是<code>NLLLoss</code>和<code>LogSoftmax</code>的结合体。为看清这一点，我们回到式(2)。其中 $\\log\\frac{\\exp(\\cdot)}{\\sum_j \\exp(\\cdot)}$ 就是LogSoftmax.</p>\n<p>因此，如果<code>CrossEntropyLoss</code>的输入值是 $(x,class)$， 那么 <code>NLLLoss</code> 的输入值就是 $LogSoftmax(x), class$。其中 $LogSoftmax(\\cdot)$ 需要对 $x$ 的每个分量计算一次，最终 $dim(LogSoftmax(x)) = dim(x)$。除此之外，<code>NLLLoss</code> 在其他部分的计算过程与 <code>CrossEntropyLoss</code> 完全一致。</p>\n<h3 id=\"总结-1\"><a href=\"#总结-1\" class=\"headerlink\" title=\"总结\"></a>总结</h3><ul>\n<li>是否支持多类别分类：支持</li>\n<li>输入得分值域：$(-\\infty,\\infty)$</li>\n<li>神经网络输出层是否需要激活/归一化: 需要，最后一层使用LogSoftmax.也可在神经网络中使用softmax或sigmoid，在计算损失函数时显式加入torch.log计算对数</li>\n</ul>\n<h2 id=\"nn-BCELoss\"><a href=\"#nn-BCELoss\" class=\"headerlink\" title=\"nn.BCELoss\"></a>nn.BCELoss</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">torch.nn.BCELoss(weight=<span class=\"literal\">None</span>, size_average=<span class=\"literal\">None</span>, reduce=<span class=\"literal\">None</span>, reduction=<span class=\"string\">&#x27;mean&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"计算方法-2\"><a href=\"#计算方法-2\" class=\"headerlink\" title=\"计算方法\"></a>计算方法</h3><p><code>BCELoss</code>是专门针对二分类问题的交叉熵损失函数。其计算形式更加接近式(1): </p>\n<script type=\"math/tex; mode=display\">\n\\mathcal{L}(x_n,y_n) = -w_n\\left[y_n\\cdot\\log x_n + (1-y_n)\\cdot\\log(1-x_n)\\right]</script><h3 id=\"总结-2\"><a href=\"#总结-2\" class=\"headerlink\" title=\"总结\"></a>总结</h3><ul>\n<li>是否支持多类别分类：不支持。只支持二分类</li>\n<li>输入得分值域：$(0,1)$。常搭配$sigmoid$一起使用</li>\n<li>神经网络输出层是否需要激活/归一化: sigmoid进行归一化处理。</li>\n</ul>\n<p>Tips: 在实际使用时，出现过使用BCELoss时算法不收敛、AUC奇低，但换成NLLLoss后一切都很好用的情况。</p>\n<h2 id=\"对比表格\"><a href=\"#对比表格\" class=\"headerlink\" title=\"对比表格\"></a>对比表格</h2><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">项目\\方法</th>\n<th style=\"text-align:left\">CrossEntropyLoss</th>\n<th style=\"text-align:left\">NLLLoss</th>\n<th style=\"text-align:left\">BCELoss</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">支持多分类</td>\n<td style=\"text-align:left\">是</td>\n<td style=\"text-align:left\">是</td>\n<td style=\"text-align:left\">否</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>y_pred</code>值域</td>\n<td style=\"text-align:left\">$(-\\infty,\\infty)$</td>\n<td style=\"text-align:left\">$(-\\infty,\\infty)$</td>\n<td style=\"text-align:left\">$(0,1)$</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>type(y_target)</code></td>\n<td style=\"text-align:left\"><code>torch.LongTensor</code></td>\n<td style=\"text-align:left\"><code>torch.LongTensor</code></td>\n<td style=\"text-align:left\"><code>torch.DoubleTensor</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">输出层是否需要归一化</td>\n<td style=\"text-align:left\">否</td>\n<td style=\"text-align:left\"><code>LogSoftmax</code></td>\n<td style=\"text-align:left\"><code>sigmoid</code></td>\n</tr>\n</tbody>\n</table>\n</div>"},{"title":"红烩羊肉","author":"LiJT","date":"2021-09-30T16:00:00.000Z","key":"stewlamb20211001","_content":"\n祝祖国母亲生日快乐！祝大家节日安康！\n\n今天在思考番茄酱和番茄沙司的用法，忽然灵光一闪——红烩羊肉，let's do this!\n<!--more-->\n\n## 原料\n- 羊肋排（手动去骨，切二指粗）一小盆\n- 番茄沙司\n- 番茄2枚\n- 红烧酱油/冰糖\n- 大葱、葱、姜、蒜、料酒\n- 盐、胡椒粉\n\n## 做法\n### 焯水\n- 羊肋排去骨切块洗净，冷水下锅，一并放入葱、姜、一勺料酒。大火煮开，转小火滚五分钟。期间打去血沫。捞起，温水洗净羊肉，去葱姜。\n\n### 煎制、熬酱\n- 番茄洗净切块备用，葱姜蒜洗净切片备用\n- 热锅凉油，下葱姜蒜小火慢炸直至蒜微黄，下羊排煎制，至表面金黄色，下番茄全部、番茄酱若干。继续小火翻炒，至番茄大量出水，加入开水，没过食材\n\n### 红烩\n- 加入少许红烧酱油调色，或炒糖色。转大火烧开五分钟给羊肉上色\n- 转小火慢炖10分钟\n- 调味，加入盐、胡椒粉。继续炖20分钟，让羊肉入味\n- 至临出锅前15分钟，下入洋葱或粉丝等辅料，继续小火\n- 大火收汁至汤汁挂线\n- 出锅，礼成\n\n## 体验\n- 羊味十足而不腥膻，大抵是由于羊油去的干净、焯水焯得彻底\n- 番茄的使用十分得当。慢炖40分钟后，番茄已完全化入汤中，汤汁变浓，无需勾芡\n- 可以加入洋葱，必能提味\n- 味酸甜又有咸香。注意番茄和番茄酱的用量\n- 盐可以分几次放，让羊肉充分入味\n- 好吃！\n","source":"_posts/2021-10-01-stewlamb.md","raw":"---\ntitle: 红烩羊肉\nauthor: LiJT\ndate: 2021-10-01\ntags: 美食\nkey: stewlamb20211001\n---\n\n祝祖国母亲生日快乐！祝大家节日安康！\n\n今天在思考番茄酱和番茄沙司的用法，忽然灵光一闪——红烩羊肉，let's do this!\n<!--more-->\n\n## 原料\n- 羊肋排（手动去骨，切二指粗）一小盆\n- 番茄沙司\n- 番茄2枚\n- 红烧酱油/冰糖\n- 大葱、葱、姜、蒜、料酒\n- 盐、胡椒粉\n\n## 做法\n### 焯水\n- 羊肋排去骨切块洗净，冷水下锅，一并放入葱、姜、一勺料酒。大火煮开，转小火滚五分钟。期间打去血沫。捞起，温水洗净羊肉，去葱姜。\n\n### 煎制、熬酱\n- 番茄洗净切块备用，葱姜蒜洗净切片备用\n- 热锅凉油，下葱姜蒜小火慢炸直至蒜微黄，下羊排煎制，至表面金黄色，下番茄全部、番茄酱若干。继续小火翻炒，至番茄大量出水，加入开水，没过食材\n\n### 红烩\n- 加入少许红烧酱油调色，或炒糖色。转大火烧开五分钟给羊肉上色\n- 转小火慢炖10分钟\n- 调味，加入盐、胡椒粉。继续炖20分钟，让羊肉入味\n- 至临出锅前15分钟，下入洋葱或粉丝等辅料，继续小火\n- 大火收汁至汤汁挂线\n- 出锅，礼成\n\n## 体验\n- 羊味十足而不腥膻，大抵是由于羊油去的干净、焯水焯得彻底\n- 番茄的使用十分得当。慢炖40分钟后，番茄已完全化入汤中，汤汁变浓，无需勾芡\n- 可以加入洋葱，必能提味\n- 味酸甜又有咸香。注意番茄和番茄酱的用量\n- 盐可以分几次放，让羊肉充分入味\n- 好吃！\n","slug":"2021-10-01-stewlamb","published":1,"updated":"2022-04-06T09:43:51.884Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl2tv7gkt00098cv9ezbz8ifu","content":"<p>祝祖国母亲生日快乐！祝大家节日安康！</p>\n<p>今天在思考番茄酱和番茄沙司的用法，忽然灵光一闪——红烩羊肉，let’s do this!<br><span id=\"more\"></span></p>\n<h2 id=\"原料\"><a href=\"#原料\" class=\"headerlink\" title=\"原料\"></a>原料</h2><ul>\n<li>羊肋排（手动去骨，切二指粗）一小盆</li>\n<li>番茄沙司</li>\n<li>番茄2枚</li>\n<li>红烧酱油/冰糖</li>\n<li>大葱、葱、姜、蒜、料酒</li>\n<li>盐、胡椒粉</li>\n</ul>\n<h2 id=\"做法\"><a href=\"#做法\" class=\"headerlink\" title=\"做法\"></a>做法</h2><h3 id=\"焯水\"><a href=\"#焯水\" class=\"headerlink\" title=\"焯水\"></a>焯水</h3><ul>\n<li>羊肋排去骨切块洗净，冷水下锅，一并放入葱、姜、一勺料酒。大火煮开，转小火滚五分钟。期间打去血沫。捞起，温水洗净羊肉，去葱姜。</li>\n</ul>\n<h3 id=\"煎制、熬酱\"><a href=\"#煎制、熬酱\" class=\"headerlink\" title=\"煎制、熬酱\"></a>煎制、熬酱</h3><ul>\n<li>番茄洗净切块备用，葱姜蒜洗净切片备用</li>\n<li>热锅凉油，下葱姜蒜小火慢炸直至蒜微黄，下羊排煎制，至表面金黄色，下番茄全部、番茄酱若干。继续小火翻炒，至番茄大量出水，加入开水，没过食材</li>\n</ul>\n<h3 id=\"红烩\"><a href=\"#红烩\" class=\"headerlink\" title=\"红烩\"></a>红烩</h3><ul>\n<li>加入少许红烧酱油调色，或炒糖色。转大火烧开五分钟给羊肉上色</li>\n<li>转小火慢炖10分钟</li>\n<li>调味，加入盐、胡椒粉。继续炖20分钟，让羊肉入味</li>\n<li>至临出锅前15分钟，下入洋葱或粉丝等辅料，继续小火</li>\n<li>大火收汁至汤汁挂线</li>\n<li>出锅，礼成</li>\n</ul>\n<h2 id=\"体验\"><a href=\"#体验\" class=\"headerlink\" title=\"体验\"></a>体验</h2><ul>\n<li>羊味十足而不腥膻，大抵是由于羊油去的干净、焯水焯得彻底</li>\n<li>番茄的使用十分得当。慢炖40分钟后，番茄已完全化入汤中，汤汁变浓，无需勾芡</li>\n<li>可以加入洋葱，必能提味</li>\n<li>味酸甜又有咸香。注意番茄和番茄酱的用量</li>\n<li>盐可以分几次放，让羊肉充分入味</li>\n<li>好吃！</li>\n</ul>\n","site":{"data":{}},"length":484,"excerpt":"<p>祝祖国母亲生日快乐！祝大家节日安康！</p>\n<p>今天在思考番茄酱和番茄沙司的用法，忽然灵光一闪——红烩羊肉，let’s do this!<br>","more":"</p>\n<h2 id=\"原料\"><a href=\"#原料\" class=\"headerlink\" title=\"原料\"></a>原料</h2><ul>\n<li>羊肋排（手动去骨，切二指粗）一小盆</li>\n<li>番茄沙司</li>\n<li>番茄2枚</li>\n<li>红烧酱油/冰糖</li>\n<li>大葱、葱、姜、蒜、料酒</li>\n<li>盐、胡椒粉</li>\n</ul>\n<h2 id=\"做法\"><a href=\"#做法\" class=\"headerlink\" title=\"做法\"></a>做法</h2><h3 id=\"焯水\"><a href=\"#焯水\" class=\"headerlink\" title=\"焯水\"></a>焯水</h3><ul>\n<li>羊肋排去骨切块洗净，冷水下锅，一并放入葱、姜、一勺料酒。大火煮开，转小火滚五分钟。期间打去血沫。捞起，温水洗净羊肉，去葱姜。</li>\n</ul>\n<h3 id=\"煎制、熬酱\"><a href=\"#煎制、熬酱\" class=\"headerlink\" title=\"煎制、熬酱\"></a>煎制、熬酱</h3><ul>\n<li>番茄洗净切块备用，葱姜蒜洗净切片备用</li>\n<li>热锅凉油，下葱姜蒜小火慢炸直至蒜微黄，下羊排煎制，至表面金黄色，下番茄全部、番茄酱若干。继续小火翻炒，至番茄大量出水，加入开水，没过食材</li>\n</ul>\n<h3 id=\"红烩\"><a href=\"#红烩\" class=\"headerlink\" title=\"红烩\"></a>红烩</h3><ul>\n<li>加入少许红烧酱油调色，或炒糖色。转大火烧开五分钟给羊肉上色</li>\n<li>转小火慢炖10分钟</li>\n<li>调味，加入盐、胡椒粉。继续炖20分钟，让羊肉入味</li>\n<li>至临出锅前15分钟，下入洋葱或粉丝等辅料，继续小火</li>\n<li>大火收汁至汤汁挂线</li>\n<li>出锅，礼成</li>\n</ul>\n<h2 id=\"体验\"><a href=\"#体验\" class=\"headerlink\" title=\"体验\"></a>体验</h2><ul>\n<li>羊味十足而不腥膻，大抵是由于羊油去的干净、焯水焯得彻底</li>\n<li>番茄的使用十分得当。慢炖40分钟后，番茄已完全化入汤中，汤汁变浓，无需勾芡</li>\n<li>可以加入洋葱，必能提味</li>\n<li>味酸甜又有咸香。注意番茄和番茄酱的用量</li>\n<li>盐可以分几次放，让羊肉充分入味</li>\n<li>好吃！</li>\n</ul>"},{"title":"消融实验(ablation study)","author":"LiJT","date":"2021-10-17T16:00:00.000Z","key":"ablation20211018","_content":"\n## 前言\n\n在深度学习领域论文的实验设计中，经常看到作者提出的模型与“弱化版”模型（少了某些模块、少了参数的限制...等等）的对比，用于说明idea或者某模块的有效性，这便是直观意义上的消融实验。\n\n<!--more-->\n\n## 定义与解释\n\nRobert Long对消融研究（或消融实验）定义：通常用于神经网络，尤其是相对复杂的神经网络，如R-CNN。我们的想法是通过删除部分网络并研究网络的性能来了解网络\n{:.success}\n\n### 例子\n参考[知乎](https://www.zhihu.com/question/291655038/answer/2000381383):\n\n论文提了3个贡献点，A,B,C\n\n- 你去掉A，其它保持不变，发现效果降低了，那说明A确实有用。\n\n- 你去掉B，其它保持不变，发现效果降的比A还多，说明B更重要。\n\n- 你去掉C，其它保持不变，发现效果没变，那C就是凑字数的\n\n### 个人想法\n消融实验是一种简单直观但符合逻辑的实验方法。相比于选取经典算法作为baseline实验，消融实验排除了trick、其他结构上的不同导致的性能影响，而只专注于检验idea的有效性，相当于论文工作的“自己和自己比”，一边是加入了idea的自己，一边是没有加入idea的自己。\n\n可以把消融实验用“控制变量法”和“正交回归”类比。\n\n\n","source":"_posts/2021-10-18-ablation.md","raw":"---\ntitle: 消融实验(ablation study)\nauthor: LiJT\ndate: 2021-10-18\ntags: \n  - 深度学习 \n  - 实验\nkey: ablation20211018\n---\n\n## 前言\n\n在深度学习领域论文的实验设计中，经常看到作者提出的模型与“弱化版”模型（少了某些模块、少了参数的限制...等等）的对比，用于说明idea或者某模块的有效性，这便是直观意义上的消融实验。\n\n<!--more-->\n\n## 定义与解释\n\nRobert Long对消融研究（或消融实验）定义：通常用于神经网络，尤其是相对复杂的神经网络，如R-CNN。我们的想法是通过删除部分网络并研究网络的性能来了解网络\n{:.success}\n\n### 例子\n参考[知乎](https://www.zhihu.com/question/291655038/answer/2000381383):\n\n论文提了3个贡献点，A,B,C\n\n- 你去掉A，其它保持不变，发现效果降低了，那说明A确实有用。\n\n- 你去掉B，其它保持不变，发现效果降的比A还多，说明B更重要。\n\n- 你去掉C，其它保持不变，发现效果没变，那C就是凑字数的\n\n### 个人想法\n消融实验是一种简单直观但符合逻辑的实验方法。相比于选取经典算法作为baseline实验，消融实验排除了trick、其他结构上的不同导致的性能影响，而只专注于检验idea的有效性，相当于论文工作的“自己和自己比”，一边是加入了idea的自己，一边是没有加入idea的自己。\n\n可以把消融实验用“控制变量法”和“正交回归”类比。\n\n\n","slug":"2021-10-18-ablation","published":1,"updated":"2022-04-06T09:44:40.657Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl2tv7gku000b8cv92bnw5a1y","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>在深度学习领域论文的实验设计中，经常看到作者提出的模型与“弱化版”模型（少了某些模块、少了参数的限制…等等）的对比，用于说明idea或者某模块的有效性，这便是直观意义上的消融实验。</p>\n<span id=\"more\"></span>\n<h2 id=\"定义与解释\"><a href=\"#定义与解释\" class=\"headerlink\" title=\"定义与解释\"></a>定义与解释</h2><p>Robert Long对消融研究（或消融实验）定义：通常用于神经网络，尤其是相对复杂的神经网络，如R-CNN。我们的想法是通过删除部分网络并研究网络的性能来了解网络<br>{:.success}</p>\n<h3 id=\"例子\"><a href=\"#例子\" class=\"headerlink\" title=\"例子\"></a>例子</h3><p>参考<a href=\"https://www.zhihu.com/question/291655038/answer/2000381383\">知乎</a>:</p>\n<p>论文提了3个贡献点，A,B,C</p>\n<ul>\n<li><p>你去掉A，其它保持不变，发现效果降低了，那说明A确实有用。</p>\n</li>\n<li><p>你去掉B，其它保持不变，发现效果降的比A还多，说明B更重要。</p>\n</li>\n<li><p>你去掉C，其它保持不变，发现效果没变，那C就是凑字数的</p>\n</li>\n</ul>\n<h3 id=\"个人想法\"><a href=\"#个人想法\" class=\"headerlink\" title=\"个人想法\"></a>个人想法</h3><p>消融实验是一种简单直观但符合逻辑的实验方法。相比于选取经典算法作为baseline实验，消融实验排除了trick、其他结构上的不同导致的性能影响，而只专注于检验idea的有效性，相当于论文工作的“自己和自己比”，一边是加入了idea的自己，一边是没有加入idea的自己。</p>\n<p>可以把消融实验用“控制变量法”和“正交回归”类比。</p>\n","site":{"data":{}},"length":461,"excerpt":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>在深度学习领域论文的实验设计中，经常看到作者提出的模型与“弱化版”模型（少了某些模块、少了参数的限制…等等）的对比，用于说明idea或者某模块的有效性，这便是直观意义上的消融实验。</p>","more":"<h2 id=\"定义与解释\"><a href=\"#定义与解释\" class=\"headerlink\" title=\"定义与解释\"></a>定义与解释</h2><p>Robert Long对消融研究（或消融实验）定义：通常用于神经网络，尤其是相对复杂的神经网络，如R-CNN。我们的想法是通过删除部分网络并研究网络的性能来了解网络<br>{:.success}</p>\n<h3 id=\"例子\"><a href=\"#例子\" class=\"headerlink\" title=\"例子\"></a>例子</h3><p>参考<a href=\"https://www.zhihu.com/question/291655038/answer/2000381383\">知乎</a>:</p>\n<p>论文提了3个贡献点，A,B,C</p>\n<ul>\n<li><p>你去掉A，其它保持不变，发现效果降低了，那说明A确实有用。</p>\n</li>\n<li><p>你去掉B，其它保持不变，发现效果降的比A还多，说明B更重要。</p>\n</li>\n<li><p>你去掉C，其它保持不变，发现效果没变，那C就是凑字数的</p>\n</li>\n</ul>\n<h3 id=\"个人想法\"><a href=\"#个人想法\" class=\"headerlink\" title=\"个人想法\"></a>个人想法</h3><p>消融实验是一种简单直观但符合逻辑的实验方法。相比于选取经典算法作为baseline实验，消融实验排除了trick、其他结构上的不同导致的性能影响，而只专注于检验idea的有效性，相当于论文工作的“自己和自己比”，一边是加入了idea的自己，一边是没有加入idea的自己。</p>\n<p>可以把消融实验用“控制变量法”和“正交回归”类比。</p>"},{"title":"正则表达式学习笔记(持续更新)","author":"LiJT","date":"2021-10-25T16:00:00.000Z","key":"regex20211026","_content":"\n## 基础部分\n- 工具：egrep. `egrep '[regular expression]' filename`\n\n### 行首行尾\n```python\n^ : 标记一行的开始位置\n$ : 标记一行的结束位置\n\n# 例子\n^cat : 匹配以cat为行首的行，例如 catter\ncat$ : 匹配以cat为结尾的行，例如 scat\n```\n\n<!--more-->\n\n### 字符类\n#### 匹配任意字符\n\n```python\n[...] : 匹配中括号中的任意一个字符，中括号称为字符类\n\n# 例子\ngr[ea]y : 匹配 grey 或 gray, r 和 y 之间可以是e或者a\nsep[ea]r[ea]te : 匹配 seperate 或 separete 或 separate 或 seperete\n<H[123456]> : 匹配 <H1> 到 <H6>， 在html匹配中常见\n```\n\n```python\n- : 划定字符范围\n\n# 例子\n[1-6]=[123456]\n[0-9a-fA-F]=[0123456789abcdefABCDEF]\n```\n\n#### 否定字符类\n```python\n[^...] : 匹配任意不在中括号中的字符，与 [...] 相反\n\n# 例子：\n[^1-6] : 匹配不在 1-6 中的字符\nq[^u] : 匹配包含 q~， 其中 ~ 为不是字母u的其他字符的所有行\n```\n- 当 ^ 在中括号外面时表示行首标识符；当 ^ 在中括号里面时表示否定运算符\n\n### 使用 '.' 匹配 *任意* 字符\n```python\n. : 匹配任意字符\n[.] : 无转义，匹配dot\n\n# 例子：\n03.19.76 : 匹配 03~19~76，其中~可以是任意字符\n03[-./]19[-./]76 : 以分隔符 . - 或 / 匹配 031976\n```\n\n### 多个正则表达式\n- 考虑如何将多个正则表达式结合到一起\n  \n```python\n| : 或运算， a | b 表示匹配正则表达式或正则表达式b。为了限定或运算范围，必要时用小括号括起来，例如 (a|b)\n\n# 例子\ngr(a|e)y = gr[ae]y\n^(From|Subject|Date): 匹配以From:或Subject:或Date:开头的行\n```\n\n### 使用'?'匹配可选字符\n- 考虑匹配 colour 或 color，这里的 u 可选出现或不出现\n\n```python\n? : 可选运算，u? 表示匹配出现u或不出现u，作用对象为?的前一个字符\n\n# 例子\ncolou?r = (color|colour)\n```\n\n### 匹配重复字符\n- 考虑一个字符重复多次： goooooooooooooooooood!，但是次数不定\n\n```python\n+ : 匹配一个字符1次或多次（至少1次）\n* : 匹配一个字符0次或多次（至少0次）\n\n# 例子：\ngoo+d: 匹配good,goood,goo...od\ngoo*d: 匹配god, good, ...\n<HR +SIZE *= *[0-9]+ *>: 空格可以出现任意多次\n\n```\n\n|运算符|字符最小出现次数|字符最大出现次数|\n|:---|:---|:---|\n|?|0|1|\n|+|1|无限|\n|*|0|无限|\n\n#### 自定义字符重复次数\n```python\nu{min, max} : 匹配字符u最小重复min次，最大重复max次。尽可能多地统计\n\n# 例子：\n[a-zA-Z]{3,8}: 匹配3至8个连续出现的英文字母（尽可能多）\n```\n\n## Python re 模块要点\n### 转义字符\n- 上述正则表达式规则基于Linux的egrep。针对Python的re模块，另有一些重要的转义字符可以用\n\n|字符|功能\n|:---|:---\n|\\d\t|匹配数字，即[0-9]\t可以写在字符集[...]中\n|\\D\t|匹配⾮数字，即不是数字\t可以写在字符集[...]中\n|\\s\t|匹配空⽩，即空格，tab键\t可以写在字符集[...]中\n|\\S\t|匹配⾮空⽩字符\t可以写在字符集[...]中\n|\\w\t|匹配单词字符，即[a-zA-Z0-9_]\t可以写在字符集[...]中\n|\\W\t|匹配⾮单词字符\t可以写在字符集[...]中\n\n### re 模块常用函数及注意事项\n\n待补充\n{:.warning}\n\n## 练习：常用正则表达式(Python re格式)\n- 电子邮箱 `\\w{1,10}\\.?\\w{1,10}@(163|gmail|qq).com`\n- 日期 `\\d{4}[.-/]\\d{2}[.-/]\\d{2}`\n- HTTP/HTML URL `\\<http://[^ ]+\\.html?\\>`\n\n## 参考资料\n- Jeffrey E.F.Friedl, Mastering Regular Expressions\n- [python——正则表达式(re模块)详解. 版权声明：本文为CSDN博主「nee~」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。](https://blog.csdn.net/guo_qingxia/article/details/113979135)\n\n\n","source":"_posts/2021-10-26-regex.md","raw":"---\ntitle: 正则表达式学习笔记(持续更新)\nauthor: LiJT\ndate: 2021-10-26\ntags: \n  - coding \n  - 持续更新\nkey: regex20211026\n---\n\n## 基础部分\n- 工具：egrep. `egrep '[regular expression]' filename`\n\n### 行首行尾\n```python\n^ : 标记一行的开始位置\n$ : 标记一行的结束位置\n\n# 例子\n^cat : 匹配以cat为行首的行，例如 catter\ncat$ : 匹配以cat为结尾的行，例如 scat\n```\n\n<!--more-->\n\n### 字符类\n#### 匹配任意字符\n\n```python\n[...] : 匹配中括号中的任意一个字符，中括号称为字符类\n\n# 例子\ngr[ea]y : 匹配 grey 或 gray, r 和 y 之间可以是e或者a\nsep[ea]r[ea]te : 匹配 seperate 或 separete 或 separate 或 seperete\n<H[123456]> : 匹配 <H1> 到 <H6>， 在html匹配中常见\n```\n\n```python\n- : 划定字符范围\n\n# 例子\n[1-6]=[123456]\n[0-9a-fA-F]=[0123456789abcdefABCDEF]\n```\n\n#### 否定字符类\n```python\n[^...] : 匹配任意不在中括号中的字符，与 [...] 相反\n\n# 例子：\n[^1-6] : 匹配不在 1-6 中的字符\nq[^u] : 匹配包含 q~， 其中 ~ 为不是字母u的其他字符的所有行\n```\n- 当 ^ 在中括号外面时表示行首标识符；当 ^ 在中括号里面时表示否定运算符\n\n### 使用 '.' 匹配 *任意* 字符\n```python\n. : 匹配任意字符\n[.] : 无转义，匹配dot\n\n# 例子：\n03.19.76 : 匹配 03~19~76，其中~可以是任意字符\n03[-./]19[-./]76 : 以分隔符 . - 或 / 匹配 031976\n```\n\n### 多个正则表达式\n- 考虑如何将多个正则表达式结合到一起\n  \n```python\n| : 或运算， a | b 表示匹配正则表达式或正则表达式b。为了限定或运算范围，必要时用小括号括起来，例如 (a|b)\n\n# 例子\ngr(a|e)y = gr[ae]y\n^(From|Subject|Date): 匹配以From:或Subject:或Date:开头的行\n```\n\n### 使用'?'匹配可选字符\n- 考虑匹配 colour 或 color，这里的 u 可选出现或不出现\n\n```python\n? : 可选运算，u? 表示匹配出现u或不出现u，作用对象为?的前一个字符\n\n# 例子\ncolou?r = (color|colour)\n```\n\n### 匹配重复字符\n- 考虑一个字符重复多次： goooooooooooooooooood!，但是次数不定\n\n```python\n+ : 匹配一个字符1次或多次（至少1次）\n* : 匹配一个字符0次或多次（至少0次）\n\n# 例子：\ngoo+d: 匹配good,goood,goo...od\ngoo*d: 匹配god, good, ...\n<HR +SIZE *= *[0-9]+ *>: 空格可以出现任意多次\n\n```\n\n|运算符|字符最小出现次数|字符最大出现次数|\n|:---|:---|:---|\n|?|0|1|\n|+|1|无限|\n|*|0|无限|\n\n#### 自定义字符重复次数\n```python\nu{min, max} : 匹配字符u最小重复min次，最大重复max次。尽可能多地统计\n\n# 例子：\n[a-zA-Z]{3,8}: 匹配3至8个连续出现的英文字母（尽可能多）\n```\n\n## Python re 模块要点\n### 转义字符\n- 上述正则表达式规则基于Linux的egrep。针对Python的re模块，另有一些重要的转义字符可以用\n\n|字符|功能\n|:---|:---\n|\\d\t|匹配数字，即[0-9]\t可以写在字符集[...]中\n|\\D\t|匹配⾮数字，即不是数字\t可以写在字符集[...]中\n|\\s\t|匹配空⽩，即空格，tab键\t可以写在字符集[...]中\n|\\S\t|匹配⾮空⽩字符\t可以写在字符集[...]中\n|\\w\t|匹配单词字符，即[a-zA-Z0-9_]\t可以写在字符集[...]中\n|\\W\t|匹配⾮单词字符\t可以写在字符集[...]中\n\n### re 模块常用函数及注意事项\n\n待补充\n{:.warning}\n\n## 练习：常用正则表达式(Python re格式)\n- 电子邮箱 `\\w{1,10}\\.?\\w{1,10}@(163|gmail|qq).com`\n- 日期 `\\d{4}[.-/]\\d{2}[.-/]\\d{2}`\n- HTTP/HTML URL `\\<http://[^ ]+\\.html?\\>`\n\n## 参考资料\n- Jeffrey E.F.Friedl, Mastering Regular Expressions\n- [python——正则表达式(re模块)详解. 版权声明：本文为CSDN博主「nee~」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。](https://blog.csdn.net/guo_qingxia/article/details/113979135)\n\n\n","slug":"2021-10-26-regex","published":1,"updated":"2022-04-06T09:46:41.582Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl2tv7gku000c8cv939qta4mi","content":"<h2 id=\"基础部分\"><a href=\"#基础部分\" class=\"headerlink\" title=\"基础部分\"></a>基础部分</h2><ul>\n<li>工具：egrep. <code>egrep &#39;[regular expression]&#39; filename</code></li>\n</ul>\n<h3 id=\"行首行尾\"><a href=\"#行首行尾\" class=\"headerlink\" title=\"行首行尾\"></a>行首行尾</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">^ : 标记一行的开始位置</span><br><span class=\"line\">$ : 标记一行的结束位置</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 例子</span></span><br><span class=\"line\">^cat : 匹配以cat为行首的行，例如 catter</span><br><span class=\"line\">cat$ : 匹配以cat为结尾的行，例如 scat</span><br></pre></td></tr></table></figure>\n<span id=\"more\"></span>\n<h3 id=\"字符类\"><a href=\"#字符类\" class=\"headerlink\" title=\"字符类\"></a>字符类</h3><h4 id=\"匹配任意字符\"><a href=\"#匹配任意字符\" class=\"headerlink\" title=\"匹配任意字符\"></a>匹配任意字符</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[...] : 匹配中括号中的任意一个字符，中括号称为字符类</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 例子</span></span><br><span class=\"line\">gr[ea]y : 匹配 grey 或 gray, r 和 y 之间可以是e或者a</span><br><span class=\"line\">sep[ea]r[ea]te : 匹配 seperate 或 separete 或 separate 或 seperete</span><br><span class=\"line\">&lt;H[<span class=\"number\">123456</span>]&gt; : 匹配 &lt;H1&gt; 到 &lt;H6&gt;， 在html匹配中常见</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- : 划定字符范围</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 例子</span></span><br><span class=\"line\">[<span class=\"number\">1</span>-<span class=\"number\">6</span>]=[<span class=\"number\">123456</span>]</span><br><span class=\"line\">[<span class=\"number\">0</span>-9a-fA-F]=[0123456789abcdefABCDEF]</span><br></pre></td></tr></table></figure>\n<h4 id=\"否定字符类\"><a href=\"#否定字符类\" class=\"headerlink\" title=\"否定字符类\"></a>否定字符类</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[^...] : 匹配任意不在中括号中的字符，与 [...] 相反</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 例子：</span></span><br><span class=\"line\">[^<span class=\"number\">1</span>-<span class=\"number\">6</span>] : 匹配不在 <span class=\"number\">1</span>-<span class=\"number\">6</span> 中的字符</span><br><span class=\"line\">q[^u] : 匹配包含 q~， 其中 ~ 为不是字母u的其他字符的所有行</span><br></pre></td></tr></table></figure>\n<ul>\n<li>当 ^ 在中括号外面时表示行首标识符；当 ^ 在中括号里面时表示否定运算符</li>\n</ul>\n<h3 id=\"使用-‘-’-匹配-任意-字符\"><a href=\"#使用-‘-’-匹配-任意-字符\" class=\"headerlink\" title=\"使用 ‘.’ 匹配 任意 字符\"></a>使用 ‘.’ 匹配 <em>任意</em> 字符</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">. : 匹配任意字符</span><br><span class=\"line\">[.] : 无转义，匹配dot</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 例子：</span></span><br><span class=\"line\"><span class=\"number\">03.19</span><span class=\"number\">.76</span> : 匹配 03~<span class=\"number\">19</span>~<span class=\"number\">76</span>，其中~可以是任意字符</span><br><span class=\"line\">03[-./]<span class=\"number\">19</span>[-./]<span class=\"number\">76</span> : 以分隔符 . - 或 / 匹配 031976</span><br></pre></td></tr></table></figure>\n<h3 id=\"多个正则表达式\"><a href=\"#多个正则表达式\" class=\"headerlink\" title=\"多个正则表达式\"></a>多个正则表达式</h3><ul>\n<li>考虑如何将多个正则表达式结合到一起</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">| : 或运算， a | b 表示匹配正则表达式或正则表达式b。为了限定或运算范围，必要时用小括号括起来，例如 (a|b)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 例子</span></span><br><span class=\"line\">gr(a|e)y = gr[ae]y</span><br><span class=\"line\">^(From|Subject|Date): 匹配以From:或Subject:或Date:开头的行</span><br></pre></td></tr></table></figure>\n<h3 id=\"使用’-’匹配可选字符\"><a href=\"#使用’-’匹配可选字符\" class=\"headerlink\" title=\"使用’?’匹配可选字符\"></a>使用’?’匹配可选字符</h3><ul>\n<li>考虑匹配 colour 或 color，这里的 u 可选出现或不出现</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">? : 可选运算，u? 表示匹配出现u或不出现u，作用对象为?的前一个字符</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 例子</span></span><br><span class=\"line\">colou?r = (color|colour)</span><br></pre></td></tr></table></figure>\n<h3 id=\"匹配重复字符\"><a href=\"#匹配重复字符\" class=\"headerlink\" title=\"匹配重复字符\"></a>匹配重复字符</h3><ul>\n<li>考虑一个字符重复多次： goooooooooooooooooood!，但是次数不定</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+ : 匹配一个字符<span class=\"number\">1</span>次或多次（至少<span class=\"number\">1</span>次）</span><br><span class=\"line\">* : 匹配一个字符<span class=\"number\">0</span>次或多次（至少<span class=\"number\">0</span>次）</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 例子：</span></span><br><span class=\"line\">goo+d: 匹配good,goood,goo...od</span><br><span class=\"line\">goo*d: 匹配god, good, ...</span><br><span class=\"line\">&lt;HR +SIZE *= *[<span class=\"number\">0</span>-<span class=\"number\">9</span>]+ *&gt;: 空格可以出现任意多次</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">运算符</th>\n<th style=\"text-align:left\">字符最小出现次数</th>\n<th style=\"text-align:left\">字符最大出现次数</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">?</td>\n<td style=\"text-align:left\">0</td>\n<td style=\"text-align:left\">1</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">+</td>\n<td style=\"text-align:left\">1</td>\n<td style=\"text-align:left\">无限</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">*</td>\n<td style=\"text-align:left\">0</td>\n<td style=\"text-align:left\">无限</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h4 id=\"自定义字符重复次数\"><a href=\"#自定义字符重复次数\" class=\"headerlink\" title=\"自定义字符重复次数\"></a>自定义字符重复次数</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">u&#123;<span class=\"built_in\">min</span>, <span class=\"built_in\">max</span>&#125; : 匹配字符u最小重复<span class=\"built_in\">min</span>次，最大重复<span class=\"built_in\">max</span>次。尽可能多地统计</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 例子：</span></span><br><span class=\"line\">[a-zA-Z]&#123;<span class=\"number\">3</span>,<span class=\"number\">8</span>&#125;: 匹配<span class=\"number\">3</span>至<span class=\"number\">8</span>个连续出现的英文字母（尽可能多）</span><br></pre></td></tr></table></figure>\n<h2 id=\"Python-re-模块要点\"><a href=\"#Python-re-模块要点\" class=\"headerlink\" title=\"Python re 模块要点\"></a>Python re 模块要点</h2><h3 id=\"转义字符\"><a href=\"#转义字符\" class=\"headerlink\" title=\"转义字符\"></a>转义字符</h3><ul>\n<li>上述正则表达式规则基于Linux的egrep。针对Python的re模块，另有一些重要的转义字符可以用</li>\n</ul>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">字符</th>\n<th style=\"text-align:left\">功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">\\d</td>\n<td style=\"text-align:left\">匹配数字，即[0-9]    可以写在字符集[…]中</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">\\D</td>\n<td style=\"text-align:left\">匹配⾮数字，即不是数字    可以写在字符集[…]中</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">\\s</td>\n<td style=\"text-align:left\">匹配空⽩，即空格，tab键    可以写在字符集[…]中</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">\\S</td>\n<td style=\"text-align:left\">匹配⾮空⽩字符    可以写在字符集[…]中</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">\\w</td>\n<td style=\"text-align:left\">匹配单词字符，即[a-zA-Z0-9_]    可以写在字符集[…]中</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">\\W</td>\n<td style=\"text-align:left\">匹配⾮单词字符    可以写在字符集[…]中</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h3 id=\"re-模块常用函数及注意事项\"><a href=\"#re-模块常用函数及注意事项\" class=\"headerlink\" title=\"re 模块常用函数及注意事项\"></a>re 模块常用函数及注意事项</h3><p>待补充<br>{:.warning}</p>\n<h2 id=\"练习：常用正则表达式-Python-re格式\"><a href=\"#练习：常用正则表达式-Python-re格式\" class=\"headerlink\" title=\"练习：常用正则表达式(Python re格式)\"></a>练习：常用正则表达式(Python re格式)</h2><ul>\n<li>电子邮箱 <code>\\w&#123;1,10&#125;\\.?\\w&#123;1,10&#125;@(163|gmail|qq).com</code></li>\n<li>日期 <code>\\d&#123;4&#125;[.-/]\\d&#123;2&#125;[.-/]\\d&#123;2&#125;</code></li>\n<li>HTTP/HTML URL <code>\\&lt;http://[^ ]+\\.html?\\&gt;</code></li>\n</ul>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li>Jeffrey E.F.Friedl, Mastering Regular Expressions</li>\n<li><a href=\"https://blog.csdn.net/guo_qingxia/article/details/113979135\">python——正则表达式(re模块)详解. 版权声明：本文为CSDN博主「nee~」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。</a></li>\n</ul>\n","site":{"data":{}},"length":1747,"excerpt":"<h2 id=\"基础部分\"><a href=\"#基础部分\" class=\"headerlink\" title=\"基础部分\"></a>基础部分</h2><ul>\n<li>工具：egrep. <code>egrep &#39;[regular expression]&#39; filename</code></li>\n</ul>\n<h3 id=\"行首行尾\"><a href=\"#行首行尾\" class=\"headerlink\" title=\"行首行尾\"></a>行首行尾</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">^ : 标记一行的开始位置</span><br><span class=\"line\">$ : 标记一行的结束位置</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 例子</span></span><br><span class=\"line\">^cat : 匹配以cat为行首的行，例如 catter</span><br><span class=\"line\">cat$ : 匹配以cat为结尾的行，例如 scat</span><br></pre></td></tr></table></figure>","more":"<h3 id=\"字符类\"><a href=\"#字符类\" class=\"headerlink\" title=\"字符类\"></a>字符类</h3><h4 id=\"匹配任意字符\"><a href=\"#匹配任意字符\" class=\"headerlink\" title=\"匹配任意字符\"></a>匹配任意字符</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[...] : 匹配中括号中的任意一个字符，中括号称为字符类</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 例子</span></span><br><span class=\"line\">gr[ea]y : 匹配 grey 或 gray, r 和 y 之间可以是e或者a</span><br><span class=\"line\">sep[ea]r[ea]te : 匹配 seperate 或 separete 或 separate 或 seperete</span><br><span class=\"line\">&lt;H[<span class=\"number\">123456</span>]&gt; : 匹配 &lt;H1&gt; 到 &lt;H6&gt;， 在html匹配中常见</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- : 划定字符范围</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 例子</span></span><br><span class=\"line\">[<span class=\"number\">1</span>-<span class=\"number\">6</span>]=[<span class=\"number\">123456</span>]</span><br><span class=\"line\">[<span class=\"number\">0</span>-9a-fA-F]=[0123456789abcdefABCDEF]</span><br></pre></td></tr></table></figure>\n<h4 id=\"否定字符类\"><a href=\"#否定字符类\" class=\"headerlink\" title=\"否定字符类\"></a>否定字符类</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[^...] : 匹配任意不在中括号中的字符，与 [...] 相反</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 例子：</span></span><br><span class=\"line\">[^<span class=\"number\">1</span>-<span class=\"number\">6</span>] : 匹配不在 <span class=\"number\">1</span>-<span class=\"number\">6</span> 中的字符</span><br><span class=\"line\">q[^u] : 匹配包含 q~， 其中 ~ 为不是字母u的其他字符的所有行</span><br></pre></td></tr></table></figure>\n<ul>\n<li>当 ^ 在中括号外面时表示行首标识符；当 ^ 在中括号里面时表示否定运算符</li>\n</ul>\n<h3 id=\"使用-‘-’-匹配-任意-字符\"><a href=\"#使用-‘-’-匹配-任意-字符\" class=\"headerlink\" title=\"使用 ‘.’ 匹配 任意 字符\"></a>使用 ‘.’ 匹配 <em>任意</em> 字符</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">. : 匹配任意字符</span><br><span class=\"line\">[.] : 无转义，匹配dot</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 例子：</span></span><br><span class=\"line\"><span class=\"number\">03.19</span><span class=\"number\">.76</span> : 匹配 03~<span class=\"number\">19</span>~<span class=\"number\">76</span>，其中~可以是任意字符</span><br><span class=\"line\">03[-./]<span class=\"number\">19</span>[-./]<span class=\"number\">76</span> : 以分隔符 . - 或 / 匹配 031976</span><br></pre></td></tr></table></figure>\n<h3 id=\"多个正则表达式\"><a href=\"#多个正则表达式\" class=\"headerlink\" title=\"多个正则表达式\"></a>多个正则表达式</h3><ul>\n<li>考虑如何将多个正则表达式结合到一起</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">| : 或运算， a | b 表示匹配正则表达式或正则表达式b。为了限定或运算范围，必要时用小括号括起来，例如 (a|b)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 例子</span></span><br><span class=\"line\">gr(a|e)y = gr[ae]y</span><br><span class=\"line\">^(From|Subject|Date): 匹配以From:或Subject:或Date:开头的行</span><br></pre></td></tr></table></figure>\n<h3 id=\"使用’-’匹配可选字符\"><a href=\"#使用’-’匹配可选字符\" class=\"headerlink\" title=\"使用’?’匹配可选字符\"></a>使用’?’匹配可选字符</h3><ul>\n<li>考虑匹配 colour 或 color，这里的 u 可选出现或不出现</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">? : 可选运算，u? 表示匹配出现u或不出现u，作用对象为?的前一个字符</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 例子</span></span><br><span class=\"line\">colou?r = (color|colour)</span><br></pre></td></tr></table></figure>\n<h3 id=\"匹配重复字符\"><a href=\"#匹配重复字符\" class=\"headerlink\" title=\"匹配重复字符\"></a>匹配重复字符</h3><ul>\n<li>考虑一个字符重复多次： goooooooooooooooooood!，但是次数不定</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+ : 匹配一个字符<span class=\"number\">1</span>次或多次（至少<span class=\"number\">1</span>次）</span><br><span class=\"line\">* : 匹配一个字符<span class=\"number\">0</span>次或多次（至少<span class=\"number\">0</span>次）</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 例子：</span></span><br><span class=\"line\">goo+d: 匹配good,goood,goo...od</span><br><span class=\"line\">goo*d: 匹配god, good, ...</span><br><span class=\"line\">&lt;HR +SIZE *= *[<span class=\"number\">0</span>-<span class=\"number\">9</span>]+ *&gt;: 空格可以出现任意多次</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">运算符</th>\n<th style=\"text-align:left\">字符最小出现次数</th>\n<th style=\"text-align:left\">字符最大出现次数</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">?</td>\n<td style=\"text-align:left\">0</td>\n<td style=\"text-align:left\">1</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">+</td>\n<td style=\"text-align:left\">1</td>\n<td style=\"text-align:left\">无限</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">*</td>\n<td style=\"text-align:left\">0</td>\n<td style=\"text-align:left\">无限</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h4 id=\"自定义字符重复次数\"><a href=\"#自定义字符重复次数\" class=\"headerlink\" title=\"自定义字符重复次数\"></a>自定义字符重复次数</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">u&#123;<span class=\"built_in\">min</span>, <span class=\"built_in\">max</span>&#125; : 匹配字符u最小重复<span class=\"built_in\">min</span>次，最大重复<span class=\"built_in\">max</span>次。尽可能多地统计</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 例子：</span></span><br><span class=\"line\">[a-zA-Z]&#123;<span class=\"number\">3</span>,<span class=\"number\">8</span>&#125;: 匹配<span class=\"number\">3</span>至<span class=\"number\">8</span>个连续出现的英文字母（尽可能多）</span><br></pre></td></tr></table></figure>\n<h2 id=\"Python-re-模块要点\"><a href=\"#Python-re-模块要点\" class=\"headerlink\" title=\"Python re 模块要点\"></a>Python re 模块要点</h2><h3 id=\"转义字符\"><a href=\"#转义字符\" class=\"headerlink\" title=\"转义字符\"></a>转义字符</h3><ul>\n<li>上述正则表达式规则基于Linux的egrep。针对Python的re模块，另有一些重要的转义字符可以用</li>\n</ul>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">字符</th>\n<th style=\"text-align:left\">功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">\\d</td>\n<td style=\"text-align:left\">匹配数字，即[0-9]    可以写在字符集[…]中</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">\\D</td>\n<td style=\"text-align:left\">匹配⾮数字，即不是数字    可以写在字符集[…]中</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">\\s</td>\n<td style=\"text-align:left\">匹配空⽩，即空格，tab键    可以写在字符集[…]中</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">\\S</td>\n<td style=\"text-align:left\">匹配⾮空⽩字符    可以写在字符集[…]中</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">\\w</td>\n<td style=\"text-align:left\">匹配单词字符，即[a-zA-Z0-9_]    可以写在字符集[…]中</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">\\W</td>\n<td style=\"text-align:left\">匹配⾮单词字符    可以写在字符集[…]中</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h3 id=\"re-模块常用函数及注意事项\"><a href=\"#re-模块常用函数及注意事项\" class=\"headerlink\" title=\"re 模块常用函数及注意事项\"></a>re 模块常用函数及注意事项</h3><p>待补充<br>{:.warning}</p>\n<h2 id=\"练习：常用正则表达式-Python-re格式\"><a href=\"#练习：常用正则表达式-Python-re格式\" class=\"headerlink\" title=\"练习：常用正则表达式(Python re格式)\"></a>练习：常用正则表达式(Python re格式)</h2><ul>\n<li>电子邮箱 <code>\\w&#123;1,10&#125;\\.?\\w&#123;1,10&#125;@(163|gmail|qq).com</code></li>\n<li>日期 <code>\\d&#123;4&#125;[.-/]\\d&#123;2&#125;[.-/]\\d&#123;2&#125;</code></li>\n<li>HTTP/HTML URL <code>\\&lt;http://[^ ]+\\.html?\\&gt;</code></li>\n</ul>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li>Jeffrey E.F.Friedl, Mastering Regular Expressions</li>\n<li><a href=\"https://blog.csdn.net/guo_qingxia/article/details/113979135\">python——正则表达式(re模块)详解. 版权声明：本文为CSDN博主「nee~」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。</a></li>\n</ul>"},{"title":"Python踩坑记录&小技巧(持续更新)","author":"LiJT","date":"2021-10-24T16:00:00.000Z","key":"python20211025","_content":"\n本篇主要介绍一些使用的python技巧和第三方库，包括某些方法(method)的骚操作\n\n<!--more-->\n\n## Matplotlib-绘图库\n### 保存图片内容溢出的问题\n- 有些图片，如果label太长，可能会出现保存区域小于原图片大小，导致部分内容在保存文件中缺失的问题。在此情况下，使用 `bbox_inches = 'tight'` 选项：\n  \n```py\nimport matplotlib.pyplot as plt\n\n# 原保存方法\nplt.savefig('pic.png', dpi = 1000)\n\n# 修正后保存方法\nplt.savefig('pic.png', dpi = 1000, bbox_inches = 'tight')\n```\n\n\n## Numpy-矩阵运算库\n### np.unique 可以同时获取unique key和频数\n```python\noutcome_s, frequency_s=np.unique(samples,return_counts=True)\n```\n### np.intersect1d 可以获取两个一维数组的交集\n```python\nA=np.array([1,2,3,4,5])\nB=np.array([3,4,6,0,7])\nC=np.intersect1d(A,B) # C=[3,4]\n```\n\n<!--more-->\n\n## PyTorch-深度学习库\n- 重要的事情说三遍：\n  - 不要将维数设为0！\n  - 不要将维数设为0！\n  - 不要将维度设为0！\n  \n在深度学习的消融实验中，常常需要去掉某个模块来验证其有效性。不要简单地将位数设为0！维度最少要为1.这是因为在某些版本的torch中，如果模型参数是 (N,0) 维的，那么使用torch.save()时会保存N个相应的参数值；但在torch.load()阶段，模型期望接收参数数量为0，所以模型load不进去！\n{:.error}\n\n\n- 指定load模型的目标设备\n\n```py\nimport torch\n\ntorch.load(map_location=device)\n```\n\n## tqdm-进度条\n- tqdm 可以枚举迭代操作，同时显示进度条——再也不用每隔多少步输出一次结果了！\n- 以下为ipython演示结果\n\n```python\nIn [22]: import tqdm\n    ...: li = [i for i in range(999999)]\n    ...: mn = 99999999\n    ...: for elem in tqdm.tqdm(li,'progress:'):\n    ...:   mn = min(mn,elem)\n    ...:\nprogress:: 100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 999999/999999 [00:00<00:00, 2086298.02it/s]\n\n```","source":"_posts/2021-10-25-python.md","raw":"---\ntitle: Python踩坑记录&小技巧(持续更新)\nauthor: LiJT\ndate: 2021-10-25\ntags: \n  - python \n  - coding \n  - 持续更新\nkey: python20211025\n---\n\n本篇主要介绍一些使用的python技巧和第三方库，包括某些方法(method)的骚操作\n\n<!--more-->\n\n## Matplotlib-绘图库\n### 保存图片内容溢出的问题\n- 有些图片，如果label太长，可能会出现保存区域小于原图片大小，导致部分内容在保存文件中缺失的问题。在此情况下，使用 `bbox_inches = 'tight'` 选项：\n  \n```py\nimport matplotlib.pyplot as plt\n\n# 原保存方法\nplt.savefig('pic.png', dpi = 1000)\n\n# 修正后保存方法\nplt.savefig('pic.png', dpi = 1000, bbox_inches = 'tight')\n```\n\n\n## Numpy-矩阵运算库\n### np.unique 可以同时获取unique key和频数\n```python\noutcome_s, frequency_s=np.unique(samples,return_counts=True)\n```\n### np.intersect1d 可以获取两个一维数组的交集\n```python\nA=np.array([1,2,3,4,5])\nB=np.array([3,4,6,0,7])\nC=np.intersect1d(A,B) # C=[3,4]\n```\n\n<!--more-->\n\n## PyTorch-深度学习库\n- 重要的事情说三遍：\n  - 不要将维数设为0！\n  - 不要将维数设为0！\n  - 不要将维度设为0！\n  \n在深度学习的消融实验中，常常需要去掉某个模块来验证其有效性。不要简单地将位数设为0！维度最少要为1.这是因为在某些版本的torch中，如果模型参数是 (N,0) 维的，那么使用torch.save()时会保存N个相应的参数值；但在torch.load()阶段，模型期望接收参数数量为0，所以模型load不进去！\n{:.error}\n\n\n- 指定load模型的目标设备\n\n```py\nimport torch\n\ntorch.load(map_location=device)\n```\n\n## tqdm-进度条\n- tqdm 可以枚举迭代操作，同时显示进度条——再也不用每隔多少步输出一次结果了！\n- 以下为ipython演示结果\n\n```python\nIn [22]: import tqdm\n    ...: li = [i for i in range(999999)]\n    ...: mn = 99999999\n    ...: for elem in tqdm.tqdm(li,'progress:'):\n    ...:   mn = min(mn,elem)\n    ...:\nprogress:: 100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 999999/999999 [00:00<00:00, 2086298.02it/s]\n\n```","slug":"2021-10-25-python","published":1,"updated":"2022-04-09T08:04:07.277Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl2tv7gkv000e8cv9hihg8sia","content":"<p>本篇主要介绍一些使用的python技巧和第三方库，包括某些方法(method)的骚操作</p>\n<span id=\"more\"></span>\n<h2 id=\"Matplotlib-绘图库\"><a href=\"#Matplotlib-绘图库\" class=\"headerlink\" title=\"Matplotlib-绘图库\"></a>Matplotlib-绘图库</h2><h3 id=\"保存图片内容溢出的问题\"><a href=\"#保存图片内容溢出的问题\" class=\"headerlink\" title=\"保存图片内容溢出的问题\"></a>保存图片内容溢出的问题</h3><ul>\n<li>有些图片，如果label太长，可能会出现保存区域小于原图片大小，导致部分内容在保存文件中缺失的问题。在此情况下，使用 <code>bbox_inches = &#39;tight&#39;</code> 选项：</li>\n</ul>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 原保存方法</span></span><br><span class=\"line\">plt.savefig(<span class=\"string\">&#x27;pic.png&#x27;</span>, dpi = <span class=\"number\">1000</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 修正后保存方法</span></span><br><span class=\"line\">plt.savefig(<span class=\"string\">&#x27;pic.png&#x27;</span>, dpi = <span class=\"number\">1000</span>, bbox_inches = <span class=\"string\">&#x27;tight&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<h2 id=\"Numpy-矩阵运算库\"><a href=\"#Numpy-矩阵运算库\" class=\"headerlink\" title=\"Numpy-矩阵运算库\"></a>Numpy-矩阵运算库</h2><h3 id=\"np-unique-可以同时获取unique-key和频数\"><a href=\"#np-unique-可以同时获取unique-key和频数\" class=\"headerlink\" title=\"np.unique 可以同时获取unique key和频数\"></a>np.unique 可以同时获取unique key和频数</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">outcome_s, frequency_s=np.unique(samples,return_counts=<span class=\"literal\">True</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"np-intersect1d-可以获取两个一维数组的交集\"><a href=\"#np-intersect1d-可以获取两个一维数组的交集\" class=\"headerlink\" title=\"np.intersect1d 可以获取两个一维数组的交集\"></a>np.intersect1d 可以获取两个一维数组的交集</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">A=np.array([<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>])</span><br><span class=\"line\">B=np.array([<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">6</span>,<span class=\"number\">0</span>,<span class=\"number\">7</span>])</span><br><span class=\"line\">C=np.intersect1d(A,B) <span class=\"comment\"># C=[3,4]</span></span><br></pre></td></tr></table></figure>\n<!--more-->\n<h2 id=\"PyTorch-深度学习库\"><a href=\"#PyTorch-深度学习库\" class=\"headerlink\" title=\"PyTorch-深度学习库\"></a>PyTorch-深度学习库</h2><ul>\n<li>重要的事情说三遍：<ul>\n<li>不要将维数设为0！</li>\n<li>不要将维数设为0！</li>\n<li>不要将维度设为0！</li>\n</ul>\n</li>\n</ul>\n<p>在深度学习的消融实验中，常常需要去掉某个模块来验证其有效性。不要简单地将位数设为0！维度最少要为1.这是因为在某些版本的torch中，如果模型参数是 (N,0) 维的，那么使用torch.save()时会保存N个相应的参数值；但在torch.load()阶段，模型期望接收参数数量为0，所以模型load不进去！<br>{:.error}</p>\n<ul>\n<li>指定load模型的目标设备</li>\n</ul>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> torch</span><br><span class=\"line\"></span><br><span class=\"line\">torch.load(map_location=device)</span><br></pre></td></tr></table></figure>\n<h2 id=\"tqdm-进度条\"><a href=\"#tqdm-进度条\" class=\"headerlink\" title=\"tqdm-进度条\"></a>tqdm-进度条</h2><ul>\n<li>tqdm 可以枚举迭代操作，同时显示进度条——再也不用每隔多少步输出一次结果了！</li>\n<li>以下为ipython演示结果</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">In [<span class=\"number\">22</span>]: <span class=\"keyword\">import</span> tqdm</span><br><span class=\"line\">    ...: li = [i <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">999999</span>)]</span><br><span class=\"line\">    ...: mn = <span class=\"number\">99999999</span></span><br><span class=\"line\">    ...: <span class=\"keyword\">for</span> elem <span class=\"keyword\">in</span> tqdm.tqdm(li,<span class=\"string\">&#x27;progress:&#x27;</span>):</span><br><span class=\"line\">    ...:   mn = <span class=\"built_in\">min</span>(mn,elem)</span><br><span class=\"line\">    ...:</span><br><span class=\"line\">progress:: <span class=\"number\">100</span>%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| <span class=\"number\">999999</span>/<span class=\"number\">999999</span> [<span class=\"number\">00</span>:<span class=\"number\">00</span>&lt;<span class=\"number\">00</span>:<span class=\"number\">00</span>, <span class=\"number\">2086298.02</span>it/s]</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","site":{"data":{}},"length":1199,"excerpt":"<p>本篇主要介绍一些使用的python技巧和第三方库，包括某些方法(method)的骚操作</p>","more":"<h2 id=\"Matplotlib-绘图库\"><a href=\"#Matplotlib-绘图库\" class=\"headerlink\" title=\"Matplotlib-绘图库\"></a>Matplotlib-绘图库</h2><h3 id=\"保存图片内容溢出的问题\"><a href=\"#保存图片内容溢出的问题\" class=\"headerlink\" title=\"保存图片内容溢出的问题\"></a>保存图片内容溢出的问题</h3><ul>\n<li>有些图片，如果label太长，可能会出现保存区域小于原图片大小，导致部分内容在保存文件中缺失的问题。在此情况下，使用 <code>bbox_inches = &#39;tight&#39;</code> 选项：</li>\n</ul>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 原保存方法</span></span><br><span class=\"line\">plt.savefig(<span class=\"string\">&#x27;pic.png&#x27;</span>, dpi = <span class=\"number\">1000</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 修正后保存方法</span></span><br><span class=\"line\">plt.savefig(<span class=\"string\">&#x27;pic.png&#x27;</span>, dpi = <span class=\"number\">1000</span>, bbox_inches = <span class=\"string\">&#x27;tight&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<h2 id=\"Numpy-矩阵运算库\"><a href=\"#Numpy-矩阵运算库\" class=\"headerlink\" title=\"Numpy-矩阵运算库\"></a>Numpy-矩阵运算库</h2><h3 id=\"np-unique-可以同时获取unique-key和频数\"><a href=\"#np-unique-可以同时获取unique-key和频数\" class=\"headerlink\" title=\"np.unique 可以同时获取unique key和频数\"></a>np.unique 可以同时获取unique key和频数</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">outcome_s, frequency_s=np.unique(samples,return_counts=<span class=\"literal\">True</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"np-intersect1d-可以获取两个一维数组的交集\"><a href=\"#np-intersect1d-可以获取两个一维数组的交集\" class=\"headerlink\" title=\"np.intersect1d 可以获取两个一维数组的交集\"></a>np.intersect1d 可以获取两个一维数组的交集</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">A=np.array([<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>])</span><br><span class=\"line\">B=np.array([<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">6</span>,<span class=\"number\">0</span>,<span class=\"number\">7</span>])</span><br><span class=\"line\">C=np.intersect1d(A,B) <span class=\"comment\"># C=[3,4]</span></span><br></pre></td></tr></table></figure>\n<!--more-->\n<h2 id=\"PyTorch-深度学习库\"><a href=\"#PyTorch-深度学习库\" class=\"headerlink\" title=\"PyTorch-深度学习库\"></a>PyTorch-深度学习库</h2><ul>\n<li>重要的事情说三遍：<ul>\n<li>不要将维数设为0！</li>\n<li>不要将维数设为0！</li>\n<li>不要将维度设为0！</li>\n</ul>\n</li>\n</ul>\n<p>在深度学习的消融实验中，常常需要去掉某个模块来验证其有效性。不要简单地将位数设为0！维度最少要为1.这是因为在某些版本的torch中，如果模型参数是 (N,0) 维的，那么使用torch.save()时会保存N个相应的参数值；但在torch.load()阶段，模型期望接收参数数量为0，所以模型load不进去！<br>{:.error}</p>\n<ul>\n<li>指定load模型的目标设备</li>\n</ul>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> torch</span><br><span class=\"line\"></span><br><span class=\"line\">torch.load(map_location=device)</span><br></pre></td></tr></table></figure>\n<h2 id=\"tqdm-进度条\"><a href=\"#tqdm-进度条\" class=\"headerlink\" title=\"tqdm-进度条\"></a>tqdm-进度条</h2><ul>\n<li>tqdm 可以枚举迭代操作，同时显示进度条——再也不用每隔多少步输出一次结果了！</li>\n<li>以下为ipython演示结果</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">In [<span class=\"number\">22</span>]: <span class=\"keyword\">import</span> tqdm</span><br><span class=\"line\">    ...: li = [i <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">999999</span>)]</span><br><span class=\"line\">    ...: mn = <span class=\"number\">99999999</span></span><br><span class=\"line\">    ...: <span class=\"keyword\">for</span> elem <span class=\"keyword\">in</span> tqdm.tqdm(li,<span class=\"string\">&#x27;progress:&#x27;</span>):</span><br><span class=\"line\">    ...:   mn = <span class=\"built_in\">min</span>(mn,elem)</span><br><span class=\"line\">    ...:</span><br><span class=\"line\">progress:: <span class=\"number\">100</span>%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| <span class=\"number\">999999</span>/<span class=\"number\">999999</span> [<span class=\"number\">00</span>:<span class=\"number\">00</span>&lt;<span class=\"number\">00</span>:<span class=\"number\">00</span>, <span class=\"number\">2086298.02</span>it/s]</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>"},{"title":"一些杂谈.1","author":"LiJT","date":"2021-11-22T16:00:00.000Z","key":"delicacy20211123","_content":"\n```\n不被时间和社会所束缚\n幸福地填饱肚子的时候\n那一瞬间 他已变得唯我独尊\n自由自在\n无需介怀地大快朵颐 这种孤高的行为\n正可谓是现代人被平等赋予的\n最高治愈\n——孤独的美食家\n```\n<!--more-->\n\n最近在看《孤独的美食家》，计划从第一季一口气追到第九季。每天总是夜深人静的时间点亮屏幕，看着酥脆的可乐饼、麻辣鲜香的担担面、热气腾腾的关东煮在眼前呈现。虽然折磨，但实在是欲罢不能。\n\n真正的美食，不一定要登大雅之堂，不一定要呈现在五星级酒店，不一定非要松茸加身，鱼子酱包裹。美食可以是路边小馆的羊汤，可以是家庭餐厅的石锅拌饭。美食之美，只有自己的舌、胃、心能够体会。\n\n\n\n","source":"_posts/2021-11-23-delicacy.md","raw":"---\ntitle: 一些杂谈.1\nauthor: LiJT\ndate: 2021-11-23\ntags: \n  - 美食 \n  - 杂谈\nkey: delicacy20211123\n---\n\n```\n不被时间和社会所束缚\n幸福地填饱肚子的时候\n那一瞬间 他已变得唯我独尊\n自由自在\n无需介怀地大快朵颐 这种孤高的行为\n正可谓是现代人被平等赋予的\n最高治愈\n——孤独的美食家\n```\n<!--more-->\n\n最近在看《孤独的美食家》，计划从第一季一口气追到第九季。每天总是夜深人静的时间点亮屏幕，看着酥脆的可乐饼、麻辣鲜香的担担面、热气腾腾的关东煮在眼前呈现。虽然折磨，但实在是欲罢不能。\n\n真正的美食，不一定要登大雅之堂，不一定要呈现在五星级酒店，不一定非要松茸加身，鱼子酱包裹。美食可以是路边小馆的羊汤，可以是家庭餐厅的石锅拌饭。美食之美，只有自己的舌、胃、心能够体会。\n\n\n\n","slug":"2021-11-23-delicacy","published":1,"updated":"2022-04-06T09:47:11.857Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl2tv7gkv000f8cv97ljr5v14","content":"<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">不被时间和社会所束缚</span><br><span class=\"line\">幸福地填饱肚子的时候</span><br><span class=\"line\">那一瞬间 他已变得唯我独尊</span><br><span class=\"line\">自由自在</span><br><span class=\"line\">无需介怀地大快朵颐 这种孤高的行为</span><br><span class=\"line\">正可谓是现代人被平等赋予的</span><br><span class=\"line\">最高治愈</span><br><span class=\"line\">——孤独的美食家</span><br></pre></td></tr></table></figure>\n<span id=\"more\"></span>\n<p>最近在看《孤独的美食家》，计划从第一季一口气追到第九季。每天总是夜深人静的时间点亮屏幕，看着酥脆的可乐饼、麻辣鲜香的担担面、热气腾腾的关东煮在眼前呈现。虽然折磨，但实在是欲罢不能。</p>\n<p>真正的美食，不一定要登大雅之堂，不一定要呈现在五星级酒店，不一定非要松茸加身，鱼子酱包裹。美食可以是路边小馆的羊汤，可以是家庭餐厅的石锅拌饭。美食之美，只有自己的舌、胃、心能够体会。</p>\n","site":{"data":{}},"length":266,"excerpt":"<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">不被时间和社会所束缚</span><br><span class=\"line\">幸福地填饱肚子的时候</span><br><span class=\"line\">那一瞬间 他已变得唯我独尊</span><br><span class=\"line\">自由自在</span><br><span class=\"line\">无需介怀地大快朵颐 这种孤高的行为</span><br><span class=\"line\">正可谓是现代人被平等赋予的</span><br><span class=\"line\">最高治愈</span><br><span class=\"line\">——孤独的美食家</span><br></pre></td></tr></table></figure>","more":"<p>最近在看《孤独的美食家》，计划从第一季一口气追到第九季。每天总是夜深人静的时间点亮屏幕，看着酥脆的可乐饼、麻辣鲜香的担担面、热气腾腾的关东煮在眼前呈现。虽然折磨，但实在是欲罢不能。</p>\n<p>真正的美食，不一定要登大雅之堂，不一定要呈现在五星级酒店，不一定非要松茸加身，鱼子酱包裹。美食可以是路边小馆的羊汤，可以是家庭餐厅的石锅拌饭。美食之美，只有自己的舌、胃、心能够体会。</p>"},{"title":"记一次vscode remote-ssh登录失败的解决方案","author":"LiJT","date":"2021-11-25T16:00:00.000Z","key":"vscode20211126","_content":"\n我的vscode remote-ssh设置了[免密登录](https://www.jianshu.com/p/32aa2fa936bb)，本来昨天上午还能正常登录，但昨晚开始登录失败，怀疑是vscode版本更新后动了某些配置。参考一些资料后，总结了如下的解决方案.\n<!--more-->\n\n- 环境：本地 win11，服务器 linux\n\n## 步骤1.更改Remote-SSH设置\n- 一种可能导致登录失败的理由是，更新后的remote-ssh缺失了`\"remote.SSH.useLocalServer: true\"`的配置。为此，我们进入remote-ssh的settings.json中查看配置情况：\n1. 点击vscode左边栏“扩展”或按`Ctrl+Shift+X`，找到remote-ssh插件，点击右下角的小齿轮，进入设置页面 \n   \n   ![1](/LiJT-Daily/images/2021112601.png)\n2. 在设置页面，找到\"在settings.json编辑\"按钮，点击进入\n   \n   ![2](/LiJT-Daily/images/2021112602.png)\n3. 在settings.json中，检查是否有`\"remote.SSH.useLocalServer\"`选项。如果没有，则在最外层大括号内添加`\"remote.SSH.useLocalServer\": true`；如果有且值为`false`，则将值修改为`true`。修改后结果如下所示\n   \n   ![3](/LiJT-Daily/images/2021112603.png)\n4. 保存settings.json，重新启动vscode，尝试远程登录。\n\n## 步骤2.清空远程~/.vscode-server文件夹\n- 如果步骤1不能解决问题，则可以尝试步骤2.步骤2相比于步骤1，是强制初始化远程vscode环境。\n\n1. __关闭vscode server__。在本地vscode中按`Ctrl+Shift+P`进入命令面板，输入`Kill VS Code Server on Host`，选中Remote-SSH中的对应命令，强制关闭对应的vscode server。这一步一定不能省略，否则下一步将无法删除 ~/.vscode-server 文件\n   \n   ![4](/LiJT-Daily/images/2021112604.png)\n2. 强制删除~/.vscode-server。vscode 服务器环境统一存储在~/.vscode-server中，其中~表示自己服务器账号的根目录。使用如下命令删除该文件夹：\n```\nrm -rf ~/.vscode-server\n```\n3. 重新启动vscode，尝试远程登录。此时服务器会自动下载新的~/.vscode-server文件，待下载完成、配置完成后，即可使用。\n\n## 更新 (2021.11.27)\n- 当vscode remote-ssh 未关闭而电脑休眠后再唤醒时，会出现相同的登陆失败的问题。直接采用步骤2，问题解决\n\n## 参考资料\n- [非root用户配置VS Code Remote-SSH - - windows系统](https://www.jianshu.com/p/32aa2fa936bb)\n- [Resolver error: Error: The VS Code Server failed to start 的一种解决方案](https://www.cnblogs.com/springwind2006/p/14311454.html)\n- [vs code远程开发 SSH连接失败](https://blog.csdn.net/weilin731/article/details/119778478)\n- [vscode ssh连接失败](https://blog.csdn.net/myWorld001/article/details/119443079?spm=1001.2101.3001.6650.1&utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-1.no_search_link&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-1.no_search_link)\n","source":"_posts/2021-11-26-vscode.md","raw":"---\ntitle: 记一次vscode remote-ssh登录失败的解决方案\nauthor: LiJT\ndate: 2021-11-26\ntags: \n   - coding \n   - vscode \n   - ssh\nkey: vscode20211126\n---\n\n我的vscode remote-ssh设置了[免密登录](https://www.jianshu.com/p/32aa2fa936bb)，本来昨天上午还能正常登录，但昨晚开始登录失败，怀疑是vscode版本更新后动了某些配置。参考一些资料后，总结了如下的解决方案.\n<!--more-->\n\n- 环境：本地 win11，服务器 linux\n\n## 步骤1.更改Remote-SSH设置\n- 一种可能导致登录失败的理由是，更新后的remote-ssh缺失了`\"remote.SSH.useLocalServer: true\"`的配置。为此，我们进入remote-ssh的settings.json中查看配置情况：\n1. 点击vscode左边栏“扩展”或按`Ctrl+Shift+X`，找到remote-ssh插件，点击右下角的小齿轮，进入设置页面 \n   \n   ![1](/LiJT-Daily/images/2021112601.png)\n2. 在设置页面，找到\"在settings.json编辑\"按钮，点击进入\n   \n   ![2](/LiJT-Daily/images/2021112602.png)\n3. 在settings.json中，检查是否有`\"remote.SSH.useLocalServer\"`选项。如果没有，则在最外层大括号内添加`\"remote.SSH.useLocalServer\": true`；如果有且值为`false`，则将值修改为`true`。修改后结果如下所示\n   \n   ![3](/LiJT-Daily/images/2021112603.png)\n4. 保存settings.json，重新启动vscode，尝试远程登录。\n\n## 步骤2.清空远程~/.vscode-server文件夹\n- 如果步骤1不能解决问题，则可以尝试步骤2.步骤2相比于步骤1，是强制初始化远程vscode环境。\n\n1. __关闭vscode server__。在本地vscode中按`Ctrl+Shift+P`进入命令面板，输入`Kill VS Code Server on Host`，选中Remote-SSH中的对应命令，强制关闭对应的vscode server。这一步一定不能省略，否则下一步将无法删除 ~/.vscode-server 文件\n   \n   ![4](/LiJT-Daily/images/2021112604.png)\n2. 强制删除~/.vscode-server。vscode 服务器环境统一存储在~/.vscode-server中，其中~表示自己服务器账号的根目录。使用如下命令删除该文件夹：\n```\nrm -rf ~/.vscode-server\n```\n3. 重新启动vscode，尝试远程登录。此时服务器会自动下载新的~/.vscode-server文件，待下载完成、配置完成后，即可使用。\n\n## 更新 (2021.11.27)\n- 当vscode remote-ssh 未关闭而电脑休眠后再唤醒时，会出现相同的登陆失败的问题。直接采用步骤2，问题解决\n\n## 参考资料\n- [非root用户配置VS Code Remote-SSH - - windows系统](https://www.jianshu.com/p/32aa2fa936bb)\n- [Resolver error: Error: The VS Code Server failed to start 的一种解决方案](https://www.cnblogs.com/springwind2006/p/14311454.html)\n- [vs code远程开发 SSH连接失败](https://blog.csdn.net/weilin731/article/details/119778478)\n- [vscode ssh连接失败](https://blog.csdn.net/myWorld001/article/details/119443079?spm=1001.2101.3001.6650.1&utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-1.no_search_link&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-1.no_search_link)\n","slug":"2021-11-26-vscode","published":1,"updated":"2022-04-06T09:47:50.569Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl2tv7gkx000h8cv99wby6vyt","content":"<p>我的vscode remote-ssh设置了<a href=\"https://www.jianshu.com/p/32aa2fa936bb\">免密登录</a>，本来昨天上午还能正常登录，但昨晚开始登录失败，怀疑是vscode版本更新后动了某些配置。参考一些资料后，总结了如下的解决方案.<br><span id=\"more\"></span></p>\n<ul>\n<li>环境：本地 win11，服务器 linux</li>\n</ul>\n<h2 id=\"步骤1-更改Remote-SSH设置\"><a href=\"#步骤1-更改Remote-SSH设置\" class=\"headerlink\" title=\"步骤1.更改Remote-SSH设置\"></a>步骤1.更改Remote-SSH设置</h2><ul>\n<li>一种可能导致登录失败的理由是，更新后的remote-ssh缺失了<code>&quot;remote.SSH.useLocalServer: true&quot;</code>的配置。为此，我们进入remote-ssh的settings.json中查看配置情况：</li>\n</ul>\n<ol>\n<li><p>点击vscode左边栏“扩展”或按<code>Ctrl+Shift+X</code>，找到remote-ssh插件，点击右下角的小齿轮，进入设置页面 </p>\n<p><img src=\"/LiJT-Daily/images/2021112601.png\" alt=\"1\"></p>\n</li>\n<li><p>在设置页面，找到”在settings.json编辑”按钮，点击进入</p>\n<p><img src=\"/LiJT-Daily/images/2021112602.png\" alt=\"2\"></p>\n</li>\n<li><p>在settings.json中，检查是否有<code>&quot;remote.SSH.useLocalServer&quot;</code>选项。如果没有，则在最外层大括号内添加<code>&quot;remote.SSH.useLocalServer&quot;: true</code>；如果有且值为<code>false</code>，则将值修改为<code>true</code>。修改后结果如下所示</p>\n<p><img src=\"/LiJT-Daily/images/2021112603.png\" alt=\"3\"></p>\n</li>\n<li>保存settings.json，重新启动vscode，尝试远程登录。</li>\n</ol>\n<h2 id=\"步骤2-清空远程-vscode-server文件夹\"><a href=\"#步骤2-清空远程-vscode-server文件夹\" class=\"headerlink\" title=\"步骤2.清空远程~/.vscode-server文件夹\"></a>步骤2.清空远程~/.vscode-server文件夹</h2><ul>\n<li>如果步骤1不能解决问题，则可以尝试步骤2.步骤2相比于步骤1，是强制初始化远程vscode环境。</li>\n</ul>\n<ol>\n<li><p><strong>关闭vscode server</strong>。在本地vscode中按<code>Ctrl+Shift+P</code>进入命令面板，输入<code>Kill VS Code Server on Host</code>，选中Remote-SSH中的对应命令，强制关闭对应的vscode server。这一步一定不能省略，否则下一步将无法删除 ~/.vscode-server 文件</p>\n<p><img src=\"/LiJT-Daily/images/2021112604.png\" alt=\"4\"></p>\n</li>\n<li>强制删除~/.vscode-server。vscode 服务器环境统一存储在~/.vscode-server中，其中~表示自己服务器账号的根目录。使用如下命令删除该文件夹：<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rm -rf ~/.vscode-server</span><br></pre></td></tr></table></figure></li>\n<li>重新启动vscode，尝试远程登录。此时服务器会自动下载新的~/.vscode-server文件，待下载完成、配置完成后，即可使用。</li>\n</ol>\n<h2 id=\"更新-2021-11-27\"><a href=\"#更新-2021-11-27\" class=\"headerlink\" title=\"更新 (2021.11.27)\"></a>更新 (2021.11.27)</h2><ul>\n<li>当vscode remote-ssh 未关闭而电脑休眠后再唤醒时，会出现相同的登陆失败的问题。直接采用步骤2，问题解决</li>\n</ul>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li><a href=\"https://www.jianshu.com/p/32aa2fa936bb\">非root用户配置VS Code Remote-SSH - - windows系统</a></li>\n<li><a href=\"https://www.cnblogs.com/springwind2006/p/14311454.html\">Resolver error: Error: The VS Code Server failed to start 的一种解决方案</a></li>\n<li><a href=\"https://blog.csdn.net/weilin731/article/details/119778478\">vs code远程开发 SSH连接失败</a></li>\n<li><a href=\"https://blog.csdn.net/myWorld001/article/details/119443079?spm=1001.2101.3001.6650.1&amp;utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-1.no_search_link&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-1.no_search_link\">vscode ssh连接失败</a></li>\n</ul>\n","site":{"data":{}},"length":1114,"excerpt":"<p>我的vscode remote-ssh设置了<a href=\"https://www.jianshu.com/p/32aa2fa936bb\">免密登录</a>，本来昨天上午还能正常登录，但昨晚开始登录失败，怀疑是vscode版本更新后动了某些配置。参考一些资料后，总结了如下的解决方案.<br>","more":"</p>\n<ul>\n<li>环境：本地 win11，服务器 linux</li>\n</ul>\n<h2 id=\"步骤1-更改Remote-SSH设置\"><a href=\"#步骤1-更改Remote-SSH设置\" class=\"headerlink\" title=\"步骤1.更改Remote-SSH设置\"></a>步骤1.更改Remote-SSH设置</h2><ul>\n<li>一种可能导致登录失败的理由是，更新后的remote-ssh缺失了<code>&quot;remote.SSH.useLocalServer: true&quot;</code>的配置。为此，我们进入remote-ssh的settings.json中查看配置情况：</li>\n</ul>\n<ol>\n<li><p>点击vscode左边栏“扩展”或按<code>Ctrl+Shift+X</code>，找到remote-ssh插件，点击右下角的小齿轮，进入设置页面 </p>\n<p><img src=\"/LiJT-Daily/images/2021112601.png\" alt=\"1\"></p>\n</li>\n<li><p>在设置页面，找到”在settings.json编辑”按钮，点击进入</p>\n<p><img src=\"/LiJT-Daily/images/2021112602.png\" alt=\"2\"></p>\n</li>\n<li><p>在settings.json中，检查是否有<code>&quot;remote.SSH.useLocalServer&quot;</code>选项。如果没有，则在最外层大括号内添加<code>&quot;remote.SSH.useLocalServer&quot;: true</code>；如果有且值为<code>false</code>，则将值修改为<code>true</code>。修改后结果如下所示</p>\n<p><img src=\"/LiJT-Daily/images/2021112603.png\" alt=\"3\"></p>\n</li>\n<li>保存settings.json，重新启动vscode，尝试远程登录。</li>\n</ol>\n<h2 id=\"步骤2-清空远程-vscode-server文件夹\"><a href=\"#步骤2-清空远程-vscode-server文件夹\" class=\"headerlink\" title=\"步骤2.清空远程~/.vscode-server文件夹\"></a>步骤2.清空远程~/.vscode-server文件夹</h2><ul>\n<li>如果步骤1不能解决问题，则可以尝试步骤2.步骤2相比于步骤1，是强制初始化远程vscode环境。</li>\n</ul>\n<ol>\n<li><p><strong>关闭vscode server</strong>。在本地vscode中按<code>Ctrl+Shift+P</code>进入命令面板，输入<code>Kill VS Code Server on Host</code>，选中Remote-SSH中的对应命令，强制关闭对应的vscode server。这一步一定不能省略，否则下一步将无法删除 ~/.vscode-server 文件</p>\n<p><img src=\"/LiJT-Daily/images/2021112604.png\" alt=\"4\"></p>\n</li>\n<li>强制删除~/.vscode-server。vscode 服务器环境统一存储在~/.vscode-server中，其中~表示自己服务器账号的根目录。使用如下命令删除该文件夹：<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rm -rf ~/.vscode-server</span><br></pre></td></tr></table></figure></li>\n<li>重新启动vscode，尝试远程登录。此时服务器会自动下载新的~/.vscode-server文件，待下载完成、配置完成后，即可使用。</li>\n</ol>\n<h2 id=\"更新-2021-11-27\"><a href=\"#更新-2021-11-27\" class=\"headerlink\" title=\"更新 (2021.11.27)\"></a>更新 (2021.11.27)</h2><ul>\n<li>当vscode remote-ssh 未关闭而电脑休眠后再唤醒时，会出现相同的登陆失败的问题。直接采用步骤2，问题解决</li>\n</ul>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li><a href=\"https://www.jianshu.com/p/32aa2fa936bb\">非root用户配置VS Code Remote-SSH - - windows系统</a></li>\n<li><a href=\"https://www.cnblogs.com/springwind2006/p/14311454.html\">Resolver error: Error: The VS Code Server failed to start 的一种解决方案</a></li>\n<li><a href=\"https://blog.csdn.net/weilin731/article/details/119778478\">vs code远程开发 SSH连接失败</a></li>\n<li><a href=\"https://blog.csdn.net/myWorld001/article/details/119443079?spm=1001.2101.3001.6650.1&amp;utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-1.no_search_link&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-1.no_search_link\">vscode ssh连接失败</a></li>\n</ul>"},{"title":"Hadoop 实战练习记录","author":"LiJT","date":"2021-12-12T16:00:00.000Z","key":"hadoop20211213","_content":"\n## 写在前面\n本篇记录Hadoop实战学习中的笔记以及问题分析。\n\n<!--more-->\n\n## Mapreduce 实战\n### Mapreduce 程序模型\n#### 什么是Mapreduce\nMapReduce是一种可用于数据处理的编程模型，我们现在设想一个场景，你接到一个任务，任务是：挖掘分析我国气象中心近年来的数据日志，该数据日志大小有3T,让你分析计算出每一年的最高气温，如果你现在只有一台计算机，如何处理呢？我想你应该会读取这些数据，并且将读取到的数据与目前的最大气温值进行比较。比较完所有的数据之后就可以得出最高气温了。不过以我们的经验都知道要处理这么多数据肯定是非常耗时的。\n\n如果我现在给你三台机器，你会如何处理呢？你应该想到了：最好的处理方式是将这些数据切分成三块，然后分别计算处理这些数据（Map），处理完毕之后发送到一台机器上进行合并（merge），再计算合并之后的数据，归纳（reduce）并输出。\n\n这就是一个比较完整的MapReduce的过程了。\n\n![Mapreduce原理](/LiJT-Daily/images/2021121301.png)\n\n#### Mapreduce程序结构(以Word Count为例)\n```java\nimport java.io.IOException;\nimport java.util.StringTokenizer;\n \nimport java.io.IOException;\nimport java.util.StringTokenizer;\nimport org.apache.hadoop.conf.Configuration;\nimport org.apache.hadoop.fs.Path;\nimport org.apache.hadoop.io.*;\nimport org.apache.hadoop.io.Text;\nimport org.apache.hadoop.mapreduce.Job;\nimport org.apache.hadoop.mapreduce.Mapper;\nimport org.apache.hadoop.mapreduce.Reducer;\nimport org.apache.hadoop.mapreduce.lib.input.FileInputFormat;\nimport org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;\nimport org.apache.hadoop.util.GenericOptionsParser;\n\npublic class WordCount {\n//Mapper类\n/*LongWritable表示每一行起始偏移量\n第一个Text是用来接受文件中的内容，\n第二个Text是用来输出给Reduce类的key,\nIntWritable是用来输出给Reduce类的value*/\n public static class TokenizerMapper \n       extends Mapper<LongWritable, Text, Text, IntWritable>{\n    private final static IntWritable one = new IntWritable(1);\n    private Text word = new Text();\n    public void map(LongWritable key, Text value, Context context\n                    ) throws IOException, InterruptedException {\n      StringTokenizer itr = new StringTokenizer(value.toString());\n      while (itr.hasMoreTokens()) {\n        word.set(itr.nextToken());\n        context.write(word, one);\n      }\n    }\n  }\n  public static class IntSumReducer \n       extends Reducer<Text,IntWritable,Text,IntWritable> {\n    private IntWritable result = new IntWritable();\n    public void reduce(Text key, Iterable<IntWritable> values, \n                       Context context\n                       ) throws IOException, InterruptedException {\n      int sum = 0;\n      for (IntWritable val : values) {\n        sum += val.get();\n      }\n      result.set(sum);\n      context.write(key, result);\n    }\n  }\n  public static void main(String[] args) throws Exception {\n    //创建配置对象\n    Configuration conf = new Configuration();\n    //创建job对象\n    Job job = new Job(conf, \"word count\");\n    //设置运行job的类\n    job.setJarByClass(WordCount.class);\n    //设置Mapper的类\n    job.setMapperClass(TokenizerMapper.class);\n    //设置Reduce的类\n    job.setReducerClass(IntSumReducer.class);\n    //设置输出的key value格式\n    job.setOutputKeyClass(Text.class);\n    job.setOutputValueClass(IntWritable.class);\n    //设置输入路径\n    String inputfile = \"/usr/input\";\n    //设置输出路径\n    String outputFile = \"/usr/output\";\n    //执行输入\n    FileInputFormat.addInputPath(job, new Path(inputfile));\n    //执行输出\n    FileOutputFormat.setOutputPath(job, new Path(outputFile));\n    //是否运行成功，true输出0，false输出1\n    System.exit(job.waitForCompletion(true) ? 0 : 1);\n  }\n}\n```\n## Hbase 实战\n这里主要记录Hbase shell里的一些常用指令\n\n#### 创建表\n新建一个名为`test`的表，使其中包含一个名为`data`的列，表和列族属性都为默认值：\n```sql\ncreate 'test','data'\n```\n\n创建完成后，我们可以输入`list`来查看表是否创建成功\n\n#### 添加数据\n我们来给上一关创建的`test`表的列`data`添加一些数据.使用`put`命令可以用来添加数据，使用`get`命令可以获取数据。\n```sql\nput 'test','row1','data:1','value1'\nput 'test','row2','data:2','value2'\nget 'test','row1'\n```\n\n输入`scan`命令就可以查看所有的数据了\n\n#### 删除数据和表\n删除整行数据：`deleteall [表名]，[行名称]`\n```sql\ndeleteall 'test','row1'\n```\n\n删除表需要先禁用、再删除。分为两步：\n```\ndisable 表名\ndrop 表名\n```","source":"_posts/2021-12-13-hadoop.md","raw":"---\ntitle: Hadoop 实战练习记录\nauthor: LiJT\ndate: 2021-12-13\ntags: \n  - 大数据 \n  - Java \n  - Hadoop \n  - Mapreduce\nkey: hadoop20211213\n---\n\n## 写在前面\n本篇记录Hadoop实战学习中的笔记以及问题分析。\n\n<!--more-->\n\n## Mapreduce 实战\n### Mapreduce 程序模型\n#### 什么是Mapreduce\nMapReduce是一种可用于数据处理的编程模型，我们现在设想一个场景，你接到一个任务，任务是：挖掘分析我国气象中心近年来的数据日志，该数据日志大小有3T,让你分析计算出每一年的最高气温，如果你现在只有一台计算机，如何处理呢？我想你应该会读取这些数据，并且将读取到的数据与目前的最大气温值进行比较。比较完所有的数据之后就可以得出最高气温了。不过以我们的经验都知道要处理这么多数据肯定是非常耗时的。\n\n如果我现在给你三台机器，你会如何处理呢？你应该想到了：最好的处理方式是将这些数据切分成三块，然后分别计算处理这些数据（Map），处理完毕之后发送到一台机器上进行合并（merge），再计算合并之后的数据，归纳（reduce）并输出。\n\n这就是一个比较完整的MapReduce的过程了。\n\n![Mapreduce原理](/LiJT-Daily/images/2021121301.png)\n\n#### Mapreduce程序结构(以Word Count为例)\n```java\nimport java.io.IOException;\nimport java.util.StringTokenizer;\n \nimport java.io.IOException;\nimport java.util.StringTokenizer;\nimport org.apache.hadoop.conf.Configuration;\nimport org.apache.hadoop.fs.Path;\nimport org.apache.hadoop.io.*;\nimport org.apache.hadoop.io.Text;\nimport org.apache.hadoop.mapreduce.Job;\nimport org.apache.hadoop.mapreduce.Mapper;\nimport org.apache.hadoop.mapreduce.Reducer;\nimport org.apache.hadoop.mapreduce.lib.input.FileInputFormat;\nimport org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;\nimport org.apache.hadoop.util.GenericOptionsParser;\n\npublic class WordCount {\n//Mapper类\n/*LongWritable表示每一行起始偏移量\n第一个Text是用来接受文件中的内容，\n第二个Text是用来输出给Reduce类的key,\nIntWritable是用来输出给Reduce类的value*/\n public static class TokenizerMapper \n       extends Mapper<LongWritable, Text, Text, IntWritable>{\n    private final static IntWritable one = new IntWritable(1);\n    private Text word = new Text();\n    public void map(LongWritable key, Text value, Context context\n                    ) throws IOException, InterruptedException {\n      StringTokenizer itr = new StringTokenizer(value.toString());\n      while (itr.hasMoreTokens()) {\n        word.set(itr.nextToken());\n        context.write(word, one);\n      }\n    }\n  }\n  public static class IntSumReducer \n       extends Reducer<Text,IntWritable,Text,IntWritable> {\n    private IntWritable result = new IntWritable();\n    public void reduce(Text key, Iterable<IntWritable> values, \n                       Context context\n                       ) throws IOException, InterruptedException {\n      int sum = 0;\n      for (IntWritable val : values) {\n        sum += val.get();\n      }\n      result.set(sum);\n      context.write(key, result);\n    }\n  }\n  public static void main(String[] args) throws Exception {\n    //创建配置对象\n    Configuration conf = new Configuration();\n    //创建job对象\n    Job job = new Job(conf, \"word count\");\n    //设置运行job的类\n    job.setJarByClass(WordCount.class);\n    //设置Mapper的类\n    job.setMapperClass(TokenizerMapper.class);\n    //设置Reduce的类\n    job.setReducerClass(IntSumReducer.class);\n    //设置输出的key value格式\n    job.setOutputKeyClass(Text.class);\n    job.setOutputValueClass(IntWritable.class);\n    //设置输入路径\n    String inputfile = \"/usr/input\";\n    //设置输出路径\n    String outputFile = \"/usr/output\";\n    //执行输入\n    FileInputFormat.addInputPath(job, new Path(inputfile));\n    //执行输出\n    FileOutputFormat.setOutputPath(job, new Path(outputFile));\n    //是否运行成功，true输出0，false输出1\n    System.exit(job.waitForCompletion(true) ? 0 : 1);\n  }\n}\n```\n## Hbase 实战\n这里主要记录Hbase shell里的一些常用指令\n\n#### 创建表\n新建一个名为`test`的表，使其中包含一个名为`data`的列，表和列族属性都为默认值：\n```sql\ncreate 'test','data'\n```\n\n创建完成后，我们可以输入`list`来查看表是否创建成功\n\n#### 添加数据\n我们来给上一关创建的`test`表的列`data`添加一些数据.使用`put`命令可以用来添加数据，使用`get`命令可以获取数据。\n```sql\nput 'test','row1','data:1','value1'\nput 'test','row2','data:2','value2'\nget 'test','row1'\n```\n\n输入`scan`命令就可以查看所有的数据了\n\n#### 删除数据和表\n删除整行数据：`deleteall [表名]，[行名称]`\n```sql\ndeleteall 'test','row1'\n```\n\n删除表需要先禁用、再删除。分为两步：\n```\ndisable 表名\ndrop 表名\n```","slug":"2021-12-13-hadoop","published":1,"updated":"2022-04-06T09:49:51.656Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl2tv7gkx000i8cv9c6m7989k","content":"<h2 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h2><p>本篇记录Hadoop实战学习中的笔记以及问题分析。</p>\n<span id=\"more\"></span>\n<h2 id=\"Mapreduce-实战\"><a href=\"#Mapreduce-实战\" class=\"headerlink\" title=\"Mapreduce 实战\"></a>Mapreduce 实战</h2><h3 id=\"Mapreduce-程序模型\"><a href=\"#Mapreduce-程序模型\" class=\"headerlink\" title=\"Mapreduce 程序模型\"></a>Mapreduce 程序模型</h3><h4 id=\"什么是Mapreduce\"><a href=\"#什么是Mapreduce\" class=\"headerlink\" title=\"什么是Mapreduce\"></a>什么是Mapreduce</h4><p>MapReduce是一种可用于数据处理的编程模型，我们现在设想一个场景，你接到一个任务，任务是：挖掘分析我国气象中心近年来的数据日志，该数据日志大小有3T,让你分析计算出每一年的最高气温，如果你现在只有一台计算机，如何处理呢？我想你应该会读取这些数据，并且将读取到的数据与目前的最大气温值进行比较。比较完所有的数据之后就可以得出最高气温了。不过以我们的经验都知道要处理这么多数据肯定是非常耗时的。</p>\n<p>如果我现在给你三台机器，你会如何处理呢？你应该想到了：最好的处理方式是将这些数据切分成三块，然后分别计算处理这些数据（Map），处理完毕之后发送到一台机器上进行合并（merge），再计算合并之后的数据，归纳（reduce）并输出。</p>\n<p>这就是一个比较完整的MapReduce的过程了。</p>\n<p><img src=\"/LiJT-Daily/images/2021121301.png\" alt=\"Mapreduce原理\"></p>\n<h4 id=\"Mapreduce程序结构-以Word-Count为例\"><a href=\"#Mapreduce程序结构-以Word-Count为例\" class=\"headerlink\" title=\"Mapreduce程序结构(以Word Count为例)\"></a>Mapreduce程序结构(以Word Count为例)</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.StringTokenizer;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.StringTokenizer;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.hadoop.conf.Configuration;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.hadoop.fs.Path;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.hadoop.io.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.hadoop.io.Text;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.hadoop.mapreduce.Job;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.hadoop.mapreduce.Mapper;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.hadoop.mapreduce.Reducer;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.hadoop.mapreduce.lib.input.FileInputFormat;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.hadoop.util.GenericOptionsParser;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">WordCount</span> &#123;</span><br><span class=\"line\"><span class=\"comment\">//Mapper类</span></span><br><span class=\"line\"><span class=\"comment\">/*LongWritable表示每一行起始偏移量</span></span><br><span class=\"line\"><span class=\"comment\">第一个Text是用来接受文件中的内容，</span></span><br><span class=\"line\"><span class=\"comment\">第二个Text是用来输出给Reduce类的key,</span></span><br><span class=\"line\"><span class=\"comment\">IntWritable是用来输出给Reduce类的value*/</span></span><br><span class=\"line\"> <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TokenizerMapper</span> </span><br><span class=\"line\">       <span class=\"keyword\">extends</span> <span class=\"title class_\">Mapper</span>&lt;LongWritable, Text, Text, IntWritable&gt;&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">static</span> <span class=\"type\">IntWritable</span> <span class=\"variable\">one</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">IntWritable</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">Text</span> <span class=\"variable\">word</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Text</span>();</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">map</span><span class=\"params\">(LongWritable key, Text value, Context context</span></span><br><span class=\"line\"><span class=\"params\">                    )</span> <span class=\"keyword\">throws</span> IOException, InterruptedException &#123;</span><br><span class=\"line\">      <span class=\"type\">StringTokenizer</span> <span class=\"variable\">itr</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">StringTokenizer</span>(value.toString());</span><br><span class=\"line\">      <span class=\"keyword\">while</span> (itr.hasMoreTokens()) &#123;</span><br><span class=\"line\">        word.set(itr.nextToken());</span><br><span class=\"line\">        context.write(word, one);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title class_\">IntSumReducer</span> </span><br><span class=\"line\">       <span class=\"keyword\">extends</span> <span class=\"title class_\">Reducer</span>&lt;Text,IntWritable,Text,IntWritable&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">IntWritable</span> <span class=\"variable\">result</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">IntWritable</span>();</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">reduce</span><span class=\"params\">(Text key, Iterable&lt;IntWritable&gt; values, </span></span><br><span class=\"line\"><span class=\"params\">                       Context context</span></span><br><span class=\"line\"><span class=\"params\">                       )</span> <span class=\"keyword\">throws</span> IOException, InterruptedException &#123;</span><br><span class=\"line\">      <span class=\"type\">int</span> <span class=\"variable\">sum</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (IntWritable val : values) &#123;</span><br><span class=\"line\">        sum += val.get();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      result.set(sum);</span><br><span class=\"line\">      context.write(key, result);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">    <span class=\"comment\">//创建配置对象</span></span><br><span class=\"line\">    <span class=\"type\">Configuration</span> <span class=\"variable\">conf</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Configuration</span>();</span><br><span class=\"line\">    <span class=\"comment\">//创建job对象</span></span><br><span class=\"line\">    <span class=\"type\">Job</span> <span class=\"variable\">job</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Job</span>(conf, <span class=\"string\">&quot;word count&quot;</span>);</span><br><span class=\"line\">    <span class=\"comment\">//设置运行job的类</span></span><br><span class=\"line\">    job.setJarByClass(WordCount.class);</span><br><span class=\"line\">    <span class=\"comment\">//设置Mapper的类</span></span><br><span class=\"line\">    job.setMapperClass(TokenizerMapper.class);</span><br><span class=\"line\">    <span class=\"comment\">//设置Reduce的类</span></span><br><span class=\"line\">    job.setReducerClass(IntSumReducer.class);</span><br><span class=\"line\">    <span class=\"comment\">//设置输出的key value格式</span></span><br><span class=\"line\">    job.setOutputKeyClass(Text.class);</span><br><span class=\"line\">    job.setOutputValueClass(IntWritable.class);</span><br><span class=\"line\">    <span class=\"comment\">//设置输入路径</span></span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">inputfile</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;/usr/input&quot;</span>;</span><br><span class=\"line\">    <span class=\"comment\">//设置输出路径</span></span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">outputFile</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;/usr/output&quot;</span>;</span><br><span class=\"line\">    <span class=\"comment\">//执行输入</span></span><br><span class=\"line\">    FileInputFormat.addInputPath(job, <span class=\"keyword\">new</span> <span class=\"title class_\">Path</span>(inputfile));</span><br><span class=\"line\">    <span class=\"comment\">//执行输出</span></span><br><span class=\"line\">    FileOutputFormat.setOutputPath(job, <span class=\"keyword\">new</span> <span class=\"title class_\">Path</span>(outputFile));</span><br><span class=\"line\">    <span class=\"comment\">//是否运行成功，true输出0，false输出1</span></span><br><span class=\"line\">    System.exit(job.waitForCompletion(<span class=\"literal\">true</span>) ? <span class=\"number\">0</span> : <span class=\"number\">1</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Hbase-实战\"><a href=\"#Hbase-实战\" class=\"headerlink\" title=\"Hbase 实战\"></a>Hbase 实战</h2><p>这里主要记录Hbase shell里的一些常用指令</p>\n<h4 id=\"创建表\"><a href=\"#创建表\" class=\"headerlink\" title=\"创建表\"></a>创建表</h4><p>新建一个名为<code>test</code>的表，使其中包含一个名为<code>data</code>的列，表和列族属性都为默认值：<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"string\">&#x27;test&#x27;</span>,<span class=\"string\">&#x27;data&#x27;</span></span><br></pre></td></tr></table></figure></p>\n<p>创建完成后，我们可以输入<code>list</code>来查看表是否创建成功</p>\n<h4 id=\"添加数据\"><a href=\"#添加数据\" class=\"headerlink\" title=\"添加数据\"></a>添加数据</h4><p>我们来给上一关创建的<code>test</code>表的列<code>data</code>添加一些数据.使用<code>put</code>命令可以用来添加数据，使用<code>get</code>命令可以获取数据。<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">put <span class=\"string\">&#x27;test&#x27;</span>,<span class=\"string\">&#x27;row1&#x27;</span>,<span class=\"string\">&#x27;data:1&#x27;</span>,<span class=\"string\">&#x27;value1&#x27;</span></span><br><span class=\"line\">put <span class=\"string\">&#x27;test&#x27;</span>,<span class=\"string\">&#x27;row2&#x27;</span>,<span class=\"string\">&#x27;data:2&#x27;</span>,<span class=\"string\">&#x27;value2&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">get</span> <span class=\"string\">&#x27;test&#x27;</span>,<span class=\"string\">&#x27;row1&#x27;</span></span><br></pre></td></tr></table></figure></p>\n<p>输入<code>scan</code>命令就可以查看所有的数据了</p>\n<h4 id=\"删除数据和表\"><a href=\"#删除数据和表\" class=\"headerlink\" title=\"删除数据和表\"></a>删除数据和表</h4><p>删除整行数据：<code>deleteall [表名]，[行名称]</code><br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deleteall <span class=\"string\">&#x27;test&#x27;</span>,<span class=\"string\">&#x27;row1&#x27;</span></span><br></pre></td></tr></table></figure></p>\n<p>删除表需要先禁用、再删除。分为两步：<br><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">disable 表名</span><br><span class=\"line\">drop 表名</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"length":3258,"excerpt":"<h2 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h2><p>本篇记录Hadoop实战学习中的笔记以及问题分析。</p>","more":"<h2 id=\"Mapreduce-实战\"><a href=\"#Mapreduce-实战\" class=\"headerlink\" title=\"Mapreduce 实战\"></a>Mapreduce 实战</h2><h3 id=\"Mapreduce-程序模型\"><a href=\"#Mapreduce-程序模型\" class=\"headerlink\" title=\"Mapreduce 程序模型\"></a>Mapreduce 程序模型</h3><h4 id=\"什么是Mapreduce\"><a href=\"#什么是Mapreduce\" class=\"headerlink\" title=\"什么是Mapreduce\"></a>什么是Mapreduce</h4><p>MapReduce是一种可用于数据处理的编程模型，我们现在设想一个场景，你接到一个任务，任务是：挖掘分析我国气象中心近年来的数据日志，该数据日志大小有3T,让你分析计算出每一年的最高气温，如果你现在只有一台计算机，如何处理呢？我想你应该会读取这些数据，并且将读取到的数据与目前的最大气温值进行比较。比较完所有的数据之后就可以得出最高气温了。不过以我们的经验都知道要处理这么多数据肯定是非常耗时的。</p>\n<p>如果我现在给你三台机器，你会如何处理呢？你应该想到了：最好的处理方式是将这些数据切分成三块，然后分别计算处理这些数据（Map），处理完毕之后发送到一台机器上进行合并（merge），再计算合并之后的数据，归纳（reduce）并输出。</p>\n<p>这就是一个比较完整的MapReduce的过程了。</p>\n<p><img src=\"/LiJT-Daily/images/2021121301.png\" alt=\"Mapreduce原理\"></p>\n<h4 id=\"Mapreduce程序结构-以Word-Count为例\"><a href=\"#Mapreduce程序结构-以Word-Count为例\" class=\"headerlink\" title=\"Mapreduce程序结构(以Word Count为例)\"></a>Mapreduce程序结构(以Word Count为例)</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.StringTokenizer;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.StringTokenizer;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.hadoop.conf.Configuration;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.hadoop.fs.Path;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.hadoop.io.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.hadoop.io.Text;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.hadoop.mapreduce.Job;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.hadoop.mapreduce.Mapper;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.hadoop.mapreduce.Reducer;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.hadoop.mapreduce.lib.input.FileInputFormat;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.hadoop.util.GenericOptionsParser;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">WordCount</span> &#123;</span><br><span class=\"line\"><span class=\"comment\">//Mapper类</span></span><br><span class=\"line\"><span class=\"comment\">/*LongWritable表示每一行起始偏移量</span></span><br><span class=\"line\"><span class=\"comment\">第一个Text是用来接受文件中的内容，</span></span><br><span class=\"line\"><span class=\"comment\">第二个Text是用来输出给Reduce类的key,</span></span><br><span class=\"line\"><span class=\"comment\">IntWritable是用来输出给Reduce类的value*/</span></span><br><span class=\"line\"> <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TokenizerMapper</span> </span><br><span class=\"line\">       <span class=\"keyword\">extends</span> <span class=\"title class_\">Mapper</span>&lt;LongWritable, Text, Text, IntWritable&gt;&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">static</span> <span class=\"type\">IntWritable</span> <span class=\"variable\">one</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">IntWritable</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">Text</span> <span class=\"variable\">word</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Text</span>();</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">map</span><span class=\"params\">(LongWritable key, Text value, Context context</span></span><br><span class=\"line\"><span class=\"params\">                    )</span> <span class=\"keyword\">throws</span> IOException, InterruptedException &#123;</span><br><span class=\"line\">      <span class=\"type\">StringTokenizer</span> <span class=\"variable\">itr</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">StringTokenizer</span>(value.toString());</span><br><span class=\"line\">      <span class=\"keyword\">while</span> (itr.hasMoreTokens()) &#123;</span><br><span class=\"line\">        word.set(itr.nextToken());</span><br><span class=\"line\">        context.write(word, one);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title class_\">IntSumReducer</span> </span><br><span class=\"line\">       <span class=\"keyword\">extends</span> <span class=\"title class_\">Reducer</span>&lt;Text,IntWritable,Text,IntWritable&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">IntWritable</span> <span class=\"variable\">result</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">IntWritable</span>();</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">reduce</span><span class=\"params\">(Text key, Iterable&lt;IntWritable&gt; values, </span></span><br><span class=\"line\"><span class=\"params\">                       Context context</span></span><br><span class=\"line\"><span class=\"params\">                       )</span> <span class=\"keyword\">throws</span> IOException, InterruptedException &#123;</span><br><span class=\"line\">      <span class=\"type\">int</span> <span class=\"variable\">sum</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (IntWritable val : values) &#123;</span><br><span class=\"line\">        sum += val.get();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      result.set(sum);</span><br><span class=\"line\">      context.write(key, result);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">    <span class=\"comment\">//创建配置对象</span></span><br><span class=\"line\">    <span class=\"type\">Configuration</span> <span class=\"variable\">conf</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Configuration</span>();</span><br><span class=\"line\">    <span class=\"comment\">//创建job对象</span></span><br><span class=\"line\">    <span class=\"type\">Job</span> <span class=\"variable\">job</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Job</span>(conf, <span class=\"string\">&quot;word count&quot;</span>);</span><br><span class=\"line\">    <span class=\"comment\">//设置运行job的类</span></span><br><span class=\"line\">    job.setJarByClass(WordCount.class);</span><br><span class=\"line\">    <span class=\"comment\">//设置Mapper的类</span></span><br><span class=\"line\">    job.setMapperClass(TokenizerMapper.class);</span><br><span class=\"line\">    <span class=\"comment\">//设置Reduce的类</span></span><br><span class=\"line\">    job.setReducerClass(IntSumReducer.class);</span><br><span class=\"line\">    <span class=\"comment\">//设置输出的key value格式</span></span><br><span class=\"line\">    job.setOutputKeyClass(Text.class);</span><br><span class=\"line\">    job.setOutputValueClass(IntWritable.class);</span><br><span class=\"line\">    <span class=\"comment\">//设置输入路径</span></span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">inputfile</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;/usr/input&quot;</span>;</span><br><span class=\"line\">    <span class=\"comment\">//设置输出路径</span></span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">outputFile</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;/usr/output&quot;</span>;</span><br><span class=\"line\">    <span class=\"comment\">//执行输入</span></span><br><span class=\"line\">    FileInputFormat.addInputPath(job, <span class=\"keyword\">new</span> <span class=\"title class_\">Path</span>(inputfile));</span><br><span class=\"line\">    <span class=\"comment\">//执行输出</span></span><br><span class=\"line\">    FileOutputFormat.setOutputPath(job, <span class=\"keyword\">new</span> <span class=\"title class_\">Path</span>(outputFile));</span><br><span class=\"line\">    <span class=\"comment\">//是否运行成功，true输出0，false输出1</span></span><br><span class=\"line\">    System.exit(job.waitForCompletion(<span class=\"literal\">true</span>) ? <span class=\"number\">0</span> : <span class=\"number\">1</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Hbase-实战\"><a href=\"#Hbase-实战\" class=\"headerlink\" title=\"Hbase 实战\"></a>Hbase 实战</h2><p>这里主要记录Hbase shell里的一些常用指令</p>\n<h4 id=\"创建表\"><a href=\"#创建表\" class=\"headerlink\" title=\"创建表\"></a>创建表</h4><p>新建一个名为<code>test</code>的表，使其中包含一个名为<code>data</code>的列，表和列族属性都为默认值：<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"string\">&#x27;test&#x27;</span>,<span class=\"string\">&#x27;data&#x27;</span></span><br></pre></td></tr></table></figure></p>\n<p>创建完成后，我们可以输入<code>list</code>来查看表是否创建成功</p>\n<h4 id=\"添加数据\"><a href=\"#添加数据\" class=\"headerlink\" title=\"添加数据\"></a>添加数据</h4><p>我们来给上一关创建的<code>test</code>表的列<code>data</code>添加一些数据.使用<code>put</code>命令可以用来添加数据，使用<code>get</code>命令可以获取数据。<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">put <span class=\"string\">&#x27;test&#x27;</span>,<span class=\"string\">&#x27;row1&#x27;</span>,<span class=\"string\">&#x27;data:1&#x27;</span>,<span class=\"string\">&#x27;value1&#x27;</span></span><br><span class=\"line\">put <span class=\"string\">&#x27;test&#x27;</span>,<span class=\"string\">&#x27;row2&#x27;</span>,<span class=\"string\">&#x27;data:2&#x27;</span>,<span class=\"string\">&#x27;value2&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">get</span> <span class=\"string\">&#x27;test&#x27;</span>,<span class=\"string\">&#x27;row1&#x27;</span></span><br></pre></td></tr></table></figure></p>\n<p>输入<code>scan</code>命令就可以查看所有的数据了</p>\n<h4 id=\"删除数据和表\"><a href=\"#删除数据和表\" class=\"headerlink\" title=\"删除数据和表\"></a>删除数据和表</h4><p>删除整行数据：<code>deleteall [表名]，[行名称]</code><br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deleteall <span class=\"string\">&#x27;test&#x27;</span>,<span class=\"string\">&#x27;row1&#x27;</span></span><br></pre></td></tr></table></figure></p>\n<p>删除表需要先禁用、再删除。分为两步：<br><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">disable 表名</span><br><span class=\"line\">drop 表名</span><br></pre></td></tr></table></figure></p>"},{"title":"Java 常用轮子","author":"LiJT","date":"2021-12-12T16:00:00.000Z","key":"java20211213","_content":"\n## 写在前面\nWelcome back! （也对我自己）\n\n这一篇记录一些常用的Java工具包，与[Python技巧](/LiJT-Daily/2021/10/25/python.html)相对应。后者也好长时间没更新了，以后会慢慢补上。\n\n```\n偷偷地我走了，\n正如我偷偷地来。\n偷偷地我挥一挥手，\n不留下一篇SCI。\n```\n<!--more-->\n\n## java.util\n### StringTokenizer 类\n- 用途：分割字符串，类似于python的 `re.split()`.\n\n#### 构造方法\n1. `StringTokenizer(String str)` ：构造一个用来解析 str 的 StringTokenizer 对象。java 默认的分隔符是空格(\"\")、制表符(\\t)、换行符(\\n)、回车符(\\r)。\n2. `StringTokenizer(String str, String delim)` ：构造一个用来解析 str 的 StringTokenizer 对象，并提供一个指定的分隔符。\n3. `StringTokenizer(String str, String delim, boolean returnDelims)` ：构造一个用来解析 str 的 StringTokenizer 对象，并提供一个指定的分隔符，同时，指定是否返回分隔符。\n\n#### 常用方法\n1. `int countTokens()`：返回nextToken方法被调用的次数。\n2. `boolean hasMoreTokens()`：返回是否还有分隔符。\n3. `boolean hasMoreElements()`：判断枚举 （Enumeration） 对象中是否还有数据。\n4. `String nextToken()`：返回从当前位置到下一个分隔符的字符串。\n5. `Object nextElement()`：返回枚举 （Enumeration） 对象的下一个元素。\n6. `String nextToken(String delim)`：与 4 类似，以指定的分隔符返回结果。\n\n#### 示例\n```java\n// Hadoop WordCount中，mapper的map方法。默认用空格分隔字符串\npublic void map(LongWritable key, Text value, Context context\n                    ) throws IOException, InterruptedException {\n    StringTokenizer itr = new StringTokenizer(value.toString());\n    word.set(itr.nextToken());\n    context.write(word, one);\n}\n```","source":"_posts/2021-12-13-java.md","raw":"---\ntitle: Java 常用轮子\nauthor: LiJT\ndate: 2021-12-13\ntags: 大数据 Java Hadoop \nkey: java20211213\n---\n\n## 写在前面\nWelcome back! （也对我自己）\n\n这一篇记录一些常用的Java工具包，与[Python技巧](/LiJT-Daily/2021/10/25/python.html)相对应。后者也好长时间没更新了，以后会慢慢补上。\n\n```\n偷偷地我走了，\n正如我偷偷地来。\n偷偷地我挥一挥手，\n不留下一篇SCI。\n```\n<!--more-->\n\n## java.util\n### StringTokenizer 类\n- 用途：分割字符串，类似于python的 `re.split()`.\n\n#### 构造方法\n1. `StringTokenizer(String str)` ：构造一个用来解析 str 的 StringTokenizer 对象。java 默认的分隔符是空格(\"\")、制表符(\\t)、换行符(\\n)、回车符(\\r)。\n2. `StringTokenizer(String str, String delim)` ：构造一个用来解析 str 的 StringTokenizer 对象，并提供一个指定的分隔符。\n3. `StringTokenizer(String str, String delim, boolean returnDelims)` ：构造一个用来解析 str 的 StringTokenizer 对象，并提供一个指定的分隔符，同时，指定是否返回分隔符。\n\n#### 常用方法\n1. `int countTokens()`：返回nextToken方法被调用的次数。\n2. `boolean hasMoreTokens()`：返回是否还有分隔符。\n3. `boolean hasMoreElements()`：判断枚举 （Enumeration） 对象中是否还有数据。\n4. `String nextToken()`：返回从当前位置到下一个分隔符的字符串。\n5. `Object nextElement()`：返回枚举 （Enumeration） 对象的下一个元素。\n6. `String nextToken(String delim)`：与 4 类似，以指定的分隔符返回结果。\n\n#### 示例\n```java\n// Hadoop WordCount中，mapper的map方法。默认用空格分隔字符串\npublic void map(LongWritable key, Text value, Context context\n                    ) throws IOException, InterruptedException {\n    StringTokenizer itr = new StringTokenizer(value.toString());\n    word.set(itr.nextToken());\n    context.write(word, one);\n}\n```","slug":"2021-12-13-java","published":1,"updated":"2022-04-06T09:50:32.027Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl2tv7gky000k8cv98k4g7a1w","content":"<h2 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h2><p>Welcome back! （也对我自己）</p>\n<p>这一篇记录一些常用的Java工具包，与<a href=\"/LiJT-Daily/2021/10/25/python.html\">Python技巧</a>相对应。后者也好长时间没更新了，以后会慢慢补上。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">偷偷地我走了，</span><br><span class=\"line\">正如我偷偷地来。</span><br><span class=\"line\">偷偷地我挥一挥手，</span><br><span class=\"line\">不留下一篇SCI。</span><br></pre></td></tr></table></figure>\n<span id=\"more\"></span>\n<h2 id=\"java-util\"><a href=\"#java-util\" class=\"headerlink\" title=\"java.util\"></a>java.util</h2><h3 id=\"StringTokenizer-类\"><a href=\"#StringTokenizer-类\" class=\"headerlink\" title=\"StringTokenizer 类\"></a>StringTokenizer 类</h3><ul>\n<li>用途：分割字符串，类似于python的 <code>re.split()</code>.</li>\n</ul>\n<h4 id=\"构造方法\"><a href=\"#构造方法\" class=\"headerlink\" title=\"构造方法\"></a>构造方法</h4><ol>\n<li><code>StringTokenizer(String str)</code> ：构造一个用来解析 str 的 StringTokenizer 对象。java 默认的分隔符是空格(“”)、制表符(\\t)、换行符(\\n)、回车符(\\r)。</li>\n<li><code>StringTokenizer(String str, String delim)</code> ：构造一个用来解析 str 的 StringTokenizer 对象，并提供一个指定的分隔符。</li>\n<li><code>StringTokenizer(String str, String delim, boolean returnDelims)</code> ：构造一个用来解析 str 的 StringTokenizer 对象，并提供一个指定的分隔符，同时，指定是否返回分隔符。</li>\n</ol>\n<h4 id=\"常用方法\"><a href=\"#常用方法\" class=\"headerlink\" title=\"常用方法\"></a>常用方法</h4><ol>\n<li><code>int countTokens()</code>：返回nextToken方法被调用的次数。</li>\n<li><code>boolean hasMoreTokens()</code>：返回是否还有分隔符。</li>\n<li><code>boolean hasMoreElements()</code>：判断枚举 （Enumeration） 对象中是否还有数据。</li>\n<li><code>String nextToken()</code>：返回从当前位置到下一个分隔符的字符串。</li>\n<li><code>Object nextElement()</code>：返回枚举 （Enumeration） 对象的下一个元素。</li>\n<li><code>String nextToken(String delim)</code>：与 4 类似，以指定的分隔符返回结果。</li>\n</ol>\n<h4 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Hadoop WordCount中，mapper的map方法。默认用空格分隔字符串</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">map</span><span class=\"params\">(LongWritable key, Text value, Context context</span></span><br><span class=\"line\"><span class=\"params\">                    )</span> <span class=\"keyword\">throws</span> IOException, InterruptedException &#123;</span><br><span class=\"line\">    <span class=\"type\">StringTokenizer</span> <span class=\"variable\">itr</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">StringTokenizer</span>(value.toString());</span><br><span class=\"line\">    word.set(itr.nextToken());</span><br><span class=\"line\">    context.write(word, one);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"length":981,"excerpt":"<h2 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h2><p>Welcome back! （也对我自己）</p>\n<p>这一篇记录一些常用的Java工具包，与<a href=\"/LiJT-Daily/2021/10/25/python.html\">Python技巧</a>相对应。后者也好长时间没更新了，以后会慢慢补上。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">偷偷地我走了，</span><br><span class=\"line\">正如我偷偷地来。</span><br><span class=\"line\">偷偷地我挥一挥手，</span><br><span class=\"line\">不留下一篇SCI。</span><br></pre></td></tr></table></figure>","more":"<h2 id=\"java-util\"><a href=\"#java-util\" class=\"headerlink\" title=\"java.util\"></a>java.util</h2><h3 id=\"StringTokenizer-类\"><a href=\"#StringTokenizer-类\" class=\"headerlink\" title=\"StringTokenizer 类\"></a>StringTokenizer 类</h3><ul>\n<li>用途：分割字符串，类似于python的 <code>re.split()</code>.</li>\n</ul>\n<h4 id=\"构造方法\"><a href=\"#构造方法\" class=\"headerlink\" title=\"构造方法\"></a>构造方法</h4><ol>\n<li><code>StringTokenizer(String str)</code> ：构造一个用来解析 str 的 StringTokenizer 对象。java 默认的分隔符是空格(“”)、制表符(\\t)、换行符(\\n)、回车符(\\r)。</li>\n<li><code>StringTokenizer(String str, String delim)</code> ：构造一个用来解析 str 的 StringTokenizer 对象，并提供一个指定的分隔符。</li>\n<li><code>StringTokenizer(String str, String delim, boolean returnDelims)</code> ：构造一个用来解析 str 的 StringTokenizer 对象，并提供一个指定的分隔符，同时，指定是否返回分隔符。</li>\n</ol>\n<h4 id=\"常用方法\"><a href=\"#常用方法\" class=\"headerlink\" title=\"常用方法\"></a>常用方法</h4><ol>\n<li><code>int countTokens()</code>：返回nextToken方法被调用的次数。</li>\n<li><code>boolean hasMoreTokens()</code>：返回是否还有分隔符。</li>\n<li><code>boolean hasMoreElements()</code>：判断枚举 （Enumeration） 对象中是否还有数据。</li>\n<li><code>String nextToken()</code>：返回从当前位置到下一个分隔符的字符串。</li>\n<li><code>Object nextElement()</code>：返回枚举 （Enumeration） 对象的下一个元素。</li>\n<li><code>String nextToken(String delim)</code>：与 4 类似，以指定的分隔符返回结果。</li>\n</ol>\n<h4 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Hadoop WordCount中，mapper的map方法。默认用空格分隔字符串</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">map</span><span class=\"params\">(LongWritable key, Text value, Context context</span></span><br><span class=\"line\"><span class=\"params\">                    )</span> <span class=\"keyword\">throws</span> IOException, InterruptedException &#123;</span><br><span class=\"line\">    <span class=\"type\">StringTokenizer</span> <span class=\"variable\">itr</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">StringTokenizer</span>(value.toString());</span><br><span class=\"line\">    word.set(itr.nextToken());</span><br><span class=\"line\">    context.write(word, one);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"模糊理论及其应用简介（笔记）","author":"LiJT","date":"2021-12-28T16:00:00.000Z","mathjax":true,"key":"fuzzy20211229","_content":"\n模糊理论（Fuzzy Theory）是指用到了**模糊集合**的基本概念或**连续隶属度函数**的理论。它可分类为模糊数学，模糊系统，不确定性和信息，模糊决策，模糊逻辑与人工智能这五个分支，它们并不是完全独立的，它们之间有紧密的联系。例如，模糊控制就会用到模糊数学和模糊逻辑中的概念。从实际应用的观点来看，模糊理论的应用大部分集中在**模糊系统**上，尤其集中在模糊控制上。也有一些模糊专家系统应用于医疗诊断和决策支持。由于模糊理论从理论和实践的角度看仍然是新生事物，所以我们期望，随着模糊领域的成熟，将会出现更多可靠的实际应用。 （摘自百度百科）\n\n<!--more-->\n## 什么是模糊理论\n\n### 模糊\n\n介绍模糊理论之前，我们首先直观地理解**模糊**这一概念。例如小明**十分喜欢吃牛肉和鸡蛋**，**特别讨厌番茄和甜食**。那么可以明确地说，小明喜欢吃牛肉滑蛋饭但很讨厌吃糖拌西红柿。但如果给小明做一份**番茄炖牛肉**，我们就不能确定小明是喜欢还是不喜欢。在这一场景下，小明对番茄炖牛肉的态度就是“模糊”的。\n\n### 模糊逻辑\n\n更一般地，我们引入**模糊逻辑**的概念。在经典二值逻辑中，我们用1表示真（喜欢），0表示假（不喜欢），那么命题1（小明喜欢牛肉滑蛋饭）的值为1，命题2（小明喜欢糖拌西红柿）的值为假。对于命题3（小明喜欢番茄炖牛肉），我们使用介于0和1之间的**隶属度**表示这两个值之间的过渡状态，例如命题3的值=0.7，表示小明有点喜欢番茄炖牛肉。使用隶属度值**消除二值之间非此即彼的对立，这就是模糊逻辑**。\n\n### 模糊集合\n\n接下来，我们更进一步地引入**模糊集合**的概念。在古典集合中，对于任意全域$U$内的一个元素$x$和一个集合$A$，如果使用$f_A(\\cdot)$表示元素相对于集合的关系，则只包含以下两种情况：\n\n$$\nf_A(x)=\\left\\{\n\\begin{aligned}\n0, x\\notin A\\\\\n1, x\\in A\n\\end{aligned}\\right.\n$$\n\n那么 $f_A:U\\to\\{ 0,1\\}$就是一个二值函数。在**模糊集合**中，则使用连续值表示*元素属于集合的程度*，这样的函数$f_A：U\\to[0,1]$就被称为连续的**隶属度函数**。所谓“隶属度”，就是“元素隶属于集合的程度”。例如 $f_A(x)=0.6$，表示元素$x$属于集合$A$的程度是0.6.","source":"_posts/2021-12-29-fuzzy.md","raw":"---\ntitle: 模糊理论及其应用简介（笔记）\nauthor: LiJT\ndate: 2021-12-29\ntags: 数学\nmathjax: true\nkey: fuzzy20211229\n---\n\n模糊理论（Fuzzy Theory）是指用到了**模糊集合**的基本概念或**连续隶属度函数**的理论。它可分类为模糊数学，模糊系统，不确定性和信息，模糊决策，模糊逻辑与人工智能这五个分支，它们并不是完全独立的，它们之间有紧密的联系。例如，模糊控制就会用到模糊数学和模糊逻辑中的概念。从实际应用的观点来看，模糊理论的应用大部分集中在**模糊系统**上，尤其集中在模糊控制上。也有一些模糊专家系统应用于医疗诊断和决策支持。由于模糊理论从理论和实践的角度看仍然是新生事物，所以我们期望，随着模糊领域的成熟，将会出现更多可靠的实际应用。 （摘自百度百科）\n\n<!--more-->\n## 什么是模糊理论\n\n### 模糊\n\n介绍模糊理论之前，我们首先直观地理解**模糊**这一概念。例如小明**十分喜欢吃牛肉和鸡蛋**，**特别讨厌番茄和甜食**。那么可以明确地说，小明喜欢吃牛肉滑蛋饭但很讨厌吃糖拌西红柿。但如果给小明做一份**番茄炖牛肉**，我们就不能确定小明是喜欢还是不喜欢。在这一场景下，小明对番茄炖牛肉的态度就是“模糊”的。\n\n### 模糊逻辑\n\n更一般地，我们引入**模糊逻辑**的概念。在经典二值逻辑中，我们用1表示真（喜欢），0表示假（不喜欢），那么命题1（小明喜欢牛肉滑蛋饭）的值为1，命题2（小明喜欢糖拌西红柿）的值为假。对于命题3（小明喜欢番茄炖牛肉），我们使用介于0和1之间的**隶属度**表示这两个值之间的过渡状态，例如命题3的值=0.7，表示小明有点喜欢番茄炖牛肉。使用隶属度值**消除二值之间非此即彼的对立，这就是模糊逻辑**。\n\n### 模糊集合\n\n接下来，我们更进一步地引入**模糊集合**的概念。在古典集合中，对于任意全域$U$内的一个元素$x$和一个集合$A$，如果使用$f_A(\\cdot)$表示元素相对于集合的关系，则只包含以下两种情况：\n\n$$\nf_A(x)=\\left\\{\n\\begin{aligned}\n0, x\\notin A\\\\\n1, x\\in A\n\\end{aligned}\\right.\n$$\n\n那么 $f_A:U\\to\\{ 0,1\\}$就是一个二值函数。在**模糊集合**中，则使用连续值表示*元素属于集合的程度*，这样的函数$f_A：U\\to[0,1]$就被称为连续的**隶属度函数**。所谓“隶属度”，就是“元素隶属于集合的程度”。例如 $f_A(x)=0.6$，表示元素$x$属于集合$A$的程度是0.6.","slug":"2021-12-29-fuzzy","published":1,"updated":"2022-04-06T16:03:00.550Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl2tv7gky000m8cv9dn9xarpx","content":"<p>模糊理论（Fuzzy Theory）是指用到了<strong>模糊集合</strong>的基本概念或<strong>连续隶属度函数</strong>的理论。它可分类为模糊数学，模糊系统，不确定性和信息，模糊决策，模糊逻辑与人工智能这五个分支，它们并不是完全独立的，它们之间有紧密的联系。例如，模糊控制就会用到模糊数学和模糊逻辑中的概念。从实际应用的观点来看，模糊理论的应用大部分集中在<strong>模糊系统</strong>上，尤其集中在模糊控制上。也有一些模糊专家系统应用于医疗诊断和决策支持。由于模糊理论从理论和实践的角度看仍然是新生事物，所以我们期望，随着模糊领域的成熟，将会出现更多可靠的实际应用。 （摘自百度百科）</p>\n<span id=\"more\"></span>\n<h2 id=\"什么是模糊理论\"><a href=\"#什么是模糊理论\" class=\"headerlink\" title=\"什么是模糊理论\"></a>什么是模糊理论</h2><h3 id=\"模糊\"><a href=\"#模糊\" class=\"headerlink\" title=\"模糊\"></a>模糊</h3><p>介绍模糊理论之前，我们首先直观地理解<strong>模糊</strong>这一概念。例如小明<strong>十分喜欢吃牛肉和鸡蛋</strong>，<strong>特别讨厌番茄和甜食</strong>。那么可以明确地说，小明喜欢吃牛肉滑蛋饭但很讨厌吃糖拌西红柿。但如果给小明做一份<strong>番茄炖牛肉</strong>，我们就不能确定小明是喜欢还是不喜欢。在这一场景下，小明对番茄炖牛肉的态度就是“模糊”的。</p>\n<h3 id=\"模糊逻辑\"><a href=\"#模糊逻辑\" class=\"headerlink\" title=\"模糊逻辑\"></a>模糊逻辑</h3><p>更一般地，我们引入<strong>模糊逻辑</strong>的概念。在经典二值逻辑中，我们用1表示真（喜欢），0表示假（不喜欢），那么命题1（小明喜欢牛肉滑蛋饭）的值为1，命题2（小明喜欢糖拌西红柿）的值为假。对于命题3（小明喜欢番茄炖牛肉），我们使用介于0和1之间的<strong>隶属度</strong>表示这两个值之间的过渡状态，例如命题3的值=0.7，表示小明有点喜欢番茄炖牛肉。使用隶属度值<strong>消除二值之间非此即彼的对立，这就是模糊逻辑</strong>。</p>\n<h3 id=\"模糊集合\"><a href=\"#模糊集合\" class=\"headerlink\" title=\"模糊集合\"></a>模糊集合</h3><p>接下来，我们更进一步地引入<strong>模糊集合</strong>的概念。在古典集合中，对于任意全域<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.735ex\" height=\"1.595ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 767 705\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D448\" d=\"M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z\"></path></g></g></g></svg></mjx-container>内的一个元素<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.294ex\" height=\"1.025ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 572 453\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></g></g></g></svg></mjx-container>和一个集合<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.697ex\" height=\"1.62ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 750 716\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g></g></g></svg></mjx-container>，如果使用<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.885ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 2159.3 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D453\" d=\"M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(523,-152.7) scale(0.707)\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(1103.3,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1492.3,0)\"><path data-c=\"22C5\" d=\"M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1770.3,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>表示元素相对于集合的关系，则只包含以下两种情况：</p>\n<script type=\"math/tex; mode=display\">\nf_A(x)=\\left\\{\n\\begin{aligned}\n0, x\\notin A\\\\\n1, x\\in A\n\\end{aligned}\\right.</script><p>那么 <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"15.168ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 6704.1 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D453\" d=\"M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(523,-152.7) scale(0.707)\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(1381.1,0)\"><path data-c=\"3A\" d=\"M78 370Q78 394 95 412T138 430Q162 430 180 414T199 371Q199 346 182 328T139 310T96 327T78 370ZM78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1936.9,0)\"><path data-c=\"1D448\" d=\"M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2981.7,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4259.4,0)\"><path data-c=\"7B\" d=\"M434 -231Q434 -244 428 -250H410Q281 -250 230 -184Q225 -177 222 -172T217 -161T213 -148T211 -133T210 -111T209 -84T209 -47T209 0Q209 21 209 53Q208 142 204 153Q203 154 203 155Q189 191 153 211T82 231Q71 231 68 234T65 250T68 266T82 269Q116 269 152 289T203 345Q208 356 208 377T209 529V579Q209 634 215 656T244 698Q270 724 324 740Q361 748 377 749Q379 749 390 749T408 750H428Q434 744 434 732Q434 719 431 716Q429 713 415 713Q362 710 332 689T296 647Q291 634 291 499V417Q291 370 288 353T271 314Q240 271 184 255L170 250L184 245Q202 239 220 230T262 196T290 137Q291 131 291 1Q291 -134 296 -147Q306 -174 339 -192T415 -213Q429 -213 431 -216Q434 -219 434 -231Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(4759.4,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(5259.4,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(5704.1,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6204.1,0)\"><path data-c=\"7D\" d=\"M65 731Q65 745 68 747T88 750Q171 750 216 725T279 670Q288 649 289 635T291 501Q292 362 293 357Q306 312 345 291T417 269Q428 269 431 266T434 250T431 234T417 231Q380 231 345 210T298 157Q293 143 292 121T291 -28V-79Q291 -134 285 -156T256 -198Q202 -250 89 -250Q71 -250 68 -247T65 -230Q65 -224 65 -223T66 -218T69 -214T77 -213Q91 -213 108 -210T146 -200T183 -177T207 -139Q208 -134 209 3L210 139Q223 196 280 230Q315 247 330 250Q305 257 280 270Q225 304 212 352L210 362L209 498Q208 635 207 640Q195 680 154 696T77 713Q68 713 67 716T65 731Z\"></path></g></g></g></svg></mjx-container>就是一个二值函数。在<strong>模糊集合</strong>中，则使用连续值表示<em>元素属于集合的程度</em>，这样的函数<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"14.313ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 6326.6 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D453\" d=\"M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(523,-152.7) scale(0.707)\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g></g><g data-mml-node=\"mi\" transform=\"translate(1103.3,0)\"><text data-variant=\"italic\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\" font-style=\"italic\">：</text></g><g data-mml-node=\"mi\" transform=\"translate(2003.3,0)\"><path data-c=\"1D448\" d=\"M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3048.1,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4325.9,0)\"><path data-c=\"5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(4603.9,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(5103.9,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(5548.6,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6048.6,0)\"><path data-c=\"5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"></path></g></g></g></svg></mjx-container>就被称为连续的<strong>隶属度函数</strong>。所谓“隶属度”，就是“元素隶属于集合的程度”。例如 <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"11.459ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 5064.9 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D453\" d=\"M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(523,-152.7) scale(0.707)\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(1103.3,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1492.3,0)\"><path data-c=\"1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2064.3,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2731.1,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(3786.9,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path><path data-c=\"2E\" d=\"M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z\" transform=\"translate(500,0)\"></path><path data-c=\"36\" d=\"M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z\" transform=\"translate(778,0)\"></path></g></g></g></svg></mjx-container>，表示元素<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.294ex\" height=\"1.025ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 572 453\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></g></g></g></svg></mjx-container>属于集合<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.697ex\" height=\"1.62ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 750 716\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g></g></g></svg></mjx-container>的程度是0.6.</p>\n","site":{"data":{}},"length":913,"excerpt":"<p>模糊理论（Fuzzy Theory）是指用到了<strong>模糊集合</strong>的基本概念或<strong>连续隶属度函数</strong>的理论。它可分类为模糊数学，模糊系统，不确定性和信息，模糊决策，模糊逻辑与人工智能这五个分支，它们并不是完全独立的，它们之间有紧密的联系。例如，模糊控制就会用到模糊数学和模糊逻辑中的概念。从实际应用的观点来看，模糊理论的应用大部分集中在<strong>模糊系统</strong>上，尤其集中在模糊控制上。也有一些模糊专家系统应用于医疗诊断和决策支持。由于模糊理论从理论和实践的角度看仍然是新生事物，所以我们期望，随着模糊领域的成熟，将会出现更多可靠的实际应用。 （摘自百度百科）</p>","more":"<h2 id=\"什么是模糊理论\"><a href=\"#什么是模糊理论\" class=\"headerlink\" title=\"什么是模糊理论\"></a>什么是模糊理论</h2><h3 id=\"模糊\"><a href=\"#模糊\" class=\"headerlink\" title=\"模糊\"></a>模糊</h3><p>介绍模糊理论之前，我们首先直观地理解<strong>模糊</strong>这一概念。例如小明<strong>十分喜欢吃牛肉和鸡蛋</strong>，<strong>特别讨厌番茄和甜食</strong>。那么可以明确地说，小明喜欢吃牛肉滑蛋饭但很讨厌吃糖拌西红柿。但如果给小明做一份<strong>番茄炖牛肉</strong>，我们就不能确定小明是喜欢还是不喜欢。在这一场景下，小明对番茄炖牛肉的态度就是“模糊”的。</p>\n<h3 id=\"模糊逻辑\"><a href=\"#模糊逻辑\" class=\"headerlink\" title=\"模糊逻辑\"></a>模糊逻辑</h3><p>更一般地，我们引入<strong>模糊逻辑</strong>的概念。在经典二值逻辑中，我们用1表示真（喜欢），0表示假（不喜欢），那么命题1（小明喜欢牛肉滑蛋饭）的值为1，命题2（小明喜欢糖拌西红柿）的值为假。对于命题3（小明喜欢番茄炖牛肉），我们使用介于0和1之间的<strong>隶属度</strong>表示这两个值之间的过渡状态，例如命题3的值=0.7，表示小明有点喜欢番茄炖牛肉。使用隶属度值<strong>消除二值之间非此即彼的对立，这就是模糊逻辑</strong>。</p>\n<h3 id=\"模糊集合\"><a href=\"#模糊集合\" class=\"headerlink\" title=\"模糊集合\"></a>模糊集合</h3><p>接下来，我们更进一步地引入<strong>模糊集合</strong>的概念。在古典集合中，对于任意全域<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.735ex\" height=\"1.595ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 767 705\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D448\" d=\"M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z\"></path></g></g></g></svg></mjx-container>内的一个元素<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.294ex\" height=\"1.025ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 572 453\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></g></g></g></svg></mjx-container>和一个集合<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.697ex\" height=\"1.62ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 750 716\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g></g></g></svg></mjx-container>，如果使用<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.885ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 2159.3 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D453\" d=\"M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(523,-152.7) scale(0.707)\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(1103.3,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1492.3,0)\"><path data-c=\"22C5\" d=\"M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1770.3,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>表示元素相对于集合的关系，则只包含以下两种情况：</p>\n<script type=\"math/tex; mode=display\">\nf_A(x)=\\left\\{\n\\begin{aligned}\n0, x\\notin A\\\\\n1, x\\in A\n\\end{aligned}\\right.</script><p>那么 <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"15.168ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 6704.1 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D453\" d=\"M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(523,-152.7) scale(0.707)\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(1381.1,0)\"><path data-c=\"3A\" d=\"M78 370Q78 394 95 412T138 430Q162 430 180 414T199 371Q199 346 182 328T139 310T96 327T78 370ZM78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1936.9,0)\"><path data-c=\"1D448\" d=\"M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2981.7,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4259.4,0)\"><path data-c=\"7B\" d=\"M434 -231Q434 -244 428 -250H410Q281 -250 230 -184Q225 -177 222 -172T217 -161T213 -148T211 -133T210 -111T209 -84T209 -47T209 0Q209 21 209 53Q208 142 204 153Q203 154 203 155Q189 191 153 211T82 231Q71 231 68 234T65 250T68 266T82 269Q116 269 152 289T203 345Q208 356 208 377T209 529V579Q209 634 215 656T244 698Q270 724 324 740Q361 748 377 749Q379 749 390 749T408 750H428Q434 744 434 732Q434 719 431 716Q429 713 415 713Q362 710 332 689T296 647Q291 634 291 499V417Q291 370 288 353T271 314Q240 271 184 255L170 250L184 245Q202 239 220 230T262 196T290 137Q291 131 291 1Q291 -134 296 -147Q306 -174 339 -192T415 -213Q429 -213 431 -216Q434 -219 434 -231Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(4759.4,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(5259.4,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(5704.1,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6204.1,0)\"><path data-c=\"7D\" d=\"M65 731Q65 745 68 747T88 750Q171 750 216 725T279 670Q288 649 289 635T291 501Q292 362 293 357Q306 312 345 291T417 269Q428 269 431 266T434 250T431 234T417 231Q380 231 345 210T298 157Q293 143 292 121T291 -28V-79Q291 -134 285 -156T256 -198Q202 -250 89 -250Q71 -250 68 -247T65 -230Q65 -224 65 -223T66 -218T69 -214T77 -213Q91 -213 108 -210T146 -200T183 -177T207 -139Q208 -134 209 3L210 139Q223 196 280 230Q315 247 330 250Q305 257 280 270Q225 304 212 352L210 362L209 498Q208 635 207 640Q195 680 154 696T77 713Q68 713 67 716T65 731Z\"></path></g></g></g></svg></mjx-container>就是一个二值函数。在<strong>模糊集合</strong>中，则使用连续值表示<em>元素属于集合的程度</em>，这样的函数<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"14.313ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 6326.6 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D453\" d=\"M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(523,-152.7) scale(0.707)\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g></g><g data-mml-node=\"mi\" transform=\"translate(1103.3,0)\"><text data-variant=\"italic\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\" font-style=\"italic\">：</text></g><g data-mml-node=\"mi\" transform=\"translate(2003.3,0)\"><path data-c=\"1D448\" d=\"M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3048.1,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4325.9,0)\"><path data-c=\"5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(4603.9,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(5103.9,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(5548.6,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6048.6,0)\"><path data-c=\"5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"></path></g></g></g></svg></mjx-container>就被称为连续的<strong>隶属度函数</strong>。所谓“隶属度”，就是“元素隶属于集合的程度”。例如 <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"11.459ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 5064.9 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D453\" d=\"M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(523,-152.7) scale(0.707)\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(1103.3,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1492.3,0)\"><path data-c=\"1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2064.3,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2731.1,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(3786.9,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path><path data-c=\"2E\" d=\"M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z\" transform=\"translate(500,0)\"></path><path data-c=\"36\" d=\"M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z\" transform=\"translate(778,0)\"></path></g></g></g></svg></mjx-container>，表示元素<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.294ex\" height=\"1.025ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 572 453\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></g></g></g></svg></mjx-container>属于集合<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.697ex\" height=\"1.62ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 750 716\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g></g></g></svg></mjx-container>的程度是0.6.</p>"},{"title":"读Paper的一些感想记录","date":"2022-02-21T16:00:00.000Z","key":"paper20220222","_content":"\n最近一直在读paper。结合之前与老师、前辈、朋友讨论的经历，在此总结读paper的一些感想记录。这既是我自己的反思与总结，也可以为大家提供一些经验参考。\n\n<!--more-->\n## 读写paper\n在开始一个研究项目前，往往需要阅读大量领域内的paper。这一方面是为了快速了解最新研究进展，寻找idea并且避免工作重复；另一方面是为了学习优秀paper的写作风格。毕竟，读者在读你的Intro之前，并不知道你的工作内容是什么。因此在优秀的paper中，作者会让读者在进入正文之前快速了解：1. 本文研究的是什么问题；2. 该问题有什么研究挑战； 3. 我们怎样一一解决这些挑战。一言以蔽之，让读者快速了解研究工作的价值。然而，虽然优秀的paper篇篇相似，不行的paper各有各的缺点，但即便是优秀的paper也浩如烟海。因此，高效地阅读paper是一个重要的能力。为此，我主要总结了以下几点：\n1. 外语水平：基本语言素养\n2. 注意力分配：各个章节注意力占比\n3. 带着问题去读\n\n### 外语水平\n就个人经验而言，在cs领域，绝大部分paper用英文写成。因此高效阅读paper的基本素养便是足够过关的英文水平。\n\n首先，专业paper需要大量的词汇积累，既包括日常常见词汇，也包括领域内的专业词汇。积累词汇能极大减少查词典的时间，因此无疑能提升阅读paper效率。其次，要锻炼阅读长难句、复杂句式的能力（虽然写论文严重不建议用长难句）。如果paper作者来自于英语国家，或者研究领域在教育学、心理学等不那么理工科的专业，那么对应的英文paper常常会出现三四行一句的长难句。遇到这种情况时，我一般会手动将长难句化解为几个简单的短句，然后结合上下文分别阅读。虽然cs领域的论文鲜有长难句，但目前机器学习和其他领域的交叉十分普遍，因此免不了阅读其他领域的论文，故而必须适应阅读这类复杂句式的能力。\n\n整体而言，个人认为六级550+或托福100+是量化的必要水平（废话，国外研究生申请很多是这个bar）。在此之上，还需要大量阅读本领域的文章，从而内化paper的写作风格、积累专业表达。这样在阅读新Paper时便能快速上手。\n\n### 注意力分配\n初读paper时，我往往恨不得一字一句地都读下去，从abstract到intro到model到experiment，每一个部分都打破沙锅问到底。**然而**，这是一个十分低效的阅读策略。就个人经验和老师前辈们的指导而言，注意力应该多放在intro上——这一章节具体介绍了paper主要的研究方向、研究问题和解决方法。如果阅读过程中能够快速理解问题的价值和研究贡献，那么就考虑读model和experiment部分。能发出来的paper，模型结构基本七七八八，实验效果都不会差。因此没有必要花太多时间在研究模型和实验细节部分。对于个人而言，这两部分的阅读主要起到启发灵感的作用——比如模型的设计有无借鉴；实验的组织安排、性能评测指标能否参考使用等。如某友所言，写paper不是写技术文档，更不是写实验报告。创新永远是第一位的，而这一点一定会在intro中展示。\n\n总结而言，读paper的注意力分配策略实质上是一个自顶向下的层次化(hierarchical)方法。第一层，快速阅读abstract和intro，了解研究问题和创新点。第二层，根据第一层的阅读结果动态选择继续细读或快速浏览或放弃。这一自顶向下、自粗向细的方法能极大提升阅读效率，并将注意力放在与自己研究内容相关的paper上。\n\n### 带着问题去读\n需要明白的是，任何一项研究工作，都需要一个动机(motivation)——每一篇paper都为解决某些专业问题而写成。而paper的创新点，则构成了解决问题的方法。不仅写paper是问题导向的，读paper也是问题导向的。如果不带着问题去读，往往会有头无尾，晕头转向——为什么这里要用LSTM而不是FC？为什么要使用强理论假设？相反，带着问题去读，逻辑便能和作者的思维贯通，也有助于读者达成自己的阅读目的（如研究paper是怎么解决问题的，从而启发灵感）。\n\n在读写论文的问题上，我曾和一位在国际学校学习过的好友聊过——他的课程中包含大量科技写作的训练。友人建议用\"5W\"法阅读和写作。这里进一步参考[百度百科](https://baike.baidu.com/item/5W2H%E5%88%86%E6%9E%90%E6%B3%95/8111597)，总结5W2H法的问题提出方法：\n\n#### 5W2H\n- WHAT——是什么？目的是什么？做什么工作？\n- WHY——为什么要做？可不可以不做？有没有替代方案？\n- WHO——谁？由谁来做？\n- WHEN——何时？什么时间做？什么时机最适宜？\n- WHERE——何处？在哪里做？\n- HOW ——怎么做？如何提高效率？如何实施？方法是什么？\n- HOW MUCH——多少？做到什么程度？数量如何？质量水平如何？费用产出如何？\n\n在阅读论文中，可以灵活地使用5W2H法提出和跟踪问题。带着问题去读，能帮助理清paper的逻辑和创新点，达到事半功倍的阅读效果。\n\n最后，这里推荐一篇范文——[《一种加辣椒的番茄炒蛋》](https://zhuanlan.zhihu.com/p/433237905)，可以从作者的角度了解一篇paper的逻辑是如何组织的。\n\n## 参考文献\n1. [一种加辣椒的番茄炒蛋.Jingwei Huang.CVPR 9999 Best Paper](https://zhuanlan.zhihu.com/p/433237905)\n2. [技术之外(一).Yuandong Tian](https://zhuanlan.zhihu.com/p/469717875)\n3. [5W2H分析法.百度百科](https://baike.baidu.com/item/5W2H%E5%88%86%E6%9E%90%E6%B3%95/8111597)","source":"_posts/2022-02-22-paper.md","raw":"---\ntitle: 读Paper的一些感想记录\ndate: 2022-02-22\ntags: 科研\nkey: paper20220222\n---\n\n最近一直在读paper。结合之前与老师、前辈、朋友讨论的经历，在此总结读paper的一些感想记录。这既是我自己的反思与总结，也可以为大家提供一些经验参考。\n\n<!--more-->\n## 读写paper\n在开始一个研究项目前，往往需要阅读大量领域内的paper。这一方面是为了快速了解最新研究进展，寻找idea并且避免工作重复；另一方面是为了学习优秀paper的写作风格。毕竟，读者在读你的Intro之前，并不知道你的工作内容是什么。因此在优秀的paper中，作者会让读者在进入正文之前快速了解：1. 本文研究的是什么问题；2. 该问题有什么研究挑战； 3. 我们怎样一一解决这些挑战。一言以蔽之，让读者快速了解研究工作的价值。然而，虽然优秀的paper篇篇相似，不行的paper各有各的缺点，但即便是优秀的paper也浩如烟海。因此，高效地阅读paper是一个重要的能力。为此，我主要总结了以下几点：\n1. 外语水平：基本语言素养\n2. 注意力分配：各个章节注意力占比\n3. 带着问题去读\n\n### 外语水平\n就个人经验而言，在cs领域，绝大部分paper用英文写成。因此高效阅读paper的基本素养便是足够过关的英文水平。\n\n首先，专业paper需要大量的词汇积累，既包括日常常见词汇，也包括领域内的专业词汇。积累词汇能极大减少查词典的时间，因此无疑能提升阅读paper效率。其次，要锻炼阅读长难句、复杂句式的能力（虽然写论文严重不建议用长难句）。如果paper作者来自于英语国家，或者研究领域在教育学、心理学等不那么理工科的专业，那么对应的英文paper常常会出现三四行一句的长难句。遇到这种情况时，我一般会手动将长难句化解为几个简单的短句，然后结合上下文分别阅读。虽然cs领域的论文鲜有长难句，但目前机器学习和其他领域的交叉十分普遍，因此免不了阅读其他领域的论文，故而必须适应阅读这类复杂句式的能力。\n\n整体而言，个人认为六级550+或托福100+是量化的必要水平（废话，国外研究生申请很多是这个bar）。在此之上，还需要大量阅读本领域的文章，从而内化paper的写作风格、积累专业表达。这样在阅读新Paper时便能快速上手。\n\n### 注意力分配\n初读paper时，我往往恨不得一字一句地都读下去，从abstract到intro到model到experiment，每一个部分都打破沙锅问到底。**然而**，这是一个十分低效的阅读策略。就个人经验和老师前辈们的指导而言，注意力应该多放在intro上——这一章节具体介绍了paper主要的研究方向、研究问题和解决方法。如果阅读过程中能够快速理解问题的价值和研究贡献，那么就考虑读model和experiment部分。能发出来的paper，模型结构基本七七八八，实验效果都不会差。因此没有必要花太多时间在研究模型和实验细节部分。对于个人而言，这两部分的阅读主要起到启发灵感的作用——比如模型的设计有无借鉴；实验的组织安排、性能评测指标能否参考使用等。如某友所言，写paper不是写技术文档，更不是写实验报告。创新永远是第一位的，而这一点一定会在intro中展示。\n\n总结而言，读paper的注意力分配策略实质上是一个自顶向下的层次化(hierarchical)方法。第一层，快速阅读abstract和intro，了解研究问题和创新点。第二层，根据第一层的阅读结果动态选择继续细读或快速浏览或放弃。这一自顶向下、自粗向细的方法能极大提升阅读效率，并将注意力放在与自己研究内容相关的paper上。\n\n### 带着问题去读\n需要明白的是，任何一项研究工作，都需要一个动机(motivation)——每一篇paper都为解决某些专业问题而写成。而paper的创新点，则构成了解决问题的方法。不仅写paper是问题导向的，读paper也是问题导向的。如果不带着问题去读，往往会有头无尾，晕头转向——为什么这里要用LSTM而不是FC？为什么要使用强理论假设？相反，带着问题去读，逻辑便能和作者的思维贯通，也有助于读者达成自己的阅读目的（如研究paper是怎么解决问题的，从而启发灵感）。\n\n在读写论文的问题上，我曾和一位在国际学校学习过的好友聊过——他的课程中包含大量科技写作的训练。友人建议用\"5W\"法阅读和写作。这里进一步参考[百度百科](https://baike.baidu.com/item/5W2H%E5%88%86%E6%9E%90%E6%B3%95/8111597)，总结5W2H法的问题提出方法：\n\n#### 5W2H\n- WHAT——是什么？目的是什么？做什么工作？\n- WHY——为什么要做？可不可以不做？有没有替代方案？\n- WHO——谁？由谁来做？\n- WHEN——何时？什么时间做？什么时机最适宜？\n- WHERE——何处？在哪里做？\n- HOW ——怎么做？如何提高效率？如何实施？方法是什么？\n- HOW MUCH——多少？做到什么程度？数量如何？质量水平如何？费用产出如何？\n\n在阅读论文中，可以灵活地使用5W2H法提出和跟踪问题。带着问题去读，能帮助理清paper的逻辑和创新点，达到事半功倍的阅读效果。\n\n最后，这里推荐一篇范文——[《一种加辣椒的番茄炒蛋》](https://zhuanlan.zhihu.com/p/433237905)，可以从作者的角度了解一篇paper的逻辑是如何组织的。\n\n## 参考文献\n1. [一种加辣椒的番茄炒蛋.Jingwei Huang.CVPR 9999 Best Paper](https://zhuanlan.zhihu.com/p/433237905)\n2. [技术之外(一).Yuandong Tian](https://zhuanlan.zhihu.com/p/469717875)\n3. [5W2H分析法.百度百科](https://baike.baidu.com/item/5W2H%E5%88%86%E6%9E%90%E6%B3%95/8111597)","slug":"2022-02-22-paper","published":1,"updated":"2022-04-06T09:50:58.025Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl2tv7gl1000o8cv92kr53sup","content":"<p>最近一直在读paper。结合之前与老师、前辈、朋友讨论的经历，在此总结读paper的一些感想记录。这既是我自己的反思与总结，也可以为大家提供一些经验参考。</p>\n<span id=\"more\"></span>\n<h2 id=\"读写paper\"><a href=\"#读写paper\" class=\"headerlink\" title=\"读写paper\"></a>读写paper</h2><p>在开始一个研究项目前，往往需要阅读大量领域内的paper。这一方面是为了快速了解最新研究进展，寻找idea并且避免工作重复；另一方面是为了学习优秀paper的写作风格。毕竟，读者在读你的Intro之前，并不知道你的工作内容是什么。因此在优秀的paper中，作者会让读者在进入正文之前快速了解：1. 本文研究的是什么问题；2. 该问题有什么研究挑战； 3. 我们怎样一一解决这些挑战。一言以蔽之，让读者快速了解研究工作的价值。然而，虽然优秀的paper篇篇相似，不行的paper各有各的缺点，但即便是优秀的paper也浩如烟海。因此，高效地阅读paper是一个重要的能力。为此，我主要总结了以下几点：</p>\n<ol>\n<li>外语水平：基本语言素养</li>\n<li>注意力分配：各个章节注意力占比</li>\n<li>带着问题去读</li>\n</ol>\n<h3 id=\"外语水平\"><a href=\"#外语水平\" class=\"headerlink\" title=\"外语水平\"></a>外语水平</h3><p>就个人经验而言，在cs领域，绝大部分paper用英文写成。因此高效阅读paper的基本素养便是足够过关的英文水平。</p>\n<p>首先，专业paper需要大量的词汇积累，既包括日常常见词汇，也包括领域内的专业词汇。积累词汇能极大减少查词典的时间，因此无疑能提升阅读paper效率。其次，要锻炼阅读长难句、复杂句式的能力（虽然写论文严重不建议用长难句）。如果paper作者来自于英语国家，或者研究领域在教育学、心理学等不那么理工科的专业，那么对应的英文paper常常会出现三四行一句的长难句。遇到这种情况时，我一般会手动将长难句化解为几个简单的短句，然后结合上下文分别阅读。虽然cs领域的论文鲜有长难句，但目前机器学习和其他领域的交叉十分普遍，因此免不了阅读其他领域的论文，故而必须适应阅读这类复杂句式的能力。</p>\n<p>整体而言，个人认为六级550+或托福100+是量化的必要水平（废话，国外研究生申请很多是这个bar）。在此之上，还需要大量阅读本领域的文章，从而内化paper的写作风格、积累专业表达。这样在阅读新Paper时便能快速上手。</p>\n<h3 id=\"注意力分配\"><a href=\"#注意力分配\" class=\"headerlink\" title=\"注意力分配\"></a>注意力分配</h3><p>初读paper时，我往往恨不得一字一句地都读下去，从abstract到intro到model到experiment，每一个部分都打破沙锅问到底。<strong>然而</strong>，这是一个十分低效的阅读策略。就个人经验和老师前辈们的指导而言，注意力应该多放在intro上——这一章节具体介绍了paper主要的研究方向、研究问题和解决方法。如果阅读过程中能够快速理解问题的价值和研究贡献，那么就考虑读model和experiment部分。能发出来的paper，模型结构基本七七八八，实验效果都不会差。因此没有必要花太多时间在研究模型和实验细节部分。对于个人而言，这两部分的阅读主要起到启发灵感的作用——比如模型的设计有无借鉴；实验的组织安排、性能评测指标能否参考使用等。如某友所言，写paper不是写技术文档，更不是写实验报告。创新永远是第一位的，而这一点一定会在intro中展示。</p>\n<p>总结而言，读paper的注意力分配策略实质上是一个自顶向下的层次化(hierarchical)方法。第一层，快速阅读abstract和intro，了解研究问题和创新点。第二层，根据第一层的阅读结果动态选择继续细读或快速浏览或放弃。这一自顶向下、自粗向细的方法能极大提升阅读效率，并将注意力放在与自己研究内容相关的paper上。</p>\n<h3 id=\"带着问题去读\"><a href=\"#带着问题去读\" class=\"headerlink\" title=\"带着问题去读\"></a>带着问题去读</h3><p>需要明白的是，任何一项研究工作，都需要一个动机(motivation)——每一篇paper都为解决某些专业问题而写成。而paper的创新点，则构成了解决问题的方法。不仅写paper是问题导向的，读paper也是问题导向的。如果不带着问题去读，往往会有头无尾，晕头转向——为什么这里要用LSTM而不是FC？为什么要使用强理论假设？相反，带着问题去读，逻辑便能和作者的思维贯通，也有助于读者达成自己的阅读目的（如研究paper是怎么解决问题的，从而启发灵感）。</p>\n<p>在读写论文的问题上，我曾和一位在国际学校学习过的好友聊过——他的课程中包含大量科技写作的训练。友人建议用”5W”法阅读和写作。这里进一步参考<a href=\"https://baike.baidu.com/item/5W2H%E5%88%86%E6%9E%90%E6%B3%95/8111597\">百度百科</a>，总结5W2H法的问题提出方法：</p>\n<h4 id=\"5W2H\"><a href=\"#5W2H\" class=\"headerlink\" title=\"5W2H\"></a>5W2H</h4><ul>\n<li>WHAT——是什么？目的是什么？做什么工作？</li>\n<li>WHY——为什么要做？可不可以不做？有没有替代方案？</li>\n<li>WHO——谁？由谁来做？</li>\n<li>WHEN——何时？什么时间做？什么时机最适宜？</li>\n<li>WHERE——何处？在哪里做？</li>\n<li>HOW ——怎么做？如何提高效率？如何实施？方法是什么？</li>\n<li>HOW MUCH——多少？做到什么程度？数量如何？质量水平如何？费用产出如何？</li>\n</ul>\n<p>在阅读论文中，可以灵活地使用5W2H法提出和跟踪问题。带着问题去读，能帮助理清paper的逻辑和创新点，达到事半功倍的阅读效果。</p>\n<p>最后，这里推荐一篇范文——<a href=\"https://zhuanlan.zhihu.com/p/433237905\">《一种加辣椒的番茄炒蛋》</a>，可以从作者的角度了解一篇paper的逻辑是如何组织的。</p>\n<h2 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h2><ol>\n<li><a href=\"https://zhuanlan.zhihu.com/p/433237905\">一种加辣椒的番茄炒蛋.Jingwei Huang.CVPR 9999 Best Paper</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/469717875\">技术之外(一).Yuandong Tian</a></li>\n<li><a href=\"https://baike.baidu.com/item/5W2H%E5%88%86%E6%9E%90%E6%B3%95/8111597\">5W2H分析法.百度百科</a></li>\n</ol>\n","site":{"data":{}},"length":2100,"excerpt":"<p>最近一直在读paper。结合之前与老师、前辈、朋友讨论的经历，在此总结读paper的一些感想记录。这既是我自己的反思与总结，也可以为大家提供一些经验参考。</p>","more":"<h2 id=\"读写paper\"><a href=\"#读写paper\" class=\"headerlink\" title=\"读写paper\"></a>读写paper</h2><p>在开始一个研究项目前，往往需要阅读大量领域内的paper。这一方面是为了快速了解最新研究进展，寻找idea并且避免工作重复；另一方面是为了学习优秀paper的写作风格。毕竟，读者在读你的Intro之前，并不知道你的工作内容是什么。因此在优秀的paper中，作者会让读者在进入正文之前快速了解：1. 本文研究的是什么问题；2. 该问题有什么研究挑战； 3. 我们怎样一一解决这些挑战。一言以蔽之，让读者快速了解研究工作的价值。然而，虽然优秀的paper篇篇相似，不行的paper各有各的缺点，但即便是优秀的paper也浩如烟海。因此，高效地阅读paper是一个重要的能力。为此，我主要总结了以下几点：</p>\n<ol>\n<li>外语水平：基本语言素养</li>\n<li>注意力分配：各个章节注意力占比</li>\n<li>带着问题去读</li>\n</ol>\n<h3 id=\"外语水平\"><a href=\"#外语水平\" class=\"headerlink\" title=\"外语水平\"></a>外语水平</h3><p>就个人经验而言，在cs领域，绝大部分paper用英文写成。因此高效阅读paper的基本素养便是足够过关的英文水平。</p>\n<p>首先，专业paper需要大量的词汇积累，既包括日常常见词汇，也包括领域内的专业词汇。积累词汇能极大减少查词典的时间，因此无疑能提升阅读paper效率。其次，要锻炼阅读长难句、复杂句式的能力（虽然写论文严重不建议用长难句）。如果paper作者来自于英语国家，或者研究领域在教育学、心理学等不那么理工科的专业，那么对应的英文paper常常会出现三四行一句的长难句。遇到这种情况时，我一般会手动将长难句化解为几个简单的短句，然后结合上下文分别阅读。虽然cs领域的论文鲜有长难句，但目前机器学习和其他领域的交叉十分普遍，因此免不了阅读其他领域的论文，故而必须适应阅读这类复杂句式的能力。</p>\n<p>整体而言，个人认为六级550+或托福100+是量化的必要水平（废话，国外研究生申请很多是这个bar）。在此之上，还需要大量阅读本领域的文章，从而内化paper的写作风格、积累专业表达。这样在阅读新Paper时便能快速上手。</p>\n<h3 id=\"注意力分配\"><a href=\"#注意力分配\" class=\"headerlink\" title=\"注意力分配\"></a>注意力分配</h3><p>初读paper时，我往往恨不得一字一句地都读下去，从abstract到intro到model到experiment，每一个部分都打破沙锅问到底。<strong>然而</strong>，这是一个十分低效的阅读策略。就个人经验和老师前辈们的指导而言，注意力应该多放在intro上——这一章节具体介绍了paper主要的研究方向、研究问题和解决方法。如果阅读过程中能够快速理解问题的价值和研究贡献，那么就考虑读model和experiment部分。能发出来的paper，模型结构基本七七八八，实验效果都不会差。因此没有必要花太多时间在研究模型和实验细节部分。对于个人而言，这两部分的阅读主要起到启发灵感的作用——比如模型的设计有无借鉴；实验的组织安排、性能评测指标能否参考使用等。如某友所言，写paper不是写技术文档，更不是写实验报告。创新永远是第一位的，而这一点一定会在intro中展示。</p>\n<p>总结而言，读paper的注意力分配策略实质上是一个自顶向下的层次化(hierarchical)方法。第一层，快速阅读abstract和intro，了解研究问题和创新点。第二层，根据第一层的阅读结果动态选择继续细读或快速浏览或放弃。这一自顶向下、自粗向细的方法能极大提升阅读效率，并将注意力放在与自己研究内容相关的paper上。</p>\n<h3 id=\"带着问题去读\"><a href=\"#带着问题去读\" class=\"headerlink\" title=\"带着问题去读\"></a>带着问题去读</h3><p>需要明白的是，任何一项研究工作，都需要一个动机(motivation)——每一篇paper都为解决某些专业问题而写成。而paper的创新点，则构成了解决问题的方法。不仅写paper是问题导向的，读paper也是问题导向的。如果不带着问题去读，往往会有头无尾，晕头转向——为什么这里要用LSTM而不是FC？为什么要使用强理论假设？相反，带着问题去读，逻辑便能和作者的思维贯通，也有助于读者达成自己的阅读目的（如研究paper是怎么解决问题的，从而启发灵感）。</p>\n<p>在读写论文的问题上，我曾和一位在国际学校学习过的好友聊过——他的课程中包含大量科技写作的训练。友人建议用”5W”法阅读和写作。这里进一步参考<a href=\"https://baike.baidu.com/item/5W2H%E5%88%86%E6%9E%90%E6%B3%95/8111597\">百度百科</a>，总结5W2H法的问题提出方法：</p>\n<h4 id=\"5W2H\"><a href=\"#5W2H\" class=\"headerlink\" title=\"5W2H\"></a>5W2H</h4><ul>\n<li>WHAT——是什么？目的是什么？做什么工作？</li>\n<li>WHY——为什么要做？可不可以不做？有没有替代方案？</li>\n<li>WHO——谁？由谁来做？</li>\n<li>WHEN——何时？什么时间做？什么时机最适宜？</li>\n<li>WHERE——何处？在哪里做？</li>\n<li>HOW ——怎么做？如何提高效率？如何实施？方法是什么？</li>\n<li>HOW MUCH——多少？做到什么程度？数量如何？质量水平如何？费用产出如何？</li>\n</ul>\n<p>在阅读论文中，可以灵活地使用5W2H法提出和跟踪问题。带着问题去读，能帮助理清paper的逻辑和创新点，达到事半功倍的阅读效果。</p>\n<p>最后，这里推荐一篇范文——<a href=\"https://zhuanlan.zhihu.com/p/433237905\">《一种加辣椒的番茄炒蛋》</a>，可以从作者的角度了解一篇paper的逻辑是如何组织的。</p>\n<h2 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h2><ol>\n<li><a href=\"https://zhuanlan.zhihu.com/p/433237905\">一种加辣椒的番茄炒蛋.Jingwei Huang.CVPR 9999 Best Paper</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/469717875\">技术之外(一).Yuandong Tian</a></li>\n<li><a href=\"https://baike.baidu.com/item/5W2H%E5%88%86%E6%9E%90%E6%B3%95/8111597\">5W2H分析法.百度百科</a></li>\n</ol>"},{"title":"一些杂谈.2","author":"LiJT","date":"2022-03-25T16:00:00.000Z","key":"remind2022032601","sharing":true,"_content":"\n本科期间上的统计类课程是多么美好的回忆。\n\n<!--more-->\n\n最近回炉统计学的一些分析与检验方法，翻到了ynyang老师的多元回归分析的讲义。\n\nynyang老师的课深入浅出，是给我印象最深，也是让我收获最大的统计类课程。从矩阵变换的技巧，到PCA，到SVD，甚至到谱聚类，PageRank算法的启蒙，都是在ynyang老师的课上完成的。尤其是SVD，当初花书和西瓜书翻了个遍也不知所云。但是ynyang老师的课却让我醍醐灌顶-SVD是对矩阵的最优低秩分解。\n\n![SVD1](https://cslijt.github.io/LiJT-Daily/images/屏幕截图_202022-03-26_175317.jpg)\n\n如今想来，本科四年在学习上的遗憾有二：\n1. 大三由于畏难，退了ynyang老师的回归分析的课。错过了一个亿的知识。\n2. 铁憨憨，没有和yang老师保持联系。\n\n\n\n\n","source":"_posts/2022-03-26-remind.md","raw":"---\ntitle: 一些杂谈.2\nauthor: LiJT\ndate: 2022-03-26\ntags: \n  - 数学 \n  - 杂谈\nkey: remind2022032601\nsharing: true\n---\n\n本科期间上的统计类课程是多么美好的回忆。\n\n<!--more-->\n\n最近回炉统计学的一些分析与检验方法，翻到了ynyang老师的多元回归分析的讲义。\n\nynyang老师的课深入浅出，是给我印象最深，也是让我收获最大的统计类课程。从矩阵变换的技巧，到PCA，到SVD，甚至到谱聚类，PageRank算法的启蒙，都是在ynyang老师的课上完成的。尤其是SVD，当初花书和西瓜书翻了个遍也不知所云。但是ynyang老师的课却让我醍醐灌顶-SVD是对矩阵的最优低秩分解。\n\n![SVD1](https://cslijt.github.io/LiJT-Daily/images/屏幕截图_202022-03-26_175317.jpg)\n\n如今想来，本科四年在学习上的遗憾有二：\n1. 大三由于畏难，退了ynyang老师的回归分析的课。错过了一个亿的知识。\n2. 铁憨憨，没有和yang老师保持联系。\n\n\n\n\n","slug":"2022-03-26-remind","published":1,"updated":"2022-04-06T09:51:09.106Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl2tv7gl2000r8cv90xmy73ya","content":"<p>本科期间上的统计类课程是多么美好的回忆。</p>\n<span id=\"more\"></span>\n<p>最近回炉统计学的一些分析与检验方法，翻到了ynyang老师的多元回归分析的讲义。</p>\n<p>ynyang老师的课深入浅出，是给我印象最深，也是让我收获最大的统计类课程。从矩阵变换的技巧，到PCA，到SVD，甚至到谱聚类，PageRank算法的启蒙，都是在ynyang老师的课上完成的。尤其是SVD，当初花书和西瓜书翻了个遍也不知所云。但是ynyang老师的课却让我醍醐灌顶-SVD是对矩阵的最优低秩分解。</p>\n<p><img src=\"https://cslijt.github.io/LiJT-Daily/images/屏幕截图_202022-03-26_175317.jpg\" alt=\"SVD1\"></p>\n<p>如今想来，本科四年在学习上的遗憾有二：</p>\n<ol>\n<li>大三由于畏难，退了ynyang老师的回归分析的课。错过了一个亿的知识。</li>\n<li>铁憨憨，没有和yang老师保持联系。</li>\n</ol>\n","site":{"data":{}},"length":288,"excerpt":"<p>本科期间上的统计类课程是多么美好的回忆。</p>","more":"<p>最近回炉统计学的一些分析与检验方法，翻到了ynyang老师的多元回归分析的讲义。</p>\n<p>ynyang老师的课深入浅出，是给我印象最深，也是让我收获最大的统计类课程。从矩阵变换的技巧，到PCA，到SVD，甚至到谱聚类，PageRank算法的启蒙，都是在ynyang老师的课上完成的。尤其是SVD，当初花书和西瓜书翻了个遍也不知所云。但是ynyang老师的课却让我醍醐灌顶-SVD是对矩阵的最优低秩分解。</p>\n<p><img src=\"https://cslijt.github.io/LiJT-Daily/images/屏幕截图_202022-03-26_175317.jpg\" alt=\"SVD1\"></p>\n<p>如今想来，本科四年在学习上的遗憾有二：</p>\n<ol>\n<li>大三由于畏难，退了ynyang老师的回归分析的课。错过了一个亿的知识。</li>\n<li>铁憨憨，没有和yang老师保持联系。</li>\n</ol>"},{"title":"最近的学习计划","author":"LiJT","date":"2022-03-31T16:00:00.000Z","show_author_profile":true,"key":"plan20220401","sharing":true,"_content":"\n记录一些出于兴趣或出于工程需要，最近计划系统学习的一些知识。\n\n相当于立一个flag.\n<!--more-->\n\n## CS\n- git\n  - 不要问一个学了四年CS(1年CS+3年DS)的人为什么要学git. 在此之前，git只是作为我管理代码的工具。仅仅到达“知其然”，而非知其“所以然”的程度。很多功能先搜先用、现学现卖，却不知其原理，不知其变化的用法。因此打算系统学习一下git，彻底（七七八八）掌握其各种功能的原理和用法。\n- 编译原理\n  - 3年DS跳过了编译原理这门课，实在是大不幸。考虑到最近code intelligence大火，以及自己可能整活的需要，计划学习编译原理。这一科目的学习以实践先行，理论后补的方法，免得满嘴跑火车却连语法树（听说的）都不会写。\n- GAN\n  - GAN就是干！\n\n## Stats\n- 各种参数优化方法\n  - 当初机器学习没学好，统计学里的参数优化方法不明所以。极大似然估计、贝叶斯推断、MCMC、MCMC里的Metropolis、Gibbs... 都需要补足\n  - 亲身体会：优化方法如果只看原理而没有具体案例，则原理很难理解透彻。需要结合具体的模型进行学习\n  - 最费解的还是EM算法....","source":"_posts/2022-04-01-plan.md","raw":"---\ntitle: 最近的学习计划\nauthor: LiJT\ndate: 2022-04-01\nshow_author_profile: true\ntags: \n  - 科研\n  - 学习\nkey: plan20220401\nsharing: true\n---\n\n记录一些出于兴趣或出于工程需要，最近计划系统学习的一些知识。\n\n相当于立一个flag.\n<!--more-->\n\n## CS\n- git\n  - 不要问一个学了四年CS(1年CS+3年DS)的人为什么要学git. 在此之前，git只是作为我管理代码的工具。仅仅到达“知其然”，而非知其“所以然”的程度。很多功能先搜先用、现学现卖，却不知其原理，不知其变化的用法。因此打算系统学习一下git，彻底（七七八八）掌握其各种功能的原理和用法。\n- 编译原理\n  - 3年DS跳过了编译原理这门课，实在是大不幸。考虑到最近code intelligence大火，以及自己可能整活的需要，计划学习编译原理。这一科目的学习以实践先行，理论后补的方法，免得满嘴跑火车却连语法树（听说的）都不会写。\n- GAN\n  - GAN就是干！\n\n## Stats\n- 各种参数优化方法\n  - 当初机器学习没学好，统计学里的参数优化方法不明所以。极大似然估计、贝叶斯推断、MCMC、MCMC里的Metropolis、Gibbs... 都需要补足\n  - 亲身体会：优化方法如果只看原理而没有具体案例，则原理很难理解透彻。需要结合具体的模型进行学习\n  - 最费解的还是EM算法....","slug":"2022-04-01-plan","published":1,"updated":"2022-04-06T09:51:18.870Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl2tv7gl3000t8cv9f656h4fq","content":"<p>记录一些出于兴趣或出于工程需要，最近计划系统学习的一些知识。</p>\n<p>相当于立一个flag.<br><span id=\"more\"></span></p>\n<h2 id=\"CS\"><a href=\"#CS\" class=\"headerlink\" title=\"CS\"></a>CS</h2><ul>\n<li>git<ul>\n<li>不要问一个学了四年CS(1年CS+3年DS)的人为什么要学git. 在此之前，git只是作为我管理代码的工具。仅仅到达“知其然”，而非知其“所以然”的程度。很多功能先搜先用、现学现卖，却不知其原理，不知其变化的用法。因此打算系统学习一下git，彻底（七七八八）掌握其各种功能的原理和用法。</li>\n</ul>\n</li>\n<li>编译原理<ul>\n<li>3年DS跳过了编译原理这门课，实在是大不幸。考虑到最近code intelligence大火，以及自己可能整活的需要，计划学习编译原理。这一科目的学习以实践先行，理论后补的方法，免得满嘴跑火车却连语法树（听说的）都不会写。</li>\n</ul>\n</li>\n<li>GAN<ul>\n<li>GAN就是干！</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Stats\"><a href=\"#Stats\" class=\"headerlink\" title=\"Stats\"></a>Stats</h2><ul>\n<li>各种参数优化方法<ul>\n<li>当初机器学习没学好，统计学里的参数优化方法不明所以。极大似然估计、贝叶斯推断、MCMC、MCMC里的Metropolis、Gibbs… 都需要补足</li>\n<li>亲身体会：优化方法如果只看原理而没有具体案例，则原理很难理解透彻。需要结合具体的模型进行学习</li>\n<li>最费解的还是EM算法….</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"length":456,"excerpt":"<p>记录一些出于兴趣或出于工程需要，最近计划系统学习的一些知识。</p>\n<p>相当于立一个flag.<br>","more":"</p>\n<h2 id=\"CS\"><a href=\"#CS\" class=\"headerlink\" title=\"CS\"></a>CS</h2><ul>\n<li>git<ul>\n<li>不要问一个学了四年CS(1年CS+3年DS)的人为什么要学git. 在此之前，git只是作为我管理代码的工具。仅仅到达“知其然”，而非知其“所以然”的程度。很多功能先搜先用、现学现卖，却不知其原理，不知其变化的用法。因此打算系统学习一下git，彻底（七七八八）掌握其各种功能的原理和用法。</li>\n</ul>\n</li>\n<li>编译原理<ul>\n<li>3年DS跳过了编译原理这门课，实在是大不幸。考虑到最近code intelligence大火，以及自己可能整活的需要，计划学习编译原理。这一科目的学习以实践先行，理论后补的方法，免得满嘴跑火车却连语法树（听说的）都不会写。</li>\n</ul>\n</li>\n<li>GAN<ul>\n<li>GAN就是干！</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Stats\"><a href=\"#Stats\" class=\"headerlink\" title=\"Stats\"></a>Stats</h2><ul>\n<li>各种参数优化方法<ul>\n<li>当初机器学习没学好，统计学里的参数优化方法不明所以。极大似然估计、贝叶斯推断、MCMC、MCMC里的Metropolis、Gibbs… 都需要补足</li>\n<li>亲身体会：优化方法如果只看原理而没有具体案例，则原理很难理解透彻。需要结合具体的模型进行学习</li>\n<li>最费解的还是EM算法….</li>\n</ul>\n</li>\n</ul>"},{"title":"2022-04-06-hexo","date":"2022-04-06T12:46:17.000Z","_content":"\n把个人blog的模板从jekyll更换到hexo了。\n返璞归真。\n\n<!--more-->\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'f73c0bc3c19755d1c0d886c0d8791cad24509c9a',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: document.title,\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","source":"_posts/2022-04-06-hexo.md","raw":"---\ntitle: 2022-04-06-hexo\ndate: 2022-04-06 20:46:17\ntags:\n---\n\n把个人blog的模板从jekyll更换到hexo了。\n返璞归真。\n\n<!--more-->\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'f73c0bc3c19755d1c0d886c0d8791cad24509c9a',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: document.title,\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","slug":"2022-04-06-hexo","published":1,"updated":"2022-04-06T12:50:10.827Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl2tv7gl5000w8cv9gllycyny","content":"<p>把个人blog的模板从jekyll更换到hexo了。<br>返璞归真。</p>\n<span id=\"more\"></span>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'f73c0bc3c19755d1c0d886c0d8791cad24509c9a',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: document.title,\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","site":{"data":{}},"length":345,"excerpt":"<p>把个人blog的模板从jekyll更换到hexo了。<br>返璞归真。</p>","more":"<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'f73c0bc3c19755d1c0d886c0d8791cad24509c9a',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: document.title,\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>"},{"title":"pymysql的简单使用","mathjax":false,"codeblock":{"enable":true,"show_result":true},"date":"2022-04-09T08:02:09.000Z","_content":"\npymysql是python3中用于连接mysql数据库的第三方库，并可以实现增删改查功能。\n\n<!--more-->\n## 安装\n- 假设已经安装pip3\n- 使用pip3安装pymysql(适用于windows, mac, linux):\n```python\npip3 install PyMySQL\n```\n\n## 连接到数据库\n- 使用connect方法连接到目标数据库。\n  - host: 目标数据库主机的ip地址\n  - port: 目标数据库主机的端口（可选）\n  - user: 登录数据库的用户名\n  - password: 用户密码\n  - database: 数据库名（一个主机下可能有多个数据库）\n\n```python\nimport pymysql\n'''\n假设在本地的mysql中开了一个数据库mydb，可使用用户asdf登录\n'''\n\n# 打开数据库连接\ndb = pymysql.connect(host='localhost',\n                     user='asdf',\n                     password='1234',\n                     database='mydb')\n```\n\n## 执行sql语句  \n- pymysql中，数据库的增删改查通过游标执行方法来间接完成。游标(cursor)在数据库中是一个颇为重要的概念，日后再细写。这里先给出pymysql中游标的用法\n\n```python\n# ...\n# 承接上文，假设已通过pymysql.connect方法获取数据库对象db\n\n# 创建一个游标对象\ncursor = db.cursor()\n\n# 定义sql命令\nsql = 'select * from Student limit 10;'\n\n# 使用execute执行sql命令\ncursor.execute(sql)\n\n# fetchone用来获取查询结果的下一行(tuple)\n# fetchall用来获取查询结果的所有行(list(tuple))\ndata=cursor.fetchone()\n\nprint(data)\n\n# 关闭数据库连接\ndb.close()\n```\n\n## 参考文献\n1. https://pymysql.readthedocs.io/en/latest/index.html\n2. https://www.runoob.com/python3/python3-mysql.html\n3. https://cloud.tencent.com/developer/article/1575066\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'f73c0bc3c19755d1c0d886c0d8791cad24509c9a',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: (document.title),\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","source":"_posts/2022-04-09-python.md","raw":"---\ntitle: pymysql的简单使用\nmathjax: false\ncodeblock:\n  enable: true\n  show_result: true\ndate: 2022-04-09 16:02:09\ntags:\n    - coding\n    - python\ncategories: 技术文档\n---\n\npymysql是python3中用于连接mysql数据库的第三方库，并可以实现增删改查功能。\n\n<!--more-->\n## 安装\n- 假设已经安装pip3\n- 使用pip3安装pymysql(适用于windows, mac, linux):\n```python\npip3 install PyMySQL\n```\n\n## 连接到数据库\n- 使用connect方法连接到目标数据库。\n  - host: 目标数据库主机的ip地址\n  - port: 目标数据库主机的端口（可选）\n  - user: 登录数据库的用户名\n  - password: 用户密码\n  - database: 数据库名（一个主机下可能有多个数据库）\n\n```python\nimport pymysql\n'''\n假设在本地的mysql中开了一个数据库mydb，可使用用户asdf登录\n'''\n\n# 打开数据库连接\ndb = pymysql.connect(host='localhost',\n                     user='asdf',\n                     password='1234',\n                     database='mydb')\n```\n\n## 执行sql语句  \n- pymysql中，数据库的增删改查通过游标执行方法来间接完成。游标(cursor)在数据库中是一个颇为重要的概念，日后再细写。这里先给出pymysql中游标的用法\n\n```python\n# ...\n# 承接上文，假设已通过pymysql.connect方法获取数据库对象db\n\n# 创建一个游标对象\ncursor = db.cursor()\n\n# 定义sql命令\nsql = 'select * from Student limit 10;'\n\n# 使用execute执行sql命令\ncursor.execute(sql)\n\n# fetchone用来获取查询结果的下一行(tuple)\n# fetchall用来获取查询结果的所有行(list(tuple))\ndata=cursor.fetchone()\n\nprint(data)\n\n# 关闭数据库连接\ndb.close()\n```\n\n## 参考文献\n1. https://pymysql.readthedocs.io/en/latest/index.html\n2. https://www.runoob.com/python3/python3-mysql.html\n3. https://cloud.tencent.com/developer/article/1575066\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'f73c0bc3c19755d1c0d886c0d8791cad24509c9a',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: (document.title),\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","slug":"2022-04-09-python","published":1,"updated":"2022-04-21T07:27:53.383Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl2tv7gl6000y8cv939t7hi8m","content":"<p>pymysql是python3中用于连接mysql数据库的第三方库，并可以实现增删改查功能。</p>\n<span id=\"more\"></span>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><ul>\n<li>假设已经安装pip3</li>\n<li>使用pip3安装pymysql(适用于windows, mac, linux):<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip3 install PyMySQL</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"连接到数据库\"><a href=\"#连接到数据库\" class=\"headerlink\" title=\"连接到数据库\"></a>连接到数据库</h2><ul>\n<li>使用connect方法连接到目标数据库。<ul>\n<li>host: 目标数据库主机的ip地址</li>\n<li>port: 目标数据库主机的端口（可选）</li>\n<li>user: 登录数据库的用户名</li>\n<li>password: 用户密码</li>\n<li>database: 数据库名（一个主机下可能有多个数据库）</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pymysql</span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">假设在本地的mysql中开了一个数据库mydb，可使用用户asdf登录</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 打开数据库连接</span></span><br><span class=\"line\">db = pymysql.connect(host=<span class=\"string\">&#x27;localhost&#x27;</span>,</span><br><span class=\"line\">                     user=<span class=\"string\">&#x27;asdf&#x27;</span>,</span><br><span class=\"line\">                     password=<span class=\"string\">&#x27;1234&#x27;</span>,</span><br><span class=\"line\">                     database=<span class=\"string\">&#x27;mydb&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<h2 id=\"执行sql语句\"><a href=\"#执行sql语句\" class=\"headerlink\" title=\"执行sql语句\"></a>执行sql语句</h2><ul>\n<li>pymysql中，数据库的增删改查通过游标执行方法来间接完成。游标(cursor)在数据库中是一个颇为重要的概念，日后再细写。这里先给出pymysql中游标的用法</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># ...</span></span><br><span class=\"line\"><span class=\"comment\"># 承接上文，假设已通过pymysql.connect方法获取数据库对象db</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建一个游标对象</span></span><br><span class=\"line\">cursor = db.cursor()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 定义sql命令</span></span><br><span class=\"line\">sql = <span class=\"string\">&#x27;select * from Student limit 10;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 使用execute执行sql命令</span></span><br><span class=\"line\">cursor.execute(sql)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># fetchone用来获取查询结果的下一行(tuple)</span></span><br><span class=\"line\"><span class=\"comment\"># fetchall用来获取查询结果的所有行(list(tuple))</span></span><br><span class=\"line\">data=cursor.fetchone()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(data)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 关闭数据库连接</span></span><br><span class=\"line\">db.close()</span><br></pre></td></tr></table></figure>\n<h2 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h2><ol>\n<li><a href=\"https://pymysql.readthedocs.io/en/latest/index.html\">https://pymysql.readthedocs.io/en/latest/index.html</a></li>\n<li><a href=\"https://www.runoob.com/python3/python3-mysql.html\">https://www.runoob.com/python3/python3-mysql.html</a></li>\n<li><a href=\"https://cloud.tencent.com/developer/article/1575066\">https://cloud.tencent.com/developer/article/1575066</a></li>\n</ol>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'f73c0bc3c19755d1c0d886c0d8791cad24509c9a',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: (document.title),\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","site":{"data":{}},"length":1312,"excerpt":"<p>pymysql是python3中用于连接mysql数据库的第三方库，并可以实现增删改查功能。</p>","more":"<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><ul>\n<li>假设已经安装pip3</li>\n<li>使用pip3安装pymysql(适用于windows, mac, linux):<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip3 install PyMySQL</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"连接到数据库\"><a href=\"#连接到数据库\" class=\"headerlink\" title=\"连接到数据库\"></a>连接到数据库</h2><ul>\n<li>使用connect方法连接到目标数据库。<ul>\n<li>host: 目标数据库主机的ip地址</li>\n<li>port: 目标数据库主机的端口（可选）</li>\n<li>user: 登录数据库的用户名</li>\n<li>password: 用户密码</li>\n<li>database: 数据库名（一个主机下可能有多个数据库）</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pymysql</span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">假设在本地的mysql中开了一个数据库mydb，可使用用户asdf登录</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 打开数据库连接</span></span><br><span class=\"line\">db = pymysql.connect(host=<span class=\"string\">&#x27;localhost&#x27;</span>,</span><br><span class=\"line\">                     user=<span class=\"string\">&#x27;asdf&#x27;</span>,</span><br><span class=\"line\">                     password=<span class=\"string\">&#x27;1234&#x27;</span>,</span><br><span class=\"line\">                     database=<span class=\"string\">&#x27;mydb&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<h2 id=\"执行sql语句\"><a href=\"#执行sql语句\" class=\"headerlink\" title=\"执行sql语句\"></a>执行sql语句</h2><ul>\n<li>pymysql中，数据库的增删改查通过游标执行方法来间接完成。游标(cursor)在数据库中是一个颇为重要的概念，日后再细写。这里先给出pymysql中游标的用法</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># ...</span></span><br><span class=\"line\"><span class=\"comment\"># 承接上文，假设已通过pymysql.connect方法获取数据库对象db</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建一个游标对象</span></span><br><span class=\"line\">cursor = db.cursor()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 定义sql命令</span></span><br><span class=\"line\">sql = <span class=\"string\">&#x27;select * from Student limit 10;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 使用execute执行sql命令</span></span><br><span class=\"line\">cursor.execute(sql)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># fetchone用来获取查询结果的下一行(tuple)</span></span><br><span class=\"line\"><span class=\"comment\"># fetchall用来获取查询结果的所有行(list(tuple))</span></span><br><span class=\"line\">data=cursor.fetchone()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(data)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 关闭数据库连接</span></span><br><span class=\"line\">db.close()</span><br></pre></td></tr></table></figure>\n<h2 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h2><ol>\n<li><a href=\"https://pymysql.readthedocs.io/en/latest/index.html\">https://pymysql.readthedocs.io/en/latest/index.html</a></li>\n<li><a href=\"https://www.runoob.com/python3/python3-mysql.html\">https://www.runoob.com/python3/python3-mysql.html</a></li>\n<li><a href=\"https://cloud.tencent.com/developer/article/1575066\">https://cloud.tencent.com/developer/article/1575066</a></li>\n</ol>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'f73c0bc3c19755d1c0d886c0d8791cad24509c9a',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: (document.title),\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>"},{"title":"因果推断学习笔记.1","mathjax":true,"codeblock":{"enable":true,"show_result":true},"date":"2022-04-07T04:16:58.000Z","_content":"\n因果推断的基本概念。\n\n<!--more-->\n\n## 基本概念\n### 相关与因果的不同\n- 相关性 $\\neq$ 因果性\n  - 相关性是双向的；因果性是单向的。因果关系会在统计层面导致相关性，但相关性并不蕴含因果性。\n\n### 相关概念\n- **unit**: 因果推理中的原子（不可分）研究对象，可以是实物，也可以是概念\n- **treatment**: 施加给unit的操作。也叫做干预、介入等\n- **variables**(context): unit自带的一些属性。例如，若unit=患者，则variables=性别、病史、血压... 在treatment中不受影响的variable被称为pre-treatment variables\n- **confounders**(covariate): 会影响treatment选择和结果的一些变量。例如treatment=用药，confounder=年龄，即同一剂量的药剂在不同年龄段人群导致的结果可能不一样\n- **casual effect**: 因果效应。对于unit，若treatment A 的施加与否对其结果状态有影响，则称A构成一个casual effect. 施加对象是个体则构成个体因果效应；施加对象是群体则构成群体因果效应\n- **potential outcome**: 施加给unit的treatment所产生的所有结果的取值空间，包含factual outcome(观测结果)和counterfactual outcomes(反事实结果)\n- **factual outcome**: 施加给操作对象最终观测到的结果，记为Y\n- **counterfactual outcome**: 反事实结果，即不作treatment产生的结果\n- **individualized treatment effect**($ITE$): 个体操作效果。 $ITE=Y(1)-Y(0)$。其中$Y(1)$是事实结果，$Y(0)$是反事实结果。二者相减，相当于施加操作后和施加操作前unit状态的差别，即操作treatment所带来的增益。\n- **average treatment effect**($ATE$): $ITE$关于unit分布的期望。即$ATE=E(Y(1)-Y(0))$\n- **counterfactual inference**: 决类似于“如果这个病人采用其他疗法，血压会降下来吗？”这样的问题的推理。\n\n## 研究方向\n- 因果发现：给定若干个变量，发现/挖掘变量间的因果关系，形成因果有向图\n- 因果效应：已知变量和变量间的因果关系，求因果关系的效果（原因对结果的影响程度）\n\n## 参考文献\n1. [chen-wai-wai-7.因果推断综述及基础方法介绍（一）](https://zhuanlan.zhihu.com/p/258562953)\n2. [xue-ruo-7.通俗解释因果推理 casual inference](https://zhuanlan.zhihu.com/p/109996301)\n3. [丁鹏.因果推断简介.PKU-MATH-00112230.2019](https://www.math.pku.edu.cn/teachers/yaoy/math112230/lecture10_DingP_causal091101.pdf)\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'f73c0bc3c19755d1c0d886c0d8791cad24509c9a',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: document.title,\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","source":"_posts/2022-04-07-casual-inference-1.md","raw":"---\ntitle: 因果推断学习笔记.1\nmathjax: true\ncodeblock:\n  enable: true\n  show_result: true\ndate: 2022-04-07 12:16:58\ntags: 因果推断\ncategories: 学习笔记\n---\n\n因果推断的基本概念。\n\n<!--more-->\n\n## 基本概念\n### 相关与因果的不同\n- 相关性 $\\neq$ 因果性\n  - 相关性是双向的；因果性是单向的。因果关系会在统计层面导致相关性，但相关性并不蕴含因果性。\n\n### 相关概念\n- **unit**: 因果推理中的原子（不可分）研究对象，可以是实物，也可以是概念\n- **treatment**: 施加给unit的操作。也叫做干预、介入等\n- **variables**(context): unit自带的一些属性。例如，若unit=患者，则variables=性别、病史、血压... 在treatment中不受影响的variable被称为pre-treatment variables\n- **confounders**(covariate): 会影响treatment选择和结果的一些变量。例如treatment=用药，confounder=年龄，即同一剂量的药剂在不同年龄段人群导致的结果可能不一样\n- **casual effect**: 因果效应。对于unit，若treatment A 的施加与否对其结果状态有影响，则称A构成一个casual effect. 施加对象是个体则构成个体因果效应；施加对象是群体则构成群体因果效应\n- **potential outcome**: 施加给unit的treatment所产生的所有结果的取值空间，包含factual outcome(观测结果)和counterfactual outcomes(反事实结果)\n- **factual outcome**: 施加给操作对象最终观测到的结果，记为Y\n- **counterfactual outcome**: 反事实结果，即不作treatment产生的结果\n- **individualized treatment effect**($ITE$): 个体操作效果。 $ITE=Y(1)-Y(0)$。其中$Y(1)$是事实结果，$Y(0)$是反事实结果。二者相减，相当于施加操作后和施加操作前unit状态的差别，即操作treatment所带来的增益。\n- **average treatment effect**($ATE$): $ITE$关于unit分布的期望。即$ATE=E(Y(1)-Y(0))$\n- **counterfactual inference**: 决类似于“如果这个病人采用其他疗法，血压会降下来吗？”这样的问题的推理。\n\n## 研究方向\n- 因果发现：给定若干个变量，发现/挖掘变量间的因果关系，形成因果有向图\n- 因果效应：已知变量和变量间的因果关系，求因果关系的效果（原因对结果的影响程度）\n\n## 参考文献\n1. [chen-wai-wai-7.因果推断综述及基础方法介绍（一）](https://zhuanlan.zhihu.com/p/258562953)\n2. [xue-ruo-7.通俗解释因果推理 casual inference](https://zhuanlan.zhihu.com/p/109996301)\n3. [丁鹏.因果推断简介.PKU-MATH-00112230.2019](https://www.math.pku.edu.cn/teachers/yaoy/math112230/lecture10_DingP_causal091101.pdf)\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'f73c0bc3c19755d1c0d886c0d8791cad24509c9a',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: document.title,\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","slug":"2022-04-07-casual-inference-1","published":1,"updated":"2022-04-27T14:42:22.959Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl2tv7gl600108cv96b6q8bli","content":"<p>因果推断的基本概念。</p>\n<span id=\"more\"></span>\n<h2 id=\"基本概念\"><a href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"></a>基本概念</h2><h3 id=\"相关与因果的不同\"><a href=\"#相关与因果的不同\" class=\"headerlink\" title=\"相关与因果的不同\"></a>相关与因果的不同</h3><ul>\n<li>相关性 <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.486ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.76ex\" height=\"2.106ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 778 931\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"2260\" d=\"M166 -215T159 -215T147 -212T141 -204T139 -197Q139 -190 144 -183L306 133H70Q56 140 56 153Q56 168 72 173H327L406 327H72Q56 332 56 347Q56 360 70 367H426Q597 702 602 707Q605 716 618 716Q625 716 630 712T636 703T638 696Q638 692 471 367H707Q722 359 722 347Q722 336 708 328L451 327L371 173H708Q722 163 722 153Q722 140 707 133H351Q175 -210 170 -212Q166 -215 159 -215Z\"></path></g></g></g></svg></mjx-container> 因果性<ul>\n<li>相关性是双向的；因果性是单向的。因果关系会在统计层面导致相关性，但相关性并不蕴含因果性。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"相关概念\"><a href=\"#相关概念\" class=\"headerlink\" title=\"相关概念\"></a>相关概念</h3><ul>\n<li><strong>unit</strong>: 因果推理中的原子（不可分）研究对象，可以是实物，也可以是概念</li>\n<li><strong>treatment</strong>: 施加给unit的操作。也叫做干预、介入等</li>\n<li><strong>variables</strong>(context): unit自带的一些属性。例如，若unit=患者，则variables=性别、病史、血压… 在treatment中不受影响的variable被称为pre-treatment variables</li>\n<li><strong>confounders</strong>(covariate): 会影响treatment选择和结果的一些变量。例如treatment=用药，confounder=年龄，即同一剂量的药剂在不同年龄段人群导致的结果可能不一样</li>\n<li><strong>casual effect</strong>: 因果效应。对于unit，若treatment A 的施加与否对其结果状态有影响，则称A构成一个casual effect. 施加对象是个体则构成个体因果效应；施加对象是群体则构成群体因果效应</li>\n<li><strong>potential outcome</strong>: 施加给unit的treatment所产生的所有结果的取值空间，包含factual outcome(观测结果)和counterfactual outcomes(反事实结果)</li>\n<li><strong>factual outcome</strong>: 施加给操作对象最终观测到的结果，记为Y</li>\n<li><strong>counterfactual outcome</strong>: 反事实结果，即不作treatment产生的结果</li>\n<li><strong>individualized treatment effect</strong>(<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.462ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 1972 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D43C\" d=\"M43 1Q26 1 26 10Q26 12 29 24Q34 43 39 45Q42 46 54 46H60Q120 46 136 53Q137 53 138 54Q143 56 149 77T198 273Q210 318 216 344Q286 624 286 626Q284 630 284 631Q274 637 213 637H193Q184 643 189 662Q193 677 195 680T209 683H213Q285 681 359 681Q481 681 487 683H497Q504 676 504 672T501 655T494 639Q491 637 471 637Q440 637 407 634Q393 631 388 623Q381 609 337 432Q326 385 315 341Q245 65 245 59Q245 52 255 50T307 46H339Q345 38 345 37T342 19Q338 6 332 0H316Q279 2 179 2Q143 2 113 2T65 2T43 1Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(504,0)\"><path data-c=\"1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1208,0)\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g></g></g></svg></mjx-container>): 个体操作效果。 <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"19.48ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 8610 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D43C\" d=\"M43 1Q26 1 26 10Q26 12 29 24Q34 43 39 45Q42 46 54 46H60Q120 46 136 53Q137 53 138 54Q143 56 149 77T198 273Q210 318 216 344Q286 624 286 626Q284 630 284 631Q274 637 213 637H193Q184 643 189 662Q193 677 195 680T209 683H213Q285 681 359 681Q481 681 487 683H497Q504 676 504 672T501 655T494 639Q491 637 471 637Q440 637 407 634Q393 631 388 623Q381 609 337 432Q326 385 315 341Q245 65 245 59Q245 52 255 50T307 46H339Q345 38 345 37T342 19Q338 6 332 0H316Q279 2 179 2Q143 2 113 2T65 2T43 1Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(504,0)\"><path data-c=\"1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1208,0)\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2249.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3305.6,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4068.6,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(4457.6,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4957.6,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(5568.8,0)\"><path data-c=\"2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(6569,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(7332,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(7721,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(8221,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>。其中<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.618ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 2041 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(763,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(1152,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1652,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>是事实结果，<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.618ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 2041 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(763,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(1152,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1652,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>是反事实结果。二者相减，相当于施加操作后和施加操作前unit状态的差别，即操作treatment所带来的增益。</li>\n<li><strong>average treatment effect</strong>(<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.018ex\" height=\"1.62ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 2218 716\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(750,0)\"><path data-c=\"1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1454,0)\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g></g></g></svg></mjx-container>): <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.462ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 1972 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D43C\" d=\"M43 1Q26 1 26 10Q26 12 29 24Q34 43 39 45Q42 46 54 46H60Q120 46 136 53Q137 53 138 54Q143 56 149 77T198 273Q210 318 216 344Q286 624 286 626Q284 630 284 631Q274 637 213 637H193Q184 643 189 662Q193 677 195 680T209 683H213Q285 681 359 681Q481 681 487 683H497Q504 676 504 672T501 655T494 639Q491 637 471 637Q440 637 407 634Q393 631 388 623Q381 609 337 432Q326 385 315 341Q245 65 245 59Q245 52 255 50T307 46H339Q345 38 345 37T342 19Q338 6 332 0H316Q279 2 179 2Q143 2 113 2T65 2T43 1Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(504,0)\"><path data-c=\"1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1208,0)\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g></g></g></svg></mjx-container>关于unit分布的期望。即<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"23.525ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 10398 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(750,0)\"><path data-c=\"1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1454,0)\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2495.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3551.6,0)\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4315.6,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4704.6,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(5467.6,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(5856.6,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6356.6,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6967.8,0)\"><path data-c=\"2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(7968,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(8731,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(9120,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(9620,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(10009,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container></li>\n<li><strong>counterfactual inference</strong>: 决类似于“如果这个病人采用其他疗法，血压会降下来吗？”这样的问题的推理。</li>\n</ul>\n<h2 id=\"研究方向\"><a href=\"#研究方向\" class=\"headerlink\" title=\"研究方向\"></a>研究方向</h2><ul>\n<li>因果发现：给定若干个变量，发现/挖掘变量间的因果关系，形成因果有向图</li>\n<li>因果效应：已知变量和变量间的因果关系，求因果关系的效果（原因对结果的影响程度）</li>\n</ul>\n<h2 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h2><ol>\n<li><a href=\"https://zhuanlan.zhihu.com/p/258562953\">chen-wai-wai-7.因果推断综述及基础方法介绍（一）</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/109996301\">xue-ruo-7.通俗解释因果推理 casual inference</a></li>\n<li><a href=\"https://www.math.pku.edu.cn/teachers/yaoy/math112230/lecture10_DingP_causal091101.pdf\">丁鹏.因果推断简介.PKU-MATH-00112230.2019</a></li>\n</ol>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'f73c0bc3c19755d1c0d886c0d8791cad24509c9a',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: document.title,\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","site":{"data":{}},"length":1395,"excerpt":"<p>因果推断的基本概念。</p>","more":"<h2 id=\"基本概念\"><a href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"></a>基本概念</h2><h3 id=\"相关与因果的不同\"><a href=\"#相关与因果的不同\" class=\"headerlink\" title=\"相关与因果的不同\"></a>相关与因果的不同</h3><ul>\n<li>相关性 <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.486ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.76ex\" height=\"2.106ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 778 931\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"2260\" d=\"M166 -215T159 -215T147 -212T141 -204T139 -197Q139 -190 144 -183L306 133H70Q56 140 56 153Q56 168 72 173H327L406 327H72Q56 332 56 347Q56 360 70 367H426Q597 702 602 707Q605 716 618 716Q625 716 630 712T636 703T638 696Q638 692 471 367H707Q722 359 722 347Q722 336 708 328L451 327L371 173H708Q722 163 722 153Q722 140 707 133H351Q175 -210 170 -212Q166 -215 159 -215Z\"></path></g></g></g></svg></mjx-container> 因果性<ul>\n<li>相关性是双向的；因果性是单向的。因果关系会在统计层面导致相关性，但相关性并不蕴含因果性。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"相关概念\"><a href=\"#相关概念\" class=\"headerlink\" title=\"相关概念\"></a>相关概念</h3><ul>\n<li><strong>unit</strong>: 因果推理中的原子（不可分）研究对象，可以是实物，也可以是概念</li>\n<li><strong>treatment</strong>: 施加给unit的操作。也叫做干预、介入等</li>\n<li><strong>variables</strong>(context): unit自带的一些属性。例如，若unit=患者，则variables=性别、病史、血压… 在treatment中不受影响的variable被称为pre-treatment variables</li>\n<li><strong>confounders</strong>(covariate): 会影响treatment选择和结果的一些变量。例如treatment=用药，confounder=年龄，即同一剂量的药剂在不同年龄段人群导致的结果可能不一样</li>\n<li><strong>casual effect</strong>: 因果效应。对于unit，若treatment A 的施加与否对其结果状态有影响，则称A构成一个casual effect. 施加对象是个体则构成个体因果效应；施加对象是群体则构成群体因果效应</li>\n<li><strong>potential outcome</strong>: 施加给unit的treatment所产生的所有结果的取值空间，包含factual outcome(观测结果)和counterfactual outcomes(反事实结果)</li>\n<li><strong>factual outcome</strong>: 施加给操作对象最终观测到的结果，记为Y</li>\n<li><strong>counterfactual outcome</strong>: 反事实结果，即不作treatment产生的结果</li>\n<li><strong>individualized treatment effect</strong>(<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.462ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 1972 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D43C\" d=\"M43 1Q26 1 26 10Q26 12 29 24Q34 43 39 45Q42 46 54 46H60Q120 46 136 53Q137 53 138 54Q143 56 149 77T198 273Q210 318 216 344Q286 624 286 626Q284 630 284 631Q274 637 213 637H193Q184 643 189 662Q193 677 195 680T209 683H213Q285 681 359 681Q481 681 487 683H497Q504 676 504 672T501 655T494 639Q491 637 471 637Q440 637 407 634Q393 631 388 623Q381 609 337 432Q326 385 315 341Q245 65 245 59Q245 52 255 50T307 46H339Q345 38 345 37T342 19Q338 6 332 0H316Q279 2 179 2Q143 2 113 2T65 2T43 1Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(504,0)\"><path data-c=\"1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1208,0)\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g></g></g></svg></mjx-container>): 个体操作效果。 <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"19.48ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 8610 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D43C\" d=\"M43 1Q26 1 26 10Q26 12 29 24Q34 43 39 45Q42 46 54 46H60Q120 46 136 53Q137 53 138 54Q143 56 149 77T198 273Q210 318 216 344Q286 624 286 626Q284 630 284 631Q274 637 213 637H193Q184 643 189 662Q193 677 195 680T209 683H213Q285 681 359 681Q481 681 487 683H497Q504 676 504 672T501 655T494 639Q491 637 471 637Q440 637 407 634Q393 631 388 623Q381 609 337 432Q326 385 315 341Q245 65 245 59Q245 52 255 50T307 46H339Q345 38 345 37T342 19Q338 6 332 0H316Q279 2 179 2Q143 2 113 2T65 2T43 1Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(504,0)\"><path data-c=\"1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1208,0)\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2249.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3305.6,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4068.6,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(4457.6,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4957.6,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(5568.8,0)\"><path data-c=\"2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(6569,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(7332,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(7721,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(8221,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>。其中<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.618ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 2041 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(763,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(1152,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1652,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>是事实结果，<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.618ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 2041 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(763,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(1152,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1652,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>是反事实结果。二者相减，相当于施加操作后和施加操作前unit状态的差别，即操作treatment所带来的增益。</li>\n<li><strong>average treatment effect</strong>(<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.018ex\" height=\"1.62ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 2218 716\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(750,0)\"><path data-c=\"1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1454,0)\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g></g></g></svg></mjx-container>): <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.462ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 1972 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D43C\" d=\"M43 1Q26 1 26 10Q26 12 29 24Q34 43 39 45Q42 46 54 46H60Q120 46 136 53Q137 53 138 54Q143 56 149 77T198 273Q210 318 216 344Q286 624 286 626Q284 630 284 631Q274 637 213 637H193Q184 643 189 662Q193 677 195 680T209 683H213Q285 681 359 681Q481 681 487 683H497Q504 676 504 672T501 655T494 639Q491 637 471 637Q440 637 407 634Q393 631 388 623Q381 609 337 432Q326 385 315 341Q245 65 245 59Q245 52 255 50T307 46H339Q345 38 345 37T342 19Q338 6 332 0H316Q279 2 179 2Q143 2 113 2T65 2T43 1Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(504,0)\"><path data-c=\"1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1208,0)\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g></g></g></svg></mjx-container>关于unit分布的期望。即<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"23.525ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 10398 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(750,0)\"><path data-c=\"1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1454,0)\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2495.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3551.6,0)\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4315.6,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4704.6,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(5467.6,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(5856.6,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6356.6,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6967.8,0)\"><path data-c=\"2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(7968,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(8731,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(9120,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(9620,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(10009,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container></li>\n<li><strong>counterfactual inference</strong>: 决类似于“如果这个病人采用其他疗法，血压会降下来吗？”这样的问题的推理。</li>\n</ul>\n<h2 id=\"研究方向\"><a href=\"#研究方向\" class=\"headerlink\" title=\"研究方向\"></a>研究方向</h2><ul>\n<li>因果发现：给定若干个变量，发现/挖掘变量间的因果关系，形成因果有向图</li>\n<li>因果效应：已知变量和变量间的因果关系，求因果关系的效果（原因对结果的影响程度）</li>\n</ul>\n<h2 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h2><ol>\n<li><a href=\"https://zhuanlan.zhihu.com/p/258562953\">chen-wai-wai-7.因果推断综述及基础方法介绍（一）</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/109996301\">xue-ruo-7.通俗解释因果推理 casual inference</a></li>\n<li><a href=\"https://www.math.pku.edu.cn/teachers/yaoy/math112230/lecture10_DingP_causal091101.pdf\">丁鹏.因果推断简介.PKU-MATH-00112230.2019</a></li>\n</ol>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'f73c0bc3c19755d1c0d886c0d8791cad24509c9a',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: document.title,\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>"},{"title":"设置威批恩后Github push失败的解决方案","mathjax":false,"codeblock":{"enable":true,"show_result":true},"date":"2022-04-17T01:45:15.000Z","_content":"\nGithub本在国内访问就极慢。然而翻墙后从本地push却又出现超时错误。点解？\n\n<!--more-->\n\n## 前驱条件\n- 假设你已经使用全局代理模式激活了威批恩，并且在命令行中push git时出现以下问题：\n```git\ngit push origin # 试图将当前commit内容push到远程主机origin上\n...: Failed to connect to github.com port 443 after ***** ms: Timed out\n```\n\n## 问题分析\n### 原因\n- 网络慢导致访问超时\n\n### 解决方案\n- 在终端使用设置代理\n  \n1. 查看威批恩设置的**本地端口号**，标记为post\n2. 在bash或者cmd中，按如下方式设置git的代理选项：\n\n```bash\ngit config --global http.proxy http://127.0.0.1:{post}\ngit config --global https.proxy https://127.0.0.1:{post}\n```\n- 例如，常用的威批恩本地端口号为1080，如下图所示\n![local port](github20220401701.png)\n- 则输入的命令为：\n```bash\ngit config --global http.proxy http://127.0.0.1:1080\ngit config --global https.proxy https://127.0.0.1:1080\n```\n\n- 随后再次在bash输入`git push origin`，即可成功将本地代码push到github仓库中。\n\n## 参考文献\n1. https://blog.csdn.net/weixin_52796927/article/details/121664227\n2. https://blog.csdn.net/BanRuo_Cheng/article/details/121444020\n\n\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: (document.title),\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","source":"_posts/2022-04-17-github.md","raw":"---\ntitle: 设置威批恩后Github push失败的解决方案\nmathjax: false\ncodeblock:\n  enable: true\n  show_result: true\ndate: 2022-04-17 09:45:15\ntags: \n    - git\n    - github\ncategories: 技术文档\n---\n\nGithub本在国内访问就极慢。然而翻墙后从本地push却又出现超时错误。点解？\n\n<!--more-->\n\n## 前驱条件\n- 假设你已经使用全局代理模式激活了威批恩，并且在命令行中push git时出现以下问题：\n```git\ngit push origin # 试图将当前commit内容push到远程主机origin上\n...: Failed to connect to github.com port 443 after ***** ms: Timed out\n```\n\n## 问题分析\n### 原因\n- 网络慢导致访问超时\n\n### 解决方案\n- 在终端使用设置代理\n  \n1. 查看威批恩设置的**本地端口号**，标记为post\n2. 在bash或者cmd中，按如下方式设置git的代理选项：\n\n```bash\ngit config --global http.proxy http://127.0.0.1:{post}\ngit config --global https.proxy https://127.0.0.1:{post}\n```\n- 例如，常用的威批恩本地端口号为1080，如下图所示\n![local port](github20220401701.png)\n- 则输入的命令为：\n```bash\ngit config --global http.proxy http://127.0.0.1:1080\ngit config --global https.proxy https://127.0.0.1:1080\n```\n\n- 随后再次在bash输入`git push origin`，即可成功将本地代码push到github仓库中。\n\n## 参考文献\n1. https://blog.csdn.net/weixin_52796927/article/details/121664227\n2. https://blog.csdn.net/BanRuo_Cheng/article/details/121444020\n\n\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: (document.title),\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","slug":"2022-04-17-github","published":1,"updated":"2022-04-21T07:27:13.322Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl2tv7gl700128cv94mi2au01","content":"<p>Github本在国内访问就极慢。然而翻墙后从本地push却又出现超时错误。点解？</p>\n<span id=\"more\"></span>\n<h2 id=\"前驱条件\"><a href=\"#前驱条件\" class=\"headerlink\" title=\"前驱条件\"></a>前驱条件</h2><ul>\n<li>假设你已经使用全局代理模式激活了威批恩，并且在命令行中push git时出现以下问题：<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push origin # 试图将当前commit内容push到远程主机origin上</span><br><span class=\"line\">...: Failed to connect to github.com port 443 after ***** ms: Timed out</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"问题分析\"><a href=\"#问题分析\" class=\"headerlink\" title=\"问题分析\"></a>问题分析</h2><h3 id=\"原因\"><a href=\"#原因\" class=\"headerlink\" title=\"原因\"></a>原因</h3><ul>\n<li>网络慢导致访问超时</li>\n</ul>\n<h3 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h3><ul>\n<li>在终端使用设置代理</li>\n</ul>\n<ol>\n<li>查看威批恩设置的<strong>本地端口号</strong>，标记为post</li>\n<li>在bash或者cmd中，按如下方式设置git的代理选项：</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global http.proxy http://127.0.0.1:&#123;post&#125;</span><br><span class=\"line\">git config --global https.proxy https://127.0.0.1:&#123;post&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>例如，常用的威批恩本地端口号为1080，如下图所示<br><img src=\"github20220401701.png\" alt=\"local port\"></li>\n<li><p>则输入的命令为：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global http.proxy http://127.0.0.1:1080</span><br><span class=\"line\">git config --global https.proxy https://127.0.0.1:1080</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>随后再次在bash输入<code>git push origin</code>，即可成功将本地代码push到github仓库中。</p>\n</li>\n</ul>\n<h2 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h2><ol>\n<li><a href=\"https://blog.csdn.net/weixin_52796927/article/details/121664227\">https://blog.csdn.net/weixin_52796927/article/details/121664227</a></li>\n<li><a href=\"https://blog.csdn.net/BanRuo_Cheng/article/details/121444020\">https://blog.csdn.net/BanRuo_Cheng/article/details/121444020</a></li>\n</ol>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: (document.title),\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","site":{"data":{}},"length":1016,"excerpt":"<p>Github本在国内访问就极慢。然而翻墙后从本地push却又出现超时错误。点解？</p>","more":"<h2 id=\"前驱条件\"><a href=\"#前驱条件\" class=\"headerlink\" title=\"前驱条件\"></a>前驱条件</h2><ul>\n<li>假设你已经使用全局代理模式激活了威批恩，并且在命令行中push git时出现以下问题：<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push origin # 试图将当前commit内容push到远程主机origin上</span><br><span class=\"line\">...: Failed to connect to github.com port 443 after ***** ms: Timed out</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"问题分析\"><a href=\"#问题分析\" class=\"headerlink\" title=\"问题分析\"></a>问题分析</h2><h3 id=\"原因\"><a href=\"#原因\" class=\"headerlink\" title=\"原因\"></a>原因</h3><ul>\n<li>网络慢导致访问超时</li>\n</ul>\n<h3 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h3><ul>\n<li>在终端使用设置代理</li>\n</ul>\n<ol>\n<li>查看威批恩设置的<strong>本地端口号</strong>，标记为post</li>\n<li>在bash或者cmd中，按如下方式设置git的代理选项：</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global http.proxy http://127.0.0.1:&#123;post&#125;</span><br><span class=\"line\">git config --global https.proxy https://127.0.0.1:&#123;post&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>例如，常用的威批恩本地端口号为1080，如下图所示<br><img src=\"github20220401701.png\" alt=\"local port\"></li>\n<li><p>则输入的命令为：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global http.proxy http://127.0.0.1:1080</span><br><span class=\"line\">git config --global https.proxy https://127.0.0.1:1080</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>随后再次在bash输入<code>git push origin</code>，即可成功将本地代码push到github仓库中。</p>\n</li>\n</ul>\n<h2 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h2><ol>\n<li><a href=\"https://blog.csdn.net/weixin_52796927/article/details/121664227\">https://blog.csdn.net/weixin_52796927/article/details/121664227</a></li>\n<li><a href=\"https://blog.csdn.net/BanRuo_Cheng/article/details/121444020\">https://blog.csdn.net/BanRuo_Cheng/article/details/121444020</a></li>\n</ol>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: (document.title),\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>"},{"title":"观《楚汉传奇》有感","mathjax":false,"codeblock":{"enable":true,"show_result":true},"date":"2022-04-17T14:48:14.000Z","_content":"\n<table>\n<tr>\n<td>大风起兮云飞扬，<br>威加海内兮归故乡。<br>安得猛士兮守四方？<br>——刘邦</td>\n\n<td>力拔山兮气盖世，<br>时不利兮骓不逝。<br>骓不逝兮可奈何，<br>虞兮虞兮奈若何！<br>——项羽</td>\n</tr>\n</table>\n\n<!--more-->\n严格地说，这是个人对楚汉战争这段历史的感悟。更确切地说，这是对汉王的成功与楚王的失败的感悟。\n\n楚汉相争，汉王最终夺取天下。项籍之败，哪里是什么“时不利兮”。匹夫之勇——项羽纵然可以冲锋破阵如履平地，纵然可以武勇绝冠作万人敌，却不懂得不战而屈人之兵，更不懂得得民心者得天下。妇人之仁——优柔姑息，不识大体；没有战略眼光，不晓杀伐果断。鸿门之宴、彭城之围、阳夏之战，均是灭亡汉王集团的绝佳机会。然而，项羽高估了义气，低估了人性。一次次的心慈手软，一次次的放虎归山，一次次的错失机会。相比之下，刘邦招贤纳士、安抚百姓；眼光长远，心怀天下。在可见的与不可见的争斗中，刘邦牢牢抓住每一个不放过的机会，上芒砀山、投项羽（前期）；入关中、下巴蜀、还定三秦，一切只为两个字——天下。终于，这虎蜕变成能与赤龙一决雌雄的白龙，并战胜了赤龙。\n\n虽然有马后炮的嫌疑，但刘邦之胜与项羽之败，在讨诛暴秦时期便可见端倪。刘邦虽然出身低微（泗水亭长），也无过人武勇，但他为人慷慨仗义，处事圆滑灵活，有着强大的个人魅力。因此在创业初期，刘邦便能够结实一群坚定不移的好兄弟（即丰沛集团，包括卢绾、萧何、曹参、樊哙、周勃、夏侯婴，以及芒砀山时期组织的军队成员）。这一团队是刘邦日后与项羽抗争的中坚力量。刘邦的个人特质，也是天下英才趋之若鹜的重要原因。与此同时，项羽虽然贵为楚国名将项燕之后，能够凭借贵族身份与民间威望团结楚地人民的力量，然而项羽为人固执、刚愎自用。咨诹善道、从善如流这些词，从来与项羽不搭边。项羽虽重义气，却有强烈的身份优越感，看不起出身卑贱的人（包括对手刘邦、昔日执戟郎中后来大将军的韩信）。这导致项羽虽然也结识一群好弟兄（虞子期、龙且），但在外人看来，项羽心高气傲、难以接近。除了一心复兴楚国的范增，再无其他谋士愿意加入项羽麾下。\n\n刘邦与项羽的性格特质，放大了他们各自的团队特点，从而影响了局势走向。在人才吸引方面，刘邦为人慷慨，用人果断，能够让每个人发挥自己最大的才能。张良加入汉军之初也曾领兵打仗。但刘邦在部下反馈与自己观察之下，决定让张良以谋士身份供职，更大程度地发挥其过人智慧及战略规划能力。入巴蜀、定三秦、鸿门脱险，无一不是张良助力。韩信加入汉营前是项羽帐下的执戟郎中，在汉营亦只从运粮官做起。然而刘邦能听从萧何的建议，仅在读过韩信之兵书、见韩信其人一面之后，拜韩信为一人之下万人之上的大将军。这需要何等强大的果敢和定力！更不用说韩信攻略齐地后，刘邦能听从张良陈平的建议，封其为“真”齐王，使其死心塌地地效忠于汉家。陈平归于刘邦之前曾降于项王，且名声不好，有“盗嫂受金”之嫌。然而刘邦能够听从陈平之计，拨出四分之一的国库存金支持他在楚营开展间谍活动，离间项羽与范增。范增一除，项羽剩下的便只有“勇”，分明是一块案板上的牛肉。与之相比，项羽纵有拔山之力，却小肚鸡肠，为人固执、猜忌部下；任人唯亲，有功之臣不得奖赏，项家子弟却保荣华富贵。虽然应该客观承认，项羽有着冠绝古今的军事才能；但也不得不言，项羽并不是一个合格的“王”。刘邦的慷慨与果断，使天下英杰趋之若鹜；项羽的无双勇力，却不是吸引天下人才的理由。\n\n此外，刘项二人的志向差异，更加决定了各自结局的不同。对项羽而言，战斗的意义有两点：其一是诛灭无道的暴秦，其二是光荣复兴楚国大旗。首先，项羽对秦国人怀有极深的仇恨，因此其对秦人的态度并无任何慈悲。屠咸阳、火烧阿房、坑杀30万秦军，项羽对秦人没有任何怜悯。其次，项羽的最终目标在于复兴“楚国”，而非重振“天下”，因而在荡平咸阳之后，土地肥沃、易守难攻的三秦之地对项羽没有任何吸引力。项羽想做的只有回到故乡彭城，做自己的“西楚霸王”，仿照周朝恢复分封制，守住楚国的一亩三分地。至于刘邦，创业前期刘邦并不知道自己的目标为何——乱世之中，生存第一。然而在入关中之后，刘邦把目光放到了“天下”。刘邦的目标在于统一天下。虽然我们不能冠冕堂皇地认为，刘邦所做的一切都是为了百姓福祉、人类和平。但可以确定的是，刘邦没有像项羽一样对秦人的仇恨（亡国之痛），同时他出身低微，更加能够体会百姓疾苦。因而在战略问题上，刘邦能够从更加全局的角度思考，并且更加考虑人民的感受，而非像项羽一样的你死我活、快意恩仇。入关中称王后，刘邦看到巴蜀之地虽然路途遥远，却是沃野千里的天府之土，因而顺水推舟地入蜀以积攒实力。随后，汉家军明修栈道暗度陈仓以定三秦，据守崤关以保有坚不可摧的防御。再加上大后方的巴蜀源源不断地提供粮草，使得汉军具有蒸不烂、煮不熟、捶不匾、炒不爆的韧性。虽然汉军一直在打败仗，但汉军只需要最后赢一次；虽然楚军屡战屡胜，但楚军禁不住哪怕一次失败。\n\n---\n\n\n\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: (document.title),\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","source":"_posts/2022-04-17-legend.md","raw":"---\ntitle: 观《楚汉传奇》有感\nmathjax: false\ncodeblock:\n  enable: true\n  show_result: true\ndate: 2022-04-17 22:48:14\ntags:\ncategories:\n---\n\n<table>\n<tr>\n<td>大风起兮云飞扬，<br>威加海内兮归故乡。<br>安得猛士兮守四方？<br>——刘邦</td>\n\n<td>力拔山兮气盖世，<br>时不利兮骓不逝。<br>骓不逝兮可奈何，<br>虞兮虞兮奈若何！<br>——项羽</td>\n</tr>\n</table>\n\n<!--more-->\n严格地说，这是个人对楚汉战争这段历史的感悟。更确切地说，这是对汉王的成功与楚王的失败的感悟。\n\n楚汉相争，汉王最终夺取天下。项籍之败，哪里是什么“时不利兮”。匹夫之勇——项羽纵然可以冲锋破阵如履平地，纵然可以武勇绝冠作万人敌，却不懂得不战而屈人之兵，更不懂得得民心者得天下。妇人之仁——优柔姑息，不识大体；没有战略眼光，不晓杀伐果断。鸿门之宴、彭城之围、阳夏之战，均是灭亡汉王集团的绝佳机会。然而，项羽高估了义气，低估了人性。一次次的心慈手软，一次次的放虎归山，一次次的错失机会。相比之下，刘邦招贤纳士、安抚百姓；眼光长远，心怀天下。在可见的与不可见的争斗中，刘邦牢牢抓住每一个不放过的机会，上芒砀山、投项羽（前期）；入关中、下巴蜀、还定三秦，一切只为两个字——天下。终于，这虎蜕变成能与赤龙一决雌雄的白龙，并战胜了赤龙。\n\n虽然有马后炮的嫌疑，但刘邦之胜与项羽之败，在讨诛暴秦时期便可见端倪。刘邦虽然出身低微（泗水亭长），也无过人武勇，但他为人慷慨仗义，处事圆滑灵活，有着强大的个人魅力。因此在创业初期，刘邦便能够结实一群坚定不移的好兄弟（即丰沛集团，包括卢绾、萧何、曹参、樊哙、周勃、夏侯婴，以及芒砀山时期组织的军队成员）。这一团队是刘邦日后与项羽抗争的中坚力量。刘邦的个人特质，也是天下英才趋之若鹜的重要原因。与此同时，项羽虽然贵为楚国名将项燕之后，能够凭借贵族身份与民间威望团结楚地人民的力量，然而项羽为人固执、刚愎自用。咨诹善道、从善如流这些词，从来与项羽不搭边。项羽虽重义气，却有强烈的身份优越感，看不起出身卑贱的人（包括对手刘邦、昔日执戟郎中后来大将军的韩信）。这导致项羽虽然也结识一群好弟兄（虞子期、龙且），但在外人看来，项羽心高气傲、难以接近。除了一心复兴楚国的范增，再无其他谋士愿意加入项羽麾下。\n\n刘邦与项羽的性格特质，放大了他们各自的团队特点，从而影响了局势走向。在人才吸引方面，刘邦为人慷慨，用人果断，能够让每个人发挥自己最大的才能。张良加入汉军之初也曾领兵打仗。但刘邦在部下反馈与自己观察之下，决定让张良以谋士身份供职，更大程度地发挥其过人智慧及战略规划能力。入巴蜀、定三秦、鸿门脱险，无一不是张良助力。韩信加入汉营前是项羽帐下的执戟郎中，在汉营亦只从运粮官做起。然而刘邦能听从萧何的建议，仅在读过韩信之兵书、见韩信其人一面之后，拜韩信为一人之下万人之上的大将军。这需要何等强大的果敢和定力！更不用说韩信攻略齐地后，刘邦能听从张良陈平的建议，封其为“真”齐王，使其死心塌地地效忠于汉家。陈平归于刘邦之前曾降于项王，且名声不好，有“盗嫂受金”之嫌。然而刘邦能够听从陈平之计，拨出四分之一的国库存金支持他在楚营开展间谍活动，离间项羽与范增。范增一除，项羽剩下的便只有“勇”，分明是一块案板上的牛肉。与之相比，项羽纵有拔山之力，却小肚鸡肠，为人固执、猜忌部下；任人唯亲，有功之臣不得奖赏，项家子弟却保荣华富贵。虽然应该客观承认，项羽有着冠绝古今的军事才能；但也不得不言，项羽并不是一个合格的“王”。刘邦的慷慨与果断，使天下英杰趋之若鹜；项羽的无双勇力，却不是吸引天下人才的理由。\n\n此外，刘项二人的志向差异，更加决定了各自结局的不同。对项羽而言，战斗的意义有两点：其一是诛灭无道的暴秦，其二是光荣复兴楚国大旗。首先，项羽对秦国人怀有极深的仇恨，因此其对秦人的态度并无任何慈悲。屠咸阳、火烧阿房、坑杀30万秦军，项羽对秦人没有任何怜悯。其次，项羽的最终目标在于复兴“楚国”，而非重振“天下”，因而在荡平咸阳之后，土地肥沃、易守难攻的三秦之地对项羽没有任何吸引力。项羽想做的只有回到故乡彭城，做自己的“西楚霸王”，仿照周朝恢复分封制，守住楚国的一亩三分地。至于刘邦，创业前期刘邦并不知道自己的目标为何——乱世之中，生存第一。然而在入关中之后，刘邦把目光放到了“天下”。刘邦的目标在于统一天下。虽然我们不能冠冕堂皇地认为，刘邦所做的一切都是为了百姓福祉、人类和平。但可以确定的是，刘邦没有像项羽一样对秦人的仇恨（亡国之痛），同时他出身低微，更加能够体会百姓疾苦。因而在战略问题上，刘邦能够从更加全局的角度思考，并且更加考虑人民的感受，而非像项羽一样的你死我活、快意恩仇。入关中称王后，刘邦看到巴蜀之地虽然路途遥远，却是沃野千里的天府之土，因而顺水推舟地入蜀以积攒实力。随后，汉家军明修栈道暗度陈仓以定三秦，据守崤关以保有坚不可摧的防御。再加上大后方的巴蜀源源不断地提供粮草，使得汉军具有蒸不烂、煮不熟、捶不匾、炒不爆的韧性。虽然汉军一直在打败仗，但汉军只需要最后赢一次；虽然楚军屡战屡胜，但楚军禁不住哪怕一次失败。\n\n---\n\n\n\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: (document.title),\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","slug":"2022-04-17-legend","published":1,"updated":"2022-04-21T07:27:44.833Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl2tv7gl800148cv9f07pgisg","content":"<table>\n<tr>\n<td>大风起兮云飞扬，<br>威加海内兮归故乡。<br>安得猛士兮守四方？<br>——刘邦</td>\n\n<td>力拔山兮气盖世，<br>时不利兮骓不逝。<br>骓不逝兮可奈何，<br>虞兮虞兮奈若何！<br>——项羽</td>\n</tr>\n</table>\n\n<span id=\"more\"></span>\n<p>严格地说，这是个人对楚汉战争这段历史的感悟。更确切地说，这是对汉王的成功与楚王的失败的感悟。</p>\n<p>楚汉相争，汉王最终夺取天下。项籍之败，哪里是什么“时不利兮”。匹夫之勇——项羽纵然可以冲锋破阵如履平地，纵然可以武勇绝冠作万人敌，却不懂得不战而屈人之兵，更不懂得得民心者得天下。妇人之仁——优柔姑息，不识大体；没有战略眼光，不晓杀伐果断。鸿门之宴、彭城之围、阳夏之战，均是灭亡汉王集团的绝佳机会。然而，项羽高估了义气，低估了人性。一次次的心慈手软，一次次的放虎归山，一次次的错失机会。相比之下，刘邦招贤纳士、安抚百姓；眼光长远，心怀天下。在可见的与不可见的争斗中，刘邦牢牢抓住每一个不放过的机会，上芒砀山、投项羽（前期）；入关中、下巴蜀、还定三秦，一切只为两个字——天下。终于，这虎蜕变成能与赤龙一决雌雄的白龙，并战胜了赤龙。</p>\n<p>虽然有马后炮的嫌疑，但刘邦之胜与项羽之败，在讨诛暴秦时期便可见端倪。刘邦虽然出身低微（泗水亭长），也无过人武勇，但他为人慷慨仗义，处事圆滑灵活，有着强大的个人魅力。因此在创业初期，刘邦便能够结实一群坚定不移的好兄弟（即丰沛集团，包括卢绾、萧何、曹参、樊哙、周勃、夏侯婴，以及芒砀山时期组织的军队成员）。这一团队是刘邦日后与项羽抗争的中坚力量。刘邦的个人特质，也是天下英才趋之若鹜的重要原因。与此同时，项羽虽然贵为楚国名将项燕之后，能够凭借贵族身份与民间威望团结楚地人民的力量，然而项羽为人固执、刚愎自用。咨诹善道、从善如流这些词，从来与项羽不搭边。项羽虽重义气，却有强烈的身份优越感，看不起出身卑贱的人（包括对手刘邦、昔日执戟郎中后来大将军的韩信）。这导致项羽虽然也结识一群好弟兄（虞子期、龙且），但在外人看来，项羽心高气傲、难以接近。除了一心复兴楚国的范增，再无其他谋士愿意加入项羽麾下。</p>\n<p>刘邦与项羽的性格特质，放大了他们各自的团队特点，从而影响了局势走向。在人才吸引方面，刘邦为人慷慨，用人果断，能够让每个人发挥自己最大的才能。张良加入汉军之初也曾领兵打仗。但刘邦在部下反馈与自己观察之下，决定让张良以谋士身份供职，更大程度地发挥其过人智慧及战略规划能力。入巴蜀、定三秦、鸿门脱险，无一不是张良助力。韩信加入汉营前是项羽帐下的执戟郎中，在汉营亦只从运粮官做起。然而刘邦能听从萧何的建议，仅在读过韩信之兵书、见韩信其人一面之后，拜韩信为一人之下万人之上的大将军。这需要何等强大的果敢和定力！更不用说韩信攻略齐地后，刘邦能听从张良陈平的建议，封其为“真”齐王，使其死心塌地地效忠于汉家。陈平归于刘邦之前曾降于项王，且名声不好，有“盗嫂受金”之嫌。然而刘邦能够听从陈平之计，拨出四分之一的国库存金支持他在楚营开展间谍活动，离间项羽与范增。范增一除，项羽剩下的便只有“勇”，分明是一块案板上的牛肉。与之相比，项羽纵有拔山之力，却小肚鸡肠，为人固执、猜忌部下；任人唯亲，有功之臣不得奖赏，项家子弟却保荣华富贵。虽然应该客观承认，项羽有着冠绝古今的军事才能；但也不得不言，项羽并不是一个合格的“王”。刘邦的慷慨与果断，使天下英杰趋之若鹜；项羽的无双勇力，却不是吸引天下人才的理由。</p>\n<p>此外，刘项二人的志向差异，更加决定了各自结局的不同。对项羽而言，战斗的意义有两点：其一是诛灭无道的暴秦，其二是光荣复兴楚国大旗。首先，项羽对秦国人怀有极深的仇恨，因此其对秦人的态度并无任何慈悲。屠咸阳、火烧阿房、坑杀30万秦军，项羽对秦人没有任何怜悯。其次，项羽的最终目标在于复兴“楚国”，而非重振“天下”，因而在荡平咸阳之后，土地肥沃、易守难攻的三秦之地对项羽没有任何吸引力。项羽想做的只有回到故乡彭城，做自己的“西楚霸王”，仿照周朝恢复分封制，守住楚国的一亩三分地。至于刘邦，创业前期刘邦并不知道自己的目标为何——乱世之中，生存第一。然而在入关中之后，刘邦把目光放到了“天下”。刘邦的目标在于统一天下。虽然我们不能冠冕堂皇地认为，刘邦所做的一切都是为了百姓福祉、人类和平。但可以确定的是，刘邦没有像项羽一样对秦人的仇恨（亡国之痛），同时他出身低微，更加能够体会百姓疾苦。因而在战略问题上，刘邦能够从更加全局的角度思考，并且更加考虑人民的感受，而非像项羽一样的你死我活、快意恩仇。入关中称王后，刘邦看到巴蜀之地虽然路途遥远，却是沃野千里的天府之土，因而顺水推舟地入蜀以积攒实力。随后，汉家军明修栈道暗度陈仓以定三秦，据守崤关以保有坚不可摧的防御。再加上大后方的巴蜀源源不断地提供粮草，使得汉军具有蒸不烂、煮不熟、捶不匾、炒不爆的韧性。虽然汉军一直在打败仗，但汉军只需要最后赢一次；虽然楚军屡战屡胜，但楚军禁不住哪怕一次失败。</p>\n<hr>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: (document.title),\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","site":{"data":{}},"length":2289,"excerpt":"<table>\n<tr>\n<td>大风起兮云飞扬，<br>威加海内兮归故乡。<br>安得猛士兮守四方？<br>——刘邦</td>\n\n<td>力拔山兮气盖世，<br>时不利兮骓不逝。<br>骓不逝兮可奈何，<br>虞兮虞兮奈若何！<br>——项羽</td>\n</tr>\n</table>","more":"<p>严格地说，这是个人对楚汉战争这段历史的感悟。更确切地说，这是对汉王的成功与楚王的失败的感悟。</p>\n<p>楚汉相争，汉王最终夺取天下。项籍之败，哪里是什么“时不利兮”。匹夫之勇——项羽纵然可以冲锋破阵如履平地，纵然可以武勇绝冠作万人敌，却不懂得不战而屈人之兵，更不懂得得民心者得天下。妇人之仁——优柔姑息，不识大体；没有战略眼光，不晓杀伐果断。鸿门之宴、彭城之围、阳夏之战，均是灭亡汉王集团的绝佳机会。然而，项羽高估了义气，低估了人性。一次次的心慈手软，一次次的放虎归山，一次次的错失机会。相比之下，刘邦招贤纳士、安抚百姓；眼光长远，心怀天下。在可见的与不可见的争斗中，刘邦牢牢抓住每一个不放过的机会，上芒砀山、投项羽（前期）；入关中、下巴蜀、还定三秦，一切只为两个字——天下。终于，这虎蜕变成能与赤龙一决雌雄的白龙，并战胜了赤龙。</p>\n<p>虽然有马后炮的嫌疑，但刘邦之胜与项羽之败，在讨诛暴秦时期便可见端倪。刘邦虽然出身低微（泗水亭长），也无过人武勇，但他为人慷慨仗义，处事圆滑灵活，有着强大的个人魅力。因此在创业初期，刘邦便能够结实一群坚定不移的好兄弟（即丰沛集团，包括卢绾、萧何、曹参、樊哙、周勃、夏侯婴，以及芒砀山时期组织的军队成员）。这一团队是刘邦日后与项羽抗争的中坚力量。刘邦的个人特质，也是天下英才趋之若鹜的重要原因。与此同时，项羽虽然贵为楚国名将项燕之后，能够凭借贵族身份与民间威望团结楚地人民的力量，然而项羽为人固执、刚愎自用。咨诹善道、从善如流这些词，从来与项羽不搭边。项羽虽重义气，却有强烈的身份优越感，看不起出身卑贱的人（包括对手刘邦、昔日执戟郎中后来大将军的韩信）。这导致项羽虽然也结识一群好弟兄（虞子期、龙且），但在外人看来，项羽心高气傲、难以接近。除了一心复兴楚国的范增，再无其他谋士愿意加入项羽麾下。</p>\n<p>刘邦与项羽的性格特质，放大了他们各自的团队特点，从而影响了局势走向。在人才吸引方面，刘邦为人慷慨，用人果断，能够让每个人发挥自己最大的才能。张良加入汉军之初也曾领兵打仗。但刘邦在部下反馈与自己观察之下，决定让张良以谋士身份供职，更大程度地发挥其过人智慧及战略规划能力。入巴蜀、定三秦、鸿门脱险，无一不是张良助力。韩信加入汉营前是项羽帐下的执戟郎中，在汉营亦只从运粮官做起。然而刘邦能听从萧何的建议，仅在读过韩信之兵书、见韩信其人一面之后，拜韩信为一人之下万人之上的大将军。这需要何等强大的果敢和定力！更不用说韩信攻略齐地后，刘邦能听从张良陈平的建议，封其为“真”齐王，使其死心塌地地效忠于汉家。陈平归于刘邦之前曾降于项王，且名声不好，有“盗嫂受金”之嫌。然而刘邦能够听从陈平之计，拨出四分之一的国库存金支持他在楚营开展间谍活动，离间项羽与范增。范增一除，项羽剩下的便只有“勇”，分明是一块案板上的牛肉。与之相比，项羽纵有拔山之力，却小肚鸡肠，为人固执、猜忌部下；任人唯亲，有功之臣不得奖赏，项家子弟却保荣华富贵。虽然应该客观承认，项羽有着冠绝古今的军事才能；但也不得不言，项羽并不是一个合格的“王”。刘邦的慷慨与果断，使天下英杰趋之若鹜；项羽的无双勇力，却不是吸引天下人才的理由。</p>\n<p>此外，刘项二人的志向差异，更加决定了各自结局的不同。对项羽而言，战斗的意义有两点：其一是诛灭无道的暴秦，其二是光荣复兴楚国大旗。首先，项羽对秦国人怀有极深的仇恨，因此其对秦人的态度并无任何慈悲。屠咸阳、火烧阿房、坑杀30万秦军，项羽对秦人没有任何怜悯。其次，项羽的最终目标在于复兴“楚国”，而非重振“天下”，因而在荡平咸阳之后，土地肥沃、易守难攻的三秦之地对项羽没有任何吸引力。项羽想做的只有回到故乡彭城，做自己的“西楚霸王”，仿照周朝恢复分封制，守住楚国的一亩三分地。至于刘邦，创业前期刘邦并不知道自己的目标为何——乱世之中，生存第一。然而在入关中之后，刘邦把目光放到了“天下”。刘邦的目标在于统一天下。虽然我们不能冠冕堂皇地认为，刘邦所做的一切都是为了百姓福祉、人类和平。但可以确定的是，刘邦没有像项羽一样对秦人的仇恨（亡国之痛），同时他出身低微，更加能够体会百姓疾苦。因而在战略问题上，刘邦能够从更加全局的角度思考，并且更加考虑人民的感受，而非像项羽一样的你死我活、快意恩仇。入关中称王后，刘邦看到巴蜀之地虽然路途遥远，却是沃野千里的天府之土，因而顺水推舟地入蜀以积攒实力。随后，汉家军明修栈道暗度陈仓以定三秦，据守崤关以保有坚不可摧的防御。再加上大后方的巴蜀源源不断地提供粮草，使得汉军具有蒸不烂、煮不熟、捶不匾、炒不爆的韧性。虽然汉军一直在打败仗，但汉军只需要最后赢一次；虽然楚军屡战屡胜，但楚军禁不住哪怕一次失败。</p>\n<hr>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: (document.title),\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>"},{"title":"因果推断学习笔记.2","mathjax":true,"codeblock":{"enable":true,"show_result":true},"date":"2022-04-21T03:15:31.000Z","_content":"\n因果推断的常用方法。\n\n<!--more-->\n\n## 承接上文\n推断因果关系：试问某种处理/因素/变量，对于个体的状态有没有影响（因果作用）？\n\n## Rubin Causal Model (RCM)\n- 设$Z_i$表示**个体$i$**接受处理与否（处理取1，对照取0）；$Y_i$表示个体$i$的**结果变量**。另外记二元组$(Y_i(1),Y_i(0))$表示个体$i$接受处理或对照的潜在结果(potential outcome)。那么$Y_i(1)-Y_i(0)$表示个体$i$接受处理的**个体因果作用**。\n- 然而问题在于，每个个体要么接受处理，要么作为对照，因此在一次观测中$(Y_i(1),Y_i(0))$必然缺失一半，因此个体的因果作用是不可识别的（注意，这里不允许前一个时刻对照、后一个时刻处理）。从概率的角度看，$i$可以看成样本空间$\\Omega$中的样本点$\\omega$。但是在**$Z$**做随机化的前提下，我们可以识别总体的平均因果作用(Average Casual Effect, ACE):\n$$\nACE(Z\\to Y)=E(Y_i(1)-Y_i(0)).\n$$\n这是因为\n$$\n\\begin{aligned}\nACE(Z\\to Y)&=E(Y_i(1))-E(Y_i(0)) &\\#\\text{对单个个体的全体结果变量求期望}\\\\\n&= E(Y_i(1)|Z_i=1)-E(Y_i(0)|Z_i=0) &\\#\\text{随机化，即}Z\\perp(Y(1),Y(0))\\\\\n&= E(Y_i|Z_i=1)-E(Y_i|Z_i=0) &\\#\\text{表明ACE可以由观测数据估计出来}\\\\\n\\end{aligned}\n$$\n*注：这里$i$是固定的，期望的取法是将$Y_i$视作随机变量，对$Y_i$取条件期望*\n\n- 上述推导表明，**随机化试验**对于平均因果作用的识别起着至关重要的作用。\n\n## 观测性研究：可忽略性、倾向得分与回归分析\n- 上一节的结论表明随机化试验对于平均因果作用的识别非常重要。然而在现实中，很多研究都是无法进行随机化试验的的（**对同一个体的随机化**）。在观测性研究中，通常能搜集到以下数据：个体的信息变量$X$（如年龄、性别）、个体是否接受处理$Z$（如是否吃某种新药、是否吸烟等）、个体的结果变量$Y$（如康复情况、肺部清洁程度等）。那么，我们可以用如下条件期望之差去估计$ACE$吗？\n$$\nE(Y|Z=1)-E(Y|Z=0)\n$$\n- 答案是：**不能**。反面教材：辛普森悖论（[Yule-Simpson Paradox](https://baike.baidu.com/item/%E8%BE%9B%E6%99%AE%E6%A3%AE%E6%82%96%E8%AE%BA/4475862)）\n- 这就引出一个$ACE$的识别性问题，即通过观测数据我们能否得到ACE的相合估计。实际中，这需要一个不可验证的假定：**可忽略性**。\n\n### 可忽略性&ACE的识别性\n- 可忽略行假定：$Z\\perp(Y(1),Y(0))$。即上文公式中的“随机化”。\n- 这是一条不可验证的**假定**，它的存在使得我们可以通过观测数据识别$ACE$。然而，在观测性研究中，个体**选择处理与否**（$Z$）与其**个体属性**可能相关（注意，本质上，$(Y(1),Y(0))$也是个体属性的一部分！），上面的假定可能被破坏。但通常的方法是，收集充分多的个体信息$X$，使得如下的**强可忽略性假定**成立：\n$$\nZ\\perp(Y(1),Y(0))\\perp X\n$$\n可以证明，此时的$ACE$是可以识别的，因为\n$$\n\\begin{aligned}\nACE &= E(Y(1))-E(Y(0)) &\\#\\text{对全体个体的全体结果变量求期望}\\\\\n&= E[E(Y(1)|X)] - E[E(Y(0)|X)] &\\#\\text{全期望公式} \\\\\n&= E[E(Y(1)|X,Z=1)] - E[E(Y(0)|X,Z=0)] \\\\ \n&= E[E(Y|X,Z=1)] - E[E(Y|X,Z=0)] \\\\ \n\\end{aligned}\n$$\n- 在上述推导中，通过全期望公式引入个体信息变量$X$的权重，解决了辛普森悖论的问题。接下来的问题是，如何通过上述条件期望计算$ACE$。目前有三种方法：\n> 倾向得分（propensity score）\n> 线性回归（linear regression）\n> Heckman Selection Model（又称Tobit Model）\n\n## 参考文献\n\n1. [丁鹏.因果推断简介.PKU-MATH-00112230.2019](https://www.math.pku.edu.cn/teachers/yaoy/math112230/lecture10_DingP_causal091101.pdf)\n\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: document.title+document.date,\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","source":"_posts/2022-04-21-casual-inference-2.md","raw":"---\ntitle: 因果推断学习笔记.2\nmathjax: true\ncodeblock:\n  enable: true\n  show_result: true\ndate: 2022-04-21 11:15:31\ntags: 因果推断\ncategories: 学习笔记\n---\n\n因果推断的常用方法。\n\n<!--more-->\n\n## 承接上文\n推断因果关系：试问某种处理/因素/变量，对于个体的状态有没有影响（因果作用）？\n\n## Rubin Causal Model (RCM)\n- 设$Z_i$表示**个体$i$**接受处理与否（处理取1，对照取0）；$Y_i$表示个体$i$的**结果变量**。另外记二元组$(Y_i(1),Y_i(0))$表示个体$i$接受处理或对照的潜在结果(potential outcome)。那么$Y_i(1)-Y_i(0)$表示个体$i$接受处理的**个体因果作用**。\n- 然而问题在于，每个个体要么接受处理，要么作为对照，因此在一次观测中$(Y_i(1),Y_i(0))$必然缺失一半，因此个体的因果作用是不可识别的（注意，这里不允许前一个时刻对照、后一个时刻处理）。从概率的角度看，$i$可以看成样本空间$\\Omega$中的样本点$\\omega$。但是在**$Z$**做随机化的前提下，我们可以识别总体的平均因果作用(Average Casual Effect, ACE):\n$$\nACE(Z\\to Y)=E(Y_i(1)-Y_i(0)).\n$$\n这是因为\n$$\n\\begin{aligned}\nACE(Z\\to Y)&=E(Y_i(1))-E(Y_i(0)) &\\#\\text{对单个个体的全体结果变量求期望}\\\\\n&= E(Y_i(1)|Z_i=1)-E(Y_i(0)|Z_i=0) &\\#\\text{随机化，即}Z\\perp(Y(1),Y(0))\\\\\n&= E(Y_i|Z_i=1)-E(Y_i|Z_i=0) &\\#\\text{表明ACE可以由观测数据估计出来}\\\\\n\\end{aligned}\n$$\n*注：这里$i$是固定的，期望的取法是将$Y_i$视作随机变量，对$Y_i$取条件期望*\n\n- 上述推导表明，**随机化试验**对于平均因果作用的识别起着至关重要的作用。\n\n## 观测性研究：可忽略性、倾向得分与回归分析\n- 上一节的结论表明随机化试验对于平均因果作用的识别非常重要。然而在现实中，很多研究都是无法进行随机化试验的的（**对同一个体的随机化**）。在观测性研究中，通常能搜集到以下数据：个体的信息变量$X$（如年龄、性别）、个体是否接受处理$Z$（如是否吃某种新药、是否吸烟等）、个体的结果变量$Y$（如康复情况、肺部清洁程度等）。那么，我们可以用如下条件期望之差去估计$ACE$吗？\n$$\nE(Y|Z=1)-E(Y|Z=0)\n$$\n- 答案是：**不能**。反面教材：辛普森悖论（[Yule-Simpson Paradox](https://baike.baidu.com/item/%E8%BE%9B%E6%99%AE%E6%A3%AE%E6%82%96%E8%AE%BA/4475862)）\n- 这就引出一个$ACE$的识别性问题，即通过观测数据我们能否得到ACE的相合估计。实际中，这需要一个不可验证的假定：**可忽略性**。\n\n### 可忽略性&ACE的识别性\n- 可忽略行假定：$Z\\perp(Y(1),Y(0))$。即上文公式中的“随机化”。\n- 这是一条不可验证的**假定**，它的存在使得我们可以通过观测数据识别$ACE$。然而，在观测性研究中，个体**选择处理与否**（$Z$）与其**个体属性**可能相关（注意，本质上，$(Y(1),Y(0))$也是个体属性的一部分！），上面的假定可能被破坏。但通常的方法是，收集充分多的个体信息$X$，使得如下的**强可忽略性假定**成立：\n$$\nZ\\perp(Y(1),Y(0))\\perp X\n$$\n可以证明，此时的$ACE$是可以识别的，因为\n$$\n\\begin{aligned}\nACE &= E(Y(1))-E(Y(0)) &\\#\\text{对全体个体的全体结果变量求期望}\\\\\n&= E[E(Y(1)|X)] - E[E(Y(0)|X)] &\\#\\text{全期望公式} \\\\\n&= E[E(Y(1)|X,Z=1)] - E[E(Y(0)|X,Z=0)] \\\\ \n&= E[E(Y|X,Z=1)] - E[E(Y|X,Z=0)] \\\\ \n\\end{aligned}\n$$\n- 在上述推导中，通过全期望公式引入个体信息变量$X$的权重，解决了辛普森悖论的问题。接下来的问题是，如何通过上述条件期望计算$ACE$。目前有三种方法：\n> 倾向得分（propensity score）\n> 线性回归（linear regression）\n> Heckman Selection Model（又称Tobit Model）\n\n## 参考文献\n\n1. [丁鹏.因果推断简介.PKU-MATH-00112230.2019](https://www.math.pku.edu.cn/teachers/yaoy/math112230/lecture10_DingP_causal091101.pdf)\n\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: document.title+document.date,\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","slug":"2022-04-21-casual-inference-2","published":1,"updated":"2022-04-27T14:41:58.504Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl2tv7gl900168cv9crcj35tw","content":"<p>因果推断的常用方法。</p>\n<span id=\"more\"></span>\n<h2 id=\"承接上文\"><a href=\"#承接上文\" class=\"headerlink\" title=\"承接上文\"></a>承接上文</h2><p>推断因果关系：试问某种处理/因素/变量，对于个体的状态有没有影响（因果作用）？</p>\n<h2 id=\"Rubin-Causal-Model-RCM\"><a href=\"#Rubin-Causal-Model-RCM\" class=\"headerlink\" title=\"Rubin Causal Model (RCM)\"></a>Rubin Causal Model (RCM)</h2><ul>\n<li>设<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.357ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.285ex\" height=\"1.902ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 1010 840.8\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(716,-150) scale(0.707)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g></g></g></svg></mjx-container>表示<strong>个体<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"0.781ex\" height=\"1.52ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -661 345 672\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g></g></svg></mjx-container></strong>接受处理与否（处理取1，对照取0）；<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.357ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.054ex\" height=\"1.902ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 908 840.8\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(614,-150) scale(0.707)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g></g></g></svg></mjx-container>表示个体<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"0.781ex\" height=\"1.52ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -661 345 672\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g></g></svg></mjx-container>的<strong>结果变量</strong>。另外记二元组<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"12.657ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 5594.6 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(389,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(614,-150) scale(0.707)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(1297,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(1686,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2186,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2575,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(3019.6,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(614,-150) scale(0.707)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(3927.6,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(4316.6,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4816.6,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(5205.6,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>表示个体<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"0.781ex\" height=\"1.52ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -661 345 672\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g></g></svg></mjx-container>接受处理或对照的潜在结果(potential outcome)。那么<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"12.657ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 5594.3 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(614,-150) scale(0.707)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(908,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(1297,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1797,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2408.2,0)\"><path data-c=\"2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(3408.4,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(614,-150) scale(0.707)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(4316.3,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(4705.3,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(5205.3,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>表示个体<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"0.781ex\" height=\"1.52ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -661 345 672\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g></g></svg></mjx-container>接受处理的<strong>个体因果作用</strong>。</li>\n<li><p>然而问题在于，每个个体要么接受处理，要么作为对照，因此在一次观测中<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"12.657ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 5594.6 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(389,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(614,-150) scale(0.707)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(1297,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(1686,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2186,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2575,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(3019.6,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(614,-150) scale(0.707)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(3927.6,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(4316.6,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4816.6,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(5205.6,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>必然缺失一半，因此个体的因果作用是不可识别的（注意，这里不允许前一个时刻对照、后一个时刻处理）。从概率的角度看，<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"0.781ex\" height=\"1.52ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -661 345 672\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g></g></svg></mjx-container>可以看成样本空间<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.633ex\" height=\"1.593ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -704 722 704\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"3A9\" d=\"M55 454Q55 503 75 546T127 617T197 665T272 695T337 704H352Q396 704 404 703Q527 687 596 615T666 454Q666 392 635 330T559 200T499 83V80H543Q589 81 600 83T617 93Q622 102 629 135T636 172L637 177H677V175L660 89Q645 3 644 2V0H552H488Q461 0 456 3T451 20Q451 89 499 235T548 455Q548 512 530 555T483 622T424 656T361 668Q332 668 303 658T243 626T193 560T174 456Q174 380 222 233T270 20Q270 7 263 0H77V2Q76 3 61 89L44 175V177H84L85 172Q85 171 88 155T96 119T104 93Q109 86 120 84T178 80H222V83Q206 132 162 199T87 329T55 454Z\"></path></g></g></g></svg></mjx-container>中的样本点<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.407ex\" height=\"1.027ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -443 622 454\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D714\" d=\"M495 384Q495 406 514 424T555 443Q574 443 589 425T604 364Q604 334 592 278T555 155T483 38T377 -11Q297 -11 267 66Q266 68 260 61Q201 -11 125 -11Q15 -11 15 139Q15 230 56 325T123 434Q135 441 147 436Q160 429 160 418Q160 406 140 379T94 306T62 208Q61 202 61 187Q61 124 85 100T143 76Q201 76 245 129L253 137V156Q258 297 317 297Q348 297 348 261Q348 243 338 213T318 158L308 135Q309 133 310 129T318 115T334 97T358 83T393 76Q456 76 501 148T546 274Q546 305 533 325T508 357T495 384Z\"></path></g></g></g></svg></mjx-container>。但是在<strong><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container></strong>做随机化的前提下，我们可以识别总体的平均因果作用(Average Casual Effect, ACE):</p>\n<script type=\"math/tex; mode=display\">\nACE(Z\\to Y)=E(Y_i(1)-Y_i(0)).</script><p>这是因为</p>\n<script type=\"math/tex; mode=display\">\n\\begin{aligned}\nACE(Z\\to Y)&=E(Y_i(1))-E(Y_i(0)) &\\#\\text{对单个个体的全体结果变量求期望}\\\\\n&= E(Y_i(1)|Z_i=1)-E(Y_i(0)|Z_i=0) &\\#\\text{随机化，即}Z\\perp(Y(1),Y(0))\\\\\n&= E(Y_i|Z_i=1)-E(Y_i|Z_i=0) &\\#\\text{表明ACE可以由观测数据估计出来}\\\\\n\\end{aligned}</script><p><em>注：这里<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"0.781ex\" height=\"1.52ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -661 345 672\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g></g></svg></mjx-container>是固定的，期望的取法是将<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.357ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.054ex\" height=\"1.902ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 908 840.8\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(614,-150) scale(0.707)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g></g></g></svg></mjx-container>视作随机变量，对<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.357ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.054ex\" height=\"1.902ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 908 840.8\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(614,-150) scale(0.707)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g></g></g></svg></mjx-container>取条件期望</em></p>\n</li>\n<li><p>上述推导表明，<strong>随机化试验</strong>对于平均因果作用的识别起着至关重要的作用。</p>\n</li>\n</ul>\n<h2 id=\"观测性研究：可忽略性、倾向得分与回归分析\"><a href=\"#观测性研究：可忽略性、倾向得分与回归分析\" class=\"headerlink\" title=\"观测性研究：可忽略性、倾向得分与回归分析\"></a>观测性研究：可忽略性、倾向得分与回归分析</h2><ul>\n<li>上一节的结论表明随机化试验对于平均因果作用的识别非常重要。然而在现实中，很多研究都是无法进行随机化试验的的（<strong>对同一个体的随机化</strong>）。在观测性研究中，通常能搜集到以下数据：个体的信息变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>（如年龄、性别）、个体是否接受处理<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>（如是否吃某种新药、是否吸烟等）、个体的结果变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>（如康复情况、肺部清洁程度等）。那么，我们可以用如下条件期望之差去估计<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.145ex\" height=\"1.67ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 2274 738\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(750,0)\"><path data-c=\"1D436\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1510,0)\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g></g></g></svg></mjx-container>吗？<script type=\"math/tex; mode=display\">\nE(Y|Z=1)-E(Y|Z=0)</script></li>\n<li>答案是：<strong>不能</strong>。反面教材：辛普森悖论（<a href=\"https://baike.baidu.com/item/%E8%BE%9B%E6%99%AE%E6%A3%AE%E6%82%96%E8%AE%BA/4475862\">Yule-Simpson Paradox</a>）</li>\n<li>这就引出一个<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.145ex\" height=\"1.67ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 2274 738\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(750,0)\"><path data-c=\"1D436\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1510,0)\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g></g></g></svg></mjx-container>的识别性问题，即通过观测数据我们能否得到ACE的相合估计。实际中，这需要一个不可验证的假定：<strong>可忽略性</strong>。</li>\n</ul>\n<h3 id=\"可忽略性-amp-ACE的识别性\"><a href=\"#可忽略性-amp-ACE的识别性\" class=\"headerlink\" title=\"可忽略性&ACE的识别性\"></a>可忽略性&amp;ACE的识别性</h3><ul>\n<li>可忽略行假定：<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16.654ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 7361.2 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1000.8,0)\"><path data-c=\"22A5\" d=\"M369 652Q369 653 370 655T372 658T375 662T379 665T384 667T391 668Q402 666 409 653V40H708Q723 32 723 20T708 0H71Q70 0 67 2T59 9T55 20T59 31T66 38T71 40H369V652Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2056.6,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2445.6,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3208.6,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(3597.6,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4097.6,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4486.6,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4931.2,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(5694.2,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(6083.2,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6583.2,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6972.2,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>。即上文公式中的“随机化”。</li>\n<li>这是一条不可验证的<strong>假定</strong>，它的存在使得我们可以通过观测数据识别<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.145ex\" height=\"1.67ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 2274 738\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(750,0)\"><path data-c=\"1D436\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1510,0)\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g></g></g></svg></mjx-container>。然而，在观测性研究中，个体<strong>选择处理与否</strong>（<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>）与其<strong>个体属性</strong>可能相关（注意，本质上，<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"12.002ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 5304.7 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(389,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1152,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(1541,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2041,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2430,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2874.7,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3637.7,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(4026.7,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4526.7,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4915.7,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>也是个体属性的一部分！），上面的假定可能被破坏。但通常的方法是，收集充分多的个体信息<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>，使得如下的<strong>强可忽略性假定</strong>成立：<script type=\"math/tex; mode=display\">\nZ\\perp(Y(1),Y(0))\\perp X</script>可以证明，此时的<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.145ex\" height=\"1.67ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 2274 738\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(750,0)\"><path data-c=\"1D436\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1510,0)\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g></g></g></svg></mjx-container>是可以识别的，因为<script type=\"math/tex; mode=display\">\n\\begin{aligned}\nACE &= E(Y(1))-E(Y(0)) &\\#\\text{对全体个体的全体结果变量求期望}\\\\\n&= E[E(Y(1)|X)] - E[E(Y(0)|X)] &\\#\\text{全期望公式} \\\\\n&= E[E(Y(1)|X,Z=1)] - E[E(Y(0)|X,Z=0)] \\\\ \n&= E[E(Y|X,Z=1)] - E[E(Y|X,Z=0)] \\\\ \n\\end{aligned}</script></li>\n<li>在上述推导中，通过全期望公式引入个体信息变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>的权重，解决了辛普森悖论的问题。接下来的问题是，如何通过上述条件期望计算<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.145ex\" height=\"1.67ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 2274 738\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(750,0)\"><path data-c=\"1D436\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1510,0)\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g></g></g></svg></mjx-container>。目前有三种方法：<blockquote>\n<p>倾向得分（propensity score）<br>线性回归（linear regression）<br>Heckman Selection Model（又称Tobit Model）</p>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h2><ol>\n<li><a href=\"https://www.math.pku.edu.cn/teachers/yaoy/math112230/lecture10_DingP_causal091101.pdf\">丁鹏.因果推断简介.PKU-MATH-00112230.2019</a></li>\n</ol>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: document.title+document.date,\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","site":{"data":{}},"length":2007,"excerpt":"<p>因果推断的常用方法。</p>","more":"<h2 id=\"承接上文\"><a href=\"#承接上文\" class=\"headerlink\" title=\"承接上文\"></a>承接上文</h2><p>推断因果关系：试问某种处理/因素/变量，对于个体的状态有没有影响（因果作用）？</p>\n<h2 id=\"Rubin-Causal-Model-RCM\"><a href=\"#Rubin-Causal-Model-RCM\" class=\"headerlink\" title=\"Rubin Causal Model (RCM)\"></a>Rubin Causal Model (RCM)</h2><ul>\n<li>设<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.357ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.285ex\" height=\"1.902ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 1010 840.8\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(716,-150) scale(0.707)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g></g></g></svg></mjx-container>表示<strong>个体<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"0.781ex\" height=\"1.52ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -661 345 672\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g></g></svg></mjx-container></strong>接受处理与否（处理取1，对照取0）；<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.357ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.054ex\" height=\"1.902ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 908 840.8\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(614,-150) scale(0.707)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g></g></g></svg></mjx-container>表示个体<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"0.781ex\" height=\"1.52ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -661 345 672\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g></g></svg></mjx-container>的<strong>结果变量</strong>。另外记二元组<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"12.657ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 5594.6 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(389,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(614,-150) scale(0.707)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(1297,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(1686,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2186,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2575,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(3019.6,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(614,-150) scale(0.707)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(3927.6,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(4316.6,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4816.6,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(5205.6,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>表示个体<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"0.781ex\" height=\"1.52ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -661 345 672\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g></g></svg></mjx-container>接受处理或对照的潜在结果(potential outcome)。那么<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"12.657ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 5594.3 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(614,-150) scale(0.707)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(908,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(1297,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1797,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2408.2,0)\"><path data-c=\"2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(3408.4,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(614,-150) scale(0.707)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(4316.3,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(4705.3,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(5205.3,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>表示个体<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"0.781ex\" height=\"1.52ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -661 345 672\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g></g></svg></mjx-container>接受处理的<strong>个体因果作用</strong>。</li>\n<li><p>然而问题在于，每个个体要么接受处理，要么作为对照，因此在一次观测中<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"12.657ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 5594.6 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(389,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(614,-150) scale(0.707)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(1297,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(1686,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2186,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2575,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(3019.6,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(614,-150) scale(0.707)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(3927.6,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(4316.6,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4816.6,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(5205.6,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>必然缺失一半，因此个体的因果作用是不可识别的（注意，这里不允许前一个时刻对照、后一个时刻处理）。从概率的角度看，<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"0.781ex\" height=\"1.52ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -661 345 672\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g></g></svg></mjx-container>可以看成样本空间<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.633ex\" height=\"1.593ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -704 722 704\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"3A9\" d=\"M55 454Q55 503 75 546T127 617T197 665T272 695T337 704H352Q396 704 404 703Q527 687 596 615T666 454Q666 392 635 330T559 200T499 83V80H543Q589 81 600 83T617 93Q622 102 629 135T636 172L637 177H677V175L660 89Q645 3 644 2V0H552H488Q461 0 456 3T451 20Q451 89 499 235T548 455Q548 512 530 555T483 622T424 656T361 668Q332 668 303 658T243 626T193 560T174 456Q174 380 222 233T270 20Q270 7 263 0H77V2Q76 3 61 89L44 175V177H84L85 172Q85 171 88 155T96 119T104 93Q109 86 120 84T178 80H222V83Q206 132 162 199T87 329T55 454Z\"></path></g></g></g></svg></mjx-container>中的样本点<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.407ex\" height=\"1.027ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -443 622 454\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D714\" d=\"M495 384Q495 406 514 424T555 443Q574 443 589 425T604 364Q604 334 592 278T555 155T483 38T377 -11Q297 -11 267 66Q266 68 260 61Q201 -11 125 -11Q15 -11 15 139Q15 230 56 325T123 434Q135 441 147 436Q160 429 160 418Q160 406 140 379T94 306T62 208Q61 202 61 187Q61 124 85 100T143 76Q201 76 245 129L253 137V156Q258 297 317 297Q348 297 348 261Q348 243 338 213T318 158L308 135Q309 133 310 129T318 115T334 97T358 83T393 76Q456 76 501 148T546 274Q546 305 533 325T508 357T495 384Z\"></path></g></g></g></svg></mjx-container>。但是在<strong><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container></strong>做随机化的前提下，我们可以识别总体的平均因果作用(Average Casual Effect, ACE):</p>\n<script type=\"math/tex; mode=display\">\nACE(Z\\to Y)=E(Y_i(1)-Y_i(0)).</script><p>这是因为</p>\n<script type=\"math/tex; mode=display\">\n\\begin{aligned}\nACE(Z\\to Y)&=E(Y_i(1))-E(Y_i(0)) &\\#\\text{对单个个体的全体结果变量求期望}\\\\\n&= E(Y_i(1)|Z_i=1)-E(Y_i(0)|Z_i=0) &\\#\\text{随机化，即}Z\\perp(Y(1),Y(0))\\\\\n&= E(Y_i|Z_i=1)-E(Y_i|Z_i=0) &\\#\\text{表明ACE可以由观测数据估计出来}\\\\\n\\end{aligned}</script><p><em>注：这里<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"0.781ex\" height=\"1.52ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -661 345 672\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g></g></svg></mjx-container>是固定的，期望的取法是将<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.357ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.054ex\" height=\"1.902ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 908 840.8\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(614,-150) scale(0.707)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g></g></g></svg></mjx-container>视作随机变量，对<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.357ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.054ex\" height=\"1.902ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 908 840.8\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(614,-150) scale(0.707)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g></g></g></svg></mjx-container>取条件期望</em></p>\n</li>\n<li><p>上述推导表明，<strong>随机化试验</strong>对于平均因果作用的识别起着至关重要的作用。</p>\n</li>\n</ul>\n<h2 id=\"观测性研究：可忽略性、倾向得分与回归分析\"><a href=\"#观测性研究：可忽略性、倾向得分与回归分析\" class=\"headerlink\" title=\"观测性研究：可忽略性、倾向得分与回归分析\"></a>观测性研究：可忽略性、倾向得分与回归分析</h2><ul>\n<li>上一节的结论表明随机化试验对于平均因果作用的识别非常重要。然而在现实中，很多研究都是无法进行随机化试验的的（<strong>对同一个体的随机化</strong>）。在观测性研究中，通常能搜集到以下数据：个体的信息变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>（如年龄、性别）、个体是否接受处理<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>（如是否吃某种新药、是否吸烟等）、个体的结果变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>（如康复情况、肺部清洁程度等）。那么，我们可以用如下条件期望之差去估计<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.145ex\" height=\"1.67ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 2274 738\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(750,0)\"><path data-c=\"1D436\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1510,0)\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g></g></g></svg></mjx-container>吗？<script type=\"math/tex; mode=display\">\nE(Y|Z=1)-E(Y|Z=0)</script></li>\n<li>答案是：<strong>不能</strong>。反面教材：辛普森悖论（<a href=\"https://baike.baidu.com/item/%E8%BE%9B%E6%99%AE%E6%A3%AE%E6%82%96%E8%AE%BA/4475862\">Yule-Simpson Paradox</a>）</li>\n<li>这就引出一个<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.145ex\" height=\"1.67ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 2274 738\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(750,0)\"><path data-c=\"1D436\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1510,0)\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g></g></g></svg></mjx-container>的识别性问题，即通过观测数据我们能否得到ACE的相合估计。实际中，这需要一个不可验证的假定：<strong>可忽略性</strong>。</li>\n</ul>\n<h3 id=\"可忽略性-amp-ACE的识别性\"><a href=\"#可忽略性-amp-ACE的识别性\" class=\"headerlink\" title=\"可忽略性&ACE的识别性\"></a>可忽略性&amp;ACE的识别性</h3><ul>\n<li>可忽略行假定：<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16.654ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 7361.2 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1000.8,0)\"><path data-c=\"22A5\" d=\"M369 652Q369 653 370 655T372 658T375 662T379 665T384 667T391 668Q402 666 409 653V40H708Q723 32 723 20T708 0H71Q70 0 67 2T59 9T55 20T59 31T66 38T71 40H369V652Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2056.6,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2445.6,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3208.6,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(3597.6,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4097.6,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4486.6,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4931.2,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(5694.2,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(6083.2,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6583.2,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6972.2,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>。即上文公式中的“随机化”。</li>\n<li>这是一条不可验证的<strong>假定</strong>，它的存在使得我们可以通过观测数据识别<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.145ex\" height=\"1.67ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 2274 738\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(750,0)\"><path data-c=\"1D436\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1510,0)\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g></g></g></svg></mjx-container>。然而，在观测性研究中，个体<strong>选择处理与否</strong>（<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>）与其<strong>个体属性</strong>可能相关（注意，本质上，<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"12.002ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 5304.7 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(389,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1152,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(1541,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2041,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2430,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2874.7,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3637.7,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(4026.7,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4526.7,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4915.7,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>也是个体属性的一部分！），上面的假定可能被破坏。但通常的方法是，收集充分多的个体信息<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>，使得如下的<strong>强可忽略性假定</strong>成立：<script type=\"math/tex; mode=display\">\nZ\\perp(Y(1),Y(0))\\perp X</script>可以证明，此时的<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.145ex\" height=\"1.67ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 2274 738\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(750,0)\"><path data-c=\"1D436\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1510,0)\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g></g></g></svg></mjx-container>是可以识别的，因为<script type=\"math/tex; mode=display\">\n\\begin{aligned}\nACE &= E(Y(1))-E(Y(0)) &\\#\\text{对全体个体的全体结果变量求期望}\\\\\n&= E[E(Y(1)|X)] - E[E(Y(0)|X)] &\\#\\text{全期望公式} \\\\\n&= E[E(Y(1)|X,Z=1)] - E[E(Y(0)|X,Z=0)] \\\\ \n&= E[E(Y|X,Z=1)] - E[E(Y|X,Z=0)] \\\\ \n\\end{aligned}</script></li>\n<li>在上述推导中，通过全期望公式引入个体信息变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>的权重，解决了辛普森悖论的问题。接下来的问题是，如何通过上述条件期望计算<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.145ex\" height=\"1.67ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 2274 738\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(750,0)\"><path data-c=\"1D436\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1510,0)\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g></g></g></svg></mjx-container>。目前有三种方法：<blockquote>\n<p>倾向得分（propensity score）<br>线性回归（linear regression）<br>Heckman Selection Model（又称Tobit Model）</p>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h2><ol>\n<li><a href=\"https://www.math.pku.edu.cn/teachers/yaoy/math112230/lecture10_DingP_causal091101.pdf\">丁鹏.因果推断简介.PKU-MATH-00112230.2019</a></li>\n</ol>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: document.title+document.date,\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>"},{"title":"因果推断学习笔记.3","mathjax":true,"codeblock":{"enable":true,"show_result":true},"date":"2022-04-22T02:49:39.000Z","_content":"观测性研究中对平均因果作用（$ACE$）的估计方法：倾向得分（propensity score）、线性回归、Heckman Selection Model。本篇主要介绍倾向得分方法。线性回归和HSM可见文末附参考文献。\n<!--more-->\n## 观测性研究中对ACE的估计方法\n### 倾向得分\n如上篇学习笔记所言，如果个体信息变量足够简单，$X$为二值变量（如性别），则可以按照$X=1$和$X=0$将样本分为两层，在每层分别估计$ACE$后再做加权平均，即可得到全体$ACE$的相合估计。但事实上，$X$的**维数很高且可能有连续分量**，因此很难将样本按$X$分层。即便能分层，也会面临类别不平衡的问题。为此，Rosenbaum and Rubin(1983) 提出了倾向得分的概念。\n\n**定义**：倾向得分的定义为：\n$$\ne(X)=P(Z=1|X)\n$$\n且满足\n1. $X\\perp Z|e(X)$\n2. 如果有强可忽略性假定（即$Z\\perp(Y(1),Y(0))|X$）且$e(X)\\in(0,1)$，则$Z\\perp(Y(1),Y(0))|e(X)$\n\n#### 分层方法\n上述第二条性质表明，如果给定样本信息$X$，处理机制是可忽略的，那么只需要给定一个一维的变量$e(X)$，处理机制也是可以忽略的。这样一来，我们得到了估计ACE的分层（stratify）方法：\n- Step 1: 先拟合一个Logistic/Probit模型（自变量为$X$，因变量为$e(X)$），估计每个个体的倾向得分$\\hat{e}(X)$\n- Step 2: 用估计的倾向得分$\\hat{e}(X)$分层（相当于把倾向得分当作个体信息），在每一层中估计平均因果作用，再加权平均即可。\n\n#### 加权方法\n此外，Hirano, Imbens and Ridder(2003)从经验似然的角度指出了另一种“加权方法”(weighting)，并证明了该方法是半参数有效的估计方法。该方法使用以下统计量作为$ACE$的估计：\n$$\n\\hat{ACE}=\\frac{1}{n}\\sum_{i=1}^{n}\\left[\\frac{Y_i Z_i}{\\hat{e}(X_i)}-\\frac{Y_i(1-Z_i)}{1-\\hat{e}(X_i)}\\right]\n$$\n\n\n## 参考文献\n\n1. [丁鹏.因果推断简介.PKU-MATH-00112230.2019](https://www.math.pku.edu.cn/teachers/yaoy/math112230/lecture10_DingP_causal091101.pdf)\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: document.title+document.date,\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","source":"_posts/2022-04-22-casual-inference-3.md","raw":"---\ntitle: 因果推断学习笔记.3\nmathjax: true\ncodeblock:\n  enable: true\n  show_result: true\ndate: 2022-04-22 10:49:39\ntags: 因果推断\ncategories: 学习笔记\n---\n观测性研究中对平均因果作用（$ACE$）的估计方法：倾向得分（propensity score）、线性回归、Heckman Selection Model。本篇主要介绍倾向得分方法。线性回归和HSM可见文末附参考文献。\n<!--more-->\n## 观测性研究中对ACE的估计方法\n### 倾向得分\n如上篇学习笔记所言，如果个体信息变量足够简单，$X$为二值变量（如性别），则可以按照$X=1$和$X=0$将样本分为两层，在每层分别估计$ACE$后再做加权平均，即可得到全体$ACE$的相合估计。但事实上，$X$的**维数很高且可能有连续分量**，因此很难将样本按$X$分层。即便能分层，也会面临类别不平衡的问题。为此，Rosenbaum and Rubin(1983) 提出了倾向得分的概念。\n\n**定义**：倾向得分的定义为：\n$$\ne(X)=P(Z=1|X)\n$$\n且满足\n1. $X\\perp Z|e(X)$\n2. 如果有强可忽略性假定（即$Z\\perp(Y(1),Y(0))|X$）且$e(X)\\in(0,1)$，则$Z\\perp(Y(1),Y(0))|e(X)$\n\n#### 分层方法\n上述第二条性质表明，如果给定样本信息$X$，处理机制是可忽略的，那么只需要给定一个一维的变量$e(X)$，处理机制也是可以忽略的。这样一来，我们得到了估计ACE的分层（stratify）方法：\n- Step 1: 先拟合一个Logistic/Probit模型（自变量为$X$，因变量为$e(X)$），估计每个个体的倾向得分$\\hat{e}(X)$\n- Step 2: 用估计的倾向得分$\\hat{e}(X)$分层（相当于把倾向得分当作个体信息），在每一层中估计平均因果作用，再加权平均即可。\n\n#### 加权方法\n此外，Hirano, Imbens and Ridder(2003)从经验似然的角度指出了另一种“加权方法”(weighting)，并证明了该方法是半参数有效的估计方法。该方法使用以下统计量作为$ACE$的估计：\n$$\n\\hat{ACE}=\\frac{1}{n}\\sum_{i=1}^{n}\\left[\\frac{Y_i Z_i}{\\hat{e}(X_i)}-\\frac{Y_i(1-Z_i)}{1-\\hat{e}(X_i)}\\right]\n$$\n\n\n## 参考文献\n\n1. [丁鹏.因果推断简介.PKU-MATH-00112230.2019](https://www.math.pku.edu.cn/teachers/yaoy/math112230/lecture10_DingP_causal091101.pdf)\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: document.title+document.date,\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","slug":"2022-04-22-casual-inference-3","published":1,"updated":"2022-04-28T01:56:59.664Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl2tv7gli002z8cv9hn2k8w4r","content":"<p>观测性研究中对平均因果作用（<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.145ex\" height=\"1.67ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 2274 738\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(750,0)\"><path data-c=\"1D436\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1510,0)\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g></g></g></svg></mjx-container>）的估计方法：倾向得分（propensity score）、线性回归、Heckman Selection Model。本篇主要介绍倾向得分方法。线性回归和HSM可见文末附参考文献。<br><span id=\"more\"></span></p>\n<h2 id=\"观测性研究中对ACE的估计方法\"><a href=\"#观测性研究中对ACE的估计方法\" class=\"headerlink\" title=\"观测性研究中对ACE的估计方法\"></a>观测性研究中对ACE的估计方法</h2><h3 id=\"倾向得分\"><a href=\"#倾向得分\" class=\"headerlink\" title=\"倾向得分\"></a>倾向得分</h3><p>如上篇学习笔记所言，如果个体信息变量足够简单，<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>为二值变量（如性别），则可以按照<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.186ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.076ex\" height=\"1.731ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 2685.6 765\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1129.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(2185.6,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g></g></g></svg></mjx-container>和<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.186ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.076ex\" height=\"1.731ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 2685.6 765\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1129.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(2185.6,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g></g></g></svg></mjx-container>将样本分为两层，在每层分别估计<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.145ex\" height=\"1.67ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 2274 738\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(750,0)\"><path data-c=\"1D436\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1510,0)\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g></g></g></svg></mjx-container>后再做加权平均，即可得到全体<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.145ex\" height=\"1.67ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 2274 738\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(750,0)\"><path data-c=\"1D436\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1510,0)\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g></g></g></svg></mjx-container>的相合估计。但事实上，<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>的<strong>维数很高且可能有连续分量</strong>，因此很难将样本按<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>分层。即便能分层，也会面临类别不平衡的问题。为此，Rosenbaum and Rubin(1983) 提出了倾向得分的概念。</p>\n<p><strong>定义</strong>：倾向得分的定义为：</p>\n<script type=\"math/tex; mode=display\">\ne(X)=P(Z=1|X)</script><p>且满足</p>\n<ol>\n<li><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"11.951ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 5282.6 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1129.8,0)\"><path data-c=\"22A5\" d=\"M369 652Q369 653 370 655T372 658T375 662T379 665T384 667T391 668Q402 666 409 653V40H708Q723 32 723 20T708 0H71Q70 0 67 2T59 9T55 20T59 31T66 38T71 40H369V652Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2185.6,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2908.6,0) translate(0 -0.5)\"><path data-c=\"7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3186.6,0)\"><path data-c=\"1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3652.6,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4041.6,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4893.6,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container></li>\n<li>如果有强可忽略性假定（即<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"19.211ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 8491.2 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1000.8,0)\"><path data-c=\"22A5\" d=\"M369 652Q369 653 370 655T372 658T375 662T379 665T384 667T391 668Q402 666 409 653V40H708Q723 32 723 20T708 0H71Q70 0 67 2T59 9T55 20T59 31T66 38T71 40H369V652Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2056.6,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2445.6,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3208.6,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(3597.6,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4097.6,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4486.6,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4931.2,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(5694.2,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(6083.2,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6583.2,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6972.2,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(7361.2,0) translate(0 -0.5)\"><path data-c=\"7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(7639.2,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>）且<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"12.537ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 5541.2 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(466,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(855,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1707,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2373.8,0)\"><path data-c=\"2208\" d=\"M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3318.6,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(3707.6,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4207.6,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(4652.2,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(5152.2,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>，则<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"22.025ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 9735.2 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1000.8,0)\"><path data-c=\"22A5\" d=\"M369 652Q369 653 370 655T372 658T375 662T379 665T384 667T391 668Q402 666 409 653V40H708Q723 32 723 20T708 0H71Q70 0 67 2T59 9T55 20T59 31T66 38T71 40H369V652Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2056.6,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2445.6,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3208.6,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(3597.6,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4097.6,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4486.6,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4931.2,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(5694.2,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(6083.2,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6583.2,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6972.2,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(7361.2,0) translate(0 -0.5)\"><path data-c=\"7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(7639.2,0)\"><path data-c=\"1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(8105.2,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(8494.2,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(9346.2,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container></li>\n</ol>\n<h4 id=\"分层方法\"><a href=\"#分层方法\" class=\"headerlink\" title=\"分层方法\"></a>分层方法</h4><p>上述第二条性质表明，如果给定样本信息<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>，处理机制是可忽略的，那么只需要给定一个一维的变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.742ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 2096 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(466,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(855,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1707,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>，处理机制也是可以忽略的。这样一来，我们得到了估计ACE的分层（stratify）方法：</p>\n<ul>\n<li>Step 1: 先拟合一个Logistic/Probit模型（自变量为<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>，因变量为<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.742ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 2096 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(466,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(855,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1707,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>），估计每个个体的倾向得分<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.742ex\" height=\"2.398ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -810 2096 1060\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mover\"><g data-mml-node=\"mi\"><path data-c=\"1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(288.6,16) translate(-250 0)\"><path data-c=\"5E\" d=\"M112 560L249 694L257 686Q387 562 387 560L361 531Q359 532 303 581L250 627L195 580Q182 569 169 557T148 538L140 532Q138 530 125 546L112 560Z\"></path></g></g></g><g data-mml-node=\"mo\" transform=\"translate(466,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(855,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1707,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container></li>\n<li>Step 2: 用估计的倾向得分<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.742ex\" height=\"2.398ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -810 2096 1060\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mover\"><g data-mml-node=\"mi\"><path data-c=\"1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(288.6,16) translate(-250 0)\"><path data-c=\"5E\" d=\"M112 560L249 694L257 686Q387 562 387 560L361 531Q359 532 303 581L250 627L195 580Q182 569 169 557T148 538L140 532Q138 530 125 546L112 560Z\"></path></g></g></g><g data-mml-node=\"mo\" transform=\"translate(466,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(855,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1707,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>分层（相当于把倾向得分当作个体信息），在每一层中估计平均因果作用，再加权平均即可。</li>\n</ul>\n<h4 id=\"加权方法\"><a href=\"#加权方法\" class=\"headerlink\" title=\"加权方法\"></a>加权方法</h4><p>此外，Hirano, Imbens and Ridder(2003)从经验似然的角度指出了另一种“加权方法”(weighting)，并证明了该方法是半参数有效的估计方法。该方法使用以下统计量作为<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.145ex\" height=\"1.67ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 2274 738\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(750,0)\"><path data-c=\"1D436\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1510,0)\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g></g></g></svg></mjx-container>的估计：</p>\n<script type=\"math/tex; mode=display\">\n\\hat{ACE}=\\frac{1}{n}\\sum_{i=1}^{n}\\left[\\frac{Y_i Z_i}{\\hat{e}(X_i)}-\\frac{Y_i(1-Z_i)}{1-\\hat{e}(X_i)}\\right]</script><h2 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h2><ol>\n<li><a href=\"https://www.math.pku.edu.cn/teachers/yaoy/math112230/lecture10_DingP_causal091101.pdf\">丁鹏.因果推断简介.PKU-MATH-00112230.2019</a></li>\n</ol>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: document.title+document.date,\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","site":{"data":{}},"length":1251,"excerpt":"<p>观测性研究中对平均因果作用（<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.145ex\" height=\"1.67ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 2274 738\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(750,0)\"><path data-c=\"1D436\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1510,0)\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g></g></g></svg></mjx-container>）的估计方法：倾向得分（propensity score）、线性回归、Heckman Selection Model。本篇主要介绍倾向得分方法。线性回归和HSM可见文末附参考文献。<br>","more":"</p>\n<h2 id=\"观测性研究中对ACE的估计方法\"><a href=\"#观测性研究中对ACE的估计方法\" class=\"headerlink\" title=\"观测性研究中对ACE的估计方法\"></a>观测性研究中对ACE的估计方法</h2><h3 id=\"倾向得分\"><a href=\"#倾向得分\" class=\"headerlink\" title=\"倾向得分\"></a>倾向得分</h3><p>如上篇学习笔记所言，如果个体信息变量足够简单，<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>为二值变量（如性别），则可以按照<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.186ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.076ex\" height=\"1.731ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 2685.6 765\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1129.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(2185.6,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g></g></g></svg></mjx-container>和<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.186ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.076ex\" height=\"1.731ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 2685.6 765\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1129.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(2185.6,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g></g></g></svg></mjx-container>将样本分为两层，在每层分别估计<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.145ex\" height=\"1.67ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 2274 738\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(750,0)\"><path data-c=\"1D436\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1510,0)\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g></g></g></svg></mjx-container>后再做加权平均，即可得到全体<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.145ex\" height=\"1.67ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 2274 738\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(750,0)\"><path data-c=\"1D436\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1510,0)\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g></g></g></svg></mjx-container>的相合估计。但事实上，<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>的<strong>维数很高且可能有连续分量</strong>，因此很难将样本按<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>分层。即便能分层，也会面临类别不平衡的问题。为此，Rosenbaum and Rubin(1983) 提出了倾向得分的概念。</p>\n<p><strong>定义</strong>：倾向得分的定义为：</p>\n<script type=\"math/tex; mode=display\">\ne(X)=P(Z=1|X)</script><p>且满足</p>\n<ol>\n<li><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"11.951ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 5282.6 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1129.8,0)\"><path data-c=\"22A5\" d=\"M369 652Q369 653 370 655T372 658T375 662T379 665T384 667T391 668Q402 666 409 653V40H708Q723 32 723 20T708 0H71Q70 0 67 2T59 9T55 20T59 31T66 38T71 40H369V652Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2185.6,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2908.6,0) translate(0 -0.5)\"><path data-c=\"7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3186.6,0)\"><path data-c=\"1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3652.6,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4041.6,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4893.6,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container></li>\n<li>如果有强可忽略性假定（即<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"19.211ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 8491.2 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1000.8,0)\"><path data-c=\"22A5\" d=\"M369 652Q369 653 370 655T372 658T375 662T379 665T384 667T391 668Q402 666 409 653V40H708Q723 32 723 20T708 0H71Q70 0 67 2T59 9T55 20T59 31T66 38T71 40H369V652Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2056.6,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2445.6,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3208.6,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(3597.6,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4097.6,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4486.6,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4931.2,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(5694.2,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(6083.2,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6583.2,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6972.2,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(7361.2,0) translate(0 -0.5)\"><path data-c=\"7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(7639.2,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>）且<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"12.537ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 5541.2 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(466,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(855,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1707,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2373.8,0)\"><path data-c=\"2208\" d=\"M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3318.6,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(3707.6,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4207.6,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(4652.2,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(5152.2,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>，则<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"22.025ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 9735.2 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1000.8,0)\"><path data-c=\"22A5\" d=\"M369 652Q369 653 370 655T372 658T375 662T379 665T384 667T391 668Q402 666 409 653V40H708Q723 32 723 20T708 0H71Q70 0 67 2T59 9T55 20T59 31T66 38T71 40H369V652Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2056.6,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2445.6,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3208.6,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(3597.6,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4097.6,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4486.6,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4931.2,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(5694.2,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(6083.2,0)\"><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6583.2,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6972.2,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(7361.2,0) translate(0 -0.5)\"><path data-c=\"7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(7639.2,0)\"><path data-c=\"1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(8105.2,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(8494.2,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(9346.2,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container></li>\n</ol>\n<h4 id=\"分层方法\"><a href=\"#分层方法\" class=\"headerlink\" title=\"分层方法\"></a>分层方法</h4><p>上述第二条性质表明，如果给定样本信息<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>，处理机制是可忽略的，那么只需要给定一个一维的变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.742ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 2096 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(466,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(855,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1707,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>，处理机制也是可以忽略的。这样一来，我们得到了估计ACE的分层（stratify）方法：</p>\n<ul>\n<li>Step 1: 先拟合一个Logistic/Probit模型（自变量为<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>，因变量为<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.742ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 2096 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(466,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(855,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1707,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>），估计每个个体的倾向得分<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.742ex\" height=\"2.398ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -810 2096 1060\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mover\"><g data-mml-node=\"mi\"><path data-c=\"1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(288.6,16) translate(-250 0)\"><path data-c=\"5E\" d=\"M112 560L249 694L257 686Q387 562 387 560L361 531Q359 532 303 581L250 627L195 580Q182 569 169 557T148 538L140 532Q138 530 125 546L112 560Z\"></path></g></g></g><g data-mml-node=\"mo\" transform=\"translate(466,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(855,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1707,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container></li>\n<li>Step 2: 用估计的倾向得分<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.742ex\" height=\"2.398ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -810 2096 1060\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mover\"><g data-mml-node=\"mi\"><path data-c=\"1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(288.6,16) translate(-250 0)\"><path data-c=\"5E\" d=\"M112 560L249 694L257 686Q387 562 387 560L361 531Q359 532 303 581L250 627L195 580Q182 569 169 557T148 538L140 532Q138 530 125 546L112 560Z\"></path></g></g></g><g data-mml-node=\"mo\" transform=\"translate(466,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(855,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1707,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>分层（相当于把倾向得分当作个体信息），在每一层中估计平均因果作用，再加权平均即可。</li>\n</ul>\n<h4 id=\"加权方法\"><a href=\"#加权方法\" class=\"headerlink\" title=\"加权方法\"></a>加权方法</h4><p>此外，Hirano, Imbens and Ridder(2003)从经验似然的角度指出了另一种“加权方法”(weighting)，并证明了该方法是半参数有效的估计方法。该方法使用以下统计量作为<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.145ex\" height=\"1.67ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 2274 738\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(750,0)\"><path data-c=\"1D436\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1510,0)\"><path data-c=\"1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path></g></g></g></svg></mjx-container>的估计：</p>\n<script type=\"math/tex; mode=display\">\n\\hat{ACE}=\\frac{1}{n}\\sum_{i=1}^{n}\\left[\\frac{Y_i Z_i}{\\hat{e}(X_i)}-\\frac{Y_i(1-Z_i)}{1-\\hat{e}(X_i)}\\right]</script><h2 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h2><ol>\n<li><a href=\"https://www.math.pku.edu.cn/teachers/yaoy/math112230/lecture10_DingP_causal091101.pdf\">丁鹏.因果推断简介.PKU-MATH-00112230.2019</a></li>\n</ol>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: document.title+document.date,\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>"},{"title":"因果推断学习笔记.4","mathjax":true,"codeblock":{"enable":true,"show_result":true},"date":"2022-04-27T14:41:22.000Z","_content":"本篇主要记录 A Survey of Learning Causality with Data: Problems and Methods 的调研记录。这是一篇机器学习研究者视角下的因果推断研究综述。\n\n<!--more-->\n\n## 因果推断的两大研究方向\n1. 因果推理（causal inference）：研究指定变量对另一变量的影响程度=已知因果关系，求关系强度\n2. 因果发现（causal discovery）：研究哪些变量会对指定变量产生影响=不知因果关系，求因果关系\n\n## 用于因果推断的数据形式\n- 干预型数据：至少一个变量是通过（人为）干预设定的\n- **观测型数据**：任何变量都是依靠因果关系中的“因”确定的\n\n例如，为了调查顾客对餐厅满意度的影响因素，可以使用现有的点评记录数据（观测型数据）或通过进行某些处理/干预来收集不同条件下的点评记录数据（干预型）。一般观测型数据比干预型数据更加容易获得。\n\n### 用于因果推理的数据\n共有3种形式：\n1. 标准数据集：$(\\mathbf{X},\\mathbf{t},\\mathbf{y})$\n   - $\\mathbf{X}$: 样本特征矩阵\n   - $\\mathbf{t}$: 样本处理向量。第$i$个分量标记样本$i$被处理（值为1）或未处理（值为0）\n   - $\\mathbf{y}$: 样本结果向量。第$i$个分量标记样本处理/未处理后的状态\n2. 标记不同数据单元间相互连结关系的辅助信息（用矩阵$\\mathbf{A}$表示）\n   - 例如时间序列、时序点过程（由不同时间点的随机事件组成的随机过程）、属性网络\n   - 不直接显示目标变量间的因果关系，但不同数据单元间的联系间接蕴含了因果关系\n3. 包含未观测的干扰因素（unobserved confounders）的数据\n   - 辅助变量（instrumental variable）\n   - 中介变量（mediator）\n   - running variable （暂不理解，待补充）\n\n### 用于因果发现的数据\n1. 多元数据$\\mathbf{X}$+标准因果图$G$，其中$G$用于因果发现模型的评测\n   - $G$源于先验知识，有可能是不完善(incomplete)的。\n2. 多元时间序列数据+标准因果图$G$\n\n## 因果推断的基本框架\n- 结构因果模型（Structural Causal Model, SCM）\n- 潜在结果框架（Potential Outcome Framework）\n\n第一次读因果推断的综述论文，比较懵。\n\n接下来以阅读Judea Pearl的Causal Inference in Statistics: A Primer为主。\n\n## 参考文献\n1. [Guo, Ruocheng & Cheng, Lu & Li, Jundong & Hahn, Paul & Liu, Huan. (2018). A Survey of Learning Causality with Data: Problems and Methods.](https://rguo12.github.io/causal_survey.pdf)\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: document.title+document.date,\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","source":"_posts/2022-04-27-casual-inference-4.md","raw":"---\ntitle: 因果推断学习笔记.4\nmathjax: true\ncodeblock:\n  enable: true\n  show_result: true\ndate: 2022-04-27 22:41:22\ntags: 因果推断\ncategories: 学习笔记\n---\n本篇主要记录 A Survey of Learning Causality with Data: Problems and Methods 的调研记录。这是一篇机器学习研究者视角下的因果推断研究综述。\n\n<!--more-->\n\n## 因果推断的两大研究方向\n1. 因果推理（causal inference）：研究指定变量对另一变量的影响程度=已知因果关系，求关系强度\n2. 因果发现（causal discovery）：研究哪些变量会对指定变量产生影响=不知因果关系，求因果关系\n\n## 用于因果推断的数据形式\n- 干预型数据：至少一个变量是通过（人为）干预设定的\n- **观测型数据**：任何变量都是依靠因果关系中的“因”确定的\n\n例如，为了调查顾客对餐厅满意度的影响因素，可以使用现有的点评记录数据（观测型数据）或通过进行某些处理/干预来收集不同条件下的点评记录数据（干预型）。一般观测型数据比干预型数据更加容易获得。\n\n### 用于因果推理的数据\n共有3种形式：\n1. 标准数据集：$(\\mathbf{X},\\mathbf{t},\\mathbf{y})$\n   - $\\mathbf{X}$: 样本特征矩阵\n   - $\\mathbf{t}$: 样本处理向量。第$i$个分量标记样本$i$被处理（值为1）或未处理（值为0）\n   - $\\mathbf{y}$: 样本结果向量。第$i$个分量标记样本处理/未处理后的状态\n2. 标记不同数据单元间相互连结关系的辅助信息（用矩阵$\\mathbf{A}$表示）\n   - 例如时间序列、时序点过程（由不同时间点的随机事件组成的随机过程）、属性网络\n   - 不直接显示目标变量间的因果关系，但不同数据单元间的联系间接蕴含了因果关系\n3. 包含未观测的干扰因素（unobserved confounders）的数据\n   - 辅助变量（instrumental variable）\n   - 中介变量（mediator）\n   - running variable （暂不理解，待补充）\n\n### 用于因果发现的数据\n1. 多元数据$\\mathbf{X}$+标准因果图$G$，其中$G$用于因果发现模型的评测\n   - $G$源于先验知识，有可能是不完善(incomplete)的。\n2. 多元时间序列数据+标准因果图$G$\n\n## 因果推断的基本框架\n- 结构因果模型（Structural Causal Model, SCM）\n- 潜在结果框架（Potential Outcome Framework）\n\n第一次读因果推断的综述论文，比较懵。\n\n接下来以阅读Judea Pearl的Causal Inference in Statistics: A Primer为主。\n\n## 参考文献\n1. [Guo, Ruocheng & Cheng, Lu & Li, Jundong & Hahn, Paul & Liu, Huan. (2018). A Survey of Learning Causality with Data: Problems and Methods.](https://rguo12.github.io/causal_survey.pdf)\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: document.title+document.date,\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","slug":"2022-04-27-casual-inference-4","published":1,"updated":"2022-05-05T08:46:53.842Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl2tv7glj00308cv97rt2ao5s","content":"<p>本篇主要记录 A Survey of Learning Causality with Data: Problems and Methods 的调研记录。这是一篇机器学习研究者视角下的因果推断研究综述。</p>\n<span id=\"more\"></span>\n<h2 id=\"因果推断的两大研究方向\"><a href=\"#因果推断的两大研究方向\" class=\"headerlink\" title=\"因果推断的两大研究方向\"></a>因果推断的两大研究方向</h2><ol>\n<li>因果推理（causal inference）：研究指定变量对另一变量的影响程度=已知因果关系，求关系强度</li>\n<li>因果发现（causal discovery）：研究哪些变量会对指定变量产生影响=不知因果关系，求因果关系</li>\n</ol>\n<h2 id=\"用于因果推断的数据形式\"><a href=\"#用于因果推断的数据形式\" class=\"headerlink\" title=\"用于因果推断的数据形式\"></a>用于因果推断的数据形式</h2><ul>\n<li>干预型数据：至少一个变量是通过（人为）干预设定的</li>\n<li><strong>观测型数据</strong>：任何变量都是依靠因果关系中的“因”确定的</li>\n</ul>\n<p>例如，为了调查顾客对餐厅满意度的影响因素，可以使用现有的点评记录数据（观测型数据）或通过进行某些处理/干预来收集不同条件下的点评记录数据（干预型）。一般观测型数据比干预型数据更加容易获得。</p>\n<h3 id=\"用于因果推理的数据\"><a href=\"#用于因果推理的数据\" class=\"headerlink\" title=\"用于因果推理的数据\"></a>用于因果推理的数据</h3><p>共有3种形式：</p>\n<ol>\n<li>标准数据集：<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"8.123ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 3590.3 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\" transform=\"translate(389,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D417\" d=\"M327 0Q306 3 174 3Q52 3 43 0H33V62H98L162 63L360 333L157 624H48V686H59Q80 683 217 683Q368 683 395 686H408V624H335L393 540L452 458L573 623Q573 624 528 624H483V686H494Q515 683 646 683Q769 683 778 686H787V624H658L575 511Q493 398 493 397L508 376Q522 356 553 312T611 229L727 62H835V0H824Q803 3 667 3Q516 3 489 0H476V62H513L549 63L401 274L247 63Q247 62 292 62H338V0H327Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(1258,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\" transform=\"translate(1702.7,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D42D\" d=\"M272 49Q320 49 320 136V145V177H382V143Q382 106 380 99Q374 62 349 36T285 -2L272 -5H247Q173 -5 134 27Q109 46 102 74T94 160Q94 171 94 199T95 245V382H21V433H25Q58 433 90 456Q121 479 140 523T162 621V635H224V444H363V382H224V239V207V149Q224 98 228 81T249 55Q261 49 272 49Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(2149.7,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\" transform=\"translate(2594.3,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D432\" d=\"M84 -102Q84 -110 87 -119T102 -138T133 -149Q148 -148 162 -143T186 -131T206 -114T222 -95T234 -76T243 -59T249 -45T252 -37L269 0L96 382H26V444H34Q49 441 146 441Q252 441 270 444H279V382H255Q232 382 232 380L337 151L442 382H394V444H401Q413 441 495 441Q568 441 574 444H580V382H510L406 152Q298 -84 297 -87Q269 -139 225 -169T131 -200Q85 -200 54 -172T23 -100Q23 -64 44 -50T87 -35Q111 -35 130 -50T152 -92V-100H84V-102Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(3201.3,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container><ul>\n<li><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.966ex\" height=\"1.552ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -686 869 686\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"1D417\" d=\"M327 0Q306 3 174 3Q52 3 43 0H33V62H98L162 63L360 333L157 624H48V686H59Q80 683 217 683Q368 683 395 686H408V624H335L393 540L452 458L573 623Q573 624 528 624H483V686H494Q515 683 646 683Q769 683 778 686H787V624H658L575 511Q493 398 493 397L508 376Q522 356 553 312T611 229L727 62H835V0H824Q803 3 667 3Q516 3 489 0H476V62H513L549 63L401 274L247 63Q247 62 292 62H338V0H327Z\"></path></g></g></g></g></svg></mjx-container>: 样本特征矩阵</li>\n<li><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.011ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.011ex\" height=\"1.448ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -635 447 640\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"1D42D\" d=\"M272 49Q320 49 320 136V145V177H382V143Q382 106 380 99Q374 62 349 36T285 -2L272 -5H247Q173 -5 134 27Q109 46 102 74T94 160Q94 171 94 199T95 245V382H21V433H25Q58 433 90 456Q121 479 140 523T162 621V635H224V444H363V382H224V239V207V149Q224 98 228 81T249 55Q261 49 272 49Z\"></path></g></g></g></g></svg></mjx-container>: 样本处理向量。第<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"0.781ex\" height=\"1.52ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -661 345 672\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g></g></svg></mjx-container>个分量标记样本<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"0.781ex\" height=\"1.52ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -661 345 672\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g></g></svg></mjx-container>被处理（值为1）或未处理（值为0）</li>\n<li><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.452ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.373ex\" height=\"1.457ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -444 607 644\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"1D432\" d=\"M84 -102Q84 -110 87 -119T102 -138T133 -149Q148 -148 162 -143T186 -131T206 -114T222 -95T234 -76T243 -59T249 -45T252 -37L269 0L96 382H26V444H34Q49 441 146 441Q252 441 270 444H279V382H255Q232 382 232 380L337 151L442 382H394V444H401Q413 441 495 441Q568 441 574 444H580V382H510L406 152Q298 -84 297 -87Q269 -139 225 -169T131 -200Q85 -200 54 -172T23 -100Q23 -64 44 -50T87 -35Q111 -35 130 -50T152 -92V-100H84V-102Z\"></path></g></g></g></g></svg></mjx-container>: 样本结果向量。第<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"0.781ex\" height=\"1.52ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -661 345 672\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g></g></svg></mjx-container>个分量标记样本处理/未处理后的状态</li>\n</ul>\n</li>\n<li>标记不同数据单元间相互连结关系的辅助信息（用矩阵<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.966ex\" height=\"1.579ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -698 869 698\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"1D400\" d=\"M296 0Q278 3 164 3Q58 3 49 0H40V62H92Q144 62 144 64Q388 682 397 689Q403 698 434 698Q463 698 471 689Q475 686 538 530T663 218L724 64Q724 62 776 62H828V0H817Q796 3 658 3Q509 3 485 0H472V62H517Q561 62 561 63L517 175H262L240 120Q218 65 217 64Q217 62 261 62H306V0H296ZM390 237L492 238L440 365Q390 491 388 491Q287 239 287 237H390Z\"></path></g></g></g></g></svg></mjx-container>表示）<ul>\n<li>例如时间序列、时序点过程（由不同时间点的随机事件组成的随机过程）、属性网络</li>\n<li>不直接显示目标变量间的因果关系，但不同数据单元间的联系间接蕴含了因果关系</li>\n</ul>\n</li>\n<li>包含未观测的干扰因素（unobserved confounders）的数据<ul>\n<li>辅助变量（instrumental variable）</li>\n<li>中介变量（mediator）</li>\n<li>running variable （暂不理解，待补充）</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"用于因果发现的数据\"><a href=\"#用于因果发现的数据\" class=\"headerlink\" title=\"用于因果发现的数据\"></a>用于因果发现的数据</h3><ol>\n<li>多元数据<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.966ex\" height=\"1.552ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -686 869 686\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"1D417\" d=\"M327 0Q306 3 174 3Q52 3 43 0H33V62H98L162 63L360 333L157 624H48V686H59Q80 683 217 683Q368 683 395 686H408V624H335L393 540L452 458L573 623Q573 624 528 624H483V686H494Q515 683 646 683Q769 683 778 686H787V624H658L575 511Q493 398 493 397L508 376Q522 356 553 312T611 229L727 62H835V0H824Q803 3 667 3Q516 3 489 0H476V62H513L549 63L401 274L247 63Q247 62 292 62H338V0H327Z\"></path></g></g></g></g></svg></mjx-container>+标准因果图<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.778ex\" height=\"1.645ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -705 786 727\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D43A\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q492 659 471 656T418 643T357 615T294 567T236 496T189 394T158 260Q156 242 156 221Q156 173 170 136T206 79T256 45T308 28T353 24Q407 24 452 47T514 106Q517 114 529 161T541 214Q541 222 528 224T468 227H431Q425 233 425 235T427 254Q431 267 437 273H454Q494 271 594 271Q634 271 659 271T695 272T707 272Q721 272 721 263Q721 261 719 249Q714 230 709 228Q706 227 694 227Q674 227 653 224Q646 221 643 215T629 164Q620 131 614 108Q589 6 586 3Q584 1 581 1Q571 1 553 21T530 52Q530 53 528 52T522 47Q448 -22 322 -22Q201 -22 126 55T50 252Z\"></path></g></g></g></svg></mjx-container>，其中<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.778ex\" height=\"1.645ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -705 786 727\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D43A\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q492 659 471 656T418 643T357 615T294 567T236 496T189 394T158 260Q156 242 156 221Q156 173 170 136T206 79T256 45T308 28T353 24Q407 24 452 47T514 106Q517 114 529 161T541 214Q541 222 528 224T468 227H431Q425 233 425 235T427 254Q431 267 437 273H454Q494 271 594 271Q634 271 659 271T695 272T707 272Q721 272 721 263Q721 261 719 249Q714 230 709 228Q706 227 694 227Q674 227 653 224Q646 221 643 215T629 164Q620 131 614 108Q589 6 586 3Q584 1 581 1Q571 1 553 21T530 52Q530 53 528 52T522 47Q448 -22 322 -22Q201 -22 126 55T50 252Z\"></path></g></g></g></svg></mjx-container>用于因果发现模型的评测<ul>\n<li><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.778ex\" height=\"1.645ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -705 786 727\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D43A\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q492 659 471 656T418 643T357 615T294 567T236 496T189 394T158 260Q156 242 156 221Q156 173 170 136T206 79T256 45T308 28T353 24Q407 24 452 47T514 106Q517 114 529 161T541 214Q541 222 528 224T468 227H431Q425 233 425 235T427 254Q431 267 437 273H454Q494 271 594 271Q634 271 659 271T695 272T707 272Q721 272 721 263Q721 261 719 249Q714 230 709 228Q706 227 694 227Q674 227 653 224Q646 221 643 215T629 164Q620 131 614 108Q589 6 586 3Q584 1 581 1Q571 1 553 21T530 52Q530 53 528 52T522 47Q448 -22 322 -22Q201 -22 126 55T50 252Z\"></path></g></g></g></svg></mjx-container>源于先验知识，有可能是不完善(incomplete)的。</li>\n</ul>\n</li>\n<li>多元时间序列数据+标准因果图<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.778ex\" height=\"1.645ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -705 786 727\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D43A\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q492 659 471 656T418 643T357 615T294 567T236 496T189 394T158 260Q156 242 156 221Q156 173 170 136T206 79T256 45T308 28T353 24Q407 24 452 47T514 106Q517 114 529 161T541 214Q541 222 528 224T468 227H431Q425 233 425 235T427 254Q431 267 437 273H454Q494 271 594 271Q634 271 659 271T695 272T707 272Q721 272 721 263Q721 261 719 249Q714 230 709 228Q706 227 694 227Q674 227 653 224Q646 221 643 215T629 164Q620 131 614 108Q589 6 586 3Q584 1 581 1Q571 1 553 21T530 52Q530 53 528 52T522 47Q448 -22 322 -22Q201 -22 126 55T50 252Z\"></path></g></g></g></svg></mjx-container></li>\n</ol>\n<h2 id=\"因果推断的基本框架\"><a href=\"#因果推断的基本框架\" class=\"headerlink\" title=\"因果推断的基本框架\"></a>因果推断的基本框架</h2><ul>\n<li>结构因果模型（Structural Causal Model, SCM）</li>\n<li>潜在结果框架（Potential Outcome Framework）</li>\n</ul>\n<p>第一次读因果推断的综述论文，比较懵。</p>\n<p>接下来以阅读Judea Pearl的Causal Inference in Statistics: A Primer为主。</p>\n<h2 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h2><ol>\n<li><a href=\"https://rguo12.github.io/causal_survey.pdf\">Guo, Ruocheng &amp; Cheng, Lu &amp; Li, Jundong &amp; Hahn, Paul &amp; Liu, Huan. (2018). A Survey of Learning Causality with Data: Problems and Methods.</a></li>\n</ol>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: document.title+document.date,\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","site":{"data":{}},"length":1447,"excerpt":"<p>本篇主要记录 A Survey of Learning Causality with Data: Problems and Methods 的调研记录。这是一篇机器学习研究者视角下的因果推断研究综述。</p>","more":"<h2 id=\"因果推断的两大研究方向\"><a href=\"#因果推断的两大研究方向\" class=\"headerlink\" title=\"因果推断的两大研究方向\"></a>因果推断的两大研究方向</h2><ol>\n<li>因果推理（causal inference）：研究指定变量对另一变量的影响程度=已知因果关系，求关系强度</li>\n<li>因果发现（causal discovery）：研究哪些变量会对指定变量产生影响=不知因果关系，求因果关系</li>\n</ol>\n<h2 id=\"用于因果推断的数据形式\"><a href=\"#用于因果推断的数据形式\" class=\"headerlink\" title=\"用于因果推断的数据形式\"></a>用于因果推断的数据形式</h2><ul>\n<li>干预型数据：至少一个变量是通过（人为）干预设定的</li>\n<li><strong>观测型数据</strong>：任何变量都是依靠因果关系中的“因”确定的</li>\n</ul>\n<p>例如，为了调查顾客对餐厅满意度的影响因素，可以使用现有的点评记录数据（观测型数据）或通过进行某些处理/干预来收集不同条件下的点评记录数据（干预型）。一般观测型数据比干预型数据更加容易获得。</p>\n<h3 id=\"用于因果推理的数据\"><a href=\"#用于因果推理的数据\" class=\"headerlink\" title=\"用于因果推理的数据\"></a>用于因果推理的数据</h3><p>共有3种形式：</p>\n<ol>\n<li>标准数据集：<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"8.123ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 3590.3 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\" transform=\"translate(389,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D417\" d=\"M327 0Q306 3 174 3Q52 3 43 0H33V62H98L162 63L360 333L157 624H48V686H59Q80 683 217 683Q368 683 395 686H408V624H335L393 540L452 458L573 623Q573 624 528 624H483V686H494Q515 683 646 683Q769 683 778 686H787V624H658L575 511Q493 398 493 397L508 376Q522 356 553 312T611 229L727 62H835V0H824Q803 3 667 3Q516 3 489 0H476V62H513L549 63L401 274L247 63Q247 62 292 62H338V0H327Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(1258,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\" transform=\"translate(1702.7,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D42D\" d=\"M272 49Q320 49 320 136V145V177H382V143Q382 106 380 99Q374 62 349 36T285 -2L272 -5H247Q173 -5 134 27Q109 46 102 74T94 160Q94 171 94 199T95 245V382H21V433H25Q58 433 90 456Q121 479 140 523T162 621V635H224V444H363V382H224V239V207V149Q224 98 228 81T249 55Q261 49 272 49Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(2149.7,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\" transform=\"translate(2594.3,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D432\" d=\"M84 -102Q84 -110 87 -119T102 -138T133 -149Q148 -148 162 -143T186 -131T206 -114T222 -95T234 -76T243 -59T249 -45T252 -37L269 0L96 382H26V444H34Q49 441 146 441Q252 441 270 444H279V382H255Q232 382 232 380L337 151L442 382H394V444H401Q413 441 495 441Q568 441 574 444H580V382H510L406 152Q298 -84 297 -87Q269 -139 225 -169T131 -200Q85 -200 54 -172T23 -100Q23 -64 44 -50T87 -35Q111 -35 130 -50T152 -92V-100H84V-102Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(3201.3,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container><ul>\n<li><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.966ex\" height=\"1.552ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -686 869 686\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"1D417\" d=\"M327 0Q306 3 174 3Q52 3 43 0H33V62H98L162 63L360 333L157 624H48V686H59Q80 683 217 683Q368 683 395 686H408V624H335L393 540L452 458L573 623Q573 624 528 624H483V686H494Q515 683 646 683Q769 683 778 686H787V624H658L575 511Q493 398 493 397L508 376Q522 356 553 312T611 229L727 62H835V0H824Q803 3 667 3Q516 3 489 0H476V62H513L549 63L401 274L247 63Q247 62 292 62H338V0H327Z\"></path></g></g></g></g></svg></mjx-container>: 样本特征矩阵</li>\n<li><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.011ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.011ex\" height=\"1.448ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -635 447 640\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"1D42D\" d=\"M272 49Q320 49 320 136V145V177H382V143Q382 106 380 99Q374 62 349 36T285 -2L272 -5H247Q173 -5 134 27Q109 46 102 74T94 160Q94 171 94 199T95 245V382H21V433H25Q58 433 90 456Q121 479 140 523T162 621V635H224V444H363V382H224V239V207V149Q224 98 228 81T249 55Q261 49 272 49Z\"></path></g></g></g></g></svg></mjx-container>: 样本处理向量。第<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"0.781ex\" height=\"1.52ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -661 345 672\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g></g></svg></mjx-container>个分量标记样本<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"0.781ex\" height=\"1.52ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -661 345 672\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g></g></svg></mjx-container>被处理（值为1）或未处理（值为0）</li>\n<li><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.452ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.373ex\" height=\"1.457ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -444 607 644\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"1D432\" d=\"M84 -102Q84 -110 87 -119T102 -138T133 -149Q148 -148 162 -143T186 -131T206 -114T222 -95T234 -76T243 -59T249 -45T252 -37L269 0L96 382H26V444H34Q49 441 146 441Q252 441 270 444H279V382H255Q232 382 232 380L337 151L442 382H394V444H401Q413 441 495 441Q568 441 574 444H580V382H510L406 152Q298 -84 297 -87Q269 -139 225 -169T131 -200Q85 -200 54 -172T23 -100Q23 -64 44 -50T87 -35Q111 -35 130 -50T152 -92V-100H84V-102Z\"></path></g></g></g></g></svg></mjx-container>: 样本结果向量。第<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"0.781ex\" height=\"1.52ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -661 345 672\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g></g></svg></mjx-container>个分量标记样本处理/未处理后的状态</li>\n</ul>\n</li>\n<li>标记不同数据单元间相互连结关系的辅助信息（用矩阵<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.966ex\" height=\"1.579ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -698 869 698\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"1D400\" d=\"M296 0Q278 3 164 3Q58 3 49 0H40V62H92Q144 62 144 64Q388 682 397 689Q403 698 434 698Q463 698 471 689Q475 686 538 530T663 218L724 64Q724 62 776 62H828V0H817Q796 3 658 3Q509 3 485 0H472V62H517Q561 62 561 63L517 175H262L240 120Q218 65 217 64Q217 62 261 62H306V0H296ZM390 237L492 238L440 365Q390 491 388 491Q287 239 287 237H390Z\"></path></g></g></g></g></svg></mjx-container>表示）<ul>\n<li>例如时间序列、时序点过程（由不同时间点的随机事件组成的随机过程）、属性网络</li>\n<li>不直接显示目标变量间的因果关系，但不同数据单元间的联系间接蕴含了因果关系</li>\n</ul>\n</li>\n<li>包含未观测的干扰因素（unobserved confounders）的数据<ul>\n<li>辅助变量（instrumental variable）</li>\n<li>中介变量（mediator）</li>\n<li>running variable （暂不理解，待补充）</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"用于因果发现的数据\"><a href=\"#用于因果发现的数据\" class=\"headerlink\" title=\"用于因果发现的数据\"></a>用于因果发现的数据</h3><ol>\n<li>多元数据<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.966ex\" height=\"1.552ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -686 869 686\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"1D417\" d=\"M327 0Q306 3 174 3Q52 3 43 0H33V62H98L162 63L360 333L157 624H48V686H59Q80 683 217 683Q368 683 395 686H408V624H335L393 540L452 458L573 623Q573 624 528 624H483V686H494Q515 683 646 683Q769 683 778 686H787V624H658L575 511Q493 398 493 397L508 376Q522 356 553 312T611 229L727 62H835V0H824Q803 3 667 3Q516 3 489 0H476V62H513L549 63L401 274L247 63Q247 62 292 62H338V0H327Z\"></path></g></g></g></g></svg></mjx-container>+标准因果图<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.778ex\" height=\"1.645ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -705 786 727\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D43A\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q492 659 471 656T418 643T357 615T294 567T236 496T189 394T158 260Q156 242 156 221Q156 173 170 136T206 79T256 45T308 28T353 24Q407 24 452 47T514 106Q517 114 529 161T541 214Q541 222 528 224T468 227H431Q425 233 425 235T427 254Q431 267 437 273H454Q494 271 594 271Q634 271 659 271T695 272T707 272Q721 272 721 263Q721 261 719 249Q714 230 709 228Q706 227 694 227Q674 227 653 224Q646 221 643 215T629 164Q620 131 614 108Q589 6 586 3Q584 1 581 1Q571 1 553 21T530 52Q530 53 528 52T522 47Q448 -22 322 -22Q201 -22 126 55T50 252Z\"></path></g></g></g></svg></mjx-container>，其中<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.778ex\" height=\"1.645ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -705 786 727\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D43A\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q492 659 471 656T418 643T357 615T294 567T236 496T189 394T158 260Q156 242 156 221Q156 173 170 136T206 79T256 45T308 28T353 24Q407 24 452 47T514 106Q517 114 529 161T541 214Q541 222 528 224T468 227H431Q425 233 425 235T427 254Q431 267 437 273H454Q494 271 594 271Q634 271 659 271T695 272T707 272Q721 272 721 263Q721 261 719 249Q714 230 709 228Q706 227 694 227Q674 227 653 224Q646 221 643 215T629 164Q620 131 614 108Q589 6 586 3Q584 1 581 1Q571 1 553 21T530 52Q530 53 528 52T522 47Q448 -22 322 -22Q201 -22 126 55T50 252Z\"></path></g></g></g></svg></mjx-container>用于因果发现模型的评测<ul>\n<li><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.778ex\" height=\"1.645ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -705 786 727\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D43A\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q492 659 471 656T418 643T357 615T294 567T236 496T189 394T158 260Q156 242 156 221Q156 173 170 136T206 79T256 45T308 28T353 24Q407 24 452 47T514 106Q517 114 529 161T541 214Q541 222 528 224T468 227H431Q425 233 425 235T427 254Q431 267 437 273H454Q494 271 594 271Q634 271 659 271T695 272T707 272Q721 272 721 263Q721 261 719 249Q714 230 709 228Q706 227 694 227Q674 227 653 224Q646 221 643 215T629 164Q620 131 614 108Q589 6 586 3Q584 1 581 1Q571 1 553 21T530 52Q530 53 528 52T522 47Q448 -22 322 -22Q201 -22 126 55T50 252Z\"></path></g></g></g></svg></mjx-container>源于先验知识，有可能是不完善(incomplete)的。</li>\n</ul>\n</li>\n<li>多元时间序列数据+标准因果图<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.778ex\" height=\"1.645ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -705 786 727\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D43A\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q492 659 471 656T418 643T357 615T294 567T236 496T189 394T158 260Q156 242 156 221Q156 173 170 136T206 79T256 45T308 28T353 24Q407 24 452 47T514 106Q517 114 529 161T541 214Q541 222 528 224T468 227H431Q425 233 425 235T427 254Q431 267 437 273H454Q494 271 594 271Q634 271 659 271T695 272T707 272Q721 272 721 263Q721 261 719 249Q714 230 709 228Q706 227 694 227Q674 227 653 224Q646 221 643 215T629 164Q620 131 614 108Q589 6 586 3Q584 1 581 1Q571 1 553 21T530 52Q530 53 528 52T522 47Q448 -22 322 -22Q201 -22 126 55T50 252Z\"></path></g></g></g></svg></mjx-container></li>\n</ol>\n<h2 id=\"因果推断的基本框架\"><a href=\"#因果推断的基本框架\" class=\"headerlink\" title=\"因果推断的基本框架\"></a>因果推断的基本框架</h2><ul>\n<li>结构因果模型（Structural Causal Model, SCM）</li>\n<li>潜在结果框架（Potential Outcome Framework）</li>\n</ul>\n<p>第一次读因果推断的综述论文，比较懵。</p>\n<p>接下来以阅读Judea Pearl的Causal Inference in Statistics: A Primer为主。</p>\n<h2 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h2><ol>\n<li><a href=\"https://rguo12.github.io/causal_survey.pdf\">Guo, Ruocheng &amp; Cheng, Lu &amp; Li, Jundong &amp; Hahn, Paul &amp; Liu, Huan. (2018). A Survey of Learning Causality with Data: Problems and Methods.</a></li>\n</ol>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: document.title+document.date,\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>"},{"title":"因果推断学习笔记.5","mathjax":true,"codeblock":{"enable":true,"show_result":true},"date":"2022-05-05T09:00:57.000Z","_content":"上一篇的综述论文读的比较懵。为此，从这一篇开始记录Judea Pearl的Causal Inference in Statistics: A Primer的阅读笔记，将经典的因果推断理论基础打好后再考虑机器学习领域的因果推断。\n<!--more-->\n\n## 结构因果模型\n- 结构因果模型（Structural Causal Model, SCM）\n结构因果模型使用有向图（通常为有向无环图，Directed Acyclic Graph, DAG）来建模变量间的因果关系。\n\n### 基本概念\n- 外源变量（exogenous variables）$U$：处在模型之外（指模型中没有指向它的原因变量）的变量，无需建模其他变量指向它的因果。在因果有向图中，外源变量全部为根节点。外源变量一般充当内源变量的误差项（在模型建模的因果关系外影响内源变量取值的因素）。\n- 内源变量（endogenous variables）$V$：模型内（建模）的变量。每个内源变量被至少一个外源变量指向（存在有向边）。\n- 映射函数 $f$：从原因变量到结果变量的映射函数，解释因果关系如何产生作用。\n\n### 乘积分解规则\n- 乘积分解规则（rule of product decomposition）\n使用因果变量间的条件概率的乘积分解所有变量的联合概率：\n$$\nP(x_1,x_2,\\ldots,x_n)=\\prod_i P(x_i|pa_i)\n$$\n其中$pa_i$表示变量$X_i$的父节点变量的取值。例如，已知链状有向因果图$X\\to Y\\to Z$，则它们的取值的联合概率为：\n$$\nP(X=x,Y=y,Z=z) = P(X=x)P(Y=y|X=x)P(Z=z|Y=y)\n$$\n\n## 有向图模型\n- 结构因果模型中的有向图模型及其应用\n根据图的构型，将有向图模型分为三类：\n- Chains：$X\\to Y\\to Z$，链状连接\n- Forks：$X\\to Y, X\\to Z$，一个原因变量决定所有结果变量。其中那唯一的原因变量被称作common cause\n- Colliders：$X\\to Z, Y\\to Z$，所有原因变量决定一个结果变量（碰撞节点，collision node）\n\n```mermaid\ngraph TB\nUx1((Ux1))\nX1((X1))\nUy1((Uy1))\nY1((Y1))\nUz1((Uz1))\nZ1((Z1))\nUx2((Ux2))\nUy2((Uy2))\nX2((X2))\nY2((Y2))\nUz2((Uz2))\nZ2((Z2))\nUx3((Ux3))\nX3((X3))\nUy3((Uy3))\nY3((Y3))\nUz3((Uz3))\nZ3((Z3))\n\nX1-->Y1\nY1-->Z1\nX2-->Y2\nX2-->Z2\nX3-->Z3\nY3-->Z3\nUx1-->X1\nUy1-->Y1\nUz1-->Z1\nUx2-->X2\nUy2-->Y2\nUz2-->Z2\nUx3-->X3\nUy3-->Y3\nUz3-->Z3\n```\n\n上图从左到右每个连通图依次为Chains, Forks, Colliders。其中U*表示外源变量。\n\n### Chains & Forks & Colliders 中的三条独立性规则\n**R1.** Chains中的条件独立性：给定两个变量$X$和$Y$，称它们在给定变量$Z$时是独立的，如果$X$和$Y$之间只有一条单向路径，并且该路径被$Z$截断。\n\n*解释：如果$X\\to...\\to Z\\to...\\to Y$且$X$到$Y$的路径只有这一条，那么他俩就是关于$Z$条件独立的。*\n\n**R2.** Forks中的条件独立性：如果变量$X$是变量$Y$和变量$Z$的唯一原因变量，那么变量$Y$和$Z$是关于$X$条件独立的。\n\n*理解：当$X$固定时，唯一影响$Y$和$Z$的取值的只有它们各自的外源变量$U_y$和$U_z$。由于$U_y$和$U_z$是独立的（外源变量不依赖于任何其他变量），因此$Y$和$Z$是条件独立的。*\n\n**R3.** Colliders中的条件独立性：如果变量$Z$是$X$和$Y$的碰撞节点，并且$X$和$Y$之间只有这一条路径（注意，不仅是有向路径），那么$X$和$Y$在无条件时是独立的，但在给定$Z$或$Z$的任意后继节点时是条件不独立的。\n\n*理解：R3是对因果关系的研究中极其重要的一条规则！它可以理解为，如果结果变量$Z$是固定的，那么当$X$的值改变时，需要改变$Y$的值，从而补偿$X$对$Z$造成的影响。例如一次考试包含理论、实验两部分。那么“总分”就是“理论分”和“实验分”的碰撞节点。如果总分固定，且某人的理论分较高，那么它的实验分必须较低从而使总分固定，反之亦然。那么理论分和实验分就是关于总分条件不独立的。*\n\n## 有向分离&有向连接(d-*)\n- 有向分离：d-seperation（‘d’的意思是directional）用于识别节点对处于的状态（有向分离态或有向连接态）的过程。\n- 有向连接态：d-connected，表示存在连接两个节点的路径。有向连接态的节点对是不独立（一个依赖另一个）的。\n- 有向分离态：d-seperated，表示不存在连接两个节点的路径。有向分离态的节点对一定是独立的。\n\n判断一对节点是否是有向分离态的，其方法在于判断连接它们的所有路径（注意，不是有向路径）是否都是**阻断**的（blocked）。如果所有路径都是阻断的，那么此二者就是有向分离态的，否则它们是有向连接态的。\n\n- 如果“依赖性”不能从某个节点沿着经过节点$Z$（对$Z$不取条件）的路径传递到另一个节点，那么称$Z$阻断这条路径。\n- 被阻断的对象是连接两个节点的一条路径，而不是两个节点。\n- 如果节点$Z$是节点$X$和$Y$的一条路径上的碰撞节点（collider），那么$Z$必然是能够阻断这条路径的。\n\n除了碰撞节点，还有满足以下条件的节点能够阻断一条路径：\n- 如果我们对一个**节点集**$K$取条件（即固定节点集中的变量的值），且节点$Z$满足：\n  - $Z$是碰撞节点且$Z\\notin K$，且$Z$的任意后继节点都不属于$K$\n  - $Z\\in K$且$Z$是一个chain或fork的中间节点\n\n满足上述任意一种条件的节点$Z$都能阻断条件中提及的路径。\n\n基于“阻断”的定义，我们可以给出有向分离的定义：\n\n---\n**定义（有向分离，d-separation）**：一条路径$p$能够被一个节点集$Z$阻断，当且仅当：\n1. $p$包含chain $A\\to B\\to C$或fork $A\\leftarrow B\\to C$使得中间节点$B\\in Z$（即$B$取条件），或\n2. $p$包含collider $A\\to B\\leftarrow C$使得碰撞节点$B\\notin Z$，且$B$的任意后继节点都不属于$Z$。\n\n若上述节点集$Z$阻断节点$X$和$Y$之间的所有路径，那么称$X$和$Y$是关于$Z$有向分离的（d-separated, conditional on $Z$），因此是关于$Z$条件独立的。\n\n---\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: document.title+document.date,\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","source":"_posts/2022-05-05-causal-inference-5.md","raw":"---\ntitle: 因果推断学习笔记.5\nmathjax: true\ncodeblock:\n  enable: true\n  show_result: true\ndate: 2022-05-05 17:00:57\ntags: 因果推断\ncategories: 学习笔记\n---\n上一篇的综述论文读的比较懵。为此，从这一篇开始记录Judea Pearl的Causal Inference in Statistics: A Primer的阅读笔记，将经典的因果推断理论基础打好后再考虑机器学习领域的因果推断。\n<!--more-->\n\n## 结构因果模型\n- 结构因果模型（Structural Causal Model, SCM）\n结构因果模型使用有向图（通常为有向无环图，Directed Acyclic Graph, DAG）来建模变量间的因果关系。\n\n### 基本概念\n- 外源变量（exogenous variables）$U$：处在模型之外（指模型中没有指向它的原因变量）的变量，无需建模其他变量指向它的因果。在因果有向图中，外源变量全部为根节点。外源变量一般充当内源变量的误差项（在模型建模的因果关系外影响内源变量取值的因素）。\n- 内源变量（endogenous variables）$V$：模型内（建模）的变量。每个内源变量被至少一个外源变量指向（存在有向边）。\n- 映射函数 $f$：从原因变量到结果变量的映射函数，解释因果关系如何产生作用。\n\n### 乘积分解规则\n- 乘积分解规则（rule of product decomposition）\n使用因果变量间的条件概率的乘积分解所有变量的联合概率：\n$$\nP(x_1,x_2,\\ldots,x_n)=\\prod_i P(x_i|pa_i)\n$$\n其中$pa_i$表示变量$X_i$的父节点变量的取值。例如，已知链状有向因果图$X\\to Y\\to Z$，则它们的取值的联合概率为：\n$$\nP(X=x,Y=y,Z=z) = P(X=x)P(Y=y|X=x)P(Z=z|Y=y)\n$$\n\n## 有向图模型\n- 结构因果模型中的有向图模型及其应用\n根据图的构型，将有向图模型分为三类：\n- Chains：$X\\to Y\\to Z$，链状连接\n- Forks：$X\\to Y, X\\to Z$，一个原因变量决定所有结果变量。其中那唯一的原因变量被称作common cause\n- Colliders：$X\\to Z, Y\\to Z$，所有原因变量决定一个结果变量（碰撞节点，collision node）\n\n```mermaid\ngraph TB\nUx1((Ux1))\nX1((X1))\nUy1((Uy1))\nY1((Y1))\nUz1((Uz1))\nZ1((Z1))\nUx2((Ux2))\nUy2((Uy2))\nX2((X2))\nY2((Y2))\nUz2((Uz2))\nZ2((Z2))\nUx3((Ux3))\nX3((X3))\nUy3((Uy3))\nY3((Y3))\nUz3((Uz3))\nZ3((Z3))\n\nX1-->Y1\nY1-->Z1\nX2-->Y2\nX2-->Z2\nX3-->Z3\nY3-->Z3\nUx1-->X1\nUy1-->Y1\nUz1-->Z1\nUx2-->X2\nUy2-->Y2\nUz2-->Z2\nUx3-->X3\nUy3-->Y3\nUz3-->Z3\n```\n\n上图从左到右每个连通图依次为Chains, Forks, Colliders。其中U*表示外源变量。\n\n### Chains & Forks & Colliders 中的三条独立性规则\n**R1.** Chains中的条件独立性：给定两个变量$X$和$Y$，称它们在给定变量$Z$时是独立的，如果$X$和$Y$之间只有一条单向路径，并且该路径被$Z$截断。\n\n*解释：如果$X\\to...\\to Z\\to...\\to Y$且$X$到$Y$的路径只有这一条，那么他俩就是关于$Z$条件独立的。*\n\n**R2.** Forks中的条件独立性：如果变量$X$是变量$Y$和变量$Z$的唯一原因变量，那么变量$Y$和$Z$是关于$X$条件独立的。\n\n*理解：当$X$固定时，唯一影响$Y$和$Z$的取值的只有它们各自的外源变量$U_y$和$U_z$。由于$U_y$和$U_z$是独立的（外源变量不依赖于任何其他变量），因此$Y$和$Z$是条件独立的。*\n\n**R3.** Colliders中的条件独立性：如果变量$Z$是$X$和$Y$的碰撞节点，并且$X$和$Y$之间只有这一条路径（注意，不仅是有向路径），那么$X$和$Y$在无条件时是独立的，但在给定$Z$或$Z$的任意后继节点时是条件不独立的。\n\n*理解：R3是对因果关系的研究中极其重要的一条规则！它可以理解为，如果结果变量$Z$是固定的，那么当$X$的值改变时，需要改变$Y$的值，从而补偿$X$对$Z$造成的影响。例如一次考试包含理论、实验两部分。那么“总分”就是“理论分”和“实验分”的碰撞节点。如果总分固定，且某人的理论分较高，那么它的实验分必须较低从而使总分固定，反之亦然。那么理论分和实验分就是关于总分条件不独立的。*\n\n## 有向分离&有向连接(d-*)\n- 有向分离：d-seperation（‘d’的意思是directional）用于识别节点对处于的状态（有向分离态或有向连接态）的过程。\n- 有向连接态：d-connected，表示存在连接两个节点的路径。有向连接态的节点对是不独立（一个依赖另一个）的。\n- 有向分离态：d-seperated，表示不存在连接两个节点的路径。有向分离态的节点对一定是独立的。\n\n判断一对节点是否是有向分离态的，其方法在于判断连接它们的所有路径（注意，不是有向路径）是否都是**阻断**的（blocked）。如果所有路径都是阻断的，那么此二者就是有向分离态的，否则它们是有向连接态的。\n\n- 如果“依赖性”不能从某个节点沿着经过节点$Z$（对$Z$不取条件）的路径传递到另一个节点，那么称$Z$阻断这条路径。\n- 被阻断的对象是连接两个节点的一条路径，而不是两个节点。\n- 如果节点$Z$是节点$X$和$Y$的一条路径上的碰撞节点（collider），那么$Z$必然是能够阻断这条路径的。\n\n除了碰撞节点，还有满足以下条件的节点能够阻断一条路径：\n- 如果我们对一个**节点集**$K$取条件（即固定节点集中的变量的值），且节点$Z$满足：\n  - $Z$是碰撞节点且$Z\\notin K$，且$Z$的任意后继节点都不属于$K$\n  - $Z\\in K$且$Z$是一个chain或fork的中间节点\n\n满足上述任意一种条件的节点$Z$都能阻断条件中提及的路径。\n\n基于“阻断”的定义，我们可以给出有向分离的定义：\n\n---\n**定义（有向分离，d-separation）**：一条路径$p$能够被一个节点集$Z$阻断，当且仅当：\n1. $p$包含chain $A\\to B\\to C$或fork $A\\leftarrow B\\to C$使得中间节点$B\\in Z$（即$B$取条件），或\n2. $p$包含collider $A\\to B\\leftarrow C$使得碰撞节点$B\\notin Z$，且$B$的任意后继节点都不属于$Z$。\n\n若上述节点集$Z$阻断节点$X$和$Y$之间的所有路径，那么称$X$和$Y$是关于$Z$有向分离的（d-separated, conditional on $Z$），因此是关于$Z$条件独立的。\n\n---\n\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: document.title+document.date,\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","slug":"2022-05-05-causal-inference-5","published":1,"updated":"2022-05-06T03:13:45.095Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl2tv7glj00328cv99x4q6xhh","content":"<p>上一篇的综述论文读的比较懵。为此，从这一篇开始记录Judea Pearl的Causal Inference in Statistics: A Primer的阅读笔记，将经典的因果推断理论基础打好后再考虑机器学习领域的因果推断。<br><span id=\"more\"></span></p>\n<h2 id=\"结构因果模型\"><a href=\"#结构因果模型\" class=\"headerlink\" title=\"结构因果模型\"></a>结构因果模型</h2><ul>\n<li>结构因果模型（Structural Causal Model, SCM）<br>结构因果模型使用有向图（通常为有向无环图，Directed Acyclic Graph, DAG）来建模变量间的因果关系。</li>\n</ul>\n<h3 id=\"基本概念\"><a href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"></a>基本概念</h3><ul>\n<li>外源变量（exogenous variables）<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.735ex\" height=\"1.595ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 767 705\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D448\" d=\"M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z\"></path></g></g></g></svg></mjx-container>：处在模型之外（指模型中没有指向它的原因变量）的变量，无需建模其他变量指向它的因果。在因果有向图中，外源变量全部为根节点。外源变量一般充当内源变量的误差项（在模型建模的因果关系外影响内源变量取值的因素）。</li>\n<li>内源变量（endogenous variables）<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.74ex\" height=\"1.595ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 769 705\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D449\" d=\"M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z\"></path></g></g></g></svg></mjx-container>：模型内（建模）的变量。每个内源变量被至少一个外源变量指向（存在有向边）。</li>\n<li>映射函数 <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.464ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.244ex\" height=\"2.059ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -705 550 910\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D453\" d=\"M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z\"></path></g></g></g></svg></mjx-container>：从原因变量到结果变量的映射函数，解释因果关系如何产生作用。</li>\n</ul>\n<h3 id=\"乘积分解规则\"><a href=\"#乘积分解规则\" class=\"headerlink\" title=\"乘积分解规则\"></a>乘积分解规则</h3><ul>\n<li>乘积分解规则（rule of product decomposition）<br>使用因果变量间的条件概率的乘积分解所有变量的联合概率：<script type=\"math/tex; mode=display\">\nP(x_1,x_2,\\ldots,x_n)=\\prod_i P(x_i|pa_i)</script>其中<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.439ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"3.075ex\" height=\"1.439ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 1359 636\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(503,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(562,-150) scale(0.707)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g></g></g></svg></mjx-container>表示变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.357ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.613ex\" height=\"1.902ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 1155 840.8\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(861,-150) scale(0.707)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g></g></g></svg></mjx-container>的父节点变量的取值。例如，已知链状有向因果图<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"12.328ex\" height=\"1.57ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 5449.1 694\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1129.8,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2407.6,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3448.3,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4726.1,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>，则它们的取值的联合概率为：<script type=\"math/tex; mode=display\">\nP(X=x,Y=y,Z=z) = P(X=x)P(Y=y|X=x)P(Z=z|Y=y)</script></li>\n</ul>\n<h2 id=\"有向图模型\"><a href=\"#有向图模型\" class=\"headerlink\" title=\"有向图模型\"></a>有向图模型</h2><ul>\n<li>结构因果模型中的有向图模型及其应用<br>根据图的构型，将有向图模型分为三类：</li>\n<li>Chains：<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"12.328ex\" height=\"1.57ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 5449.1 694\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1129.8,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2407.6,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3448.3,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4726.1,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>，链状连接</li>\n<li>Forks：<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.439ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"15.262ex\" height=\"1.984ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 6745.8 877\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1129.8,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2407.6,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3170.6,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3615.2,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4745,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(6022.8,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>，一个原因变量决定所有结果变量。其中那唯一的原因变量被称作common cause</li>\n<li>Colliders：<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.439ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"14.97ex\" height=\"1.984ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 6616.8 877\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1129.8,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2407.6,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3130.6,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3575.2,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4616,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(5893.8,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>，所有原因变量决定一个结果变量（碰撞节点，collision node）</li>\n</ul>\n<pre class=\"mermaid\">graph TB\nUx1((Ux1))\nX1((X1))\nUy1((Uy1))\nY1((Y1))\nUz1((Uz1))\nZ1((Z1))\nUx2((Ux2))\nUy2((Uy2))\nX2((X2))\nY2((Y2))\nUz2((Uz2))\nZ2((Z2))\nUx3((Ux3))\nX3((X3))\nUy3((Uy3))\nY3((Y3))\nUz3((Uz3))\nZ3((Z3))\n\nX1--&gt;Y1\nY1--&gt;Z1\nX2--&gt;Y2\nX2--&gt;Z2\nX3--&gt;Z3\nY3--&gt;Z3\nUx1--&gt;X1\nUy1--&gt;Y1\nUz1--&gt;Z1\nUx2--&gt;X2\nUy2--&gt;Y2\nUz2--&gt;Z2\nUx3--&gt;X3\nUy3--&gt;Y3\nUz3--&gt;Z3</pre>\n\n<p>上图从左到右每个连通图依次为Chains, Forks, Colliders。其中U*表示外源变量。</p>\n<h3 id=\"Chains-amp-Forks-amp-Colliders-中的三条独立性规则\"><a href=\"#Chains-amp-Forks-amp-Colliders-中的三条独立性规则\" class=\"headerlink\" title=\"Chains & Forks & Colliders 中的三条独立性规则\"></a>Chains &amp; Forks &amp; Colliders 中的三条独立性规则</h3><p><strong>R1.</strong> Chains中的条件独立性：给定两个变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>和<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>，称它们在给定变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>时是独立的，如果<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>和<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>之间只有一条单向路径，并且该路径被<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>截断。</p>\n<p><em>解释：如果<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24.67ex\" height=\"1.57ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 10904.2 694\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1129.8,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2407.6,0)\"><path data-c=\"2026\" d=\"M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60ZM525 60Q525 84 542 102T585 120Q609 120 627 104T646 61Q646 36 629 18T586 0T543 17T525 60ZM972 60Q972 84 989 102T1032 120Q1056 120 1074 104T1093 61Q1093 36 1076 18T1033 0T990 17T972 60Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3857.3,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(5135.1,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6135.9,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(7413.7,0)\"><path data-c=\"2026\" d=\"M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60ZM525 60Q525 84 542 102T585 120Q609 120 627 104T646 61Q646 36 629 18T586 0T543 17T525 60ZM972 60Q972 84 989 102T1032 120Q1056 120 1074 104T1093 61Q1093 36 1076 18T1033 0T990 17T972 60Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(8863.4,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(10141.2,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>且<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>到<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>的路径只有这一条，那么他俩就是关于<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>条件独立的。</em></p>\n<p><strong>R2.</strong> Forks中的条件独立性：如果变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>是变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>和变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>的唯一原因变量，那么变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>和<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>是关于<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>条件独立的。</p>\n<p><em>理解：当<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>固定时，唯一影响<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>和<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>的取值的只有它们各自的外源变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.667ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.517ex\" height=\"2.213ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 1112.5 978\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D448\" d=\"M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(716,-150) scale(0.707)\"><path data-c=\"1D466\" d=\"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g></g></g></g></svg></mjx-container>和<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.357ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.477ex\" height=\"1.902ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 1094.8 840.8\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D448\" d=\"M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(716,-150) scale(0.707)\"><path data-c=\"1D467\" d=\"M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z\"></path></g></g></g></g></svg></mjx-container>。由于<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.667ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.517ex\" height=\"2.213ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 1112.5 978\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D448\" d=\"M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(716,-150) scale(0.707)\"><path data-c=\"1D466\" d=\"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g></g></g></g></svg></mjx-container>和<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.357ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.477ex\" height=\"1.902ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 1094.8 840.8\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D448\" d=\"M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(716,-150) scale(0.707)\"><path data-c=\"1D467\" d=\"M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z\"></path></g></g></g></g></svg></mjx-container>是独立的（外源变量不依赖于任何其他变量），因此<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>和<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>是条件独立的。</em></p>\n<p><strong>R3.</strong> Colliders中的条件独立性：如果变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>是<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>和<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>的碰撞节点，并且<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>和<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>之间只有这一条路径（注意，不仅是有向路径），那么<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>和<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>在无条件时是独立的，但在给定<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>或<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>的任意后继节点时是条件不独立的。</p>\n<p><em>理解：R3是对因果关系的研究中极其重要的一条规则！它可以理解为，如果结果变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>是固定的，那么当<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>的值改变时，需要改变<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>的值，从而补偿<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>对<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>造成的影响。例如一次考试包含理论、实验两部分。那么“总分”就是“理论分”和“实验分”的碰撞节点。如果总分固定，且某人的理论分较高，那么它的实验分必须较低从而使总分固定，反之亦然。那么理论分和实验分就是关于总分条件不独立的。</em></p>\n<h2 id=\"有向分离-amp-有向连接-d\"><a href=\"#有向分离-amp-有向连接-d\" class=\"headerlink\" title=\"有向分离&有向连接(d-*)\"></a>有向分离&amp;有向连接(d-*)</h2><ul>\n<li>有向分离：d-seperation（‘d’的意思是directional）用于识别节点对处于的状态（有向分离态或有向连接态）的过程。</li>\n<li>有向连接态：d-connected，表示存在连接两个节点的路径。有向连接态的节点对是不独立（一个依赖另一个）的。</li>\n<li>有向分离态：d-seperated，表示不存在连接两个节点的路径。有向分离态的节点对一定是独立的。</li>\n</ul>\n<p>判断一对节点是否是有向分离态的，其方法在于判断连接它们的所有路径（注意，不是有向路径）是否都是<strong>阻断</strong>的（blocked）。如果所有路径都是阻断的，那么此二者就是有向分离态的，否则它们是有向连接态的。</p>\n<ul>\n<li>如果“依赖性”不能从某个节点沿着经过节点<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>（对<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>不取条件）的路径传递到另一个节点，那么称<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>阻断这条路径。</li>\n<li>被阻断的对象是连接两个节点的一条路径，而不是两个节点。</li>\n<li>如果节点<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>是节点<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>和<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>的一条路径上的碰撞节点（collider），那么<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>必然是能够阻断这条路径的。</li>\n</ul>\n<p>除了碰撞节点，还有满足以下条件的节点能够阻断一条路径：</p>\n<ul>\n<li>如果我们对一个<strong>节点集</strong><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.011ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 889 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D43E\" d=\"M285 628Q285 635 228 637Q205 637 198 638T191 647Q191 649 193 661Q199 681 203 682Q205 683 214 683H219Q260 681 355 681Q389 681 418 681T463 682T483 682Q500 682 500 674Q500 669 497 660Q496 658 496 654T495 648T493 644T490 641T486 639T479 638T470 637T456 637Q416 636 405 634T387 623L306 305Q307 305 490 449T678 597Q692 611 692 620Q692 635 667 637Q651 637 651 648Q651 650 654 662T659 677Q662 682 676 682Q680 682 711 681T791 680Q814 680 839 681T869 682Q889 682 889 672Q889 650 881 642Q878 637 862 637Q787 632 726 586Q710 576 656 534T556 455L509 418L518 396Q527 374 546 329T581 244Q656 67 661 61Q663 59 666 57Q680 47 717 46H738Q744 38 744 37T741 19Q737 6 731 0H720Q680 3 625 3Q503 3 488 0H478Q472 6 472 9T474 27Q478 40 480 43T491 46H494Q544 46 544 71Q544 75 517 141T485 216L427 354L359 301L291 248L268 155Q245 63 245 58Q245 51 253 49T303 46H334Q340 37 340 35Q340 19 333 5Q328 0 317 0Q314 0 280 1T180 2Q118 2 85 2T49 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Z\"></path></g></g></g></svg></mjx-container>取条件（即固定节点集中的变量的值），且节点<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>满足：<ul>\n<li><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>是碰撞节点且<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.486ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.413ex\" height=\"2.106ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 2834.6 931\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1000.8,0)\"><path data-c=\"2209\" d=\"M196 25Q84 109 84 250Q84 372 166 450T360 539Q361 539 375 539T413 540T460 540L547 707Q550 716 563 716Q570 716 575 712T581 703T583 696T505 540H568Q583 532 583 520Q583 511 570 501L484 500L366 270H568Q583 262 583 250T568 230H346L247 38Q284 16 328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 447 -40T419 -41Q304 -41 228 3Q117 -211 115 -212Q111 -215 104 -215T92 -212T86 -204T84 -197Q84 -190 89 -183L196 25ZM214 61L301 230H124V228Q124 196 147 147T214 61ZM321 270L440 500Q353 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H321Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1945.6,0)\"><path data-c=\"1D43E\" d=\"M285 628Q285 635 228 637Q205 637 198 638T191 647Q191 649 193 661Q199 681 203 682Q205 683 214 683H219Q260 681 355 681Q389 681 418 681T463 682T483 682Q500 682 500 674Q500 669 497 660Q496 658 496 654T495 648T493 644T490 641T486 639T479 638T470 637T456 637Q416 636 405 634T387 623L306 305Q307 305 490 449T678 597Q692 611 692 620Q692 635 667 637Q651 637 651 648Q651 650 654 662T659 677Q662 682 676 682Q680 682 711 681T791 680Q814 680 839 681T869 682Q889 682 889 672Q889 650 881 642Q878 637 862 637Q787 632 726 586Q710 576 656 534T556 455L509 418L518 396Q527 374 546 329T581 244Q656 67 661 61Q663 59 666 57Q680 47 717 46H738Q744 38 744 37T741 19Q737 6 731 0H720Q680 3 625 3Q503 3 488 0H478Q472 6 472 9T474 27Q478 40 480 43T491 46H494Q544 46 544 71Q544 75 517 141T485 216L427 354L359 301L291 248L268 155Q245 63 245 58Q245 51 253 49T303 46H334Q340 37 340 35Q340 19 333 5Q328 0 317 0Q314 0 280 1T180 2Q118 2 85 2T49 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Z\"></path></g></g></g></svg></mjx-container>，且<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>的任意后继节点都不属于<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.011ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 889 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D43E\" d=\"M285 628Q285 635 228 637Q205 637 198 638T191 647Q191 649 193 661Q199 681 203 682Q205 683 214 683H219Q260 681 355 681Q389 681 418 681T463 682T483 682Q500 682 500 674Q500 669 497 660Q496 658 496 654T495 648T493 644T490 641T486 639T479 638T470 637T456 637Q416 636 405 634T387 623L306 305Q307 305 490 449T678 597Q692 611 692 620Q692 635 667 637Q651 637 651 648Q651 650 654 662T659 677Q662 682 676 682Q680 682 711 681T791 680Q814 680 839 681T869 682Q889 682 889 672Q889 650 881 642Q878 637 862 637Q787 632 726 586Q710 576 656 534T556 455L509 418L518 396Q527 374 546 329T581 244Q656 67 661 61Q663 59 666 57Q680 47 717 46H738Q744 38 744 37T741 19Q737 6 731 0H720Q680 3 625 3Q503 3 488 0H478Q472 6 472 9T474 27Q478 40 480 43T491 46H494Q544 46 544 71Q544 75 517 141T485 216L427 354L359 301L291 248L268 155Q245 63 245 58Q245 51 253 49T303 46H334Q340 37 340 35Q340 19 333 5Q328 0 317 0Q314 0 280 1T180 2Q118 2 85 2T49 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Z\"></path></g></g></g></svg></mjx-container></li>\n<li><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.09ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.413ex\" height=\"1.636ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 2834.6 723\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1000.8,0)\"><path data-c=\"2208\" d=\"M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1945.6,0)\"><path data-c=\"1D43E\" d=\"M285 628Q285 635 228 637Q205 637 198 638T191 647Q191 649 193 661Q199 681 203 682Q205 683 214 683H219Q260 681 355 681Q389 681 418 681T463 682T483 682Q500 682 500 674Q500 669 497 660Q496 658 496 654T495 648T493 644T490 641T486 639T479 638T470 637T456 637Q416 636 405 634T387 623L306 305Q307 305 490 449T678 597Q692 611 692 620Q692 635 667 637Q651 637 651 648Q651 650 654 662T659 677Q662 682 676 682Q680 682 711 681T791 680Q814 680 839 681T869 682Q889 682 889 672Q889 650 881 642Q878 637 862 637Q787 632 726 586Q710 576 656 534T556 455L509 418L518 396Q527 374 546 329T581 244Q656 67 661 61Q663 59 666 57Q680 47 717 46H738Q744 38 744 37T741 19Q737 6 731 0H720Q680 3 625 3Q503 3 488 0H478Q472 6 472 9T474 27Q478 40 480 43T491 46H494Q544 46 544 71Q544 75 517 141T485 216L427 354L359 301L291 248L268 155Q245 63 245 58Q245 51 253 49T303 46H334Q340 37 340 35Q340 19 333 5Q328 0 317 0Q314 0 280 1T180 2Q118 2 85 2T49 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Z\"></path></g></g></g></svg></mjx-container>且<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>是一个chain或fork的中间节点</li>\n</ul>\n</li>\n</ul>\n<p>满足上述任意一种条件的节点<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>都能阻断条件中提及的路径。</p>\n<p>基于“阻断”的定义，我们可以给出有向分离的定义：</p>\n<hr>\n<p><strong>定义（有向分离，d-separation）</strong>：一条路径<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.439ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.138ex\" height=\"1.439ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 503 636\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path></g></g></g></svg></mjx-container>能够被一个节点集<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>阻断，当且仅当：</p>\n<ol>\n<li><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.439ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.138ex\" height=\"1.439ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 503 636\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path></g></g></g></svg></mjx-container>包含chain <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"12.172ex\" height=\"1.67ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 5380.1 738\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1027.8,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2305.6,0)\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3342.3,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4620.1,0)\"><path data-c=\"1D436\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z\"></path></g></g></g></svg></mjx-container>或fork <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"12.172ex\" height=\"1.67ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 5380.1 738\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1027.8,0)\"><path data-c=\"2190\" d=\"M944 261T944 250T929 230H165Q167 228 182 216T211 189T244 152T277 96T303 25Q308 7 308 0Q308 -11 288 -11Q281 -11 278 -11T272 -7T267 2T263 21Q245 94 195 151T73 236Q58 242 55 247Q55 254 59 257T73 264Q121 283 158 314T215 375T247 434T264 480L267 497Q269 503 270 505T275 509T288 511Q308 511 308 500Q308 493 303 475Q293 438 278 406T246 352T215 315T185 287T165 270H929Q944 261 944 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2305.6,0)\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3342.3,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4620.1,0)\"><path data-c=\"1D436\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z\"></path></g></g></g></svg></mjx-container>使得中间节点<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.09ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.119ex\" height=\"1.636ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 2704.6 723\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1036.8,0)\"><path data-c=\"2208\" d=\"M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1981.6,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>（即<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.717ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 759 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g></g></g></svg></mjx-container>取条件），或</li>\n<li><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.439ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.138ex\" height=\"1.439ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 503 636\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path></g></g></g></svg></mjx-container>包含collider <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"12.172ex\" height=\"1.67ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 5380.1 738\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1027.8,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2305.6,0)\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3342.3,0)\"><path data-c=\"2190\" d=\"M944 261T944 250T929 230H165Q167 228 182 216T211 189T244 152T277 96T303 25Q308 7 308 0Q308 -11 288 -11Q281 -11 278 -11T272 -7T267 2T263 21Q245 94 195 151T73 236Q58 242 55 247Q55 254 59 257T73 264Q121 283 158 314T215 375T247 434T264 480L267 497Q269 503 270 505T275 509T288 511Q308 511 308 500Q308 493 303 475Q293 438 278 406T246 352T215 315T185 287T165 270H929Q944 261 944 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4620.1,0)\"><path data-c=\"1D436\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z\"></path></g></g></g></svg></mjx-container>使得碰撞节点<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.486ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.119ex\" height=\"2.106ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 2704.6 931\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1036.8,0)\"><path data-c=\"2209\" d=\"M196 25Q84 109 84 250Q84 372 166 450T360 539Q361 539 375 539T413 540T460 540L547 707Q550 716 563 716Q570 716 575 712T581 703T583 696T505 540H568Q583 532 583 520Q583 511 570 501L484 500L366 270H568Q583 262 583 250T568 230H346L247 38Q284 16 328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 447 -40T419 -41Q304 -41 228 3Q117 -211 115 -212Q111 -215 104 -215T92 -212T86 -204T84 -197Q84 -190 89 -183L196 25ZM214 61L301 230H124V228Q124 196 147 147T214 61ZM321 270L440 500Q353 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H321Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1981.6,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>，且<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.717ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 759 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g></g></g></svg></mjx-container>的任意后继节点都不属于<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>。</li>\n</ol>\n<p>若上述节点集<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>阻断节点<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>和<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>之间的所有路径，那么称<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>和<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>是关于<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>有向分离的（d-separated, conditional on <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>），因此是关于<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>条件独立的。</p>\n<hr>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: document.title+document.date,\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>","site":{"data":{}},"length":3033,"excerpt":"<p>上一篇的综述论文读的比较懵。为此，从这一篇开始记录Judea Pearl的Causal Inference in Statistics: A Primer的阅读笔记，将经典的因果推断理论基础打好后再考虑机器学习领域的因果推断。<br>","more":"</p>\n<h2 id=\"结构因果模型\"><a href=\"#结构因果模型\" class=\"headerlink\" title=\"结构因果模型\"></a>结构因果模型</h2><ul>\n<li>结构因果模型（Structural Causal Model, SCM）<br>结构因果模型使用有向图（通常为有向无环图，Directed Acyclic Graph, DAG）来建模变量间的因果关系。</li>\n</ul>\n<h3 id=\"基本概念\"><a href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"></a>基本概念</h3><ul>\n<li>外源变量（exogenous variables）<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.735ex\" height=\"1.595ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 767 705\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D448\" d=\"M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z\"></path></g></g></g></svg></mjx-container>：处在模型之外（指模型中没有指向它的原因变量）的变量，无需建模其他变量指向它的因果。在因果有向图中，外源变量全部为根节点。外源变量一般充当内源变量的误差项（在模型建模的因果关系外影响内源变量取值的因素）。</li>\n<li>内源变量（endogenous variables）<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.74ex\" height=\"1.595ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 769 705\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D449\" d=\"M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z\"></path></g></g></g></svg></mjx-container>：模型内（建模）的变量。每个内源变量被至少一个外源变量指向（存在有向边）。</li>\n<li>映射函数 <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.464ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.244ex\" height=\"2.059ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -705 550 910\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D453\" d=\"M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z\"></path></g></g></g></svg></mjx-container>：从原因变量到结果变量的映射函数，解释因果关系如何产生作用。</li>\n</ul>\n<h3 id=\"乘积分解规则\"><a href=\"#乘积分解规则\" class=\"headerlink\" title=\"乘积分解规则\"></a>乘积分解规则</h3><ul>\n<li>乘积分解规则（rule of product decomposition）<br>使用因果变量间的条件概率的乘积分解所有变量的联合概率：<script type=\"math/tex; mode=display\">\nP(x_1,x_2,\\ldots,x_n)=\\prod_i P(x_i|pa_i)</script>其中<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.439ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"3.075ex\" height=\"1.439ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 1359 636\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(503,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(562,-150) scale(0.707)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g></g></g></svg></mjx-container>表示变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.357ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.613ex\" height=\"1.902ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 1155 840.8\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(861,-150) scale(0.707)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g></g></g></svg></mjx-container>的父节点变量的取值。例如，已知链状有向因果图<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"12.328ex\" height=\"1.57ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 5449.1 694\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1129.8,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2407.6,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3448.3,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4726.1,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>，则它们的取值的联合概率为：<script type=\"math/tex; mode=display\">\nP(X=x,Y=y,Z=z) = P(X=x)P(Y=y|X=x)P(Z=z|Y=y)</script></li>\n</ul>\n<h2 id=\"有向图模型\"><a href=\"#有向图模型\" class=\"headerlink\" title=\"有向图模型\"></a>有向图模型</h2><ul>\n<li>结构因果模型中的有向图模型及其应用<br>根据图的构型，将有向图模型分为三类：</li>\n<li>Chains：<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"12.328ex\" height=\"1.57ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 5449.1 694\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1129.8,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2407.6,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3448.3,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4726.1,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>，链状连接</li>\n<li>Forks：<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.439ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"15.262ex\" height=\"1.984ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 6745.8 877\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1129.8,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2407.6,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3170.6,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3615.2,0)\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4745,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(6022.8,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>，一个原因变量决定所有结果变量。其中那唯一的原因变量被称作common cause</li>\n<li>Colliders：<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.439ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"14.97ex\" height=\"1.984ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 6616.8 877\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1129.8,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2407.6,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3130.6,0)\"><path data-c=\"2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3575.2,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4616,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(5893.8,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>，所有原因变量决定一个结果变量（碰撞节点，collision node）</li>\n</ul>\n<pre class=\"mermaid\">graph TB\nUx1((Ux1))\nX1((X1))\nUy1((Uy1))\nY1((Y1))\nUz1((Uz1))\nZ1((Z1))\nUx2((Ux2))\nUy2((Uy2))\nX2((X2))\nY2((Y2))\nUz2((Uz2))\nZ2((Z2))\nUx3((Ux3))\nX3((X3))\nUy3((Uy3))\nY3((Y3))\nUz3((Uz3))\nZ3((Z3))\n\nX1--&gt;Y1\nY1--&gt;Z1\nX2--&gt;Y2\nX2--&gt;Z2\nX3--&gt;Z3\nY3--&gt;Z3\nUx1--&gt;X1\nUy1--&gt;Y1\nUz1--&gt;Z1\nUx2--&gt;X2\nUy2--&gt;Y2\nUz2--&gt;Z2\nUx3--&gt;X3\nUy3--&gt;Y3\nUz3--&gt;Z3</pre>\n\n<p>上图从左到右每个连通图依次为Chains, Forks, Colliders。其中U*表示外源变量。</p>\n<h3 id=\"Chains-amp-Forks-amp-Colliders-中的三条独立性规则\"><a href=\"#Chains-amp-Forks-amp-Colliders-中的三条独立性规则\" class=\"headerlink\" title=\"Chains & Forks & Colliders 中的三条独立性规则\"></a>Chains &amp; Forks &amp; Colliders 中的三条独立性规则</h3><p><strong>R1.</strong> Chains中的条件独立性：给定两个变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>和<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>，称它们在给定变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>时是独立的，如果<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>和<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>之间只有一条单向路径，并且该路径被<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>截断。</p>\n<p><em>解释：如果<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24.67ex\" height=\"1.57ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 10904.2 694\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1129.8,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2407.6,0)\"><path data-c=\"2026\" d=\"M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60ZM525 60Q525 84 542 102T585 120Q609 120 627 104T646 61Q646 36 629 18T586 0T543 17T525 60ZM972 60Q972 84 989 102T1032 120Q1056 120 1074 104T1093 61Q1093 36 1076 18T1033 0T990 17T972 60Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3857.3,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(5135.1,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6135.9,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(7413.7,0)\"><path data-c=\"2026\" d=\"M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60ZM525 60Q525 84 542 102T585 120Q609 120 627 104T646 61Q646 36 629 18T586 0T543 17T525 60ZM972 60Q972 84 989 102T1032 120Q1056 120 1074 104T1093 61Q1093 36 1076 18T1033 0T990 17T972 60Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(8863.4,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(10141.2,0)\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>且<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>到<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>的路径只有这一条，那么他俩就是关于<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>条件独立的。</em></p>\n<p><strong>R2.</strong> Forks中的条件独立性：如果变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>是变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>和变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>的唯一原因变量，那么变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>和<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>是关于<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>条件独立的。</p>\n<p><em>理解：当<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>固定时，唯一影响<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>和<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>的取值的只有它们各自的外源变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.667ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.517ex\" height=\"2.213ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 1112.5 978\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D448\" d=\"M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(716,-150) scale(0.707)\"><path data-c=\"1D466\" d=\"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g></g></g></g></svg></mjx-container>和<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.357ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.477ex\" height=\"1.902ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 1094.8 840.8\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D448\" d=\"M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(716,-150) scale(0.707)\"><path data-c=\"1D467\" d=\"M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z\"></path></g></g></g></g></svg></mjx-container>。由于<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.667ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.517ex\" height=\"2.213ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 1112.5 978\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D448\" d=\"M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(716,-150) scale(0.707)\"><path data-c=\"1D466\" d=\"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g></g></g></g></svg></mjx-container>和<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.357ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.477ex\" height=\"1.902ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 1094.8 840.8\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D448\" d=\"M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(716,-150) scale(0.707)\"><path data-c=\"1D467\" d=\"M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z\"></path></g></g></g></g></svg></mjx-container>是独立的（外源变量不依赖于任何其他变量），因此<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>和<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>是条件独立的。</em></p>\n<p><strong>R3.</strong> Colliders中的条件独立性：如果变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>是<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>和<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>的碰撞节点，并且<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>和<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>之间只有这一条路径（注意，不仅是有向路径），那么<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>和<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>在无条件时是独立的，但在给定<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>或<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>的任意后继节点时是条件不独立的。</p>\n<p><em>理解：R3是对因果关系的研究中极其重要的一条规则！它可以理解为，如果结果变量<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>是固定的，那么当<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>的值改变时，需要改变<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>的值，从而补偿<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>对<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>造成的影响。例如一次考试包含理论、实验两部分。那么“总分”就是“理论分”和“实验分”的碰撞节点。如果总分固定，且某人的理论分较高，那么它的实验分必须较低从而使总分固定，反之亦然。那么理论分和实验分就是关于总分条件不独立的。</em></p>\n<h2 id=\"有向分离-amp-有向连接-d\"><a href=\"#有向分离-amp-有向连接-d\" class=\"headerlink\" title=\"有向分离&有向连接(d-*)\"></a>有向分离&amp;有向连接(d-*)</h2><ul>\n<li>有向分离：d-seperation（‘d’的意思是directional）用于识别节点对处于的状态（有向分离态或有向连接态）的过程。</li>\n<li>有向连接态：d-connected，表示存在连接两个节点的路径。有向连接态的节点对是不独立（一个依赖另一个）的。</li>\n<li>有向分离态：d-seperated，表示不存在连接两个节点的路径。有向分离态的节点对一定是独立的。</li>\n</ul>\n<p>判断一对节点是否是有向分离态的，其方法在于判断连接它们的所有路径（注意，不是有向路径）是否都是<strong>阻断</strong>的（blocked）。如果所有路径都是阻断的，那么此二者就是有向分离态的，否则它们是有向连接态的。</p>\n<ul>\n<li>如果“依赖性”不能从某个节点沿着经过节点<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>（对<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>不取条件）的路径传递到另一个节点，那么称<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>阻断这条路径。</li>\n<li>被阻断的对象是连接两个节点的一条路径，而不是两个节点。</li>\n<li>如果节点<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>是节点<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>和<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>的一条路径上的碰撞节点（collider），那么<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>必然是能够阻断这条路径的。</li>\n</ul>\n<p>除了碰撞节点，还有满足以下条件的节点能够阻断一条路径：</p>\n<ul>\n<li>如果我们对一个<strong>节点集</strong><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.011ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 889 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D43E\" d=\"M285 628Q285 635 228 637Q205 637 198 638T191 647Q191 649 193 661Q199 681 203 682Q205 683 214 683H219Q260 681 355 681Q389 681 418 681T463 682T483 682Q500 682 500 674Q500 669 497 660Q496 658 496 654T495 648T493 644T490 641T486 639T479 638T470 637T456 637Q416 636 405 634T387 623L306 305Q307 305 490 449T678 597Q692 611 692 620Q692 635 667 637Q651 637 651 648Q651 650 654 662T659 677Q662 682 676 682Q680 682 711 681T791 680Q814 680 839 681T869 682Q889 682 889 672Q889 650 881 642Q878 637 862 637Q787 632 726 586Q710 576 656 534T556 455L509 418L518 396Q527 374 546 329T581 244Q656 67 661 61Q663 59 666 57Q680 47 717 46H738Q744 38 744 37T741 19Q737 6 731 0H720Q680 3 625 3Q503 3 488 0H478Q472 6 472 9T474 27Q478 40 480 43T491 46H494Q544 46 544 71Q544 75 517 141T485 216L427 354L359 301L291 248L268 155Q245 63 245 58Q245 51 253 49T303 46H334Q340 37 340 35Q340 19 333 5Q328 0 317 0Q314 0 280 1T180 2Q118 2 85 2T49 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Z\"></path></g></g></g></svg></mjx-container>取条件（即固定节点集中的变量的值），且节点<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>满足：<ul>\n<li><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>是碰撞节点且<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.486ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.413ex\" height=\"2.106ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 2834.6 931\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1000.8,0)\"><path data-c=\"2209\" d=\"M196 25Q84 109 84 250Q84 372 166 450T360 539Q361 539 375 539T413 540T460 540L547 707Q550 716 563 716Q570 716 575 712T581 703T583 696T505 540H568Q583 532 583 520Q583 511 570 501L484 500L366 270H568Q583 262 583 250T568 230H346L247 38Q284 16 328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 447 -40T419 -41Q304 -41 228 3Q117 -211 115 -212Q111 -215 104 -215T92 -212T86 -204T84 -197Q84 -190 89 -183L196 25ZM214 61L301 230H124V228Q124 196 147 147T214 61ZM321 270L440 500Q353 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H321Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1945.6,0)\"><path data-c=\"1D43E\" d=\"M285 628Q285 635 228 637Q205 637 198 638T191 647Q191 649 193 661Q199 681 203 682Q205 683 214 683H219Q260 681 355 681Q389 681 418 681T463 682T483 682Q500 682 500 674Q500 669 497 660Q496 658 496 654T495 648T493 644T490 641T486 639T479 638T470 637T456 637Q416 636 405 634T387 623L306 305Q307 305 490 449T678 597Q692 611 692 620Q692 635 667 637Q651 637 651 648Q651 650 654 662T659 677Q662 682 676 682Q680 682 711 681T791 680Q814 680 839 681T869 682Q889 682 889 672Q889 650 881 642Q878 637 862 637Q787 632 726 586Q710 576 656 534T556 455L509 418L518 396Q527 374 546 329T581 244Q656 67 661 61Q663 59 666 57Q680 47 717 46H738Q744 38 744 37T741 19Q737 6 731 0H720Q680 3 625 3Q503 3 488 0H478Q472 6 472 9T474 27Q478 40 480 43T491 46H494Q544 46 544 71Q544 75 517 141T485 216L427 354L359 301L291 248L268 155Q245 63 245 58Q245 51 253 49T303 46H334Q340 37 340 35Q340 19 333 5Q328 0 317 0Q314 0 280 1T180 2Q118 2 85 2T49 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Z\"></path></g></g></g></svg></mjx-container>，且<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>的任意后继节点都不属于<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.011ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 889 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D43E\" d=\"M285 628Q285 635 228 637Q205 637 198 638T191 647Q191 649 193 661Q199 681 203 682Q205 683 214 683H219Q260 681 355 681Q389 681 418 681T463 682T483 682Q500 682 500 674Q500 669 497 660Q496 658 496 654T495 648T493 644T490 641T486 639T479 638T470 637T456 637Q416 636 405 634T387 623L306 305Q307 305 490 449T678 597Q692 611 692 620Q692 635 667 637Q651 637 651 648Q651 650 654 662T659 677Q662 682 676 682Q680 682 711 681T791 680Q814 680 839 681T869 682Q889 682 889 672Q889 650 881 642Q878 637 862 637Q787 632 726 586Q710 576 656 534T556 455L509 418L518 396Q527 374 546 329T581 244Q656 67 661 61Q663 59 666 57Q680 47 717 46H738Q744 38 744 37T741 19Q737 6 731 0H720Q680 3 625 3Q503 3 488 0H478Q472 6 472 9T474 27Q478 40 480 43T491 46H494Q544 46 544 71Q544 75 517 141T485 216L427 354L359 301L291 248L268 155Q245 63 245 58Q245 51 253 49T303 46H334Q340 37 340 35Q340 19 333 5Q328 0 317 0Q314 0 280 1T180 2Q118 2 85 2T49 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Z\"></path></g></g></g></svg></mjx-container></li>\n<li><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.09ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.413ex\" height=\"1.636ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 2834.6 723\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1000.8,0)\"><path data-c=\"2208\" d=\"M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1945.6,0)\"><path data-c=\"1D43E\" d=\"M285 628Q285 635 228 637Q205 637 198 638T191 647Q191 649 193 661Q199 681 203 682Q205 683 214 683H219Q260 681 355 681Q389 681 418 681T463 682T483 682Q500 682 500 674Q500 669 497 660Q496 658 496 654T495 648T493 644T490 641T486 639T479 638T470 637T456 637Q416 636 405 634T387 623L306 305Q307 305 490 449T678 597Q692 611 692 620Q692 635 667 637Q651 637 651 648Q651 650 654 662T659 677Q662 682 676 682Q680 682 711 681T791 680Q814 680 839 681T869 682Q889 682 889 672Q889 650 881 642Q878 637 862 637Q787 632 726 586Q710 576 656 534T556 455L509 418L518 396Q527 374 546 329T581 244Q656 67 661 61Q663 59 666 57Q680 47 717 46H738Q744 38 744 37T741 19Q737 6 731 0H720Q680 3 625 3Q503 3 488 0H478Q472 6 472 9T474 27Q478 40 480 43T491 46H494Q544 46 544 71Q544 75 517 141T485 216L427 354L359 301L291 248L268 155Q245 63 245 58Q245 51 253 49T303 46H334Q340 37 340 35Q340 19 333 5Q328 0 317 0Q314 0 280 1T180 2Q118 2 85 2T49 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Z\"></path></g></g></g></svg></mjx-container>且<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>是一个chain或fork的中间节点</li>\n</ul>\n</li>\n</ul>\n<p>满足上述任意一种条件的节点<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>都能阻断条件中提及的路径。</p>\n<p>基于“阻断”的定义，我们可以给出有向分离的定义：</p>\n<hr>\n<p><strong>定义（有向分离，d-separation）</strong>：一条路径<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.439ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.138ex\" height=\"1.439ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 503 636\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path></g></g></g></svg></mjx-container>能够被一个节点集<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>阻断，当且仅当：</p>\n<ol>\n<li><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.439ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.138ex\" height=\"1.439ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 503 636\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path></g></g></g></svg></mjx-container>包含chain <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"12.172ex\" height=\"1.67ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 5380.1 738\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1027.8,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2305.6,0)\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3342.3,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4620.1,0)\"><path data-c=\"1D436\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z\"></path></g></g></g></svg></mjx-container>或fork <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"12.172ex\" height=\"1.67ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 5380.1 738\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1027.8,0)\"><path data-c=\"2190\" d=\"M944 261T944 250T929 230H165Q167 228 182 216T211 189T244 152T277 96T303 25Q308 7 308 0Q308 -11 288 -11Q281 -11 278 -11T272 -7T267 2T263 21Q245 94 195 151T73 236Q58 242 55 247Q55 254 59 257T73 264Q121 283 158 314T215 375T247 434T264 480L267 497Q269 503 270 505T275 509T288 511Q308 511 308 500Q308 493 303 475Q293 438 278 406T246 352T215 315T185 287T165 270H929Q944 261 944 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2305.6,0)\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3342.3,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4620.1,0)\"><path data-c=\"1D436\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z\"></path></g></g></g></svg></mjx-container>使得中间节点<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.09ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.119ex\" height=\"1.636ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 2704.6 723\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1036.8,0)\"><path data-c=\"2208\" d=\"M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1981.6,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>（即<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.717ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 759 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g></g></g></svg></mjx-container>取条件），或</li>\n<li><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.439ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.138ex\" height=\"1.439ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 503 636\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path></g></g></g></svg></mjx-container>包含collider <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"12.172ex\" height=\"1.67ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 5380.1 738\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1027.8,0)\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2305.6,0)\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3342.3,0)\"><path data-c=\"2190\" d=\"M944 261T944 250T929 230H165Q167 228 182 216T211 189T244 152T277 96T303 25Q308 7 308 0Q308 -11 288 -11Q281 -11 278 -11T272 -7T267 2T263 21Q245 94 195 151T73 236Q58 242 55 247Q55 254 59 257T73 264Q121 283 158 314T215 375T247 434T264 480L267 497Q269 503 270 505T275 509T288 511Q308 511 308 500Q308 493 303 475Q293 438 278 406T246 352T215 315T185 287T165 270H929Q944 261 944 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4620.1,0)\"><path data-c=\"1D436\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z\"></path></g></g></g></svg></mjx-container>使得碰撞节点<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.486ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.119ex\" height=\"2.106ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 2704.6 931\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1036.8,0)\"><path data-c=\"2209\" d=\"M196 25Q84 109 84 250Q84 372 166 450T360 539Q361 539 375 539T413 540T460 540L547 707Q550 716 563 716Q570 716 575 712T581 703T583 696T505 540H568Q583 532 583 520Q583 511 570 501L484 500L366 270H568Q583 262 583 250T568 230H346L247 38Q284 16 328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 447 -40T419 -41Q304 -41 228 3Q117 -211 115 -212Q111 -215 104 -215T92 -212T86 -204T84 -197Q84 -190 89 -183L196 25ZM214 61L301 230H124V228Q124 196 147 147T214 61ZM321 270L440 500Q353 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H321Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1981.6,0)\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>，且<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.717ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 759 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path></g></g></g></svg></mjx-container>的任意后继节点都不属于<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>。</li>\n</ol>\n<p>若上述节点集<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>阻断节点<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>和<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>之间的所有路径，那么称<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.928ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 852 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g></g></g></svg></mjx-container>和<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.726ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 763 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></g></g></g></svg></mjx-container>是关于<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>有向分离的（d-separated, conditional on <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>），因此是关于<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.636ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 723 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D44D\" d=\"M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z\"></path></g></g></g></svg></mjx-container>条件独立的。</p>\n<hr>\n<section class=\"post-full-comments\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n    <div id=\"gitalk-container\"></div>\n    <script>\n        var gitalk = new Gitalk({\n            clientID: 'e1bbf465a324641f76ce',\n            clientSecret: 'b865ad952a6494eb48283884abbe479d3f89f4a4',\n            repo: 'LiJT-Daily-Comments',\n            owner: 'CSLiJT',\n            admin: ['CSLiJT'], //这里可以填写具有写权限的用户名列表，用来初始化Issues的\n            id: document.title+document.date,\n            distractionFreeMode: false // Facebook-like distraction free mode\n        });\n        gitalk.render('gitalk-container');\n    </script>\n</section>"}],"PostAsset":[{"_id":"source/_posts/2022-04-17-github/github20220401701.png","post":"cl2tv7gl700128cv94mi2au01","slug":"github20220401701.png","modified":1,"renderable":1}],"PostCategory":[{"post_id":"cl2tv7gl6000y8cv939t7hi8m","category_id":"cl2tv7gl700118cv9cjgq11t3","_id":"cl2tv7gla001b8cv9fp0b9iwo"},{"post_id":"cl2tv7gl600108cv96b6q8bli","category_id":"cl2tv7gl900178cv9auugfiel","_id":"cl2tv7glb001h8cv92st9gh2a"},{"post_id":"cl2tv7gl700128cv94mi2au01","category_id":"cl2tv7gl700118cv9cjgq11t3","_id":"cl2tv7glc001k8cv90t3h1elh"},{"post_id":"cl2tv7gl900168cv9crcj35tw","category_id":"cl2tv7gl900178cv9auugfiel","_id":"cl2tv7glc001n8cv9bruh2s41"},{"post_id":"cl2tv7gli002z8cv9hn2k8w4r","category_id":"cl2tv7gl900178cv9auugfiel","_id":"cl2tv7glj00348cv972ka0mux"},{"post_id":"cl2tv7glj00308cv97rt2ao5s","category_id":"cl2tv7gl900178cv9auugfiel","_id":"cl2tv7glk00368cv90bau319m"},{"post_id":"cl2tv7glj00328cv99x4q6xhh","category_id":"cl2tv7gl900178cv9auugfiel","_id":"cl2tv7glk00378cv97g3640ho"}],"PostTag":[{"post_id":"cl2tv7gkn00018cv9d9gd86av","tag_id":"cl2tv7gkq00048cv91cbsfz76","_id":"cl2tv7gky000l8cv90stcazye"},{"post_id":"cl2tv7gkn00018cv9d9gd86av","tag_id":"cl2tv7gkt000a8cv9bligdbod","_id":"cl2tv7gl1000n8cv9ariael9g"},{"post_id":"cl2tv7gkn00018cv9d9gd86av","tag_id":"cl2tv7gkv000d8cv93bsd04lz","_id":"cl2tv7gl1000q8cv98fjzaehs"},{"post_id":"cl2tv7gkn00018cv9d9gd86av","tag_id":"cl2tv7gkw000g8cv98rheefef","_id":"cl2tv7gl3000s8cv958st2j4t"},{"post_id":"cl2tv7gkp00038cv96anifi79","tag_id":"cl2tv7gky000j8cv9digdc39c","_id":"cl2tv7gl5000v8cv92pffa3dx"},{"post_id":"cl2tv7gkr00068cv9be1l98aa","tag_id":"cl2tv7gl1000p8cv91z8z7tcj","_id":"cl2tv7gl6000x8cv94db87nmr"},{"post_id":"cl2tv7gks00088cv98ybr5ng5","tag_id":"cl2tv7gkq00048cv91cbsfz76","_id":"cl2tv7gl900158cv9c9b6ecv3"},{"post_id":"cl2tv7gks00088cv98ybr5ng5","tag_id":"cl2tv7gkt000a8cv9bligdbod","_id":"cl2tv7gl900188cv98jxs8npo"},{"post_id":"cl2tv7gks00088cv98ybr5ng5","tag_id":"cl2tv7gkv000d8cv93bsd04lz","_id":"cl2tv7gla001a8cv9fx5wexhh"},{"post_id":"cl2tv7gkt00098cv9ezbz8ifu","tag_id":"cl2tv7gky000j8cv9digdc39c","_id":"cl2tv7gla001c8cv9hw0s0nn0"},{"post_id":"cl2tv7gku000b8cv92bnw5a1y","tag_id":"cl2tv7gkt000a8cv9bligdbod","_id":"cl2tv7gla001f8cv9hlwl01jm"},{"post_id":"cl2tv7gku000b8cv92bnw5a1y","tag_id":"cl2tv7gla00198cv9g1slgg33","_id":"cl2tv7glb001i8cv982f29d6n"},{"post_id":"cl2tv7gku000c8cv939qta4mi","tag_id":"cl2tv7gkv000d8cv93bsd04lz","_id":"cl2tv7glc001m8cv95m5u9nqb"},{"post_id":"cl2tv7gku000c8cv939qta4mi","tag_id":"cl2tv7gkw000g8cv98rheefef","_id":"cl2tv7glc001o8cv92mxg8e83"},{"post_id":"cl2tv7gkv000e8cv9hihg8sia","tag_id":"cl2tv7glc001l8cv95090696j","_id":"cl2tv7gld001r8cv90m3b1lly"},{"post_id":"cl2tv7gkv000e8cv9hihg8sia","tag_id":"cl2tv7gkv000d8cv93bsd04lz","_id":"cl2tv7gld001s8cv95cgchwoi"},{"post_id":"cl2tv7gkv000e8cv9hihg8sia","tag_id":"cl2tv7gkw000g8cv98rheefef","_id":"cl2tv7gld001u8cv9cv0lbxok"},{"post_id":"cl2tv7gkv000f8cv97ljr5v14","tag_id":"cl2tv7gky000j8cv9digdc39c","_id":"cl2tv7gld001w8cv9eiczf7me"},{"post_id":"cl2tv7gkv000f8cv97ljr5v14","tag_id":"cl2tv7gld001t8cv93gfifygb","_id":"cl2tv7gld001x8cv9dn3naoh9"},{"post_id":"cl2tv7gkx000h8cv99wby6vyt","tag_id":"cl2tv7gkv000d8cv93bsd04lz","_id":"cl2tv7gle00208cv9gerrf3s5"},{"post_id":"cl2tv7gkx000h8cv99wby6vyt","tag_id":"cl2tv7gld001v8cv97j3ffyw3","_id":"cl2tv7gle00218cv908eu3bqp"},{"post_id":"cl2tv7gkx000h8cv99wby6vyt","tag_id":"cl2tv7gld001y8cv97zy5ci8s","_id":"cl2tv7gle00238cv90pmcfjb9"},{"post_id":"cl2tv7gkx000i8cv9c6m7989k","tag_id":"cl2tv7gle001z8cv90o8y3g9j","_id":"cl2tv7glf00278cv90b310dci"},{"post_id":"cl2tv7gkx000i8cv9c6m7989k","tag_id":"cl2tv7gle00228cv929t56sis","_id":"cl2tv7glf00288cv9a9ok0g5c"},{"post_id":"cl2tv7gkx000i8cv9c6m7989k","tag_id":"cl2tv7gle00248cv9b78t7xqg","_id":"cl2tv7glf002a8cv97z7h9hs8"},{"post_id":"cl2tv7gkx000i8cv9c6m7989k","tag_id":"cl2tv7gle00258cv98gtn7vvb","_id":"cl2tv7glf002b8cv9b8596sri"},{"post_id":"cl2tv7gky000k8cv98k4g7a1w","tag_id":"cl2tv7gle00268cv97b5xbsgv","_id":"cl2tv7glf002d8cv976swh4zt"},{"post_id":"cl2tv7gky000m8cv9dn9xarpx","tag_id":"cl2tv7glf00298cv951bu09c9","_id":"cl2tv7glf002e8cv9234zby0x"},{"post_id":"cl2tv7gl1000o8cv92kr53sup","tag_id":"cl2tv7glf002c8cv99qjs3l48","_id":"cl2tv7glf002g8cv93tfe516d"},{"post_id":"cl2tv7gl2000r8cv90xmy73ya","tag_id":"cl2tv7glf00298cv951bu09c9","_id":"cl2tv7glg002j8cv998qx654j"},{"post_id":"cl2tv7gl2000r8cv90xmy73ya","tag_id":"cl2tv7gld001t8cv93gfifygb","_id":"cl2tv7glg002k8cv99nkw2u1c"},{"post_id":"cl2tv7gl3000t8cv9f656h4fq","tag_id":"cl2tv7glf002c8cv99qjs3l48","_id":"cl2tv7glg002n8cv93muc5x21"},{"post_id":"cl2tv7gl3000t8cv9f656h4fq","tag_id":"cl2tv7glg002l8cv9dck733t8","_id":"cl2tv7glg002o8cv9aghlah9q"},{"post_id":"cl2tv7gl6000y8cv939t7hi8m","tag_id":"cl2tv7gkv000d8cv93bsd04lz","_id":"cl2tv7glg002q8cv9689jcirc"},{"post_id":"cl2tv7gl6000y8cv939t7hi8m","tag_id":"cl2tv7glc001l8cv95090696j","_id":"cl2tv7glg002r8cv9f7ok0c9h"},{"post_id":"cl2tv7gl600108cv96b6q8bli","tag_id":"cl2tv7glg002p8cv98erf8jbr","_id":"cl2tv7glg002t8cv998mud082"},{"post_id":"cl2tv7gl700128cv94mi2au01","tag_id":"cl2tv7glg002s8cv96uet07aa","_id":"cl2tv7glh002w8cv972e82vdw"},{"post_id":"cl2tv7gl700128cv94mi2au01","tag_id":"cl2tv7glg002u8cv9cv6qf6ed","_id":"cl2tv7glh002x8cv9f2z06nos"},{"post_id":"cl2tv7gl900168cv9crcj35tw","tag_id":"cl2tv7glg002p8cv98erf8jbr","_id":"cl2tv7glh002y8cv90uw9dfc7"},{"post_id":"cl2tv7gli002z8cv9hn2k8w4r","tag_id":"cl2tv7glg002p8cv98erf8jbr","_id":"cl2tv7glj00318cv9334i8nkm"},{"post_id":"cl2tv7glj00308cv97rt2ao5s","tag_id":"cl2tv7glg002p8cv98erf8jbr","_id":"cl2tv7glj00338cv966u9dffn"},{"post_id":"cl2tv7glj00328cv99x4q6xhh","tag_id":"cl2tv7glg002p8cv98erf8jbr","_id":"cl2tv7glk00358cv910dae2d0"}],"Tag":[{"name":"pytorch","_id":"cl2tv7gkq00048cv91cbsfz76"},{"name":"深度学习","_id":"cl2tv7gkt000a8cv9bligdbod"},{"name":"coding","_id":"cl2tv7gkv000d8cv93bsd04lz"},{"name":"持续更新","_id":"cl2tv7gkw000g8cv98rheefef"},{"name":"美食","_id":"cl2tv7gky000j8cv9digdc39c"},{"name":"小说","_id":"cl2tv7gl1000p8cv91z8z7tcj"},{"name":"实验","_id":"cl2tv7gla00198cv9g1slgg33"},{"name":"python","_id":"cl2tv7glc001l8cv95090696j"},{"name":"杂谈","_id":"cl2tv7gld001t8cv93gfifygb"},{"name":"vscode","_id":"cl2tv7gld001v8cv97j3ffyw3"},{"name":"ssh","_id":"cl2tv7gld001y8cv97zy5ci8s"},{"name":"大数据","_id":"cl2tv7gle001z8cv90o8y3g9j"},{"name":"Java","_id":"cl2tv7gle00228cv929t56sis"},{"name":"Hadoop","_id":"cl2tv7gle00248cv9b78t7xqg"},{"name":"Mapreduce","_id":"cl2tv7gle00258cv98gtn7vvb"},{"name":"大数据 Java Hadoop","_id":"cl2tv7gle00268cv97b5xbsgv"},{"name":"数学","_id":"cl2tv7glf00298cv951bu09c9"},{"name":"科研","_id":"cl2tv7glf002c8cv99qjs3l48"},{"name":"学习","_id":"cl2tv7glg002l8cv9dck733t8"},{"name":"因果推断","_id":"cl2tv7glg002p8cv98erf8jbr"},{"name":"git","_id":"cl2tv7glg002s8cv96uet07aa"},{"name":"github","_id":"cl2tv7glg002u8cv9cv6qf6ed"}]}}